// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

(function (modules, entry, mainEntry, parcelRequireName, globalName) {
  /* eslint-disable no-undef */
  var globalObject =
    typeof globalThis !== 'undefined'
      ? globalThis
      : typeof self !== 'undefined'
      ? self
      : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : {};
  /* eslint-enable no-undef */

  // Save the require from previous bundle to this closure if any
  var previousRequire =
    typeof globalObject[parcelRequireName] === 'function' &&
    globalObject[parcelRequireName];

  var cache = previousRequire.cache || {};
  // Do not use `require` to prevent Webpack from trying to bundle this call
  var nodeRequire =
    typeof module !== 'undefined' &&
    typeof module.require === 'function' &&
    module.require.bind(module);

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof globalObject[parcelRequireName] === 'function' &&
          globalObject[parcelRequireName];
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        this
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      var res = localRequire.resolve(x);
      return res === false ? {} : newRequire(res);
    }

    function resolve(x) {
      var id = modules[name][1][x];
      return id != null ? id : x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [
      function (require, module) {
        module.exports = exports;
      },
      {},
    ];
  };

  Object.defineProperty(newRequire, 'root', {
    get: function () {
      return globalObject[parcelRequireName];
    },
  });

  globalObject[parcelRequireName] = newRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (mainEntry) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(mainEntry);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function () {
        return mainExports;
      });

      // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }
})({"1H7xV":[function(require,module,exports) {
var global = arguments[3];
var HMR_HOST = null;
var HMR_PORT = 1234;
var HMR_SECURE = false;
var HMR_ENV_HASH = "916932b22e4085ab";
var HMR_USE_SSE = false;
module.bundle.HMR_BUNDLE_ID = "acdb62c25ea5e780";
"use strict";
/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */ /*::
import type {
  HMRAsset,
  HMRMessage,
} from '@parcel/reporter-dev-server/src/HMRServer.js';
interface ParcelRequire {
  (string): mixed;
  cache: {|[string]: ParcelModule|};
  hotData: {|[string]: mixed|};
  Module: any;
  parent: ?ParcelRequire;
  isParcelRequire: true;
  modules: {|[string]: [Function, {|[string]: string|}]|};
  HMR_BUNDLE_ID: string;
  root: ParcelRequire;
}
interface ParcelModule {
  hot: {|
    data: mixed,
    accept(cb: (Function) => void): void,
    dispose(cb: (mixed) => void): void,
    // accept(deps: Array<string> | string, cb: (Function) => void): void,
    // decline(): void,
    _acceptCallbacks: Array<(Function) => void>,
    _disposeCallbacks: Array<(mixed) => void>,
  |};
}
interface ExtensionContext {
  runtime: {|
    reload(): void,
    getURL(url: string): string;
    getManifest(): {manifest_version: number, ...};
  |};
}
declare var module: {bundle: ParcelRequire, ...};
declare var HMR_HOST: string;
declare var HMR_PORT: string;
declare var HMR_ENV_HASH: string;
declare var HMR_SECURE: boolean;
declare var HMR_USE_SSE: boolean;
declare var chrome: ExtensionContext;
declare var browser: ExtensionContext;
declare var __parcel__import__: (string) => Promise<void>;
declare var __parcel__importScripts__: (string) => Promise<void>;
declare var globalThis: typeof self;
declare var ServiceWorkerGlobalScope: Object;
*/ var OVERLAY_ID = "__parcel__error__overlay__";
var OldModule = module.bundle.Module;
function Module(moduleName) {
    OldModule.call(this, moduleName);
    this.hot = {
        data: module.bundle.hotData[moduleName],
        _acceptCallbacks: [],
        _disposeCallbacks: [],
        accept: function(fn) {
            this._acceptCallbacks.push(fn || function() {});
        },
        dispose: function(fn) {
            this._disposeCallbacks.push(fn);
        }
    };
    module.bundle.hotData[moduleName] = undefined;
}
module.bundle.Module = Module;
module.bundle.hotData = {};
var checkedAssets /*: {|[string]: boolean|} */ , assetsToDispose /*: Array<[ParcelRequire, string]> */ , assetsToAccept /*: Array<[ParcelRequire, string]> */ ;
function getHostname() {
    return HMR_HOST || (location.protocol.indexOf("http") === 0 ? location.hostname : "localhost");
}
function getPort() {
    return HMR_PORT || location.port;
}
// eslint-disable-next-line no-redeclare
var parent = module.bundle.parent;
if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== "undefined") {
    var hostname = getHostname();
    var port = getPort();
    var protocol = HMR_SECURE || location.protocol == "https:" && ![
        "localhost",
        "127.0.0.1",
        "0.0.0.0"
    ].includes(hostname) ? "wss" : "ws";
    var ws;
    if (HMR_USE_SSE) ws = new EventSource("/__parcel_hmr");
    else try {
        ws = new WebSocket(protocol + "://" + hostname + (port ? ":" + port : "") + "/");
    } catch (err) {
        if (err.message) console.error(err.message);
        ws = {};
    }
    // Web extension context
    var extCtx = typeof browser === "undefined" ? typeof chrome === "undefined" ? null : chrome : browser;
    // Safari doesn't support sourceURL in error stacks.
    // eval may also be disabled via CSP, so do a quick check.
    var supportsSourceURL = false;
    try {
        (0, eval)('throw new Error("test"); //# sourceURL=test.js');
    } catch (err) {
        supportsSourceURL = err.stack.includes("test.js");
    }
    // $FlowFixMe
    ws.onmessage = async function(event /*: {data: string, ...} */ ) {
        checkedAssets = {} /*: {|[string]: boolean|} */ ;
        assetsToAccept = [];
        assetsToDispose = [];
        var data /*: HMRMessage */  = JSON.parse(event.data);
        if (data.type === "update") {
            // Remove error overlay if there is one
            if (typeof document !== "undefined") removeErrorOverlay();
            let assets = data.assets.filter((asset)=>asset.envHash === HMR_ENV_HASH);
            // Handle HMR Update
            let handled = assets.every((asset)=>{
                return asset.type === "css" || asset.type === "js" && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);
            });
            if (handled) {
                console.clear();
                // Dispatch custom event so other runtimes (e.g React Refresh) are aware.
                if (typeof window !== "undefined" && typeof CustomEvent !== "undefined") window.dispatchEvent(new CustomEvent("parcelhmraccept"));
                await hmrApplyUpdates(assets);
                // Dispose all old assets.
                let processedAssets = {} /*: {|[string]: boolean|} */ ;
                for(let i = 0; i < assetsToDispose.length; i++){
                    let id = assetsToDispose[i][1];
                    if (!processedAssets[id]) {
                        hmrDispose(assetsToDispose[i][0], id);
                        processedAssets[id] = true;
                    }
                }
                // Run accept callbacks. This will also re-execute other disposed assets in topological order.
                processedAssets = {};
                for(let i = 0; i < assetsToAccept.length; i++){
                    let id = assetsToAccept[i][1];
                    if (!processedAssets[id]) {
                        hmrAccept(assetsToAccept[i][0], id);
                        processedAssets[id] = true;
                    }
                }
            } else fullReload();
        }
        if (data.type === "error") {
            // Log parcel errors to console
            for (let ansiDiagnostic of data.diagnostics.ansi){
                let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;
                console.error("\uD83D\uDEA8 [parcel]: " + ansiDiagnostic.message + "\n" + stack + "\n\n" + ansiDiagnostic.hints.join("\n"));
            }
            if (typeof document !== "undefined") {
                // Render the fancy html overlay
                removeErrorOverlay();
                var overlay = createErrorOverlay(data.diagnostics.html);
                // $FlowFixMe
                document.body.appendChild(overlay);
            }
        }
    };
    if (ws instanceof WebSocket) {
        ws.onerror = function(e) {
            if (e.message) console.error(e.message);
        };
        ws.onclose = function() {
            console.warn("[parcel] \uD83D\uDEA8 Connection to the HMR server was lost");
        };
    }
}
function removeErrorOverlay() {
    var overlay = document.getElementById(OVERLAY_ID);
    if (overlay) {
        overlay.remove();
        console.log("[parcel] \u2728 Error resolved");
    }
}
function createErrorOverlay(diagnostics) {
    var overlay = document.createElement("div");
    overlay.id = OVERLAY_ID;
    let errorHTML = '<div style="background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;">';
    for (let diagnostic of diagnostics){
        let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame)=>{
            return `${p}
<a href="/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}" style="text-decoration: underline; color: #888" onclick="fetch(this.href); return false">${frame.location}</a>
${frame.code}`;
        }, "") : diagnostic.stack;
        errorHTML += `
      <div>
        <div style="font-size: 18px; font-weight: bold; margin-top: 20px;">
          \u{1F6A8} ${diagnostic.message}
        </div>
        <pre>${stack}</pre>
        <div>
          ${diagnostic.hints.map((hint)=>"<div>\uD83D\uDCA1 " + hint + "</div>").join("")}
        </div>
        ${diagnostic.documentation ? `<div>\u{1F4DD} <a style="color: violet" href="${diagnostic.documentation}" target="_blank">Learn more</a></div>` : ""}
      </div>
    `;
    }
    errorHTML += "</div>";
    overlay.innerHTML = errorHTML;
    return overlay;
}
function fullReload() {
    if ("reload" in location) location.reload();
    else if (extCtx && extCtx.runtime && extCtx.runtime.reload) extCtx.runtime.reload();
}
function getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {
    var modules = bundle.modules;
    if (!modules) return [];
    var parents = [];
    var k, d, dep;
    for(k in modules)for(d in modules[k][1]){
        dep = modules[k][1][d];
        if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) parents.push([
            bundle,
            k
        ]);
    }
    if (bundle.parent) parents = parents.concat(getParents(bundle.parent, id));
    return parents;
}
function updateLink(link) {
    var href = link.getAttribute("href");
    if (!href) return;
    var newLink = link.cloneNode();
    newLink.onload = function() {
        if (link.parentNode !== null) // $FlowFixMe
        link.parentNode.removeChild(link);
    };
    newLink.setAttribute("href", // $FlowFixMe
    href.split("?")[0] + "?" + Date.now());
    // $FlowFixMe
    link.parentNode.insertBefore(newLink, link.nextSibling);
}
var cssTimeout = null;
function reloadCSS() {
    if (cssTimeout) return;
    cssTimeout = setTimeout(function() {
        var links = document.querySelectorAll('link[rel="stylesheet"]');
        for(var i = 0; i < links.length; i++){
            // $FlowFixMe[incompatible-type]
            var href /*: string */  = links[i].getAttribute("href");
            var hostname = getHostname();
            var servedFromHMRServer = hostname === "localhost" ? new RegExp("^(https?:\\/\\/(0.0.0.0|127.0.0.1)|localhost):" + getPort()).test(href) : href.indexOf(hostname + ":" + getPort());
            var absolute = /^https?:\/\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;
            if (!absolute) updateLink(links[i]);
        }
        cssTimeout = null;
    }, 50);
}
function hmrDownload(asset) {
    if (asset.type === "js") {
        if (typeof document !== "undefined") {
            let script = document.createElement("script");
            script.src = asset.url + "?t=" + Date.now();
            if (asset.outputFormat === "esmodule") script.type = "module";
            return new Promise((resolve, reject)=>{
                var _document$head;
                script.onload = ()=>resolve(script);
                script.onerror = reject;
                (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);
            });
        } else if (typeof importScripts === "function") {
            // Worker scripts
            if (asset.outputFormat === "esmodule") return import(asset.url + "?t=" + Date.now());
            else return new Promise((resolve, reject)=>{
                try {
                    importScripts(asset.url + "?t=" + Date.now());
                    resolve();
                } catch (err) {
                    reject(err);
                }
            });
        }
    }
}
async function hmrApplyUpdates(assets) {
    global.parcelHotUpdate = Object.create(null);
    let scriptsToRemove;
    try {
        // If sourceURL comments aren't supported in eval, we need to load
        // the update from the dev server over HTTP so that stack traces
        // are correct in errors/logs. This is much slower than eval, so
        // we only do it if needed (currently just Safari).
        // https://bugs.webkit.org/show_bug.cgi?id=137297
        // This path is also taken if a CSP disallows eval.
        if (!supportsSourceURL) {
            let promises = assets.map((asset)=>{
                var _hmrDownload;
                return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch((err)=>{
                    // Web extension fix
                    if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != "undefined" && global instanceof ServiceWorkerGlobalScope) {
                        extCtx.runtime.reload();
                        return;
                    }
                    throw err;
                });
            });
            scriptsToRemove = await Promise.all(promises);
        }
        assets.forEach(function(asset) {
            hmrApply(module.bundle.root, asset);
        });
    } finally{
        delete global.parcelHotUpdate;
        if (scriptsToRemove) scriptsToRemove.forEach((script)=>{
            if (script) {
                var _document$head2;
                (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);
            }
        });
    }
}
function hmrApply(bundle /*: ParcelRequire */ , asset /*:  HMRAsset */ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (asset.type === "css") reloadCSS();
    else if (asset.type === "js") {
        let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];
        if (deps) {
            if (modules[asset.id]) {
                // Remove dependencies that are removed and will become orphaned.
                // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.
                let oldDeps = modules[asset.id][1];
                for(let dep in oldDeps)if (!deps[dep] || deps[dep] !== oldDeps[dep]) {
                    let id = oldDeps[dep];
                    let parents = getParents(module.bundle.root, id);
                    if (parents.length === 1) hmrDelete(module.bundle.root, id);
                }
            }
            if (supportsSourceURL) // Global eval. We would use `new Function` here but browser
            // support for source maps is better with eval.
            (0, eval)(asset.output);
            // $FlowFixMe
            let fn = global.parcelHotUpdate[asset.id];
            modules[asset.id] = [
                fn,
                deps
            ];
        } else if (bundle.parent) hmrApply(bundle.parent, asset);
    }
}
function hmrDelete(bundle, id) {
    let modules = bundle.modules;
    if (!modules) return;
    if (modules[id]) {
        // Collect dependencies that will become orphaned when this module is deleted.
        let deps = modules[id][1];
        let orphans = [];
        for(let dep in deps){
            let parents = getParents(module.bundle.root, deps[dep]);
            if (parents.length === 1) orphans.push(deps[dep]);
        }
        // Delete the module. This must be done before deleting dependencies in case of circular dependencies.
        delete modules[id];
        delete bundle.cache[id];
        // Now delete the orphans.
        orphans.forEach((id)=>{
            hmrDelete(module.bundle.root, id);
        });
    } else if (bundle.parent) hmrDelete(bundle.parent, id);
}
function hmrAcceptCheck(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    if (hmrAcceptCheckOne(bundle, id, depsByBundle)) return true;
    // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.
    let parents = getParents(module.bundle.root, id);
    let accepted = false;
    while(parents.length > 0){
        let v = parents.shift();
        let a = hmrAcceptCheckOne(v[0], v[1], null);
        if (a) // If this parent accepts, stop traversing upward, but still consider siblings.
        accepted = true;
        else {
            // Otherwise, queue the parents in the next level upward.
            let p = getParents(module.bundle.root, v[1]);
            if (p.length === 0) {
                // If there are no parents, then we've reached an entry without accepting. Reload.
                accepted = false;
                break;
            }
            parents.push(...p);
        }
    }
    return accepted;
}
function hmrAcceptCheckOne(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {
        // If we reached the root bundle without finding where the asset should go,
        // there's nothing to do. Mark as "accepted" so we don't reload the page.
        if (!bundle.parent) return true;
        return hmrAcceptCheck(bundle.parent, id, depsByBundle);
    }
    if (checkedAssets[id]) return true;
    checkedAssets[id] = true;
    var cached = bundle.cache[id];
    assetsToDispose.push([
        bundle,
        id
    ]);
    if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {
        assetsToAccept.push([
            bundle,
            id
        ]);
        return true;
    }
}
function hmrDispose(bundle /*: ParcelRequire */ , id /*: string */ ) {
    var cached = bundle.cache[id];
    bundle.hotData[id] = {};
    if (cached && cached.hot) cached.hot.data = bundle.hotData[id];
    if (cached && cached.hot && cached.hot._disposeCallbacks.length) cached.hot._disposeCallbacks.forEach(function(cb) {
        cb(bundle.hotData[id]);
    });
    delete bundle.cache[id];
}
function hmrAccept(bundle /*: ParcelRequire */ , id /*: string */ ) {
    // Execute the module.
    bundle(id);
    // Run the accept callbacks in the new version of the module.
    var cached = bundle.cache[id];
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) cached.hot._acceptCallbacks.forEach(function(cb) {
        var assetsToAlsoAccept = cb(function() {
            return getParents(module.bundle.root, id);
        });
        if (assetsToAlsoAccept && assetsToAccept.length) {
            assetsToAlsoAccept.forEach(function(a) {
                hmrDispose(a[0], a[1]);
            });
            // $FlowFixMe[method-unbinding]
            assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);
        }
    });
}

},{}],"4XJl0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
var _vue = require("vue");
var _appVue = require("../vue/App.vue");
var _appVueDefault = parcelHelpers.interopDefault(_appVue);
var _pinia = require("pinia");
var _vueQuery = require("@tanstack/vue-query");
var _vuetify = require("vuetify");
var _components = require("vuetify/components");
var _directives = require("vuetify/directives");
var _styles = require("vuetify/styles");
var _materialdesigniconsCss = require("@mdi/font/css/materialdesignicons.css");
"use strict";
// vue app setup
vueapp = (0, _vue.createApp)((0, _appVueDefault.default));
const pinia = (0, _pinia.createPinia)();
const vuetify = (0, _vuetify.createVuetify)({
    components: _components,
    directives: _directives
});
vueapp.use(pinia);
vueapp.use(vuetify);
vueapp.use((0, _vueQuery.VueQueryPlugin));
vueapp.mount("#app");

},{"vue":"gCTam","../vue/App.vue":"5PCKi","pinia":"hqc1O","@tanstack/vue-query":"aI0Kc","vuetify":"gcA1H","vuetify/components":"8XgAC","vuetify/directives":"lDmqr","vuetify/styles":"4aEO8","@mdi/font/css/materialdesignicons.css":"6KE1a","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"gCTam":[function(require,module,exports) {
/**
* vue v3.4.38
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "compile", ()=>compile);
var _runtimeDom = require("@vue/runtime-dom");
parcelHelpers.exportAll(_runtimeDom, exports);
function initDev() {
    (0, _runtimeDom.initCustomFormatter)();
}
initDev();
const compile = ()=>{
    (0, _runtimeDom.warn)(`Runtime compilation is not supported in this build of Vue.` + ` Configure your bundler to alias "vue" to "vue/dist/vue.esm-bundler.js".`);
};

},{"@vue/runtime-dom":"3DB5b","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"3DB5b":[function(require,module,exports) {
/**
* @vue/runtime-dom v3.4.38
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Transition", ()=>Transition);
parcelHelpers.export(exports, "TransitionGroup", ()=>TransitionGroup);
parcelHelpers.export(exports, "VueElement", ()=>VueElement);
parcelHelpers.export(exports, "createApp", ()=>createApp);
parcelHelpers.export(exports, "createSSRApp", ()=>createSSRApp);
parcelHelpers.export(exports, "defineCustomElement", ()=>defineCustomElement);
parcelHelpers.export(exports, "defineSSRCustomElement", ()=>defineSSRCustomElement);
parcelHelpers.export(exports, "hydrate", ()=>hydrate);
parcelHelpers.export(exports, "initDirectivesForSSR", ()=>initDirectivesForSSR);
parcelHelpers.export(exports, "render", ()=>render);
parcelHelpers.export(exports, "useCssModule", ()=>useCssModule);
parcelHelpers.export(exports, "useCssVars", ()=>useCssVars);
parcelHelpers.export(exports, "vModelCheckbox", ()=>vModelCheckbox);
parcelHelpers.export(exports, "vModelDynamic", ()=>vModelDynamic);
parcelHelpers.export(exports, "vModelRadio", ()=>vModelRadio);
parcelHelpers.export(exports, "vModelSelect", ()=>vModelSelect);
parcelHelpers.export(exports, "vModelText", ()=>vModelText);
parcelHelpers.export(exports, "vShow", ()=>vShow);
parcelHelpers.export(exports, "withKeys", ()=>withKeys);
parcelHelpers.export(exports, "withModifiers", ()=>withModifiers);
var _runtimeCore = require("@vue/runtime-core");
parcelHelpers.exportAll(_runtimeCore, exports);
var _shared = require("@vue/shared");
const svgNS = "http://www.w3.org/2000/svg";
const mathmlNS = "http://www.w3.org/1998/Math/MathML";
const doc = typeof document !== "undefined" ? document : null;
const templateContainer = doc && /* @__PURE__ */ doc.createElement("template");
const nodeOps = {
    insert: (child, parent, anchor)=>{
        parent.insertBefore(child, anchor || null);
    },
    remove: (child)=>{
        const parent = child.parentNode;
        if (parent) parent.removeChild(child);
    },
    createElement: (tag, namespace, is, props)=>{
        const el = namespace === "svg" ? doc.createElementNS(svgNS, tag) : namespace === "mathml" ? doc.createElementNS(mathmlNS, tag) : is ? doc.createElement(tag, {
            is
        }) : doc.createElement(tag);
        if (tag === "select" && props && props.multiple != null) el.setAttribute("multiple", props.multiple);
        return el;
    },
    createText: (text)=>doc.createTextNode(text),
    createComment: (text)=>doc.createComment(text),
    setText: (node, text)=>{
        node.nodeValue = text;
    },
    setElementText: (el, text)=>{
        el.textContent = text;
    },
    parentNode: (node)=>node.parentNode,
    nextSibling: (node)=>node.nextSibling,
    querySelector: (selector)=>doc.querySelector(selector),
    setScopeId (el, id) {
        el.setAttribute(id, "");
    },
    // __UNSAFE__
    // Reason: innerHTML.
    // Static content here can only come from compiled templates.
    // As long as the user only uses trusted templates, this is safe.
    insertStaticContent (content, parent, anchor, namespace, start, end) {
        const before = anchor ? anchor.previousSibling : parent.lastChild;
        if (start && (start === end || start.nextSibling)) while(true){
            parent.insertBefore(start.cloneNode(true), anchor);
            if (start === end || !(start = start.nextSibling)) break;
        }
        else {
            templateContainer.innerHTML = namespace === "svg" ? `<svg>${content}</svg>` : namespace === "mathml" ? `<math>${content}</math>` : content;
            const template = templateContainer.content;
            if (namespace === "svg" || namespace === "mathml") {
                const wrapper = template.firstChild;
                while(wrapper.firstChild)template.appendChild(wrapper.firstChild);
                template.removeChild(wrapper);
            }
            parent.insertBefore(template, anchor);
        }
        return [
            // first
            before ? before.nextSibling : parent.firstChild,
            // last
            anchor ? anchor.previousSibling : parent.lastChild
        ];
    }
};
const TRANSITION = "transition";
const ANIMATION = "animation";
const vtcKey = Symbol("_vtc");
const Transition = (props, { slots })=>(0, _runtimeCore.h)((0, _runtimeCore.BaseTransition), resolveTransitionProps(props), slots);
Transition.displayName = "Transition";
const DOMTransitionPropsValidators = {
    name: String,
    type: String,
    css: {
        type: Boolean,
        default: true
    },
    duration: [
        String,
        Number,
        Object
    ],
    enterFromClass: String,
    enterActiveClass: String,
    enterToClass: String,
    appearFromClass: String,
    appearActiveClass: String,
    appearToClass: String,
    leaveFromClass: String,
    leaveActiveClass: String,
    leaveToClass: String
};
const TransitionPropsValidators = Transition.props = /* @__PURE__ */ (0, _shared.extend)({}, (0, _runtimeCore.BaseTransitionPropsValidators), DOMTransitionPropsValidators);
const callHook = (hook, args = [])=>{
    if ((0, _shared.isArray)(hook)) hook.forEach((h2)=>h2(...args));
    else if (hook) hook(...args);
};
const hasExplicitCallback = (hook)=>{
    return hook ? (0, _shared.isArray)(hook) ? hook.some((h2)=>h2.length > 1) : hook.length > 1 : false;
};
function resolveTransitionProps(rawProps) {
    const baseProps = {};
    for(const key in rawProps)if (!(key in DOMTransitionPropsValidators)) baseProps[key] = rawProps[key];
    if (rawProps.css === false) return baseProps;
    const { name = "v", type, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;
    const durations = normalizeDuration(duration);
    const enterDuration = durations && durations[0];
    const leaveDuration = durations && durations[1];
    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;
    const finishEnter = (el, isAppear, done)=>{
        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);
        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);
        done && done();
    };
    const finishLeave = (el, done)=>{
        el._isLeaving = false;
        removeTransitionClass(el, leaveFromClass);
        removeTransitionClass(el, leaveToClass);
        removeTransitionClass(el, leaveActiveClass);
        done && done();
    };
    const makeEnterHook = (isAppear)=>{
        return (el, done)=>{
            const hook = isAppear ? onAppear : onEnter;
            const resolve = ()=>finishEnter(el, isAppear, done);
            callHook(hook, [
                el,
                resolve
            ]);
            nextFrame(()=>{
                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);
                addTransitionClass(el, isAppear ? appearToClass : enterToClass);
                if (!hasExplicitCallback(hook)) whenTransitionEnds(el, type, enterDuration, resolve);
            });
        };
    };
    return (0, _shared.extend)(baseProps, {
        onBeforeEnter (el) {
            callHook(onBeforeEnter, [
                el
            ]);
            addTransitionClass(el, enterFromClass);
            addTransitionClass(el, enterActiveClass);
        },
        onBeforeAppear (el) {
            callHook(onBeforeAppear, [
                el
            ]);
            addTransitionClass(el, appearFromClass);
            addTransitionClass(el, appearActiveClass);
        },
        onEnter: makeEnterHook(false),
        onAppear: makeEnterHook(true),
        onLeave (el, done) {
            el._isLeaving = true;
            const resolve = ()=>finishLeave(el, done);
            addTransitionClass(el, leaveFromClass);
            addTransitionClass(el, leaveActiveClass);
            forceReflow();
            nextFrame(()=>{
                if (!el._isLeaving) return;
                removeTransitionClass(el, leaveFromClass);
                addTransitionClass(el, leaveToClass);
                if (!hasExplicitCallback(onLeave)) whenTransitionEnds(el, type, leaveDuration, resolve);
            });
            callHook(onLeave, [
                el,
                resolve
            ]);
        },
        onEnterCancelled (el) {
            finishEnter(el, false);
            callHook(onEnterCancelled, [
                el
            ]);
        },
        onAppearCancelled (el) {
            finishEnter(el, true);
            callHook(onAppearCancelled, [
                el
            ]);
        },
        onLeaveCancelled (el) {
            finishLeave(el);
            callHook(onLeaveCancelled, [
                el
            ]);
        }
    });
}
function normalizeDuration(duration) {
    if (duration == null) return null;
    else if ((0, _shared.isObject)(duration)) return [
        NumberOf(duration.enter),
        NumberOf(duration.leave)
    ];
    else {
        const n = NumberOf(duration);
        return [
            n,
            n
        ];
    }
}
function NumberOf(val) {
    const res = (0, _shared.toNumber)(val);
    (0, _runtimeCore.assertNumber)(res, "<transition> explicit duration");
    return res;
}
function addTransitionClass(el, cls) {
    cls.split(/\s+/).forEach((c)=>c && el.classList.add(c));
    (el[vtcKey] || (el[vtcKey] = /* @__PURE__ */ new Set())).add(cls);
}
function removeTransitionClass(el, cls) {
    cls.split(/\s+/).forEach((c)=>c && el.classList.remove(c));
    const _vtc = el[vtcKey];
    if (_vtc) {
        _vtc.delete(cls);
        if (!_vtc.size) el[vtcKey] = void 0;
    }
}
function nextFrame(cb) {
    requestAnimationFrame(()=>{
        requestAnimationFrame(cb);
    });
}
let endId = 0;
function whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {
    const id = el._endId = ++endId;
    const resolveIfNotStale = ()=>{
        if (id === el._endId) resolve();
    };
    if (explicitTimeout) return setTimeout(resolveIfNotStale, explicitTimeout);
    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);
    if (!type) return resolve();
    const endEvent = type + "end";
    let ended = 0;
    const end = ()=>{
        el.removeEventListener(endEvent, onEnd);
        resolveIfNotStale();
    };
    const onEnd = (e)=>{
        if (e.target === el && ++ended >= propCount) end();
    };
    setTimeout(()=>{
        if (ended < propCount) end();
    }, timeout + 1);
    el.addEventListener(endEvent, onEnd);
}
function getTransitionInfo(el, expectedType) {
    const styles = window.getComputedStyle(el);
    const getStyleProperties = (key)=>(styles[key] || "").split(", ");
    const transitionDelays = getStyleProperties(`${TRANSITION}Delay`);
    const transitionDurations = getStyleProperties(`${TRANSITION}Duration`);
    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);
    const animationDelays = getStyleProperties(`${ANIMATION}Delay`);
    const animationDurations = getStyleProperties(`${ANIMATION}Duration`);
    const animationTimeout = getTimeout(animationDelays, animationDurations);
    let type = null;
    let timeout = 0;
    let propCount = 0;
    if (expectedType === TRANSITION) {
        if (transitionTimeout > 0) {
            type = TRANSITION;
            timeout = transitionTimeout;
            propCount = transitionDurations.length;
        }
    } else if (expectedType === ANIMATION) {
        if (animationTimeout > 0) {
            type = ANIMATION;
            timeout = animationTimeout;
            propCount = animationDurations.length;
        }
    } else {
        timeout = Math.max(transitionTimeout, animationTimeout);
        type = timeout > 0 ? transitionTimeout > animationTimeout ? TRANSITION : ANIMATION : null;
        propCount = type ? type === TRANSITION ? transitionDurations.length : animationDurations.length : 0;
    }
    const hasTransform = type === TRANSITION && /\b(transform|all)(,|$)/.test(getStyleProperties(`${TRANSITION}Property`).toString());
    return {
        type,
        timeout,
        propCount,
        hasTransform
    };
}
function getTimeout(delays, durations) {
    while(delays.length < durations.length)delays = delays.concat(delays);
    return Math.max(...durations.map((d, i)=>toMs(d) + toMs(delays[i])));
}
function toMs(s) {
    if (s === "auto") return 0;
    return Number(s.slice(0, -1).replace(",", ".")) * 1e3;
}
function forceReflow() {
    return document.body.offsetHeight;
}
function patchClass(el, value, isSVG) {
    const transitionClasses = el[vtcKey];
    if (transitionClasses) value = (value ? [
        value,
        ...transitionClasses
    ] : [
        ...transitionClasses
    ]).join(" ");
    if (value == null) el.removeAttribute("class");
    else if (isSVG) el.setAttribute("class", value);
    else el.className = value;
}
const vShowOriginalDisplay = Symbol("_vod");
const vShowHidden = Symbol("_vsh");
const vShow = {
    beforeMount (el, { value }, { transition }) {
        el[vShowOriginalDisplay] = el.style.display === "none" ? "" : el.style.display;
        if (transition && value) transition.beforeEnter(el);
        else setDisplay(el, value);
    },
    mounted (el, { value }, { transition }) {
        if (transition && value) transition.enter(el);
    },
    updated (el, { value, oldValue }, { transition }) {
        if (!value === !oldValue) return;
        if (transition) {
            if (value) {
                transition.beforeEnter(el);
                setDisplay(el, true);
                transition.enter(el);
            } else transition.leave(el, ()=>{
                setDisplay(el, false);
            });
        } else setDisplay(el, value);
    },
    beforeUnmount (el, { value }) {
        setDisplay(el, value);
    }
};
vShow.name = "show";
function setDisplay(el, value) {
    el.style.display = value ? el[vShowOriginalDisplay] : "none";
    el[vShowHidden] = !value;
}
function initVShowForSSR() {
    vShow.getSSRProps = ({ value })=>{
        if (!value) return {
            style: {
                display: "none"
            }
        };
    };
}
const CSS_VAR_TEXT = Symbol("CSS_VAR_TEXT");
function useCssVars(getter) {
    const instance = (0, _runtimeCore.getCurrentInstance)();
    if (!instance) {
        (0, _runtimeCore.warn)(`useCssVars is called without current active component instance.`);
        return;
    }
    const updateTeleports = instance.ut = (vars = getter(instance.proxy))=>{
        Array.from(document.querySelectorAll(`[data-v-owner="${instance.uid}"]`)).forEach((node)=>setVarsOnNode(node, vars));
    };
    instance.getCssVars = ()=>getter(instance.proxy);
    const setVars = ()=>{
        const vars = getter(instance.proxy);
        setVarsOnVNode(instance.subTree, vars);
        updateTeleports(vars);
    };
    (0, _runtimeCore.onBeforeMount)(()=>{
        (0, _runtimeCore.watchPostEffect)(setVars);
    });
    (0, _runtimeCore.onMounted)(()=>{
        const ob = new MutationObserver(setVars);
        ob.observe(instance.subTree.el.parentNode, {
            childList: true
        });
        (0, _runtimeCore.onUnmounted)(()=>ob.disconnect());
    });
}
function setVarsOnVNode(vnode, vars) {
    if (vnode.shapeFlag & 128) {
        const suspense = vnode.suspense;
        vnode = suspense.activeBranch;
        if (suspense.pendingBranch && !suspense.isHydrating) suspense.effects.push(()=>{
            setVarsOnVNode(suspense.activeBranch, vars);
        });
    }
    while(vnode.component)vnode = vnode.component.subTree;
    if (vnode.shapeFlag & 1 && vnode.el) setVarsOnNode(vnode.el, vars);
    else if (vnode.type === (0, _runtimeCore.Fragment)) vnode.children.forEach((c)=>setVarsOnVNode(c, vars));
    else if (vnode.type === (0, _runtimeCore.Static)) {
        let { el, anchor } = vnode;
        while(el){
            setVarsOnNode(el, vars);
            if (el === anchor) break;
            el = el.nextSibling;
        }
    }
}
function setVarsOnNode(el, vars) {
    if (el.nodeType === 1) {
        const style = el.style;
        let cssText = "";
        for(const key in vars){
            style.setProperty(`--${key}`, vars[key]);
            cssText += `--${key}: ${vars[key]};`;
        }
        style[CSS_VAR_TEXT] = cssText;
    }
}
const displayRE = /(^|;)\s*display\s*:/;
function patchStyle(el, prev, next) {
    const style = el.style;
    const isCssString = (0, _shared.isString)(next);
    let hasControlledDisplay = false;
    if (next && !isCssString) {
        if (prev) {
            if (!(0, _shared.isString)(prev)) {
                for(const key in prev)if (next[key] == null) setStyle(style, key, "");
            } else for (const prevStyle of prev.split(";")){
                const key = prevStyle.slice(0, prevStyle.indexOf(":")).trim();
                if (next[key] == null) setStyle(style, key, "");
            }
        }
        for(const key in next){
            if (key === "display") hasControlledDisplay = true;
            setStyle(style, key, next[key]);
        }
    } else {
        if (isCssString) {
            if (prev !== next) {
                const cssVarText = style[CSS_VAR_TEXT];
                if (cssVarText) next += ";" + cssVarText;
                style.cssText = next;
                hasControlledDisplay = displayRE.test(next);
            }
        } else if (prev) el.removeAttribute("style");
    }
    if (vShowOriginalDisplay in el) {
        el[vShowOriginalDisplay] = hasControlledDisplay ? style.display : "";
        if (el[vShowHidden]) style.display = "none";
    }
}
const semicolonRE = /[^\\];\s*$/;
const importantRE = /\s*!important$/;
function setStyle(style, name, val) {
    if ((0, _shared.isArray)(val)) val.forEach((v)=>setStyle(style, name, v));
    else {
        if (val == null) val = "";
        if (semicolonRE.test(val)) (0, _runtimeCore.warn)(`Unexpected semicolon at the end of '${name}' style value: '${val}'`);
        if (name.startsWith("--")) style.setProperty(name, val);
        else {
            const prefixed = autoPrefix(style, name);
            if (importantRE.test(val)) style.setProperty((0, _shared.hyphenate)(prefixed), val.replace(importantRE, ""), "important");
            else style[prefixed] = val;
        }
    }
}
const prefixes = [
    "Webkit",
    "Moz",
    "ms"
];
const prefixCache = {};
function autoPrefix(style, rawName) {
    const cached = prefixCache[rawName];
    if (cached) return cached;
    let name = (0, _runtimeCore.camelize)(rawName);
    if (name !== "filter" && name in style) return prefixCache[rawName] = name;
    name = (0, _shared.capitalize)(name);
    for(let i = 0; i < prefixes.length; i++){
        const prefixed = prefixes[i] + name;
        if (prefixed in style) return prefixCache[rawName] = prefixed;
    }
    return rawName;
}
const xlinkNS = "http://www.w3.org/1999/xlink";
function patchAttr(el, key, value, isSVG, instance, isBoolean = (0, _shared.isSpecialBooleanAttr)(key)) {
    if (isSVG && key.startsWith("xlink:")) {
        if (value == null) el.removeAttributeNS(xlinkNS, key.slice(6, key.length));
        else el.setAttributeNS(xlinkNS, key, value);
    } else if (value == null || isBoolean && !(0, _shared.includeBooleanAttr)(value)) el.removeAttribute(key);
    else el.setAttribute(key, isBoolean ? "" : (0, _shared.isSymbol)(value) ? String(value) : value);
}
function patchDOMProp(el, key, value, parentComponent) {
    if (key === "innerHTML" || key === "textContent") {
        if (value == null) return;
        el[key] = value;
        return;
    }
    const tag = el.tagName;
    if (key === "value" && tag !== "PROGRESS" && // custom elements may use _value internally
    !tag.includes("-")) {
        const oldValue = tag === "OPTION" ? el.getAttribute("value") || "" : el.value;
        const newValue = value == null ? "" : String(value);
        if (oldValue !== newValue || !("_value" in el)) el.value = newValue;
        if (value == null) el.removeAttribute(key);
        el._value = value;
        return;
    }
    let needRemove = false;
    if (value === "" || value == null) {
        const type = typeof el[key];
        if (type === "boolean") value = (0, _shared.includeBooleanAttr)(value);
        else if (value == null && type === "string") {
            value = "";
            needRemove = true;
        } else if (type === "number") {
            value = 0;
            needRemove = true;
        }
    }
    try {
        el[key] = value;
    } catch (e) {
        if (!needRemove) (0, _runtimeCore.warn)(`Failed setting prop "${key}" on <${tag.toLowerCase()}>: value ${value} is invalid.`, e);
    }
    needRemove && el.removeAttribute(key);
}
function addEventListener(el, event, handler, options) {
    el.addEventListener(event, handler, options);
}
function removeEventListener(el, event, handler, options) {
    el.removeEventListener(event, handler, options);
}
const veiKey = Symbol("_vei");
function patchEvent(el, rawName, prevValue, nextValue, instance = null) {
    const invokers = el[veiKey] || (el[veiKey] = {});
    const existingInvoker = invokers[rawName];
    if (nextValue && existingInvoker) existingInvoker.value = sanitizeEventValue(nextValue, rawName);
    else {
        const [name, options] = parseName(rawName);
        if (nextValue) {
            const invoker = invokers[rawName] = createInvoker(sanitizeEventValue(nextValue, rawName), instance);
            addEventListener(el, name, invoker, options);
        } else if (existingInvoker) {
            removeEventListener(el, name, existingInvoker, options);
            invokers[rawName] = void 0;
        }
    }
}
const optionsModifierRE = /(?:Once|Passive|Capture)$/;
function parseName(name) {
    let options;
    if (optionsModifierRE.test(name)) {
        options = {};
        let m;
        while(m = name.match(optionsModifierRE)){
            name = name.slice(0, name.length - m[0].length);
            options[m[0].toLowerCase()] = true;
        }
    }
    const event = name[2] === ":" ? name.slice(3) : (0, _shared.hyphenate)(name.slice(2));
    return [
        event,
        options
    ];
}
let cachedNow = 0;
const p = /* @__PURE__ */ Promise.resolve();
const getNow = ()=>cachedNow || (p.then(()=>cachedNow = 0), cachedNow = Date.now());
function createInvoker(initialValue, instance) {
    const invoker = (e)=>{
        if (!e._vts) e._vts = Date.now();
        else if (e._vts <= invoker.attached) return;
        (0, _runtimeCore.callWithAsyncErrorHandling)(patchStopImmediatePropagation(e, invoker.value), instance, 5, [
            e
        ]);
    };
    invoker.value = initialValue;
    invoker.attached = getNow();
    return invoker;
}
function sanitizeEventValue(value, propName) {
    if ((0, _shared.isFunction)(value) || (0, _shared.isArray)(value)) return value;
    (0, _runtimeCore.warn)(`Wrong type passed as event handler to ${propName} - did you forget @ or : in front of your prop?
Expected function or array of functions, received type ${typeof value}.`);
    return 0, _shared.NOOP;
}
function patchStopImmediatePropagation(e, value) {
    if ((0, _shared.isArray)(value)) {
        const originalStop = e.stopImmediatePropagation;
        e.stopImmediatePropagation = ()=>{
            originalStop.call(e);
            e._stopped = true;
        };
        return value.map((fn)=>(e2)=>!e2._stopped && fn && fn(e2));
    } else return value;
}
const isNativeOn = (key)=>key.charCodeAt(0) === 111 && key.charCodeAt(1) === 110 && // lowercase letter
    key.charCodeAt(2) > 96 && key.charCodeAt(2) < 123;
const patchProp = (el, key, prevValue, nextValue, namespace, parentComponent)=>{
    const isSVG = namespace === "svg";
    if (key === "class") patchClass(el, nextValue, isSVG);
    else if (key === "style") patchStyle(el, prevValue, nextValue);
    else if ((0, _shared.isOn)(key)) {
        if (!(0, _shared.isModelListener)(key)) patchEvent(el, key, prevValue, nextValue, parentComponent);
    } else if (key[0] === "." ? (key = key.slice(1), true) : key[0] === "^" ? (key = key.slice(1), false) : shouldSetAsProp(el, key, nextValue, isSVG)) {
        patchDOMProp(el, key, nextValue);
        if (!el.tagName.includes("-") && (key === "value" || key === "checked" || key === "selected")) patchAttr(el, key, nextValue, isSVG, parentComponent, key !== "value");
    } else {
        if (key === "true-value") el._trueValue = nextValue;
        else if (key === "false-value") el._falseValue = nextValue;
        patchAttr(el, key, nextValue, isSVG);
    }
};
function shouldSetAsProp(el, key, value, isSVG) {
    if (isSVG) {
        if (key === "innerHTML" || key === "textContent") return true;
        if (key in el && isNativeOn(key) && (0, _shared.isFunction)(value)) return true;
        return false;
    }
    if (key === "spellcheck" || key === "draggable" || key === "translate") return false;
    if (key === "form") return false;
    if (key === "list" && el.tagName === "INPUT") return false;
    if (key === "type" && el.tagName === "TEXTAREA") return false;
    if (key === "width" || key === "height") {
        const tag = el.tagName;
        if (tag === "IMG" || tag === "VIDEO" || tag === "CANVAS" || tag === "SOURCE") return false;
    }
    if (isNativeOn(key) && (0, _shared.isString)(value)) return false;
    return key in el;
}
/*! #__NO_SIDE_EFFECTS__ */ // @__NO_SIDE_EFFECTS__
function defineCustomElement(options, extraOptions, hydrate2) {
    const Comp = (0, _runtimeCore.defineComponent)(options, extraOptions);
    class VueCustomElement extends VueElement {
        constructor(initialProps){
            super(Comp, initialProps, hydrate2);
        }
    }
    VueCustomElement.def = Comp;
    return VueCustomElement;
}
/*! #__NO_SIDE_EFFECTS__ */ const defineSSRCustomElement = /* @__NO_SIDE_EFFECTS__ */ (options, extraOptions)=>{
    return /* @__PURE__ */ defineCustomElement(options, extraOptions, hydrate);
};
const BaseClass = typeof HTMLElement !== "undefined" ? HTMLElement : class {
};
class VueElement extends BaseClass {
    constructor(_def, _props = {}, hydrate2){
        super();
        this._def = _def;
        this._props = _props;
        /**
     * @internal
     */ this._instance = null;
        this._connected = false;
        this._resolved = false;
        this._numberProps = null;
        this._ob = null;
        if (this.shadowRoot && hydrate2) hydrate2(this._createVNode(), this.shadowRoot);
        else {
            if (0, this.shadowRoot) (0, _runtimeCore.warn)(`Custom element has pre-rendered declarative shadow root but is not defined as hydratable. Use \`defineSSRCustomElement\`.`);
            this.attachShadow({
                mode: "open"
            });
            if (!this._def.__asyncLoader) this._resolveProps(this._def);
        }
    }
    connectedCallback() {
        this._connected = true;
        if (!this._instance) {
            if (this._resolved) this._update();
            else this._resolveDef();
        }
    }
    disconnectedCallback() {
        this._connected = false;
        (0, _runtimeCore.nextTick)(()=>{
            if (!this._connected) {
                if (this._ob) {
                    this._ob.disconnect();
                    this._ob = null;
                }
                render(null, this.shadowRoot);
                this._instance = null;
            }
        });
    }
    /**
   * resolve inner component definition (handle possible async component)
   */ _resolveDef() {
        this._resolved = true;
        for(let i = 0; i < this.attributes.length; i++)this._setAttr(this.attributes[i].name);
        this._ob = new MutationObserver((mutations)=>{
            for (const m of mutations)this._setAttr(m.attributeName);
        });
        this._ob.observe(this, {
            attributes: true
        });
        const resolve = (def, isAsync = false)=>{
            const { props, styles } = def;
            let numberProps;
            if (props && !(0, _shared.isArray)(props)) for(const key in props){
                const opt = props[key];
                if (opt === Number || opt && opt.type === Number) {
                    if (key in this._props) this._props[key] = (0, _shared.toNumber)(this._props[key]);
                    (numberProps || (numberProps = /* @__PURE__ */ Object.create(null)))[(0, _shared.camelize)(key)] = true;
                }
            }
            this._numberProps = numberProps;
            if (isAsync) this._resolveProps(def);
            this._applyStyles(styles);
            this._update();
        };
        const asyncDef = this._def.__asyncLoader;
        if (asyncDef) asyncDef().then((def)=>resolve(def, true));
        else resolve(this._def);
    }
    _resolveProps(def) {
        const { props } = def;
        const declaredPropKeys = (0, _shared.isArray)(props) ? props : Object.keys(props || {});
        for (const key of Object.keys(this))if (key[0] !== "_" && declaredPropKeys.includes(key)) this._setProp(key, this[key], true, false);
        for (const key of declaredPropKeys.map((0, _shared.camelize)))Object.defineProperty(this, key, {
            get () {
                return this._getProp(key);
            },
            set (val) {
                this._setProp(key, val);
            }
        });
    }
    _setAttr(key) {
        let value = this.hasAttribute(key) ? this.getAttribute(key) : void 0;
        const camelKey = (0, _shared.camelize)(key);
        if (this._numberProps && this._numberProps[camelKey]) value = (0, _shared.toNumber)(value);
        this._setProp(camelKey, value, false);
    }
    /**
   * @internal
   */ _getProp(key) {
        return this._props[key];
    }
    /**
   * @internal
   */ _setProp(key, val, shouldReflect = true, shouldUpdate = true) {
        if (val !== this._props[key]) {
            this._props[key] = val;
            if (shouldUpdate && this._instance) this._update();
            if (shouldReflect) {
                if (val === true) this.setAttribute((0, _shared.hyphenate)(key), "");
                else if (typeof val === "string" || typeof val === "number") this.setAttribute((0, _shared.hyphenate)(key), val + "");
                else if (!val) this.removeAttribute((0, _shared.hyphenate)(key));
            }
        }
    }
    _update() {
        render(this._createVNode(), this.shadowRoot);
    }
    _createVNode() {
        const vnode = (0, _runtimeCore.createVNode)(this._def, (0, _shared.extend)({}, this._props));
        if (!this._instance) vnode.ce = (instance)=>{
            this._instance = instance;
            instance.isCE = true;
            instance.ceReload = (newStyles)=>{
                if (this._styles) {
                    this._styles.forEach((s)=>this.shadowRoot.removeChild(s));
                    this._styles.length = 0;
                }
                this._applyStyles(newStyles);
                this._instance = null;
                this._update();
            };
            const dispatch = (event, args)=>{
                this.dispatchEvent(new CustomEvent(event, {
                    detail: args
                }));
            };
            instance.emit = (event, ...args)=>{
                dispatch(event, args);
                if ((0, _shared.hyphenate)(event) !== event) dispatch((0, _shared.hyphenate)(event), args);
            };
            let parent = this;
            while(parent = parent && (parent.parentNode || parent.host))if (parent instanceof VueElement) {
                instance.parent = parent._instance;
                instance.provides = parent._instance.provides;
                break;
            }
        };
        return vnode;
    }
    _applyStyles(styles) {
        if (styles) styles.forEach((css)=>{
            const s = document.createElement("style");
            s.textContent = css;
            this.shadowRoot.appendChild(s);
            (this._styles || (this._styles = [])).push(s);
        });
    }
}
function useCssModule(name = "$style") {
    {
        const instance = (0, _runtimeCore.getCurrentInstance)();
        if (!instance) {
            (0, _runtimeCore.warn)(`useCssModule must be called inside setup()`);
            return 0, _shared.EMPTY_OBJ;
        }
        const modules = instance.type.__cssModules;
        if (!modules) {
            (0, _runtimeCore.warn)(`Current instance does not have CSS modules injected.`);
            return 0, _shared.EMPTY_OBJ;
        }
        const mod = modules[name];
        if (!mod) {
            (0, _runtimeCore.warn)(`Current instance does not have CSS module named "${name}".`);
            return 0, _shared.EMPTY_OBJ;
        }
        return mod;
    }
}
const positionMap = /* @__PURE__ */ new WeakMap();
const newPositionMap = /* @__PURE__ */ new WeakMap();
const moveCbKey = Symbol("_moveCb");
const enterCbKey = Symbol("_enterCb");
const TransitionGroupImpl = {
    name: "TransitionGroup",
    props: /* @__PURE__ */ (0, _shared.extend)({}, TransitionPropsValidators, {
        tag: String,
        moveClass: String
    }),
    setup (props, { slots }) {
        const instance = (0, _runtimeCore.getCurrentInstance)();
        const state = (0, _runtimeCore.useTransitionState)();
        let prevChildren;
        let children;
        (0, _runtimeCore.onUpdated)(()=>{
            if (!prevChildren.length) return;
            const moveClass = props.moveClass || `${props.name || "v"}-move`;
            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) return;
            prevChildren.forEach(callPendingCbs);
            prevChildren.forEach(recordPosition);
            const movedChildren = prevChildren.filter(applyTranslation);
            forceReflow();
            movedChildren.forEach((c)=>{
                const el = c.el;
                const style = el.style;
                addTransitionClass(el, moveClass);
                style.transform = style.webkitTransform = style.transitionDuration = "";
                const cb = el[moveCbKey] = (e)=>{
                    if (e && e.target !== el) return;
                    if (!e || /transform$/.test(e.propertyName)) {
                        el.removeEventListener("transitionend", cb);
                        el[moveCbKey] = null;
                        removeTransitionClass(el, moveClass);
                    }
                };
                el.addEventListener("transitionend", cb);
            });
        });
        return ()=>{
            const rawProps = (0, _runtimeCore.toRaw)(props);
            const cssTransitionProps = resolveTransitionProps(rawProps);
            let tag = rawProps.tag || (0, _runtimeCore.Fragment);
            prevChildren = [];
            if (children) for(let i = 0; i < children.length; i++){
                const child = children[i];
                if (child.el && child.el instanceof Element) {
                    prevChildren.push(child);
                    (0, _runtimeCore.setTransitionHooks)(child, (0, _runtimeCore.resolveTransitionHooks)(child, cssTransitionProps, state, instance));
                    positionMap.set(child, child.el.getBoundingClientRect());
                }
            }
            children = slots.default ? (0, _runtimeCore.getTransitionRawChildren)(slots.default()) : [];
            for(let i = 0; i < children.length; i++){
                const child = children[i];
                if (child.key != null) (0, _runtimeCore.setTransitionHooks)(child, (0, _runtimeCore.resolveTransitionHooks)(child, cssTransitionProps, state, instance));
                else (0, _runtimeCore.warn)(`<TransitionGroup> children must be keyed.`);
            }
            return (0, _runtimeCore.createVNode)(tag, null, children);
        };
    }
};
const removeMode = (props)=>delete props.mode;
/* @__PURE__ */ removeMode(TransitionGroupImpl.props);
const TransitionGroup = TransitionGroupImpl;
function callPendingCbs(c) {
    const el = c.el;
    if (el[moveCbKey]) el[moveCbKey]();
    if (el[enterCbKey]) el[enterCbKey]();
}
function recordPosition(c) {
    newPositionMap.set(c, c.el.getBoundingClientRect());
}
function applyTranslation(c) {
    const oldPos = positionMap.get(c);
    const newPos = newPositionMap.get(c);
    const dx = oldPos.left - newPos.left;
    const dy = oldPos.top - newPos.top;
    if (dx || dy) {
        const s = c.el.style;
        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;
        s.transitionDuration = "0s";
        return c;
    }
}
function hasCSSTransform(el, root, moveClass) {
    const clone = el.cloneNode();
    const _vtc = el[vtcKey];
    if (_vtc) _vtc.forEach((cls)=>{
        cls.split(/\s+/).forEach((c)=>c && clone.classList.remove(c));
    });
    moveClass.split(/\s+/).forEach((c)=>c && clone.classList.add(c));
    clone.style.display = "none";
    const container = root.nodeType === 1 ? root : root.parentNode;
    container.appendChild(clone);
    const { hasTransform } = getTransitionInfo(clone);
    container.removeChild(clone);
    return hasTransform;
}
const getModelAssigner = (vnode)=>{
    const fn = vnode.props["onUpdate:modelValue"] || false;
    return (0, _shared.isArray)(fn) ? (value)=>(0, _shared.invokeArrayFns)(fn, value) : fn;
};
function onCompositionStart(e) {
    e.target.composing = true;
}
function onCompositionEnd(e) {
    const target = e.target;
    if (target.composing) {
        target.composing = false;
        target.dispatchEvent(new Event("input"));
    }
}
const assignKey = Symbol("_assign");
const vModelText = {
    created (el, { modifiers: { lazy, trim, number } }, vnode) {
        el[assignKey] = getModelAssigner(vnode);
        const castToNumber = number || vnode.props && vnode.props.type === "number";
        addEventListener(el, lazy ? "change" : "input", (e)=>{
            if (e.target.composing) return;
            let domValue = el.value;
            if (trim) domValue = domValue.trim();
            if (castToNumber) domValue = (0, _shared.looseToNumber)(domValue);
            el[assignKey](domValue);
        });
        if (trim) addEventListener(el, "change", ()=>{
            el.value = el.value.trim();
        });
        if (!lazy) {
            addEventListener(el, "compositionstart", onCompositionStart);
            addEventListener(el, "compositionend", onCompositionEnd);
            addEventListener(el, "change", onCompositionEnd);
        }
    },
    // set value on mounted so it's after min/max for type="range"
    mounted (el, { value }) {
        el.value = value == null ? "" : value;
    },
    beforeUpdate (el, { value, oldValue, modifiers: { lazy, trim, number } }, vnode) {
        el[assignKey] = getModelAssigner(vnode);
        if (el.composing) return;
        const elValue = (number || el.type === "number") && !/^0\d/.test(el.value) ? (0, _shared.looseToNumber)(el.value) : el.value;
        const newValue = value == null ? "" : value;
        if (elValue === newValue) return;
        if (document.activeElement === el && el.type !== "range") {
            if (lazy && value === oldValue) return;
            if (trim && el.value.trim() === newValue) return;
        }
        el.value = newValue;
    }
};
const vModelCheckbox = {
    // #4096 array checkboxes need to be deep traversed
    deep: true,
    created (el, _, vnode) {
        el[assignKey] = getModelAssigner(vnode);
        addEventListener(el, "change", ()=>{
            const modelValue = el._modelValue;
            const elementValue = getValue(el);
            const checked = el.checked;
            const assign = el[assignKey];
            if ((0, _shared.isArray)(modelValue)) {
                const index = (0, _shared.looseIndexOf)(modelValue, elementValue);
                const found = index !== -1;
                if (checked && !found) assign(modelValue.concat(elementValue));
                else if (!checked && found) {
                    const filtered = [
                        ...modelValue
                    ];
                    filtered.splice(index, 1);
                    assign(filtered);
                }
            } else if ((0, _shared.isSet)(modelValue)) {
                const cloned = new Set(modelValue);
                if (checked) cloned.add(elementValue);
                else cloned.delete(elementValue);
                assign(cloned);
            } else assign(getCheckboxValue(el, checked));
        });
    },
    // set initial checked on mount to wait for true-value/false-value
    mounted: setChecked,
    beforeUpdate (el, binding, vnode) {
        el[assignKey] = getModelAssigner(vnode);
        setChecked(el, binding, vnode);
    }
};
function setChecked(el, { value, oldValue }, vnode) {
    el._modelValue = value;
    if ((0, _shared.isArray)(value)) el.checked = (0, _shared.looseIndexOf)(value, vnode.props.value) > -1;
    else if ((0, _shared.isSet)(value)) el.checked = value.has(vnode.props.value);
    else if (value !== oldValue) el.checked = (0, _shared.looseEqual)(value, getCheckboxValue(el, true));
}
const vModelRadio = {
    created (el, { value }, vnode) {
        el.checked = (0, _shared.looseEqual)(value, vnode.props.value);
        el[assignKey] = getModelAssigner(vnode);
        addEventListener(el, "change", ()=>{
            el[assignKey](getValue(el));
        });
    },
    beforeUpdate (el, { value, oldValue }, vnode) {
        el[assignKey] = getModelAssigner(vnode);
        if (value !== oldValue) el.checked = (0, _shared.looseEqual)(value, vnode.props.value);
    }
};
const vModelSelect = {
    // <select multiple> value need to be deep traversed
    deep: true,
    created (el, { value, modifiers: { number } }, vnode) {
        const isSetModel = (0, _shared.isSet)(value);
        addEventListener(el, "change", ()=>{
            const selectedVal = Array.prototype.filter.call(el.options, (o)=>o.selected).map((o)=>number ? (0, _shared.looseToNumber)(getValue(o)) : getValue(o));
            el[assignKey](el.multiple ? isSetModel ? new Set(selectedVal) : selectedVal : selectedVal[0]);
            el._assigning = true;
            (0, _runtimeCore.nextTick)(()=>{
                el._assigning = false;
            });
        });
        el[assignKey] = getModelAssigner(vnode);
    },
    // set value in mounted & updated because <select> relies on its children
    // <option>s.
    mounted (el, { value, modifiers: { number } }) {
        setSelected(el, value);
    },
    beforeUpdate (el, _binding, vnode) {
        el[assignKey] = getModelAssigner(vnode);
    },
    updated (el, { value, modifiers: { number } }) {
        if (!el._assigning) setSelected(el, value);
    }
};
function setSelected(el, value, number) {
    const isMultiple = el.multiple;
    const isArrayValue = (0, _shared.isArray)(value);
    if (isMultiple && !isArrayValue && !(0, _shared.isSet)(value)) {
        (0, _runtimeCore.warn)(`<select multiple v-model> expects an Array or Set value for its binding, but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);
        return;
    }
    for(let i = 0, l = el.options.length; i < l; i++){
        const option = el.options[i];
        const optionValue = getValue(option);
        if (isMultiple) {
            if (isArrayValue) {
                const optionType = typeof optionValue;
                if (optionType === "string" || optionType === "number") option.selected = value.some((v)=>String(v) === String(optionValue));
                else option.selected = (0, _shared.looseIndexOf)(value, optionValue) > -1;
            } else option.selected = value.has(optionValue);
        } else if ((0, _shared.looseEqual)(getValue(option), value)) {
            if (el.selectedIndex !== i) el.selectedIndex = i;
            return;
        }
    }
    if (!isMultiple && el.selectedIndex !== -1) el.selectedIndex = -1;
}
function getValue(el) {
    return "_value" in el ? el._value : el.value;
}
function getCheckboxValue(el, checked) {
    const key = checked ? "_trueValue" : "_falseValue";
    return key in el ? el[key] : checked;
}
const vModelDynamic = {
    created (el, binding, vnode) {
        callModelHook(el, binding, vnode, null, "created");
    },
    mounted (el, binding, vnode) {
        callModelHook(el, binding, vnode, null, "mounted");
    },
    beforeUpdate (el, binding, vnode, prevVNode) {
        callModelHook(el, binding, vnode, prevVNode, "beforeUpdate");
    },
    updated (el, binding, vnode, prevVNode) {
        callModelHook(el, binding, vnode, prevVNode, "updated");
    }
};
function resolveDynamicModel(tagName, type) {
    switch(tagName){
        case "SELECT":
            return vModelSelect;
        case "TEXTAREA":
            return vModelText;
        default:
            switch(type){
                case "checkbox":
                    return vModelCheckbox;
                case "radio":
                    return vModelRadio;
                default:
                    return vModelText;
            }
    }
}
function callModelHook(el, binding, vnode, prevVNode, hook) {
    const modelToUse = resolveDynamicModel(el.tagName, vnode.props && vnode.props.type);
    const fn = modelToUse[hook];
    fn && fn(el, binding, vnode, prevVNode);
}
function initVModelForSSR() {
    vModelText.getSSRProps = ({ value })=>({
            value
        });
    vModelRadio.getSSRProps = ({ value }, vnode)=>{
        if (vnode.props && (0, _shared.looseEqual)(vnode.props.value, value)) return {
            checked: true
        };
    };
    vModelCheckbox.getSSRProps = ({ value }, vnode)=>{
        if ((0, _shared.isArray)(value)) {
            if (vnode.props && (0, _shared.looseIndexOf)(value, vnode.props.value) > -1) return {
                checked: true
            };
        } else if ((0, _shared.isSet)(value)) {
            if (vnode.props && value.has(vnode.props.value)) return {
                checked: true
            };
        } else if (value) return {
            checked: true
        };
    };
    vModelDynamic.getSSRProps = (binding, vnode)=>{
        if (typeof vnode.type !== "string") return;
        const modelToUse = resolveDynamicModel(// resolveDynamicModel expects an uppercase tag name, but vnode.type is lowercase
        vnode.type.toUpperCase(), vnode.props && vnode.props.type);
        if (modelToUse.getSSRProps) return modelToUse.getSSRProps(binding, vnode);
    };
}
const systemModifiers = [
    "ctrl",
    "shift",
    "alt",
    "meta"
];
const modifierGuards = {
    stop: (e)=>e.stopPropagation(),
    prevent: (e)=>e.preventDefault(),
    self: (e)=>e.target !== e.currentTarget,
    ctrl: (e)=>!e.ctrlKey,
    shift: (e)=>!e.shiftKey,
    alt: (e)=>!e.altKey,
    meta: (e)=>!e.metaKey,
    left: (e)=>"button" in e && e.button !== 0,
    middle: (e)=>"button" in e && e.button !== 1,
    right: (e)=>"button" in e && e.button !== 2,
    exact: (e, modifiers)=>systemModifiers.some((m)=>e[`${m}Key`] && !modifiers.includes(m))
};
const withModifiers = (fn, modifiers)=>{
    const cache = fn._withMods || (fn._withMods = {});
    const cacheKey = modifiers.join(".");
    return cache[cacheKey] || (cache[cacheKey] = (event, ...args)=>{
        for(let i = 0; i < modifiers.length; i++){
            const guard = modifierGuards[modifiers[i]];
            if (guard && guard(event, modifiers)) return;
        }
        return fn(event, ...args);
    });
};
const keyNames = {
    esc: "escape",
    space: " ",
    up: "arrow-up",
    left: "arrow-left",
    right: "arrow-right",
    down: "arrow-down",
    delete: "backspace"
};
const withKeys = (fn, modifiers)=>{
    const cache = fn._withKeys || (fn._withKeys = {});
    const cacheKey = modifiers.join(".");
    return cache[cacheKey] || (cache[cacheKey] = (event)=>{
        if (!("key" in event)) return;
        const eventKey = (0, _shared.hyphenate)(event.key);
        if (modifiers.some((k)=>k === eventKey || keyNames[k] === eventKey)) return fn(event);
    });
};
const rendererOptions = /* @__PURE__ */ (0, _shared.extend)({
    patchProp
}, nodeOps);
let renderer;
let enabledHydration = false;
function ensureRenderer() {
    return renderer || (renderer = (0, _runtimeCore.createRenderer)(rendererOptions));
}
function ensureHydrationRenderer() {
    renderer = enabledHydration ? renderer : (0, _runtimeCore.createHydrationRenderer)(rendererOptions);
    enabledHydration = true;
    return renderer;
}
const render = (...args)=>{
    ensureRenderer().render(...args);
};
const hydrate = (...args)=>{
    ensureHydrationRenderer().hydrate(...args);
};
const createApp = (...args)=>{
    const app = ensureRenderer().createApp(...args);
    injectNativeTagCheck(app);
    injectCompilerOptionsCheck(app);
    const { mount } = app;
    app.mount = (containerOrSelector)=>{
        const container = normalizeContainer(containerOrSelector);
        if (!container) return;
        const component = app._component;
        if (!(0, _shared.isFunction)(component) && !component.render && !component.template) component.template = container.innerHTML;
        container.innerHTML = "";
        const proxy = mount(container, false, resolveRootNamespace(container));
        if (container instanceof Element) {
            container.removeAttribute("v-cloak");
            container.setAttribute("data-v-app", "");
        }
        return proxy;
    };
    return app;
};
const createSSRApp = (...args)=>{
    const app = ensureHydrationRenderer().createApp(...args);
    injectNativeTagCheck(app);
    injectCompilerOptionsCheck(app);
    const { mount } = app;
    app.mount = (containerOrSelector)=>{
        const container = normalizeContainer(containerOrSelector);
        if (container) return mount(container, true, resolveRootNamespace(container));
    };
    return app;
};
function resolveRootNamespace(container) {
    if (container instanceof SVGElement) return "svg";
    if (typeof MathMLElement === "function" && container instanceof MathMLElement) return "mathml";
}
function injectNativeTagCheck(app) {
    Object.defineProperty(app.config, "isNativeTag", {
        value: (tag)=>(0, _shared.isHTMLTag)(tag) || (0, _shared.isSVGTag)(tag) || (0, _shared.isMathMLTag)(tag),
        writable: false
    });
}
function injectCompilerOptionsCheck(app) {
    if ((0, _runtimeCore.isRuntimeOnly)()) {
        const isCustomElement = app.config.isCustomElement;
        Object.defineProperty(app.config, "isCustomElement", {
            get () {
                return isCustomElement;
            },
            set () {
                (0, _runtimeCore.warn)(`The \`isCustomElement\` config option is deprecated. Use \`compilerOptions.isCustomElement\` instead.`);
            }
        });
        const compilerOptions = app.config.compilerOptions;
        const msg = `The \`compilerOptions\` config option is only respected when using a build of Vue.js that includes the runtime compiler (aka "full build"). Since you are using the runtime-only build, \`compilerOptions\` must be passed to \`@vue/compiler-dom\` in the build setup instead.
- For vue-loader: pass it via vue-loader's \`compilerOptions\` loader option.
- For vue-cli: see https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader
- For vite: pass it via @vitejs/plugin-vue options. See https://github.com/vitejs/vite-plugin-vue/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-sfc`;
        Object.defineProperty(app.config, "compilerOptions", {
            get () {
                (0, _runtimeCore.warn)(msg);
                return compilerOptions;
            },
            set () {
                (0, _runtimeCore.warn)(msg);
            }
        });
    }
}
function normalizeContainer(container) {
    if ((0, _shared.isString)(container)) {
        const res = document.querySelector(container);
        if (!res) (0, _runtimeCore.warn)(`Failed to mount app: mount target selector "${container}" returned null.`);
        return res;
    }
    if ((0, window.ShadowRoot) && container instanceof window.ShadowRoot && container.mode === "closed") (0, _runtimeCore.warn)(`mounting on a ShadowRoot with \`{mode: "closed"}\` may lead to unpredictable bugs`);
    return container;
}
let ssrDirectiveInitialized = false;
const initDirectivesForSSR = ()=>{
    if (!ssrDirectiveInitialized) {
        ssrDirectiveInitialized = true;
        initVModelForSSR();
        initVShowForSSR();
    }
};

},{"@vue/runtime-core":"9WPzx","@vue/shared":"kJKup","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"9WPzx":[function(require,module,exports) {
/**
* @vue/runtime-core v3.4.38
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "EffectScope", ()=>(0, _reactivity.EffectScope));
parcelHelpers.export(exports, "ReactiveEffect", ()=>(0, _reactivity.ReactiveEffect));
parcelHelpers.export(exports, "TrackOpTypes", ()=>(0, _reactivity.TrackOpTypes));
parcelHelpers.export(exports, "TriggerOpTypes", ()=>(0, _reactivity.TriggerOpTypes));
parcelHelpers.export(exports, "customRef", ()=>(0, _reactivity.customRef));
parcelHelpers.export(exports, "effect", ()=>(0, _reactivity.effect));
parcelHelpers.export(exports, "effectScope", ()=>(0, _reactivity.effectScope));
parcelHelpers.export(exports, "getCurrentScope", ()=>(0, _reactivity.getCurrentScope));
parcelHelpers.export(exports, "isProxy", ()=>(0, _reactivity.isProxy));
parcelHelpers.export(exports, "isReactive", ()=>(0, _reactivity.isReactive));
parcelHelpers.export(exports, "isReadonly", ()=>(0, _reactivity.isReadonly));
parcelHelpers.export(exports, "isRef", ()=>(0, _reactivity.isRef));
parcelHelpers.export(exports, "isShallow", ()=>(0, _reactivity.isShallow));
parcelHelpers.export(exports, "markRaw", ()=>(0, _reactivity.markRaw));
parcelHelpers.export(exports, "onScopeDispose", ()=>(0, _reactivity.onScopeDispose));
parcelHelpers.export(exports, "proxyRefs", ()=>(0, _reactivity.proxyRefs));
parcelHelpers.export(exports, "reactive", ()=>(0, _reactivity.reactive));
parcelHelpers.export(exports, "readonly", ()=>(0, _reactivity.readonly));
parcelHelpers.export(exports, "ref", ()=>(0, _reactivity.ref));
parcelHelpers.export(exports, "shallowReactive", ()=>(0, _reactivity.shallowReactive));
parcelHelpers.export(exports, "shallowReadonly", ()=>(0, _reactivity.shallowReadonly));
parcelHelpers.export(exports, "shallowRef", ()=>(0, _reactivity.shallowRef));
parcelHelpers.export(exports, "stop", ()=>(0, _reactivity.stop));
parcelHelpers.export(exports, "toRaw", ()=>(0, _reactivity.toRaw));
parcelHelpers.export(exports, "toRef", ()=>(0, _reactivity.toRef));
parcelHelpers.export(exports, "toRefs", ()=>(0, _reactivity.toRefs));
parcelHelpers.export(exports, "toValue", ()=>(0, _reactivity.toValue));
parcelHelpers.export(exports, "triggerRef", ()=>(0, _reactivity.triggerRef));
parcelHelpers.export(exports, "unref", ()=>(0, _reactivity.unref));
parcelHelpers.export(exports, "camelize", ()=>(0, _shared.camelize));
parcelHelpers.export(exports, "capitalize", ()=>(0, _shared.capitalize));
parcelHelpers.export(exports, "normalizeClass", ()=>(0, _shared.normalizeClass));
parcelHelpers.export(exports, "normalizeProps", ()=>(0, _shared.normalizeProps));
parcelHelpers.export(exports, "normalizeStyle", ()=>(0, _shared.normalizeStyle));
parcelHelpers.export(exports, "toDisplayString", ()=>(0, _shared.toDisplayString));
parcelHelpers.export(exports, "toHandlerKey", ()=>(0, _shared.toHandlerKey));
parcelHelpers.export(exports, "BaseTransition", ()=>BaseTransition);
parcelHelpers.export(exports, "BaseTransitionPropsValidators", ()=>BaseTransitionPropsValidators);
parcelHelpers.export(exports, "Comment", ()=>Comment);
parcelHelpers.export(exports, "DeprecationTypes", ()=>DeprecationTypes);
parcelHelpers.export(exports, "ErrorCodes", ()=>ErrorCodes);
parcelHelpers.export(exports, "ErrorTypeStrings", ()=>ErrorTypeStrings);
parcelHelpers.export(exports, "Fragment", ()=>Fragment);
parcelHelpers.export(exports, "KeepAlive", ()=>KeepAlive);
parcelHelpers.export(exports, "Static", ()=>Static);
parcelHelpers.export(exports, "Suspense", ()=>Suspense);
parcelHelpers.export(exports, "Teleport", ()=>Teleport);
parcelHelpers.export(exports, "Text", ()=>Text);
parcelHelpers.export(exports, "assertNumber", ()=>assertNumber);
parcelHelpers.export(exports, "callWithAsyncErrorHandling", ()=>callWithAsyncErrorHandling);
parcelHelpers.export(exports, "callWithErrorHandling", ()=>callWithErrorHandling);
parcelHelpers.export(exports, "cloneVNode", ()=>cloneVNode);
parcelHelpers.export(exports, "compatUtils", ()=>compatUtils);
parcelHelpers.export(exports, "computed", ()=>computed);
parcelHelpers.export(exports, "createBlock", ()=>createBlock);
parcelHelpers.export(exports, "createCommentVNode", ()=>createCommentVNode);
parcelHelpers.export(exports, "createElementBlock", ()=>createElementBlock);
parcelHelpers.export(exports, "createElementVNode", ()=>createBaseVNode);
parcelHelpers.export(exports, "createHydrationRenderer", ()=>createHydrationRenderer);
parcelHelpers.export(exports, "createPropsRestProxy", ()=>createPropsRestProxy);
parcelHelpers.export(exports, "createRenderer", ()=>createRenderer);
parcelHelpers.export(exports, "createSlots", ()=>createSlots);
parcelHelpers.export(exports, "createStaticVNode", ()=>createStaticVNode);
parcelHelpers.export(exports, "createTextVNode", ()=>createTextVNode);
parcelHelpers.export(exports, "createVNode", ()=>createVNode);
parcelHelpers.export(exports, "defineAsyncComponent", ()=>defineAsyncComponent);
parcelHelpers.export(exports, "defineComponent", ()=>defineComponent);
parcelHelpers.export(exports, "defineEmits", ()=>defineEmits);
parcelHelpers.export(exports, "defineExpose", ()=>defineExpose);
parcelHelpers.export(exports, "defineModel", ()=>defineModel);
parcelHelpers.export(exports, "defineOptions", ()=>defineOptions);
parcelHelpers.export(exports, "defineProps", ()=>defineProps);
parcelHelpers.export(exports, "defineSlots", ()=>defineSlots);
parcelHelpers.export(exports, "devtools", ()=>devtools);
parcelHelpers.export(exports, "getCurrentInstance", ()=>getCurrentInstance);
parcelHelpers.export(exports, "getTransitionRawChildren", ()=>getTransitionRawChildren);
parcelHelpers.export(exports, "guardReactiveProps", ()=>guardReactiveProps);
parcelHelpers.export(exports, "h", ()=>h);
parcelHelpers.export(exports, "handleError", ()=>handleError);
parcelHelpers.export(exports, "hasInjectionContext", ()=>hasInjectionContext);
parcelHelpers.export(exports, "initCustomFormatter", ()=>initCustomFormatter);
parcelHelpers.export(exports, "inject", ()=>inject);
parcelHelpers.export(exports, "isMemoSame", ()=>isMemoSame);
parcelHelpers.export(exports, "isRuntimeOnly", ()=>isRuntimeOnly);
parcelHelpers.export(exports, "isVNode", ()=>isVNode);
parcelHelpers.export(exports, "mergeDefaults", ()=>mergeDefaults);
parcelHelpers.export(exports, "mergeModels", ()=>mergeModels);
parcelHelpers.export(exports, "mergeProps", ()=>mergeProps);
parcelHelpers.export(exports, "nextTick", ()=>nextTick);
parcelHelpers.export(exports, "onActivated", ()=>onActivated);
parcelHelpers.export(exports, "onBeforeMount", ()=>onBeforeMount);
parcelHelpers.export(exports, "onBeforeUnmount", ()=>onBeforeUnmount);
parcelHelpers.export(exports, "onBeforeUpdate", ()=>onBeforeUpdate);
parcelHelpers.export(exports, "onDeactivated", ()=>onDeactivated);
parcelHelpers.export(exports, "onErrorCaptured", ()=>onErrorCaptured);
parcelHelpers.export(exports, "onMounted", ()=>onMounted);
parcelHelpers.export(exports, "onRenderTracked", ()=>onRenderTracked);
parcelHelpers.export(exports, "onRenderTriggered", ()=>onRenderTriggered);
parcelHelpers.export(exports, "onServerPrefetch", ()=>onServerPrefetch);
parcelHelpers.export(exports, "onUnmounted", ()=>onUnmounted);
parcelHelpers.export(exports, "onUpdated", ()=>onUpdated);
parcelHelpers.export(exports, "openBlock", ()=>openBlock);
parcelHelpers.export(exports, "popScopeId", ()=>popScopeId);
parcelHelpers.export(exports, "provide", ()=>provide);
parcelHelpers.export(exports, "pushScopeId", ()=>pushScopeId);
parcelHelpers.export(exports, "queuePostFlushCb", ()=>queuePostFlushCb);
parcelHelpers.export(exports, "registerRuntimeCompiler", ()=>registerRuntimeCompiler);
parcelHelpers.export(exports, "renderList", ()=>renderList);
parcelHelpers.export(exports, "renderSlot", ()=>renderSlot);
parcelHelpers.export(exports, "resolveComponent", ()=>resolveComponent);
parcelHelpers.export(exports, "resolveDirective", ()=>resolveDirective);
parcelHelpers.export(exports, "resolveDynamicComponent", ()=>resolveDynamicComponent);
parcelHelpers.export(exports, "resolveFilter", ()=>resolveFilter);
parcelHelpers.export(exports, "resolveTransitionHooks", ()=>resolveTransitionHooks);
parcelHelpers.export(exports, "setBlockTracking", ()=>setBlockTracking);
parcelHelpers.export(exports, "setDevtoolsHook", ()=>setDevtoolsHook);
parcelHelpers.export(exports, "setTransitionHooks", ()=>setTransitionHooks);
parcelHelpers.export(exports, "ssrContextKey", ()=>ssrContextKey);
parcelHelpers.export(exports, "ssrUtils", ()=>ssrUtils);
parcelHelpers.export(exports, "toHandlers", ()=>toHandlers);
parcelHelpers.export(exports, "transformVNodeArgs", ()=>transformVNodeArgs);
parcelHelpers.export(exports, "useAttrs", ()=>useAttrs);
parcelHelpers.export(exports, "useModel", ()=>useModel);
parcelHelpers.export(exports, "useSSRContext", ()=>useSSRContext);
parcelHelpers.export(exports, "useSlots", ()=>useSlots);
parcelHelpers.export(exports, "useTransitionState", ()=>useTransitionState);
parcelHelpers.export(exports, "version", ()=>version);
parcelHelpers.export(exports, "warn", ()=>warn);
parcelHelpers.export(exports, "watch", ()=>watch);
parcelHelpers.export(exports, "watchEffect", ()=>watchEffect);
parcelHelpers.export(exports, "watchPostEffect", ()=>watchPostEffect);
parcelHelpers.export(exports, "watchSyncEffect", ()=>watchSyncEffect);
parcelHelpers.export(exports, "withAsyncContext", ()=>withAsyncContext);
parcelHelpers.export(exports, "withCtx", ()=>withCtx);
parcelHelpers.export(exports, "withDefaults", ()=>withDefaults);
parcelHelpers.export(exports, "withDirectives", ()=>withDirectives);
parcelHelpers.export(exports, "withMemo", ()=>withMemo);
parcelHelpers.export(exports, "withScopeId", ()=>withScopeId);
var _reactivity = require("@vue/reactivity");
var _shared = require("@vue/shared");
const stack = [];
function pushWarningContext(vnode) {
    stack.push(vnode);
}
function popWarningContext() {
    stack.pop();
}
let isWarning = false;
function warn$1(msg, ...args) {
    if (isWarning) return;
    isWarning = true;
    (0, _reactivity.pauseTracking)();
    const instance = stack.length ? stack[stack.length - 1].component : null;
    const appWarnHandler = instance && instance.appContext.config.warnHandler;
    const trace = getComponentTrace();
    if (appWarnHandler) callWithErrorHandling(appWarnHandler, instance, 11, [
        // eslint-disable-next-line no-restricted-syntax
        msg + args.map((a)=>{
            var _a, _b;
            return (_b = (_a = a.toString) == null ? void 0 : _a.call(a)) != null ? _b : JSON.stringify(a);
        }).join(""),
        instance && instance.proxy,
        trace.map(({ vnode })=>`at <${formatComponentName(instance, vnode.type)}>`).join("\n"),
        trace
    ]);
    else {
        const warnArgs = [
            `[Vue warn]: ${msg}`,
            ...args
        ];
        if (trace.length && // avoid spamming console during tests
        true) warnArgs.push(`
`, ...formatTrace(trace));
        console.warn(...warnArgs);
    }
    (0, _reactivity.resetTracking)();
    isWarning = false;
}
function getComponentTrace() {
    let currentVNode = stack[stack.length - 1];
    if (!currentVNode) return [];
    const normalizedStack = [];
    while(currentVNode){
        const last = normalizedStack[0];
        if (last && last.vnode === currentVNode) last.recurseCount++;
        else normalizedStack.push({
            vnode: currentVNode,
            recurseCount: 0
        });
        const parentInstance = currentVNode.component && currentVNode.component.parent;
        currentVNode = parentInstance && parentInstance.vnode;
    }
    return normalizedStack;
}
function formatTrace(trace) {
    const logs = [];
    trace.forEach((entry, i)=>{
        logs.push(...i === 0 ? [] : [
            `
`
        ], ...formatTraceEntry(entry));
    });
    return logs;
}
function formatTraceEntry({ vnode, recurseCount }) {
    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;
    const isRoot = vnode.component ? vnode.component.parent == null : false;
    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;
    const close = `>` + postfix;
    return vnode.props ? [
        open,
        ...formatProps(vnode.props),
        close
    ] : [
        open + close
    ];
}
function formatProps(props) {
    const res = [];
    const keys = Object.keys(props);
    keys.slice(0, 3).forEach((key)=>{
        res.push(...formatProp(key, props[key]));
    });
    if (keys.length > 3) res.push(` ...`);
    return res;
}
function formatProp(key, value, raw) {
    if ((0, _shared.isString)(value)) {
        value = JSON.stringify(value);
        return raw ? value : [
            `${key}=${value}`
        ];
    } else if (typeof value === "number" || typeof value === "boolean" || value == null) return raw ? value : [
        `${key}=${value}`
    ];
    else if ((0, _reactivity.isRef)(value)) {
        value = formatProp(key, (0, _reactivity.toRaw)(value.value), true);
        return raw ? value : [
            `${key}=Ref<`,
            value,
            `>`
        ];
    } else if ((0, _shared.isFunction)(value)) return [
        `${key}=fn${value.name ? `<${value.name}>` : ``}`
    ];
    else {
        value = (0, _reactivity.toRaw)(value);
        return raw ? value : [
            `${key}=`,
            value
        ];
    }
}
function assertNumber(val, type) {
    if (val === void 0) return;
    else if (typeof val !== "number") warn$1(`${type} is not a valid number - got ${JSON.stringify(val)}.`);
    else if (isNaN(val)) warn$1(`${type} is NaN - the duration expression might be incorrect.`);
}
const ErrorCodes = {
    "SETUP_FUNCTION": 0,
    "0": "SETUP_FUNCTION",
    "RENDER_FUNCTION": 1,
    "1": "RENDER_FUNCTION",
    "WATCH_GETTER": 2,
    "2": "WATCH_GETTER",
    "WATCH_CALLBACK": 3,
    "3": "WATCH_CALLBACK",
    "WATCH_CLEANUP": 4,
    "4": "WATCH_CLEANUP",
    "NATIVE_EVENT_HANDLER": 5,
    "5": "NATIVE_EVENT_HANDLER",
    "COMPONENT_EVENT_HANDLER": 6,
    "6": "COMPONENT_EVENT_HANDLER",
    "VNODE_HOOK": 7,
    "7": "VNODE_HOOK",
    "DIRECTIVE_HOOK": 8,
    "8": "DIRECTIVE_HOOK",
    "TRANSITION_HOOK": 9,
    "9": "TRANSITION_HOOK",
    "APP_ERROR_HANDLER": 10,
    "10": "APP_ERROR_HANDLER",
    "APP_WARN_HANDLER": 11,
    "11": "APP_WARN_HANDLER",
    "FUNCTION_REF": 12,
    "12": "FUNCTION_REF",
    "ASYNC_COMPONENT_LOADER": 13,
    "13": "ASYNC_COMPONENT_LOADER",
    "SCHEDULER": 14,
    "14": "SCHEDULER",
    "COMPONENT_UPDATE": 15,
    "15": "COMPONENT_UPDATE"
};
const ErrorTypeStrings$1 = {
    ["sp"]: "serverPrefetch hook",
    ["bc"]: "beforeCreate hook",
    ["c"]: "created hook",
    ["bm"]: "beforeMount hook",
    ["m"]: "mounted hook",
    ["bu"]: "beforeUpdate hook",
    ["u"]: "updated",
    ["bum"]: "beforeUnmount hook",
    ["um"]: "unmounted hook",
    ["a"]: "activated hook",
    ["da"]: "deactivated hook",
    ["ec"]: "errorCaptured hook",
    ["rtc"]: "renderTracked hook",
    ["rtg"]: "renderTriggered hook",
    [0]: "setup function",
    [1]: "render function",
    [2]: "watcher getter",
    [3]: "watcher callback",
    [4]: "watcher cleanup function",
    [5]: "native event handler",
    [6]: "component event handler",
    [7]: "vnode hook",
    [8]: "directive hook",
    [9]: "transition hook",
    [10]: "app errorHandler",
    [11]: "app warnHandler",
    [12]: "ref function",
    [13]: "async component loader",
    [14]: "scheduler flush",
    [15]: "component update"
};
function callWithErrorHandling(fn, instance, type, args) {
    try {
        return args ? fn(...args) : fn();
    } catch (err) {
        handleError(err, instance, type);
    }
}
function callWithAsyncErrorHandling(fn, instance, type, args) {
    if ((0, _shared.isFunction)(fn)) {
        const res = callWithErrorHandling(fn, instance, type, args);
        if (res && (0, _shared.isPromise)(res)) res.catch((err)=>{
            handleError(err, instance, type);
        });
        return res;
    }
    if ((0, _shared.isArray)(fn)) {
        const values = [];
        for(let i = 0; i < fn.length; i++)values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));
        return values;
    } else warn$1(`Invalid value type passed to callWithAsyncErrorHandling(): ${typeof fn}`);
}
function handleError(err, instance, type, throwInDev = true) {
    const contextVNode = instance ? instance.vnode : null;
    if (instance) {
        let cur = instance.parent;
        const exposedInstance = instance.proxy;
        const errorInfo = (0, ErrorTypeStrings$1[type]);
        while(cur){
            const errorCapturedHooks = cur.ec;
            if (errorCapturedHooks) for(let i = 0; i < errorCapturedHooks.length; i++){
                if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) return;
            }
            cur = cur.parent;
        }
        const appErrorHandler = instance.appContext.config.errorHandler;
        if (appErrorHandler) {
            (0, _reactivity.pauseTracking)();
            callWithErrorHandling(appErrorHandler, null, 10, [
                err,
                exposedInstance,
                errorInfo
            ]);
            (0, _reactivity.resetTracking)();
            return;
        }
    }
    logError(err, type, contextVNode, throwInDev);
}
function logError(err, type, contextVNode, throwInDev = true) {
    {
        const info = ErrorTypeStrings$1[type];
        if (contextVNode) pushWarningContext(contextVNode);
        warn$1(`Unhandled error${info ? ` during execution of ${info}` : ``}`);
        if (contextVNode) popWarningContext();
        if (throwInDev) throw err;
        else console.error(err);
    }
}
let isFlushing = false;
let isFlushPending = false;
const queue = [];
let flushIndex = 0;
const pendingPostFlushCbs = [];
let activePostFlushCbs = null;
let postFlushIndex = 0;
const resolvedPromise = /* @__PURE__ */ Promise.resolve();
let currentFlushPromise = null;
const RECURSION_LIMIT = 100;
function nextTick(fn) {
    const p = currentFlushPromise || resolvedPromise;
    return fn ? p.then(this ? fn.bind(this) : fn) : p;
}
function findInsertionIndex(id) {
    let start = flushIndex + 1;
    let end = queue.length;
    while(start < end){
        const middle = start + end >>> 1;
        const middleJob = queue[middle];
        const middleJobId = getId(middleJob);
        if (middleJobId < id || middleJobId === id && middleJob.pre) start = middle + 1;
        else end = middle;
    }
    return start;
}
function queueJob(job) {
    if (!queue.length || !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) {
        if (job.id == null) queue.push(job);
        else queue.splice(findInsertionIndex(job.id), 0, job);
        queueFlush();
    }
}
function queueFlush() {
    if (!isFlushing && !isFlushPending) {
        isFlushPending = true;
        currentFlushPromise = resolvedPromise.then(flushJobs);
    }
}
function invalidateJob(job) {
    const i = queue.indexOf(job);
    if (i > flushIndex) queue.splice(i, 1);
}
function queuePostFlushCb(cb) {
    if (!(0, _shared.isArray)(cb)) {
        if (!activePostFlushCbs || !activePostFlushCbs.includes(cb, cb.allowRecurse ? postFlushIndex + 1 : postFlushIndex)) pendingPostFlushCbs.push(cb);
    } else pendingPostFlushCbs.push(...cb);
    queueFlush();
}
function flushPreFlushCbs(instance, seen, i = isFlushing ? flushIndex + 1 : 0) {
    seen = seen || /* @__PURE__ */ new Map();
    for(; i < queue.length; i++){
        const cb = queue[i];
        if (cb && cb.pre) {
            if (instance && cb.id !== instance.uid) continue;
            if (checkRecursiveUpdates(seen, cb)) continue;
            queue.splice(i, 1);
            i--;
            cb();
        }
    }
}
function flushPostFlushCbs(seen) {
    if (pendingPostFlushCbs.length) {
        const deduped = [
            ...new Set(pendingPostFlushCbs)
        ].sort((a, b)=>getId(a) - getId(b));
        pendingPostFlushCbs.length = 0;
        if (activePostFlushCbs) {
            activePostFlushCbs.push(...deduped);
            return;
        }
        activePostFlushCbs = deduped;
        seen = seen || /* @__PURE__ */ new Map();
        for(postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++){
            const cb = activePostFlushCbs[postFlushIndex];
            if (checkRecursiveUpdates(seen, cb)) continue;
            if (cb.active !== false) cb();
        }
        activePostFlushCbs = null;
        postFlushIndex = 0;
    }
}
const getId = (job)=>job.id == null ? Infinity : job.id;
const comparator = (a, b)=>{
    const diff = getId(a) - getId(b);
    if (diff === 0) {
        if (a.pre && !b.pre) return -1;
        if (b.pre && !a.pre) return 1;
    }
    return diff;
};
function flushJobs(seen) {
    isFlushPending = false;
    isFlushing = true;
    seen = seen || /* @__PURE__ */ new Map();
    queue.sort(comparator);
    const check = (job)=>checkRecursiveUpdates(seen, job);
    try {
        for(flushIndex = 0; flushIndex < queue.length; flushIndex++){
            const job = queue[flushIndex];
            if (job && job.active !== false) {
                if (check(job)) continue;
                callWithErrorHandling(job, job.i, job.i ? 15 : 14);
            }
        }
    } finally{
        flushIndex = 0;
        queue.length = 0;
        flushPostFlushCbs(seen);
        isFlushing = false;
        currentFlushPromise = null;
        if (queue.length || pendingPostFlushCbs.length) flushJobs(seen);
    }
}
function checkRecursiveUpdates(seen, fn) {
    if (!seen.has(fn)) seen.set(fn, 1);
    else {
        const count = seen.get(fn);
        if (count > RECURSION_LIMIT) {
            const instance = fn.i;
            const componentName = instance && getComponentName(instance.type);
            handleError(`Maximum recursive updates exceeded${componentName ? ` in component <${componentName}>` : ``}. This means you have a reactive effect that is mutating its own dependencies and thus recursively triggering itself. Possible sources include component template, render function, updated hook or watcher source function.`, null, 10);
            return true;
        } else seen.set(fn, count + 1);
    }
}
let isHmrUpdating = false;
const hmrDirtyComponents = /* @__PURE__ */ new Map();
(0, _shared.getGlobalThis)().__VUE_HMR_RUNTIME__ = {
    createRecord: tryWrap(createRecord),
    rerender: tryWrap(rerender),
    reload: tryWrap(reload)
};
const map = /* @__PURE__ */ new Map();
function registerHMR(instance) {
    const id = instance.type.__hmrId;
    let record = map.get(id);
    if (!record) {
        createRecord(id, instance.type);
        record = map.get(id);
    }
    record.instances.add(instance);
}
function unregisterHMR(instance) {
    map.get(instance.type.__hmrId).instances.delete(instance);
}
function createRecord(id, initialDef) {
    if (map.has(id)) return false;
    map.set(id, {
        initialDef: normalizeClassComponent(initialDef),
        instances: /* @__PURE__ */ new Set()
    });
    return true;
}
function normalizeClassComponent(component) {
    return isClassComponent(component) ? component.__vccOpts : component;
}
function rerender(id, newRender) {
    const record = map.get(id);
    if (!record) return;
    record.initialDef.render = newRender;
    [
        ...record.instances
    ].forEach((instance)=>{
        if (newRender) {
            instance.render = newRender;
            normalizeClassComponent(instance.type).render = newRender;
        }
        instance.renderCache = [];
        isHmrUpdating = true;
        instance.effect.dirty = true;
        instance.update();
        isHmrUpdating = false;
    });
}
function reload(id, newComp) {
    const record = map.get(id);
    if (!record) return;
    newComp = normalizeClassComponent(newComp);
    updateComponentDef(record.initialDef, newComp);
    const instances = [
        ...record.instances
    ];
    for(let i = 0; i < instances.length; i++){
        const instance = instances[i];
        const oldComp = normalizeClassComponent(instance.type);
        let dirtyInstances = hmrDirtyComponents.get(oldComp);
        if (!dirtyInstances) {
            if (oldComp !== record.initialDef) updateComponentDef(oldComp, newComp);
            hmrDirtyComponents.set(oldComp, dirtyInstances = /* @__PURE__ */ new Set());
        }
        dirtyInstances.add(instance);
        instance.appContext.propsCache.delete(instance.type);
        instance.appContext.emitsCache.delete(instance.type);
        instance.appContext.optionsCache.delete(instance.type);
        if (instance.ceReload) {
            dirtyInstances.add(instance);
            instance.ceReload(newComp.styles);
            dirtyInstances.delete(instance);
        } else if (instance.parent) {
            instance.parent.effect.dirty = true;
            queueJob(()=>{
                instance.parent.update();
                dirtyInstances.delete(instance);
            });
        } else if (instance.appContext.reload) instance.appContext.reload();
        else if (typeof window !== "undefined") window.location.reload();
        else console.warn("[HMR] Root or manually mounted instance modified. Full reload required.");
    }
    queuePostFlushCb(()=>{
        hmrDirtyComponents.clear();
    });
}
function updateComponentDef(oldComp, newComp) {
    (0, _shared.extend)(oldComp, newComp);
    for(const key in oldComp)if (key !== "__file" && !(key in newComp)) delete oldComp[key];
}
function tryWrap(fn) {
    return (id, arg)=>{
        try {
            return fn(id, arg);
        } catch (e) {
            console.error(e);
            console.warn(`[HMR] Something went wrong during Vue component hot-reload. Full reload required.`);
        }
    };
}
let devtools$1;
let buffer = [];
let devtoolsNotInstalled = false;
function emit$1(event, ...args) {
    if (devtools$1) devtools$1.emit(event, ...args);
    else if (!devtoolsNotInstalled) buffer.push({
        event,
        args
    });
}
function setDevtoolsHook$1(hook, target) {
    var _a, _b;
    devtools$1 = hook;
    if (devtools$1) {
        devtools$1.enabled = true;
        buffer.forEach(({ event, args })=>devtools$1.emit(event, ...args));
        buffer = [];
    } else if (// handle late devtools injection - only do this if we are in an actual
    // browser environment to avoid the timer handle stalling test runner exit
    // (#4815)
    typeof window !== "undefined" && // some envs mock window but not fully
    window.HTMLElement && // also exclude jsdom
    // eslint-disable-next-line no-restricted-syntax
    !((_b = (_a = window.navigator) == null ? void 0 : _a.userAgent) == null ? void 0 : _b.includes("jsdom"))) {
        const replay = target.__VUE_DEVTOOLS_HOOK_REPLAY__ = target.__VUE_DEVTOOLS_HOOK_REPLAY__ || [];
        replay.push((newHook)=>{
            setDevtoolsHook$1(newHook, target);
        });
        setTimeout(()=>{
            if (!devtools$1) {
                target.__VUE_DEVTOOLS_HOOK_REPLAY__ = null;
                devtoolsNotInstalled = true;
                buffer = [];
            }
        }, 3e3);
    } else {
        devtoolsNotInstalled = true;
        buffer = [];
    }
}
function devtoolsInitApp(app, version) {
    emit$1("app:init" /* APP_INIT */ , app, version, {
        Fragment,
        Text,
        Comment,
        Static
    });
}
function devtoolsUnmountApp(app) {
    emit$1("app:unmount" /* APP_UNMOUNT */ , app);
}
const devtoolsComponentAdded = /* @__PURE__ */ createDevtoolsComponentHook("component:added" /* COMPONENT_ADDED */ );
const devtoolsComponentUpdated = /* @__PURE__ */ createDevtoolsComponentHook("component:updated" /* COMPONENT_UPDATED */ );
const _devtoolsComponentRemoved = /* @__PURE__ */ createDevtoolsComponentHook("component:removed" /* COMPONENT_REMOVED */ );
const devtoolsComponentRemoved = (component)=>{
    if (devtools$1 && typeof devtools$1.cleanupBuffer === "function" && // remove the component if it wasn't buffered
    !devtools$1.cleanupBuffer(component)) _devtoolsComponentRemoved(component);
};
/*! #__NO_SIDE_EFFECTS__ */ // @__NO_SIDE_EFFECTS__
function createDevtoolsComponentHook(hook) {
    return (component)=>{
        emit$1(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : void 0, component);
    };
}
const devtoolsPerfStart = /* @__PURE__ */ createDevtoolsPerformanceHook("perf:start" /* PERFORMANCE_START */ );
const devtoolsPerfEnd = /* @__PURE__ */ createDevtoolsPerformanceHook("perf:end" /* PERFORMANCE_END */ );
function createDevtoolsPerformanceHook(hook) {
    return (component, type, time)=>{
        emit$1(hook, component.appContext.app, component.uid, component, type, time);
    };
}
function devtoolsComponentEmit(component, event, params) {
    emit$1("component:emit" /* COMPONENT_EMIT */ , component.appContext.app, component, event, params);
}
let currentRenderingInstance = null;
let currentScopeId = null;
function setCurrentRenderingInstance(instance) {
    const prev = currentRenderingInstance;
    currentRenderingInstance = instance;
    currentScopeId = instance && instance.type.__scopeId || null;
    return prev;
}
function pushScopeId(id) {
    currentScopeId = id;
}
function popScopeId() {
    currentScopeId = null;
}
const withScopeId = (_id)=>withCtx;
function withCtx(fn, ctx = currentRenderingInstance, isNonScopedSlot) {
    if (!ctx) return fn;
    if (fn._n) return fn;
    const renderFnWithContext = (...args)=>{
        if (renderFnWithContext._d) setBlockTracking(-1);
        const prevInstance = setCurrentRenderingInstance(ctx);
        let res;
        try {
            res = fn(...args);
        } finally{
            setCurrentRenderingInstance(prevInstance);
            if (renderFnWithContext._d) setBlockTracking(1);
        }
        devtoolsComponentUpdated(ctx);
        return res;
    };
    renderFnWithContext._n = true;
    renderFnWithContext._c = true;
    renderFnWithContext._d = true;
    return renderFnWithContext;
}
function validateDirectiveName(name) {
    if ((0, _shared.isBuiltInDirective)(name)) warn$1("Do not use built-in directive ids as custom directive id: " + name);
}
function withDirectives(vnode, directives) {
    if (currentRenderingInstance === null) {
        warn$1(`withDirectives can only be used inside render functions.`);
        return vnode;
    }
    const instance = getComponentPublicInstance(currentRenderingInstance);
    const bindings = vnode.dirs || (vnode.dirs = []);
    for(let i = 0; i < directives.length; i++){
        let [dir, value, arg, modifiers = (0, _shared.EMPTY_OBJ)] = directives[i];
        if (dir) {
            if ((0, _shared.isFunction)(dir)) dir = {
                mounted: dir,
                updated: dir
            };
            if (dir.deep) traverse(value);
            bindings.push({
                dir,
                instance,
                value,
                oldValue: void 0,
                arg,
                modifiers
            });
        }
    }
    return vnode;
}
function invokeDirectiveHook(vnode, prevVNode, instance, name) {
    const bindings = vnode.dirs;
    const oldBindings = prevVNode && prevVNode.dirs;
    for(let i = 0; i < bindings.length; i++){
        const binding = bindings[i];
        if (oldBindings) binding.oldValue = oldBindings[i].value;
        let hook = binding.dir[name];
        if (hook) {
            (0, _reactivity.pauseTracking)();
            callWithAsyncErrorHandling(hook, instance, 8, [
                vnode.el,
                binding,
                vnode,
                prevVNode
            ]);
            (0, _reactivity.resetTracking)();
        }
    }
}
const leaveCbKey = Symbol("_leaveCb");
const enterCbKey = Symbol("_enterCb");
function useTransitionState() {
    const state = {
        isMounted: false,
        isLeaving: false,
        isUnmounting: false,
        leavingVNodes: /* @__PURE__ */ new Map()
    };
    onMounted(()=>{
        state.isMounted = true;
    });
    onBeforeUnmount(()=>{
        state.isUnmounting = true;
    });
    return state;
}
const TransitionHookValidator = [
    Function,
    Array
];
const BaseTransitionPropsValidators = {
    mode: String,
    appear: Boolean,
    persisted: Boolean,
    // enter
    onBeforeEnter: TransitionHookValidator,
    onEnter: TransitionHookValidator,
    onAfterEnter: TransitionHookValidator,
    onEnterCancelled: TransitionHookValidator,
    // leave
    onBeforeLeave: TransitionHookValidator,
    onLeave: TransitionHookValidator,
    onAfterLeave: TransitionHookValidator,
    onLeaveCancelled: TransitionHookValidator,
    // appear
    onBeforeAppear: TransitionHookValidator,
    onAppear: TransitionHookValidator,
    onAfterAppear: TransitionHookValidator,
    onAppearCancelled: TransitionHookValidator
};
const recursiveGetSubtree = (instance)=>{
    const subTree = instance.subTree;
    return subTree.component ? recursiveGetSubtree(subTree.component) : subTree;
};
const BaseTransitionImpl = {
    name: `BaseTransition`,
    props: BaseTransitionPropsValidators,
    setup (props, { slots }) {
        const instance = getCurrentInstance();
        const state = useTransitionState();
        return ()=>{
            const children = slots.default && getTransitionRawChildren(slots.default(), true);
            if (!children || !children.length) return;
            let child = children[0];
            if (children.length > 1) {
                let hasFound = false;
                for (const c of children)if (c.type !== Comment) {
                    if (hasFound) {
                        warn$1("<transition> can only be used on a single element or component. Use <transition-group> for lists.");
                        break;
                    }
                    child = c;
                    hasFound = true;
                }
            }
            const rawProps = (0, _reactivity.toRaw)(props);
            const { mode } = rawProps;
            if (mode && mode !== "in-out" && mode !== "out-in" && mode !== "default") warn$1(`invalid <transition> mode: ${mode}`);
            if (state.isLeaving) return emptyPlaceholder(child);
            const innerChild = getKeepAliveChild(child);
            if (!innerChild) return emptyPlaceholder(child);
            let enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance, // #11061, ensure enterHooks is fresh after clone
            (hooks)=>enterHooks = hooks);
            setTransitionHooks(innerChild, enterHooks);
            const oldChild = instance.subTree;
            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);
            if (oldInnerChild && oldInnerChild.type !== Comment && !isSameVNodeType(innerChild, oldInnerChild) && recursiveGetSubtree(instance).type !== Comment) {
                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);
                setTransitionHooks(oldInnerChild, leavingHooks);
                if (mode === "out-in" && innerChild.type !== Comment) {
                    state.isLeaving = true;
                    leavingHooks.afterLeave = ()=>{
                        state.isLeaving = false;
                        if (instance.update.active !== false) {
                            instance.effect.dirty = true;
                            instance.update();
                        }
                    };
                    return emptyPlaceholder(child);
                } else if (mode === "in-out" && innerChild.type !== Comment) leavingHooks.delayLeave = (el, earlyRemove, delayedLeave)=>{
                    const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);
                    leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;
                    el[leaveCbKey] = ()=>{
                        earlyRemove();
                        el[leaveCbKey] = void 0;
                        delete enterHooks.delayedLeave;
                    };
                    enterHooks.delayedLeave = delayedLeave;
                };
            }
            return child;
        };
    }
};
const BaseTransition = BaseTransitionImpl;
function getLeavingNodesForType(state, vnode) {
    const { leavingVNodes } = state;
    let leavingVNodesCache = leavingVNodes.get(vnode.type);
    if (!leavingVNodesCache) {
        leavingVNodesCache = /* @__PURE__ */ Object.create(null);
        leavingVNodes.set(vnode.type, leavingVNodesCache);
    }
    return leavingVNodesCache;
}
function resolveTransitionHooks(vnode, props, state, instance, postClone) {
    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;
    const key = String(vnode.key);
    const leavingVNodesCache = getLeavingNodesForType(state, vnode);
    const callHook = (hook, args)=>{
        hook && callWithAsyncErrorHandling(hook, instance, 9, args);
    };
    const callAsyncHook = (hook, args)=>{
        const done = args[1];
        callHook(hook, args);
        if ((0, _shared.isArray)(hook)) {
            if (hook.every((hook2)=>hook2.length <= 1)) done();
        } else if (hook.length <= 1) done();
    };
    const hooks = {
        mode,
        persisted,
        beforeEnter (el) {
            let hook = onBeforeEnter;
            if (!state.isMounted) {
                if (appear) hook = onBeforeAppear || onBeforeEnter;
                else return;
            }
            if (el[leaveCbKey]) el[leaveCbKey](true);
            const leavingVNode = leavingVNodesCache[key];
            if (leavingVNode && isSameVNodeType(vnode, leavingVNode) && leavingVNode.el[leaveCbKey]) leavingVNode.el[leaveCbKey]();
            callHook(hook, [
                el
            ]);
        },
        enter (el) {
            let hook = onEnter;
            let afterHook = onAfterEnter;
            let cancelHook = onEnterCancelled;
            if (!state.isMounted) {
                if (appear) {
                    hook = onAppear || onEnter;
                    afterHook = onAfterAppear || onAfterEnter;
                    cancelHook = onAppearCancelled || onEnterCancelled;
                } else return;
            }
            let called = false;
            const done = el[enterCbKey] = (cancelled)=>{
                if (called) return;
                called = true;
                if (cancelled) callHook(cancelHook, [
                    el
                ]);
                else callHook(afterHook, [
                    el
                ]);
                if (hooks.delayedLeave) hooks.delayedLeave();
                el[enterCbKey] = void 0;
            };
            if (hook) callAsyncHook(hook, [
                el,
                done
            ]);
            else done();
        },
        leave (el, remove) {
            const key2 = String(vnode.key);
            if (el[enterCbKey]) el[enterCbKey](true);
            if (state.isUnmounting) return remove();
            callHook(onBeforeLeave, [
                el
            ]);
            let called = false;
            const done = el[leaveCbKey] = (cancelled)=>{
                if (called) return;
                called = true;
                remove();
                if (cancelled) callHook(onLeaveCancelled, [
                    el
                ]);
                else callHook(onAfterLeave, [
                    el
                ]);
                el[leaveCbKey] = void 0;
                if (leavingVNodesCache[key2] === vnode) delete leavingVNodesCache[key2];
            };
            leavingVNodesCache[key2] = vnode;
            if (onLeave) callAsyncHook(onLeave, [
                el,
                done
            ]);
            else done();
        },
        clone (vnode2) {
            const hooks2 = resolveTransitionHooks(vnode2, props, state, instance, postClone);
            if (postClone) postClone(hooks2);
            return hooks2;
        }
    };
    return hooks;
}
function emptyPlaceholder(vnode) {
    if (isKeepAlive(vnode)) {
        vnode = cloneVNode(vnode);
        vnode.children = null;
        return vnode;
    }
}
function getKeepAliveChild(vnode) {
    if (!isKeepAlive(vnode)) return vnode;
    if (0, vnode.component) return vnode.component.subTree;
    const { shapeFlag, children } = vnode;
    if (children) {
        if (shapeFlag & 16) return children[0];
        if (shapeFlag & 32 && (0, _shared.isFunction)(children.default)) return children.default();
    }
}
function setTransitionHooks(vnode, hooks) {
    if (vnode.shapeFlag & 6 && vnode.component) setTransitionHooks(vnode.component.subTree, hooks);
    else if (vnode.shapeFlag & 128) {
        vnode.ssContent.transition = hooks.clone(vnode.ssContent);
        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);
    } else vnode.transition = hooks;
}
function getTransitionRawChildren(children, keepComment = false, parentKey) {
    let ret = [];
    let keyedFragmentCount = 0;
    for(let i = 0; i < children.length; i++){
        let child = children[i];
        const key = parentKey == null ? child.key : String(parentKey) + String(child.key != null ? child.key : i);
        if (child.type === Fragment) {
            if (child.patchFlag & 128) keyedFragmentCount++;
            ret = ret.concat(getTransitionRawChildren(child.children, keepComment, key));
        } else if (keepComment || child.type !== Comment) ret.push(key != null ? cloneVNode(child, {
            key
        }) : child);
    }
    if (keyedFragmentCount > 1) for(let i = 0; i < ret.length; i++)ret[i].patchFlag = -2;
    return ret;
}
/*! #__NO_SIDE_EFFECTS__ */ // @__NO_SIDE_EFFECTS__
function defineComponent(options, extraOptions) {
    return (0, _shared.isFunction)(options) ? // #8326: extend call and options.name access are considered side-effects
    // by Rollup, so we have to wrap it in a pure-annotated IIFE.
    /* @__PURE__ */ (()=>(0, _shared.extend)({
            name: options.name
        }, extraOptions, {
            setup: options
        }))() : options;
}
const isAsyncWrapper = (i)=>!!i.type.__asyncLoader;
/*! #__NO_SIDE_EFFECTS__ */ // @__NO_SIDE_EFFECTS__
function defineAsyncComponent(source) {
    if ((0, _shared.isFunction)(source)) source = {
        loader: source
    };
    const { loader, loadingComponent, errorComponent, delay = 200, timeout, // undefined = never times out
    suspensible = true, onError: userOnError } = source;
    let pendingRequest = null;
    let resolvedComp;
    let retries = 0;
    const retry = ()=>{
        retries++;
        pendingRequest = null;
        return load();
    };
    const load = ()=>{
        let thisRequest;
        return pendingRequest || (thisRequest = pendingRequest = loader().catch((err)=>{
            err = err instanceof Error ? err : new Error(String(err));
            if (userOnError) return new Promise((resolve, reject)=>{
                const userRetry = ()=>resolve(retry());
                const userFail = ()=>reject(err);
                userOnError(err, userRetry, userFail, retries + 1);
            });
            else throw err;
        }).then((comp)=>{
            if (thisRequest !== pendingRequest && pendingRequest) return pendingRequest;
            if (!comp) warn$1(`Async component loader resolved to undefined. If you are using retry(), make sure to return its return value.`);
            if (comp && (comp.__esModule || comp[Symbol.toStringTag] === "Module")) comp = comp.default;
            if (comp && !(0, _shared.isObject)(comp) && !(0, _shared.isFunction)(comp)) throw new Error(`Invalid async component load result: ${comp}`);
            resolvedComp = comp;
            return comp;
        }));
    };
    return defineComponent({
        name: "AsyncComponentWrapper",
        __asyncLoader: load,
        get __asyncResolved () {
            return resolvedComp;
        },
        setup () {
            const instance = currentInstance;
            if (resolvedComp) return ()=>createInnerComp(resolvedComp, instance);
            const onError = (err)=>{
                pendingRequest = null;
                handleError(err, instance, 13, !errorComponent);
            };
            if (suspensible && instance.suspense || isInSSRComponentSetup) return load().then((comp)=>{
                return ()=>createInnerComp(comp, instance);
            }).catch((err)=>{
                onError(err);
                return ()=>errorComponent ? createVNode(errorComponent, {
                        error: err
                    }) : null;
            });
            const loaded = (0, _reactivity.ref)(false);
            const error = (0, _reactivity.ref)();
            const delayed = (0, _reactivity.ref)(!!delay);
            if (delay) setTimeout(()=>{
                delayed.value = false;
            }, delay);
            if (timeout != null) setTimeout(()=>{
                if (!loaded.value && !error.value) {
                    const err = new Error(`Async component timed out after ${timeout}ms.`);
                    onError(err);
                    error.value = err;
                }
            }, timeout);
            load().then(()=>{
                loaded.value = true;
                if (instance.parent && isKeepAlive(instance.parent.vnode)) {
                    instance.parent.effect.dirty = true;
                    queueJob(instance.parent.update);
                }
            }).catch((err)=>{
                onError(err);
                error.value = err;
            });
            return ()=>{
                if (loaded.value && resolvedComp) return createInnerComp(resolvedComp, instance);
                else if (error.value && errorComponent) return createVNode(errorComponent, {
                    error: error.value
                });
                else if (loadingComponent && !delayed.value) return createVNode(loadingComponent);
            };
        }
    });
}
function createInnerComp(comp, parent) {
    const { ref: ref2, props, children, ce } = parent.vnode;
    const vnode = createVNode(comp, props, children);
    vnode.ref = ref2;
    vnode.ce = ce;
    delete parent.vnode.ce;
    return vnode;
}
const isKeepAlive = (vnode)=>vnode.type.__isKeepAlive;
const KeepAliveImpl = {
    name: `KeepAlive`,
    // Marker for special handling inside the renderer. We are not using a ===
    // check directly on KeepAlive in the renderer, because importing it directly
    // would prevent it from being tree-shaken.
    __isKeepAlive: true,
    props: {
        include: [
            String,
            RegExp,
            Array
        ],
        exclude: [
            String,
            RegExp,
            Array
        ],
        max: [
            String,
            Number
        ]
    },
    setup (props, { slots }) {
        const instance = getCurrentInstance();
        const sharedContext = instance.ctx;
        if (!sharedContext.renderer) return ()=>{
            const children = slots.default && slots.default();
            return children && children.length === 1 ? children[0] : children;
        };
        const cache = /* @__PURE__ */ new Map();
        const keys = /* @__PURE__ */ new Set();
        let current = null;
        instance.__v_cache = cache;
        const parentSuspense = instance.suspense;
        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;
        const storageContainer = createElement("div");
        sharedContext.activate = (vnode, container, anchor, namespace, optimized)=>{
            const instance2 = vnode.component;
            move(vnode, container, anchor, 0, parentSuspense);
            patch(instance2.vnode, vnode, container, anchor, instance2, parentSuspense, namespace, vnode.slotScopeIds, optimized);
            queuePostRenderEffect(()=>{
                instance2.isDeactivated = false;
                if (instance2.a) (0, _shared.invokeArrayFns)(instance2.a);
                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;
                if (vnodeHook) invokeVNodeHook(vnodeHook, instance2.parent, vnode);
            }, parentSuspense);
            devtoolsComponentAdded(instance2);
        };
        sharedContext.deactivate = (vnode)=>{
            const instance2 = vnode.component;
            invalidateMount(instance2.m);
            invalidateMount(instance2.a);
            move(vnode, storageContainer, null, 1, parentSuspense);
            queuePostRenderEffect(()=>{
                if (instance2.da) (0, _shared.invokeArrayFns)(instance2.da);
                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;
                if (vnodeHook) invokeVNodeHook(vnodeHook, instance2.parent, vnode);
                instance2.isDeactivated = true;
            }, parentSuspense);
            devtoolsComponentAdded(instance2);
        };
        function unmount(vnode) {
            resetShapeFlag(vnode);
            _unmount(vnode, instance, parentSuspense, true);
        }
        function pruneCache(filter) {
            cache.forEach((vnode, key)=>{
                const name = getComponentName(vnode.type);
                if (name && (!filter || !filter(name))) pruneCacheEntry(key);
            });
        }
        function pruneCacheEntry(key) {
            const cached = cache.get(key);
            if (cached && (!current || !isSameVNodeType(cached, current))) unmount(cached);
            else if (current) resetShapeFlag(current);
            cache.delete(key);
            keys.delete(key);
        }
        watch(()=>[
                props.include,
                props.exclude
            ], ([include, exclude])=>{
            include && pruneCache((name)=>matches(include, name));
            exclude && pruneCache((name)=>!matches(exclude, name));
        }, // prune post-render after `current` has been updated
        {
            flush: "post",
            deep: true
        });
        let pendingCacheKey = null;
        const cacheSubtree = ()=>{
            if (pendingCacheKey != null) {
                if (isSuspense(instance.subTree.type)) queuePostRenderEffect(()=>{
                    cache.set(pendingCacheKey, getInnerChild(instance.subTree));
                }, instance.subTree.suspense);
                else cache.set(pendingCacheKey, getInnerChild(instance.subTree));
            }
        };
        onMounted(cacheSubtree);
        onUpdated(cacheSubtree);
        onBeforeUnmount(()=>{
            cache.forEach((cached)=>{
                const { subTree, suspense } = instance;
                const vnode = getInnerChild(subTree);
                if (cached.type === vnode.type && cached.key === vnode.key) {
                    resetShapeFlag(vnode);
                    const da = vnode.component.da;
                    da && queuePostRenderEffect(da, suspense);
                    return;
                }
                unmount(cached);
            });
        });
        return ()=>{
            pendingCacheKey = null;
            if (!slots.default) return null;
            const children = slots.default();
            const rawVNode = children[0];
            if (children.length > 1) {
                warn$1(`KeepAlive should contain exactly one component child.`);
                current = null;
                return children;
            } else if (!isVNode(rawVNode) || !(rawVNode.shapeFlag & 4) && !(rawVNode.shapeFlag & 128)) {
                current = null;
                return rawVNode;
            }
            let vnode = getInnerChild(rawVNode);
            if (vnode.type === Comment) {
                current = null;
                return vnode;
            }
            const comp = vnode.type;
            const name = getComponentName(isAsyncWrapper(vnode) ? vnode.type.__asyncResolved || {} : comp);
            const { include, exclude, max } = props;
            if (include && (!name || !matches(include, name)) || exclude && name && matches(exclude, name)) {
                current = vnode;
                return rawVNode;
            }
            const key = vnode.key == null ? comp : vnode.key;
            const cachedVNode = cache.get(key);
            if (vnode.el) {
                vnode = cloneVNode(vnode);
                if (rawVNode.shapeFlag & 128) rawVNode.ssContent = vnode;
            }
            pendingCacheKey = key;
            if (cachedVNode) {
                vnode.el = cachedVNode.el;
                vnode.component = cachedVNode.component;
                if (vnode.transition) setTransitionHooks(vnode, vnode.transition);
                vnode.shapeFlag |= 512;
                keys.delete(key);
                keys.add(key);
            } else {
                keys.add(key);
                if (max && keys.size > parseInt(max, 10)) pruneCacheEntry(keys.values().next().value);
            }
            vnode.shapeFlag |= 256;
            current = vnode;
            return isSuspense(rawVNode.type) ? rawVNode : vnode;
        };
    }
};
const KeepAlive = KeepAliveImpl;
function matches(pattern, name) {
    if ((0, _shared.isArray)(pattern)) return pattern.some((p)=>matches(p, name));
    else if ((0, _shared.isString)(pattern)) return pattern.split(",").includes(name);
    else if ((0, _shared.isRegExp)(pattern)) return pattern.test(name);
    return false;
}
function onActivated(hook, target) {
    registerKeepAliveHook(hook, "a", target);
}
function onDeactivated(hook, target) {
    registerKeepAliveHook(hook, "da", target);
}
function registerKeepAliveHook(hook, type, target = currentInstance) {
    const wrappedHook = hook.__wdc || (hook.__wdc = ()=>{
        let current = target;
        while(current){
            if (current.isDeactivated) return;
            current = current.parent;
        }
        return hook();
    });
    injectHook(type, wrappedHook, target);
    if (target) {
        let current = target.parent;
        while(current && current.parent){
            if (isKeepAlive(current.parent.vnode)) injectToKeepAliveRoot(wrappedHook, type, target, current);
            current = current.parent;
        }
    }
}
function injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {
    const injected = injectHook(type, hook, keepAliveRoot, true);
    onUnmounted(()=>{
        (0, _shared.remove)(keepAliveRoot[type], injected);
    }, target);
}
function resetShapeFlag(vnode) {
    vnode.shapeFlag &= -257;
    vnode.shapeFlag &= -513;
}
function getInnerChild(vnode) {
    return vnode.shapeFlag & 128 ? vnode.ssContent : vnode;
}
function injectHook(type, hook, target = currentInstance, prepend = false) {
    if (target) {
        const hooks = target[type] || (target[type] = []);
        const wrappedHook = hook.__weh || (hook.__weh = (...args)=>{
            (0, _reactivity.pauseTracking)();
            const reset = setCurrentInstance(target);
            const res = callWithAsyncErrorHandling(hook, target, type, args);
            reset();
            (0, _reactivity.resetTracking)();
            return res;
        });
        if (prepend) hooks.unshift(wrappedHook);
        else hooks.push(wrappedHook);
        return wrappedHook;
    } else {
        const apiName = (0, _shared.toHandlerKey)(ErrorTypeStrings$1[type].replace(/ hook$/, ""));
        warn$1(`${apiName} is called when there is no active component instance to be associated with. Lifecycle injection APIs can only be used during execution of setup().` + ` If you are using async setup(), make sure to register lifecycle hooks before the first await statement.`);
    }
}
const createHook = (lifecycle)=>(hook, target = currentInstance)=>{
        if (!isInSSRComponentSetup || lifecycle === "sp") injectHook(lifecycle, (...args)=>hook(...args), target);
    };
const onBeforeMount = createHook("bm");
const onMounted = createHook("m");
const onBeforeUpdate = createHook("bu");
const onUpdated = createHook("u");
const onBeforeUnmount = createHook("bum");
const onUnmounted = createHook("um");
const onServerPrefetch = createHook("sp");
const onRenderTriggered = createHook("rtg");
const onRenderTracked = createHook("rtc");
function onErrorCaptured(hook, target = currentInstance) {
    injectHook("ec", hook, target);
}
const COMPONENTS = "components";
const DIRECTIVES = "directives";
function resolveComponent(name, maybeSelfReference) {
    return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;
}
const NULL_DYNAMIC_COMPONENT = Symbol.for("v-ndc");
function resolveDynamicComponent(component) {
    if ((0, _shared.isString)(component)) return resolveAsset(COMPONENTS, component, false) || component;
    else return component || NULL_DYNAMIC_COMPONENT;
}
function resolveDirective(name) {
    return resolveAsset(DIRECTIVES, name);
}
function resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {
    const instance = currentRenderingInstance || currentInstance;
    if (instance) {
        const Component = instance.type;
        if (type === COMPONENTS) {
            const selfName = getComponentName(Component, false);
            if (selfName && (selfName === name || selfName === (0, _shared.camelize)(name) || selfName === (0, _shared.capitalize)((0, _shared.camelize)(name)))) return Component;
        }
        const res = // local registration
        // check instance[type] first which is resolved for options API
        resolve(instance[type] || Component[type], name) || // global registration
        resolve(instance.appContext[type], name);
        if (!res && maybeSelfReference) return Component;
        if (warnMissing && !res) {
            const extra = type === COMPONENTS ? `
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement.` : ``;
            warn$1(`Failed to resolve ${type.slice(0, -1)}: ${name}${extra}`);
        }
        return res;
    } else warn$1(`resolve${(0, _shared.capitalize)(type.slice(0, -1))} can only be used in render() or setup().`);
}
function resolve(registry, name) {
    return registry && (registry[name] || registry[(0, _shared.camelize)(name)] || registry[(0, _shared.capitalize)((0, _shared.camelize)(name))]);
}
function renderList(source, renderItem, cache, index) {
    let ret;
    const cached = cache && cache[index];
    if ((0, _shared.isArray)(source) || (0, _shared.isString)(source)) {
        ret = new Array(source.length);
        for(let i = 0, l = source.length; i < l; i++)ret[i] = renderItem(source[i], i, void 0, cached && cached[i]);
    } else if (typeof source === "number") {
        if (!Number.isInteger(source)) warn$1(`The v-for range expect an integer value but got ${source}.`);
        ret = new Array(source);
        for(let i = 0; i < source; i++)ret[i] = renderItem(i + 1, i, void 0, cached && cached[i]);
    } else if ((0, _shared.isObject)(source)) {
        if (source[Symbol.iterator]) ret = Array.from(source, (item, i)=>renderItem(item, i, void 0, cached && cached[i]));
        else {
            const keys = Object.keys(source);
            ret = new Array(keys.length);
            for(let i = 0, l = keys.length; i < l; i++){
                const key = keys[i];
                ret[i] = renderItem(source[key], key, i, cached && cached[i]);
            }
        }
    } else ret = [];
    if (cache) cache[index] = ret;
    return ret;
}
function createSlots(slots, dynamicSlots) {
    for(let i = 0; i < dynamicSlots.length; i++){
        const slot = dynamicSlots[i];
        if ((0, _shared.isArray)(slot)) for(let j = 0; j < slot.length; j++)slots[slot[j].name] = slot[j].fn;
        else if (slot) slots[slot.name] = slot.key ? (...args)=>{
            const res = slot.fn(...args);
            if (res) res.key = slot.key;
            return res;
        } : slot.fn;
    }
    return slots;
}
function renderSlot(slots, name, props = {}, fallback, noSlotted) {
    if (currentRenderingInstance.isCE || currentRenderingInstance.parent && isAsyncWrapper(currentRenderingInstance.parent) && currentRenderingInstance.parent.isCE) {
        if (name !== "default") props.name = name;
        return createVNode("slot", props, fallback && fallback());
    }
    let slot = slots[name];
    if (slot && slot.length > 1) {
        warn$1(`SSR-optimized slot function detected in a non-SSR-optimized render function. You need to mark this component with $dynamic-slots in the parent template.`);
        slot = ()=>[];
    }
    if (slot && slot._c) slot._d = false;
    openBlock();
    const validSlotContent = slot && ensureValidVNode(slot(props));
    const rendered = createBlock(Fragment, {
        key: (props.key || // slot content array of a dynamic conditional slot may have a branch
        // key attached in the `createSlots` helper, respect that
        validSlotContent && validSlotContent.key || `_${name}`) + // #7256 force differentiate fallback content from actual content
        (!validSlotContent && fallback ? "_fb" : "")
    }, validSlotContent || (fallback ? fallback() : []), validSlotContent && slots._ === 1 ? 64 : -2);
    if (!noSlotted && rendered.scopeId) rendered.slotScopeIds = [
        rendered.scopeId + "-s"
    ];
    if (slot && slot._c) slot._d = true;
    return rendered;
}
function ensureValidVNode(vnodes) {
    return vnodes.some((child)=>{
        if (!isVNode(child)) return true;
        if (child.type === Comment) return false;
        if (child.type === Fragment && !ensureValidVNode(child.children)) return false;
        return true;
    }) ? vnodes : null;
}
function toHandlers(obj, preserveCaseIfNecessary) {
    const ret = {};
    if (!(0, _shared.isObject)(obj)) {
        warn$1(`v-on with no argument expects an object value.`);
        return ret;
    }
    for(const key in obj)ret[preserveCaseIfNecessary && /[A-Z]/.test(key) ? `on:${key}` : (0, _shared.toHandlerKey)(key)] = obj[key];
    return ret;
}
const getPublicInstance = (i)=>{
    if (!i) return null;
    if (isStatefulComponent(i)) return getComponentPublicInstance(i);
    return getPublicInstance(i.parent);
};
const publicPropertiesMap = // Move PURE marker to new line to workaround compiler discarding it
// due to type annotation
/* @__PURE__ */ (0, _shared.extend)(/* @__PURE__ */ Object.create(null), {
    $: (i)=>i,
    $el: (i)=>i.vnode.el,
    $data: (i)=>i.data,
    $props: (i)=>(0, _reactivity.shallowReadonly)(i.props),
    $attrs: (i)=>(0, _reactivity.shallowReadonly)(i.attrs),
    $slots: (i)=>(0, _reactivity.shallowReadonly)(i.slots),
    $refs: (i)=>(0, _reactivity.shallowReadonly)(i.refs),
    $parent: (i)=>getPublicInstance(i.parent),
    $root: (i)=>getPublicInstance(i.root),
    $emit: (i)=>i.emit,
    $options: (i)=>__VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type,
    $forceUpdate: (i)=>i.f || (i.f = ()=>{
            i.effect.dirty = true;
            queueJob(i.update);
        }),
    $nextTick: (i)=>i.n || (i.n = nextTick.bind(i.proxy)),
    $watch: (i)=>__VUE_OPTIONS_API__ ? instanceWatch.bind(i) : (0, _shared.NOOP)
});
const isReservedPrefix = (key)=>key === "_" || key === "$";
const hasSetupBinding = (state, key)=>state !== (0, _shared.EMPTY_OBJ) && !state.__isScriptSetup && (0, _shared.hasOwn)(state, key);
const PublicInstanceProxyHandlers = {
    get ({ _: instance }, key) {
        if (key === "__v_skip") return true;
        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;
        if (key === "__isVue") return true;
        let normalizedProps;
        if (key[0] !== "$") {
            const n = accessCache[key];
            if (n !== void 0) switch(n){
                case 1 /* SETUP */ :
                    return setupState[key];
                case 2 /* DATA */ :
                    return data[key];
                case 4 /* CONTEXT */ :
                    return ctx[key];
                case 3 /* PROPS */ :
                    return props[key];
            }
            else if (hasSetupBinding(setupState, key)) {
                accessCache[key] = 1 /* SETUP */ ;
                return setupState[key];
            } else if (data !== (0, _shared.EMPTY_OBJ) && (0, _shared.hasOwn)(data, key)) {
                accessCache[key] = 2 /* DATA */ ;
                return data[key];
            } else if (// only cache other properties when instance has declared (thus stable)
            // props
            (normalizedProps = instance.propsOptions[0]) && (0, _shared.hasOwn)(normalizedProps, key)) {
                accessCache[key] = 3 /* PROPS */ ;
                return props[key];
            } else if (ctx !== (0, _shared.EMPTY_OBJ) && (0, _shared.hasOwn)(ctx, key)) {
                accessCache[key] = 4 /* CONTEXT */ ;
                return ctx[key];
            } else if (!__VUE_OPTIONS_API__ || shouldCacheAccess) accessCache[key] = 0 /* OTHER */ ;
        }
        const publicGetter = publicPropertiesMap[key];
        let cssModule, globalProperties;
        if (publicGetter) {
            if (key === "$attrs") {
                (0, _reactivity.track)(instance.attrs, "get", "");
                markAttrsAccessed();
            } else if (key === "$slots") (0, _reactivity.track)(instance, "get", key);
            return publicGetter(instance);
        } else if (// css module (injected by vue-loader)
        (cssModule = type.__cssModules) && (cssModule = cssModule[key])) return cssModule;
        else if (ctx !== (0, _shared.EMPTY_OBJ) && (0, _shared.hasOwn)(ctx, key)) {
            accessCache[key] = 4 /* CONTEXT */ ;
            return ctx[key];
        } else if (// global properties
        globalProperties = appContext.config.globalProperties, (0, _shared.hasOwn)(globalProperties, key)) return globalProperties[key];
        else if (currentRenderingInstance && (!(0, _shared.isString)(key) || // #1091 avoid internal isRef/isVNode checks on component instance leading
        // to infinite warning loop
        key.indexOf("__v") !== 0)) {
            if (data !== (0, _shared.EMPTY_OBJ) && isReservedPrefix(key[0]) && (0, _shared.hasOwn)(data, key)) warn$1(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved character ("$" or "_") and is not proxied on the render context.`);
            else if (instance === currentRenderingInstance) warn$1(`Property ${JSON.stringify(key)} was accessed during render but is not defined on instance.`);
        }
    },
    set ({ _: instance }, key, value) {
        const { data, setupState, ctx } = instance;
        if (hasSetupBinding(setupState, key)) {
            setupState[key] = value;
            return true;
        } else if ((0, setupState.__isScriptSetup) && (0, _shared.hasOwn)(setupState, key)) {
            warn$1(`Cannot mutate <script setup> binding "${key}" from Options API.`);
            return false;
        } else if (data !== (0, _shared.EMPTY_OBJ) && (0, _shared.hasOwn)(data, key)) {
            data[key] = value;
            return true;
        } else if ((0, _shared.hasOwn)(instance.props, key)) {
            warn$1(`Attempting to mutate prop "${key}". Props are readonly.`);
            return false;
        }
        if (key[0] === "$" && key.slice(1) in instance) {
            warn$1(`Attempting to mutate public property "${key}". Properties starting with $ are reserved and readonly.`);
            return false;
        } else if (key in instance.appContext.config.globalProperties) Object.defineProperty(ctx, key, {
            enumerable: true,
            configurable: true,
            value
        });
        else ctx[key] = value;
        return true;
    },
    has ({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {
        let normalizedProps;
        return !!accessCache[key] || data !== (0, _shared.EMPTY_OBJ) && (0, _shared.hasOwn)(data, key) || hasSetupBinding(setupState, key) || (normalizedProps = propsOptions[0]) && (0, _shared.hasOwn)(normalizedProps, key) || (0, _shared.hasOwn)(ctx, key) || (0, _shared.hasOwn)(publicPropertiesMap, key) || (0, _shared.hasOwn)(appContext.config.globalProperties, key);
    },
    defineProperty (target, key, descriptor) {
        if (descriptor.get != null) target._.accessCache[key] = 0;
        else if ((0, _shared.hasOwn)(descriptor, "value")) this.set(target, key, descriptor.value, null);
        return Reflect.defineProperty(target, key, descriptor);
    }
};
PublicInstanceProxyHandlers.ownKeys = (target)=>{
    warn$1(`Avoid app logic that relies on enumerating keys on a component instance. The keys will be empty in production mode to avoid performance overhead.`);
    return Reflect.ownKeys(target);
};
const RuntimeCompiledPublicInstanceProxyHandlers = /* @__PURE__ */ (0, _shared.extend)({}, PublicInstanceProxyHandlers, {
    get (target, key) {
        if (key === Symbol.unscopables) return;
        return PublicInstanceProxyHandlers.get(target, key, target);
    },
    has (_, key) {
        const has = key[0] !== "_" && !(0, _shared.isGloballyAllowed)(key);
        if (!has && PublicInstanceProxyHandlers.has(_, key)) warn$1(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);
        return has;
    }
});
function createDevRenderContext(instance) {
    const target = {};
    Object.defineProperty(target, `_`, {
        configurable: true,
        enumerable: false,
        get: ()=>instance
    });
    Object.keys(publicPropertiesMap).forEach((key)=>{
        Object.defineProperty(target, key, {
            configurable: true,
            enumerable: false,
            get: ()=>publicPropertiesMap[key](instance),
            // intercepted by the proxy so no need for implementation,
            // but needed to prevent set errors
            set: (0, _shared.NOOP)
        });
    });
    return target;
}
function exposePropsOnRenderContext(instance) {
    const { ctx, propsOptions: [propsOptions] } = instance;
    if (propsOptions) Object.keys(propsOptions).forEach((key)=>{
        Object.defineProperty(ctx, key, {
            enumerable: true,
            configurable: true,
            get: ()=>instance.props[key],
            set: (0, _shared.NOOP)
        });
    });
}
function exposeSetupStateOnRenderContext(instance) {
    const { ctx, setupState } = instance;
    Object.keys((0, _reactivity.toRaw)(setupState)).forEach((key)=>{
        if (!setupState.__isScriptSetup) {
            if (isReservedPrefix(key[0])) {
                warn$1(`setup() return property ${JSON.stringify(key)} should not start with "$" or "_" which are reserved prefixes for Vue internals.`);
                return;
            }
            Object.defineProperty(ctx, key, {
                enumerable: true,
                configurable: true,
                get: ()=>setupState[key],
                set: (0, _shared.NOOP)
            });
        }
    });
}
const warnRuntimeUsage = (method)=>warn$1(`${method}() is a compiler-hint helper that is only usable inside <script setup> of a single file component. Its arguments should be compiled away and passing it at runtime has no effect.`);
function defineProps() {
    warnRuntimeUsage(`defineProps`);
    return null;
}
function defineEmits() {
    warnRuntimeUsage(`defineEmits`);
    return null;
}
function defineExpose(exposed) {
    warnRuntimeUsage(`defineExpose`);
}
function defineOptions(options) {
    warnRuntimeUsage(`defineOptions`);
}
function defineSlots() {
    warnRuntimeUsage(`defineSlots`);
    return null;
}
function defineModel() {
    warnRuntimeUsage("defineModel");
}
function withDefaults(props, defaults) {
    warnRuntimeUsage(`withDefaults`);
    return null;
}
function useSlots() {
    return getContext().slots;
}
function useAttrs() {
    return getContext().attrs;
}
function getContext() {
    const i = getCurrentInstance();
    if (!i) warn$1(`useContext() called without active instance.`);
    return i.setupContext || (i.setupContext = createSetupContext(i));
}
function normalizePropsOrEmits(props) {
    return (0, _shared.isArray)(props) ? props.reduce((normalized, p)=>(normalized[p] = null, normalized), {}) : props;
}
function mergeDefaults(raw, defaults) {
    const props = normalizePropsOrEmits(raw);
    for(const key in defaults){
        if (key.startsWith("__skip")) continue;
        let opt = props[key];
        if (opt) {
            if ((0, _shared.isArray)(opt) || (0, _shared.isFunction)(opt)) opt = props[key] = {
                type: opt,
                default: defaults[key]
            };
            else opt.default = defaults[key];
        } else if (opt === null) opt = props[key] = {
            default: defaults[key]
        };
        else warn$1(`props default key "${key}" has no corresponding declaration.`);
        if (opt && defaults[`__skip_${key}`]) opt.skipFactory = true;
    }
    return props;
}
function mergeModels(a, b) {
    if (!a || !b) return a || b;
    if ((0, _shared.isArray)(a) && (0, _shared.isArray)(b)) return a.concat(b);
    return (0, _shared.extend)({}, normalizePropsOrEmits(a), normalizePropsOrEmits(b));
}
function createPropsRestProxy(props, excludedKeys) {
    const ret = {};
    for(const key in props)if (!excludedKeys.includes(key)) Object.defineProperty(ret, key, {
        enumerable: true,
        get: ()=>props[key]
    });
    return ret;
}
function withAsyncContext(getAwaitable) {
    const ctx = getCurrentInstance();
    if (!ctx) warn$1(`withAsyncContext called without active current instance. This is likely a bug.`);
    let awaitable = getAwaitable();
    unsetCurrentInstance();
    if ((0, _shared.isPromise)(awaitable)) awaitable = awaitable.catch((e)=>{
        setCurrentInstance(ctx);
        throw e;
    });
    return [
        awaitable,
        ()=>setCurrentInstance(ctx)
    ];
}
function createDuplicateChecker() {
    const cache = /* @__PURE__ */ Object.create(null);
    return (type, key)=>{
        if (cache[key]) warn$1(`${type} property "${key}" is already defined in ${cache[key]}.`);
        else cache[key] = type;
    };
}
let shouldCacheAccess = true;
function applyOptions(instance) {
    const options = resolveMergedOptions(instance);
    const publicThis = instance.proxy;
    const ctx = instance.ctx;
    shouldCacheAccess = false;
    if (options.beforeCreate) callHook(options.beforeCreate, instance, "bc");
    const { // state
    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, // lifecycle
    created, beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured, serverPrefetch, // public API
    expose, inheritAttrs, // assets
    components, directives, filters } = options;
    const checkDuplicateProperties = createDuplicateChecker();
    {
        const [propsOptions] = instance.propsOptions;
        if (propsOptions) for(const key in propsOptions)checkDuplicateProperties("Props" /* PROPS */ , key);
    }
    if (injectOptions) resolveInjections(injectOptions, ctx, checkDuplicateProperties);
    if (methods) for(const key in methods){
        const methodHandler = methods[key];
        if ((0, _shared.isFunction)(methodHandler)) {
            Object.defineProperty(ctx, key, {
                value: methodHandler.bind(publicThis),
                configurable: true,
                enumerable: true,
                writable: true
            });
            checkDuplicateProperties("Methods" /* METHODS */ , key);
        } else warn$1(`Method "${key}" has type "${typeof methodHandler}" in the component definition. Did you reference the function correctly?`);
    }
    if (dataOptions) {
        if (!(0, _shared.isFunction)(dataOptions)) warn$1(`The data option must be a function. Plain object usage is no longer supported.`);
        const data = dataOptions.call(publicThis, publicThis);
        if ((0, _shared.isPromise)(data)) warn$1(`data() returned a Promise - note data() cannot be async; If you intend to perform data fetching before component renders, use async setup() + <Suspense>.`);
        if (!(0, _shared.isObject)(data)) warn$1(`data() should return an object.`);
        else {
            instance.data = (0, _reactivity.reactive)(data);
            for(const key in data){
                checkDuplicateProperties("Data" /* DATA */ , key);
                if (!isReservedPrefix(key[0])) Object.defineProperty(ctx, key, {
                    configurable: true,
                    enumerable: true,
                    get: ()=>data[key],
                    set: (0, _shared.NOOP)
                });
            }
        }
    }
    shouldCacheAccess = true;
    if (computedOptions) for(const key in computedOptions){
        const opt = computedOptions[key];
        const get = (0, _shared.isFunction)(opt) ? opt.bind(publicThis, publicThis) : (0, _shared.isFunction)(opt.get) ? opt.get.bind(publicThis, publicThis) : (0, _shared.NOOP);
        if (get === (0, _shared.NOOP)) warn$1(`Computed property "${key}" has no getter.`);
        const set = !(0, _shared.isFunction)(opt) && (0, _shared.isFunction)(opt.set) ? opt.set.bind(publicThis) : ()=>{
            warn$1(`Write operation failed: computed property "${key}" is readonly.`);
        };
        const c = computed({
            get,
            set
        });
        Object.defineProperty(ctx, key, {
            enumerable: true,
            configurable: true,
            get: ()=>c.value,
            set: (v1)=>c.value = v1
        });
        checkDuplicateProperties("Computed" /* COMPUTED */ , key);
    }
    if (watchOptions) for(const key in watchOptions)createWatcher(watchOptions[key], ctx, publicThis, key);
    if (provideOptions) {
        const provides = (0, _shared.isFunction)(provideOptions) ? provideOptions.call(publicThis) : provideOptions;
        Reflect.ownKeys(provides).forEach((key)=>{
            provide(key, provides[key]);
        });
    }
    if (created) callHook(created, instance, "c");
    function registerLifecycleHook(register, hook) {
        if ((0, _shared.isArray)(hook)) hook.forEach((_hook)=>register(_hook.bind(publicThis)));
        else if (hook) register(hook.bind(publicThis));
    }
    registerLifecycleHook(onBeforeMount, beforeMount);
    registerLifecycleHook(onMounted, mounted);
    registerLifecycleHook(onBeforeUpdate, beforeUpdate);
    registerLifecycleHook(onUpdated, updated);
    registerLifecycleHook(onActivated, activated);
    registerLifecycleHook(onDeactivated, deactivated);
    registerLifecycleHook(onErrorCaptured, errorCaptured);
    registerLifecycleHook(onRenderTracked, renderTracked);
    registerLifecycleHook(onRenderTriggered, renderTriggered);
    registerLifecycleHook(onBeforeUnmount, beforeUnmount);
    registerLifecycleHook(onUnmounted, unmounted);
    registerLifecycleHook(onServerPrefetch, serverPrefetch);
    if ((0, _shared.isArray)(expose)) {
        if (expose.length) {
            const exposed = instance.exposed || (instance.exposed = {});
            expose.forEach((key)=>{
                Object.defineProperty(exposed, key, {
                    get: ()=>publicThis[key],
                    set: (val)=>publicThis[key] = val
                });
            });
        } else if (!instance.exposed) instance.exposed = {};
    }
    if (render && instance.render === (0, _shared.NOOP)) instance.render = render;
    if (inheritAttrs != null) instance.inheritAttrs = inheritAttrs;
    if (components) instance.components = components;
    if (directives) instance.directives = directives;
}
function resolveInjections(injectOptions, ctx, checkDuplicateProperties = (0, _shared.NOOP)) {
    if ((0, _shared.isArray)(injectOptions)) injectOptions = normalizeInject(injectOptions);
    for(const key in injectOptions){
        const opt = injectOptions[key];
        let injected;
        if ((0, _shared.isObject)(opt)) {
            if ("default" in opt) injected = inject(opt.from || key, opt.default, true);
            else injected = inject(opt.from || key);
        } else injected = inject(opt);
        if ((0, _reactivity.isRef)(injected)) Object.defineProperty(ctx, key, {
            enumerable: true,
            configurable: true,
            get: ()=>injected.value,
            set: (v1)=>injected.value = v1
        });
        else ctx[key] = injected;
        checkDuplicateProperties("Inject" /* INJECT */ , key);
    }
}
function callHook(hook, instance, type) {
    callWithAsyncErrorHandling((0, _shared.isArray)(hook) ? hook.map((h)=>h.bind(instance.proxy)) : hook.bind(instance.proxy), instance, type);
}
function createWatcher(raw, ctx, publicThis, key) {
    const getter = key.includes(".") ? createPathGetter(publicThis, key) : ()=>publicThis[key];
    if ((0, _shared.isString)(raw)) {
        const handler = ctx[raw];
        if ((0, _shared.isFunction)(handler)) watch(getter, handler);
        else warn$1(`Invalid watch handler specified by key "${raw}"`, handler);
    } else if ((0, _shared.isFunction)(raw)) watch(getter, raw.bind(publicThis));
    else if ((0, _shared.isObject)(raw)) {
        if ((0, _shared.isArray)(raw)) raw.forEach((r)=>createWatcher(r, ctx, publicThis, key));
        else {
            const handler = (0, _shared.isFunction)(raw.handler) ? raw.handler.bind(publicThis) : ctx[raw.handler];
            if ((0, _shared.isFunction)(handler)) watch(getter, handler, raw);
            else warn$1(`Invalid watch handler specified by key "${raw.handler}"`, handler);
        }
    } else warn$1(`Invalid watch option: "${key}"`, raw);
}
function resolveMergedOptions(instance) {
    const base = instance.type;
    const { mixins, extends: extendsOptions } = base;
    const { mixins: globalMixins, optionsCache: cache, config: { optionMergeStrategies } } = instance.appContext;
    const cached = cache.get(base);
    let resolved;
    if (cached) resolved = cached;
    else if (!globalMixins.length && !mixins && !extendsOptions) resolved = base;
    else {
        resolved = {};
        if (globalMixins.length) globalMixins.forEach((m)=>mergeOptions(resolved, m, optionMergeStrategies, true));
        mergeOptions(resolved, base, optionMergeStrategies);
    }
    if ((0, _shared.isObject)(base)) cache.set(base, resolved);
    return resolved;
}
function mergeOptions(to, from, strats, asMixin = false) {
    const { mixins, extends: extendsOptions } = from;
    if (extendsOptions) mergeOptions(to, extendsOptions, strats, true);
    if (mixins) mixins.forEach((m)=>mergeOptions(to, m, strats, true));
    for(const key in from)if (asMixin && key === "expose") warn$1(`"expose" option is ignored when declared in mixins or extends. It should only be declared in the base component itself.`);
    else {
        const strat = internalOptionMergeStrats[key] || strats && strats[key];
        to[key] = strat ? strat(to[key], from[key]) : from[key];
    }
    return to;
}
const internalOptionMergeStrats = {
    data: mergeDataFn,
    props: mergeEmitsOrPropsOptions,
    emits: mergeEmitsOrPropsOptions,
    // objects
    methods: mergeObjectOptions,
    computed: mergeObjectOptions,
    // lifecycle
    beforeCreate: mergeAsArray,
    created: mergeAsArray,
    beforeMount: mergeAsArray,
    mounted: mergeAsArray,
    beforeUpdate: mergeAsArray,
    updated: mergeAsArray,
    beforeDestroy: mergeAsArray,
    beforeUnmount: mergeAsArray,
    destroyed: mergeAsArray,
    unmounted: mergeAsArray,
    activated: mergeAsArray,
    deactivated: mergeAsArray,
    errorCaptured: mergeAsArray,
    serverPrefetch: mergeAsArray,
    // assets
    components: mergeObjectOptions,
    directives: mergeObjectOptions,
    // watch
    watch: mergeWatchOptions,
    // provide / inject
    provide: mergeDataFn,
    inject: mergeInject
};
function mergeDataFn(to, from) {
    if (!from) return to;
    if (!to) return from;
    return function mergedDataFn() {
        return (0, _shared.extend)((0, _shared.isFunction)(to) ? to.call(this, this) : to, (0, _shared.isFunction)(from) ? from.call(this, this) : from);
    };
}
function mergeInject(to, from) {
    return mergeObjectOptions(normalizeInject(to), normalizeInject(from));
}
function normalizeInject(raw) {
    if ((0, _shared.isArray)(raw)) {
        const res = {};
        for(let i = 0; i < raw.length; i++)res[raw[i]] = raw[i];
        return res;
    }
    return raw;
}
function mergeAsArray(to, from) {
    return to ? [
        ...new Set([].concat(to, from))
    ] : from;
}
function mergeObjectOptions(to, from) {
    return to ? (0, _shared.extend)(/* @__PURE__ */ Object.create(null), to, from) : from;
}
function mergeEmitsOrPropsOptions(to, from) {
    if (to) {
        if ((0, _shared.isArray)(to) && (0, _shared.isArray)(from)) return [
            .../* @__PURE__ */ new Set([
                ...to,
                ...from
            ])
        ];
        return (0, _shared.extend)(/* @__PURE__ */ Object.create(null), normalizePropsOrEmits(to), normalizePropsOrEmits(from != null ? from : {}));
    } else return from;
}
function mergeWatchOptions(to, from) {
    if (!to) return from;
    if (!from) return to;
    const merged = (0, _shared.extend)(/* @__PURE__ */ Object.create(null), to);
    for(const key in from)merged[key] = mergeAsArray(to[key], from[key]);
    return merged;
}
function createAppContext() {
    return {
        app: null,
        config: {
            isNativeTag: (0, _shared.NO),
            performance: false,
            globalProperties: {},
            optionMergeStrategies: {},
            errorHandler: void 0,
            warnHandler: void 0,
            compilerOptions: {}
        },
        mixins: [],
        components: {},
        directives: {},
        provides: /* @__PURE__ */ Object.create(null),
        optionsCache: /* @__PURE__ */ new WeakMap(),
        propsCache: /* @__PURE__ */ new WeakMap(),
        emitsCache: /* @__PURE__ */ new WeakMap()
    };
}
let uid$1 = 0;
function createAppAPI(render, hydrate) {
    return function createApp(rootComponent, rootProps = null) {
        if (!(0, _shared.isFunction)(rootComponent)) rootComponent = (0, _shared.extend)({}, rootComponent);
        if (rootProps != null && !(0, _shared.isObject)(rootProps)) {
            warn$1(`root props passed to app.mount() must be an object.`);
            rootProps = null;
        }
        const context = createAppContext();
        const installedPlugins = /* @__PURE__ */ new WeakSet();
        let isMounted = false;
        const app = context.app = {
            _uid: uid$1++,
            _component: rootComponent,
            _props: rootProps,
            _container: null,
            _context: context,
            _instance: null,
            version,
            get config () {
                return context.config;
            },
            set config (v){
                warn$1(`app.config cannot be replaced. Modify individual options instead.`);
            },
            use (plugin, ...options) {
                if (installedPlugins.has(plugin)) warn$1(`Plugin has already been applied to target app.`);
                else if (plugin && (0, _shared.isFunction)(plugin.install)) {
                    installedPlugins.add(plugin);
                    plugin.install(app, ...options);
                } else if ((0, _shared.isFunction)(plugin)) {
                    installedPlugins.add(plugin);
                    plugin(app, ...options);
                } else warn$1(`A plugin must either be a function or an object with an "install" function.`);
                return app;
            },
            mixin (mixin) {
                if (__VUE_OPTIONS_API__) {
                    if (!context.mixins.includes(mixin)) context.mixins.push(mixin);
                    else warn$1("Mixin has already been applied to target app" + (mixin.name ? `: ${mixin.name}` : ""));
                } else warn$1("Mixins are only available in builds supporting Options API");
                return app;
            },
            component (name, component) {
                validateComponentName(name, context.config);
                if (!component) return context.components[name];
                if (0, context.components[name]) warn$1(`Component "${name}" has already been registered in target app.`);
                context.components[name] = component;
                return app;
            },
            directive (name, directive) {
                validateDirectiveName(name);
                if (!directive) return context.directives[name];
                if (0, context.directives[name]) warn$1(`Directive "${name}" has already been registered in target app.`);
                context.directives[name] = directive;
                return app;
            },
            mount (rootContainer, isHydrate, namespace) {
                if (!isMounted) {
                    if (0, rootContainer.__vue_app__) warn$1(`There is already an app instance mounted on the host container.
 If you want to mount another app on the same host container, you need to unmount the previous app by calling \`app.unmount()\` first.`);
                    const vnode = createVNode(rootComponent, rootProps);
                    vnode.appContext = context;
                    if (namespace === true) namespace = "svg";
                    else if (namespace === false) namespace = void 0;
                    context.reload = ()=>{
                        render(cloneVNode(vnode), rootContainer, namespace);
                    };
                    if (isHydrate && hydrate) hydrate(vnode, rootContainer);
                    else render(vnode, rootContainer, namespace);
                    isMounted = true;
                    app._container = rootContainer;
                    rootContainer.__vue_app__ = app;
                    app._instance = vnode.component;
                    devtoolsInitApp(app, version);
                    return getComponentPublicInstance(vnode.component);
                } else warn$1(`App has already been mounted.
If you want to remount the same app, move your app creation logic into a factory function and create fresh app instances for each mount - e.g. \`const createMyApp = () => createApp(App)\``);
            },
            unmount () {
                if (isMounted) {
                    render(null, app._container);
                    app._instance = null;
                    devtoolsUnmountApp(app);
                    delete app._container.__vue_app__;
                } else warn$1(`Cannot unmount an app that is not mounted.`);
            },
            provide (key, value) {
                if (key in context.provides) warn$1(`App already provides property with key "${String(key)}". It will be overwritten with the new value.`);
                context.provides[key] = value;
                return app;
            },
            runWithContext (fn) {
                const lastApp = currentApp;
                currentApp = app;
                try {
                    return fn();
                } finally{
                    currentApp = lastApp;
                }
            }
        };
        return app;
    };
}
let currentApp = null;
function provide(key, value) {
    if (!currentInstance) warn$1(`provide() can only be used inside setup().`);
    else {
        let provides = currentInstance.provides;
        const parentProvides = currentInstance.parent && currentInstance.parent.provides;
        if (parentProvides === provides) provides = currentInstance.provides = Object.create(parentProvides);
        provides[key] = value;
    }
}
function inject(key, defaultValue, treatDefaultAsFactory = false) {
    const instance = currentInstance || currentRenderingInstance;
    if (instance || currentApp) {
        const provides = currentApp ? currentApp._context.provides : instance ? instance.parent == null ? instance.vnode.appContext && instance.vnode.appContext.provides : instance.parent.provides : void 0;
        if (provides && key in provides) return provides[key];
        else if (arguments.length > 1) return treatDefaultAsFactory && (0, _shared.isFunction)(defaultValue) ? defaultValue.call(instance && instance.proxy) : defaultValue;
        else warn$1(`injection "${String(key)}" not found.`);
    } else warn$1(`inject() can only be used inside setup() or functional components.`);
}
function hasInjectionContext() {
    return !!(currentInstance || currentRenderingInstance || currentApp);
}
const internalObjectProto = {};
const createInternalObject = ()=>Object.create(internalObjectProto);
const isInternalObject = (obj)=>Object.getPrototypeOf(obj) === internalObjectProto;
function initProps(instance, rawProps, isStateful, isSSR = false) {
    const props = {};
    const attrs = createInternalObject();
    instance.propsDefaults = /* @__PURE__ */ Object.create(null);
    setFullProps(instance, rawProps, props, attrs);
    for(const key in instance.propsOptions[0])if (!(key in props)) props[key] = void 0;
    validateProps(rawProps || {}, props, instance);
    if (isStateful) instance.props = isSSR ? props : (0, _reactivity.shallowReactive)(props);
    else if (!instance.type.props) instance.props = attrs;
    else instance.props = props;
    instance.attrs = attrs;
}
function isInHmrContext(instance) {
    while(instance){
        if (instance.type.__hmrId) return true;
        instance = instance.parent;
    }
}
function updateProps(instance, rawProps, rawPrevProps, optimized) {
    const { props, attrs, vnode: { patchFlag } } = instance;
    const rawCurrentProps = (0, _reactivity.toRaw)(props);
    const [options] = instance.propsOptions;
    let hasAttrsChanged = false;
    if (// always force full diff in dev
    // - #1942 if hmr is enabled with sfc component
    // - vite#872 non-sfc component used by sfc component
    !isInHmrContext(instance) && (optimized || patchFlag > 0) && !(patchFlag & 16)) {
        if (patchFlag & 8) {
            const propsToUpdate = instance.vnode.dynamicProps;
            for(let i = 0; i < propsToUpdate.length; i++){
                let key = propsToUpdate[i];
                if (isEmitListener(instance.emitsOptions, key)) continue;
                const value = rawProps[key];
                if (options) {
                    if ((0, _shared.hasOwn)(attrs, key)) {
                        if (value !== attrs[key]) {
                            attrs[key] = value;
                            hasAttrsChanged = true;
                        }
                    } else {
                        const camelizedKey = (0, _shared.camelize)(key);
                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance, false);
                    }
                } else if (value !== attrs[key]) {
                    attrs[key] = value;
                    hasAttrsChanged = true;
                }
            }
        }
    } else {
        if (setFullProps(instance, rawProps, props, attrs)) hasAttrsChanged = true;
        let kebabKey;
        for(const key in rawCurrentProps)if (!rawProps || // for camelCase
        !(0, _shared.hasOwn)(rawProps, key) && // it's possible the original props was passed in as kebab-case
        // and converted to camelCase (#955)
        ((kebabKey = (0, _shared.hyphenate)(key)) === key || !(0, _shared.hasOwn)(rawProps, kebabKey))) {
            if (options) {
                if (rawPrevProps && // for camelCase
                (rawPrevProps[key] !== void 0 || // for kebab-case
                rawPrevProps[kebabKey] !== void 0)) props[key] = resolvePropValue(options, rawCurrentProps, key, void 0, instance, true);
            } else delete props[key];
        }
        if (attrs !== rawCurrentProps) {
            for(const key in attrs)if (!rawProps || !(0, _shared.hasOwn)(rawProps, key) && true) {
                delete attrs[key];
                hasAttrsChanged = true;
            }
        }
    }
    if (hasAttrsChanged) (0, _reactivity.trigger)(instance.attrs, "set", "");
    validateProps(rawProps || {}, props, instance);
}
function setFullProps(instance, rawProps, props, attrs) {
    const [options, needCastKeys] = instance.propsOptions;
    let hasAttrsChanged = false;
    let rawCastValues;
    if (rawProps) for(let key in rawProps){
        if ((0, _shared.isReservedProp)(key)) continue;
        const value = rawProps[key];
        let camelKey;
        if (options && (0, _shared.hasOwn)(options, camelKey = (0, _shared.camelize)(key))) {
            if (!needCastKeys || !needCastKeys.includes(camelKey)) props[camelKey] = value;
            else (rawCastValues || (rawCastValues = {}))[camelKey] = value;
        } else if (!isEmitListener(instance.emitsOptions, key)) {
            if (!(key in attrs) || value !== attrs[key]) {
                attrs[key] = value;
                hasAttrsChanged = true;
            }
        }
    }
    if (needCastKeys) {
        const rawCurrentProps = (0, _reactivity.toRaw)(props);
        const castValues = rawCastValues || (0, _shared.EMPTY_OBJ);
        for(let i = 0; i < needCastKeys.length; i++){
            const key = needCastKeys[i];
            props[key] = resolvePropValue(options, rawCurrentProps, key, castValues[key], instance, !(0, _shared.hasOwn)(castValues, key));
        }
    }
    return hasAttrsChanged;
}
function resolvePropValue(options, props, key, value, instance, isAbsent) {
    const opt = options[key];
    if (opt != null) {
        const hasDefault = (0, _shared.hasOwn)(opt, "default");
        if (hasDefault && value === void 0) {
            const defaultValue = opt.default;
            if (opt.type !== Function && !opt.skipFactory && (0, _shared.isFunction)(defaultValue)) {
                const { propsDefaults } = instance;
                if (key in propsDefaults) value = propsDefaults[key];
                else {
                    const reset = setCurrentInstance(instance);
                    value = propsDefaults[key] = defaultValue.call(null, props);
                    reset();
                }
            } else value = defaultValue;
        }
        if (opt[0 /* shouldCast */ ]) {
            if (isAbsent && !hasDefault) value = false;
            else if (opt[1 /* shouldCastTrue */ ] && (value === "" || value === (0, _shared.hyphenate)(key))) value = true;
        }
    }
    return value;
}
const mixinPropsCache = /* @__PURE__ */ new WeakMap();
function normalizePropsOptions(comp, appContext, asMixin = false) {
    const cache = __VUE_OPTIONS_API__ && asMixin ? mixinPropsCache : appContext.propsCache;
    const cached = cache.get(comp);
    if (cached) return cached;
    const raw = comp.props;
    const normalized = {};
    const needCastKeys = [];
    let hasExtends = false;
    if (__VUE_OPTIONS_API__ && !(0, _shared.isFunction)(comp)) {
        const extendProps = (raw2)=>{
            hasExtends = true;
            const [props, keys] = normalizePropsOptions(raw2, appContext, true);
            (0, _shared.extend)(normalized, props);
            if (keys) needCastKeys.push(...keys);
        };
        if (!asMixin && appContext.mixins.length) appContext.mixins.forEach(extendProps);
        if (comp.extends) extendProps(comp.extends);
        if (comp.mixins) comp.mixins.forEach(extendProps);
    }
    if (!raw && !hasExtends) {
        if ((0, _shared.isObject)(comp)) cache.set(comp, (0, _shared.EMPTY_ARR));
        return 0, _shared.EMPTY_ARR;
    }
    if ((0, _shared.isArray)(raw)) for(let i = 0; i < raw.length; i++){
        if (!(0, _shared.isString)(raw[i])) warn$1(`props must be strings when using array syntax.`, raw[i]);
        const normalizedKey = (0, _shared.camelize)(raw[i]);
        if (validatePropName(normalizedKey)) normalized[normalizedKey] = (0, _shared.EMPTY_OBJ);
    }
    else if (raw) {
        if (!(0, _shared.isObject)(raw)) warn$1(`invalid props options`, raw);
        for(const key in raw){
            const normalizedKey = (0, _shared.camelize)(key);
            if (validatePropName(normalizedKey)) {
                const opt = raw[key];
                const prop = normalized[normalizedKey] = (0, _shared.isArray)(opt) || (0, _shared.isFunction)(opt) ? {
                    type: opt
                } : (0, _shared.extend)({}, opt);
                const propType = prop.type;
                let shouldCast = false;
                let shouldCastTrue = true;
                if ((0, _shared.isArray)(propType)) for(let index = 0; index < propType.length; ++index){
                    const type = propType[index];
                    const typeName = (0, _shared.isFunction)(type) && type.name;
                    if (typeName === "Boolean") {
                        shouldCast = true;
                        break;
                    } else if (typeName === "String") shouldCastTrue = false;
                }
                else shouldCast = (0, _shared.isFunction)(propType) && propType.name === "Boolean";
                prop[0 /* shouldCast */ ] = shouldCast;
                prop[1 /* shouldCastTrue */ ] = shouldCastTrue;
                if (shouldCast || (0, _shared.hasOwn)(prop, "default")) needCastKeys.push(normalizedKey);
            }
        }
    }
    const res = [
        normalized,
        needCastKeys
    ];
    if ((0, _shared.isObject)(comp)) cache.set(comp, res);
    return res;
}
function validatePropName(key) {
    if (key[0] !== "$" && !(0, _shared.isReservedProp)(key)) return true;
    else warn$1(`Invalid prop name: "${key}" is a reserved property.`);
    return false;
}
function getType(ctor) {
    if (ctor === null) return "null";
    if (typeof ctor === "function") return ctor.name || "";
    else if (typeof ctor === "object") {
        const name = ctor.constructor && ctor.constructor.name;
        return name || "";
    }
    return "";
}
function validateProps(rawProps, props, instance) {
    const resolvedValues = (0, _reactivity.toRaw)(props);
    const options = instance.propsOptions[0];
    for(const key in options){
        let opt = options[key];
        if (opt == null) continue;
        validateProp(key, resolvedValues[key], opt, (0, _reactivity.shallowReadonly)(resolvedValues), !(0, _shared.hasOwn)(rawProps, key) && !(0, _shared.hasOwn)(rawProps, (0, _shared.hyphenate)(key)));
    }
}
function validateProp(name, value, prop, props, isAbsent) {
    const { type, required, validator, skipCheck } = prop;
    if (required && isAbsent) {
        warn$1('Missing required prop: "' + name + '"');
        return;
    }
    if (value == null && !required) return;
    if (type != null && type !== true && !skipCheck) {
        let isValid = false;
        const types = (0, _shared.isArray)(type) ? type : [
            type
        ];
        const expectedTypes = [];
        for(let i = 0; i < types.length && !isValid; i++){
            const { valid, expectedType } = assertType(value, types[i]);
            expectedTypes.push(expectedType || "");
            isValid = valid;
        }
        if (!isValid) {
            warn$1(getInvalidTypeMessage(name, value, expectedTypes));
            return;
        }
    }
    if (validator && !validator(value, props)) warn$1('Invalid prop: custom validator check failed for prop "' + name + '".');
}
const isSimpleType = /* @__PURE__ */ (0, _shared.makeMap)("String,Number,Boolean,Function,Symbol,BigInt");
function assertType(value, type) {
    let valid;
    const expectedType = getType(type);
    if (isSimpleType(expectedType)) {
        const t = typeof value;
        valid = t === expectedType.toLowerCase();
        if (!valid && t === "object") valid = value instanceof type;
    } else if (expectedType === "Object") valid = (0, _shared.isObject)(value);
    else if (expectedType === "Array") valid = (0, _shared.isArray)(value);
    else if (expectedType === "null") valid = value === null;
    else valid = value instanceof type;
    return {
        valid,
        expectedType
    };
}
function getInvalidTypeMessage(name, value, expectedTypes) {
    if (expectedTypes.length === 0) return `Prop type [] for prop "${name}" won't match anything. Did you mean to use type Array instead?`;
    let message = `Invalid prop: type check failed for prop "${name}". Expected ${expectedTypes.map((0, _shared.capitalize)).join(" | ")}`;
    const expectedType = expectedTypes[0];
    const receivedType = (0, _shared.toRawType)(value);
    const expectedValue = styleValue(value, expectedType);
    const receivedValue = styleValue(value, receivedType);
    if (expectedTypes.length === 1 && isExplicable(expectedType) && !isBoolean(expectedType, receivedType)) message += ` with value ${expectedValue}`;
    message += `, got ${receivedType} `;
    if (isExplicable(receivedType)) message += `with value ${receivedValue}.`;
    return message;
}
function styleValue(value, type) {
    if (type === "String") return `"${value}"`;
    else if (type === "Number") return `${Number(value)}`;
    else return `${value}`;
}
function isExplicable(type) {
    const explicitTypes = [
        "string",
        "number",
        "boolean"
    ];
    return explicitTypes.some((elem)=>type.toLowerCase() === elem);
}
function isBoolean(...args) {
    return args.some((elem)=>elem.toLowerCase() === "boolean");
}
const isInternalKey = (key)=>key[0] === "_" || key === "$stable";
const normalizeSlotValue = (value)=>(0, _shared.isArray)(value) ? value.map(normalizeVNode) : [
        normalizeVNode(value)
    ];
const normalizeSlot = (key, rawSlot, ctx)=>{
    if (rawSlot._n) return rawSlot;
    const normalized = withCtx((...args)=>{
        if (currentInstance && (!ctx || ctx.root === currentInstance.root)) warn$1(`Slot "${key}" invoked outside of the render function: this will not track dependencies used in the slot. Invoke the slot function inside the render function instead.`);
        return normalizeSlotValue(rawSlot(...args));
    }, ctx);
    normalized._c = false;
    return normalized;
};
const normalizeObjectSlots = (rawSlots, slots, instance)=>{
    const ctx = rawSlots._ctx;
    for(const key in rawSlots){
        if (isInternalKey(key)) continue;
        const value = rawSlots[key];
        if ((0, _shared.isFunction)(value)) slots[key] = normalizeSlot(key, value, ctx);
        else if (value != null) {
            warn$1(`Non-function value encountered for slot "${key}". Prefer function slots for better performance.`);
            const normalized = normalizeSlotValue(value);
            slots[key] = ()=>normalized;
        }
    }
};
const normalizeVNodeSlots = (instance, children)=>{
    if (!isKeepAlive(instance.vnode) && true) warn$1(`Non-function value encountered for default slot. Prefer function slots for better performance.`);
    const normalized = normalizeSlotValue(children);
    instance.slots.default = ()=>normalized;
};
const assignSlots = (slots, children, optimized)=>{
    for(const key in children)if (optimized || key !== "_") slots[key] = children[key];
};
const initSlots = (instance, children, optimized)=>{
    const slots = instance.slots = createInternalObject();
    if (instance.vnode.shapeFlag & 32) {
        const type = children._;
        if (type) {
            assignSlots(slots, children, optimized);
            if (optimized) (0, _shared.def)(slots, "_", type, true);
        } else normalizeObjectSlots(children, slots);
    } else if (children) normalizeVNodeSlots(instance, children);
};
const updateSlots = (instance, children, optimized)=>{
    const { vnode, slots } = instance;
    let needDeletionCheck = true;
    let deletionComparisonTarget = (0, _shared.EMPTY_OBJ);
    if (vnode.shapeFlag & 32) {
        const type = children._;
        if (type) {
            if (isHmrUpdating) {
                assignSlots(slots, children, optimized);
                (0, _reactivity.trigger)(instance, "set", "$slots");
            } else if (optimized && type === 1) needDeletionCheck = false;
            else assignSlots(slots, children, optimized);
        } else {
            needDeletionCheck = !children.$stable;
            normalizeObjectSlots(children, slots);
        }
        deletionComparisonTarget = children;
    } else if (children) {
        normalizeVNodeSlots(instance, children);
        deletionComparisonTarget = {
            default: 1
        };
    }
    if (needDeletionCheck) {
        for(const key in slots)if (!isInternalKey(key) && deletionComparisonTarget[key] == null) delete slots[key];
    }
};
function setRef(rawRef, oldRawRef, parentSuspense, vnode, isUnmount = false) {
    if ((0, _shared.isArray)(rawRef)) {
        rawRef.forEach((r, i)=>setRef(r, oldRawRef && ((0, _shared.isArray)(oldRawRef) ? oldRawRef[i] : oldRawRef), parentSuspense, vnode, isUnmount));
        return;
    }
    if (isAsyncWrapper(vnode) && !isUnmount) return;
    const refValue = vnode.shapeFlag & 4 ? getComponentPublicInstance(vnode.component) : vnode.el;
    const value = isUnmount ? null : refValue;
    const { i: owner, r: ref } = rawRef;
    if (!owner) {
        warn$1(`Missing ref owner context. ref cannot be used on hoisted vnodes. A vnode with ref must be created inside the render function.`);
        return;
    }
    const oldRef = oldRawRef && oldRawRef.r;
    const refs = owner.refs === (0, _shared.EMPTY_OBJ) ? owner.refs = {} : owner.refs;
    const setupState = owner.setupState;
    if (oldRef != null && oldRef !== ref) {
        if ((0, _shared.isString)(oldRef)) {
            refs[oldRef] = null;
            if ((0, _shared.hasOwn)(setupState, oldRef)) setupState[oldRef] = null;
        } else if ((0, _reactivity.isRef)(oldRef)) oldRef.value = null;
    }
    if ((0, _shared.isFunction)(ref)) callWithErrorHandling(ref, owner, 12, [
        value,
        refs
    ]);
    else {
        const _isString = (0, _shared.isString)(ref);
        const _isRef = (0, _reactivity.isRef)(ref);
        if (_isString || _isRef) {
            const doSet = ()=>{
                if (rawRef.f) {
                    const existing = _isString ? (0, _shared.hasOwn)(setupState, ref) ? setupState[ref] : refs[ref] : ref.value;
                    if (isUnmount) (0, _shared.isArray)(existing) && (0, _shared.remove)(existing, refValue);
                    else {
                        if (!(0, _shared.isArray)(existing)) {
                            if (_isString) {
                                refs[ref] = [
                                    refValue
                                ];
                                if ((0, _shared.hasOwn)(setupState, ref)) setupState[ref] = refs[ref];
                            } else {
                                ref.value = [
                                    refValue
                                ];
                                if (rawRef.k) refs[rawRef.k] = ref.value;
                            }
                        } else if (!existing.includes(refValue)) existing.push(refValue);
                    }
                } else if (_isString) {
                    refs[ref] = value;
                    if ((0, _shared.hasOwn)(setupState, ref)) setupState[ref] = value;
                } else if (_isRef) {
                    ref.value = value;
                    if (rawRef.k) refs[rawRef.k] = value;
                } else warn$1("Invalid template ref type:", ref, `(${typeof ref})`);
            };
            if (value) {
                doSet.id = -1;
                queuePostRenderEffect(doSet, parentSuspense);
            } else doSet();
        } else warn$1("Invalid template ref type:", ref, `(${typeof ref})`);
    }
}
const TeleportEndKey = Symbol("_vte");
const isTeleport = (type)=>type.__isTeleport;
const isTeleportDisabled = (props)=>props && (props.disabled || props.disabled === "");
const isTargetSVG = (target)=>typeof SVGElement !== "undefined" && target instanceof SVGElement;
const isTargetMathML = (target)=>typeof MathMLElement === "function" && target instanceof MathMLElement;
const resolveTarget = (props, select)=>{
    const targetSelector = props && props.to;
    if ((0, _shared.isString)(targetSelector)) {
        if (!select) {
            warn$1(`Current renderer does not support string target for Teleports. (missing querySelector renderer option)`);
            return null;
        } else {
            const target = select(targetSelector);
            if (!target && !isTeleportDisabled(props)) warn$1(`Failed to locate Teleport target with selector "${targetSelector}". Note the target element must exist before the component is mounted - i.e. the target cannot be rendered by the component itself, and ideally should be outside of the entire Vue component tree.`);
            return target;
        }
    } else {
        if (!targetSelector && !isTeleportDisabled(props)) warn$1(`Invalid Teleport target: ${targetSelector}`);
        return targetSelector;
    }
};
const TeleportImpl = {
    name: "Teleport",
    __isTeleport: true,
    process (n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, internals) {
        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;
        const disabled = isTeleportDisabled(n2.props);
        let { shapeFlag, children, dynamicChildren } = n2;
        if (isHmrUpdating) {
            optimized = false;
            dynamicChildren = null;
        }
        if (n1 == null) {
            const placeholder = n2.el = createComment("teleport start");
            const mainAnchor = n2.anchor = createComment("teleport end");
            insert(placeholder, container, anchor);
            insert(mainAnchor, container, anchor);
            const target = n2.target = resolveTarget(n2.props, querySelector);
            const targetAnchor = prepareAnchor(target, n2, createText, insert);
            if (target) {
                if (namespace === "svg" || isTargetSVG(target)) namespace = "svg";
                else if (namespace === "mathml" || isTargetMathML(target)) namespace = "mathml";
            } else if (!disabled) warn$1("Invalid Teleport target on mount:", target, `(${typeof target})`);
            const mount = (container2, anchor2)=>{
                if (shapeFlag & 16) mountChildren(children, container2, anchor2, parentComponent, parentSuspense, namespace, slotScopeIds, optimized);
            };
            if (disabled) mount(container, mainAnchor);
            else if (target) mount(target, targetAnchor);
        } else {
            n2.el = n1.el;
            n2.targetStart = n1.targetStart;
            const mainAnchor = n2.anchor = n1.anchor;
            const target = n2.target = n1.target;
            const targetAnchor = n2.targetAnchor = n1.targetAnchor;
            const wasDisabled = isTeleportDisabled(n1.props);
            const currentContainer = wasDisabled ? container : target;
            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;
            if (namespace === "svg" || isTargetSVG(target)) namespace = "svg";
            else if (namespace === "mathml" || isTargetMathML(target)) namespace = "mathml";
            if (dynamicChildren) {
                patchBlockChildren(n1.dynamicChildren, dynamicChildren, currentContainer, parentComponent, parentSuspense, namespace, slotScopeIds);
                traverseStaticChildren(n1, n2, true);
            } else if (!optimized) patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, namespace, slotScopeIds, false);
            if (disabled) {
                if (!wasDisabled) moveTeleport(n2, container, mainAnchor, internals, 1);
                else if (n2.props && n1.props && n2.props.to !== n1.props.to) n2.props.to = n1.props.to;
            } else {
                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {
                    const nextTarget = n2.target = resolveTarget(n2.props, querySelector);
                    if (nextTarget) moveTeleport(n2, nextTarget, null, internals, 0);
                    else warn$1("Invalid Teleport target on update:", target, `(${typeof target})`);
                } else if (wasDisabled) moveTeleport(n2, target, targetAnchor, internals, 1);
            }
        }
        updateCssVars(n2);
    },
    remove (vnode, parentComponent, parentSuspense, { um: unmount, o: { remove: hostRemove } }, doRemove) {
        const { shapeFlag, children, anchor, targetStart, targetAnchor, target, props } = vnode;
        if (target) {
            hostRemove(targetStart);
            hostRemove(targetAnchor);
        }
        doRemove && hostRemove(anchor);
        if (shapeFlag & 16) {
            const shouldRemove = doRemove || !isTeleportDisabled(props);
            for(let i = 0; i < children.length; i++){
                const child = children[i];
                unmount(child, parentComponent, parentSuspense, shouldRemove, !!child.dynamicChildren);
            }
        }
    },
    move: moveTeleport,
    hydrate: hydrateTeleport
};
function moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2) {
    if (moveType === 0) insert(vnode.targetAnchor, container, parentAnchor);
    const { el, anchor, shapeFlag, children, props } = vnode;
    const isReorder = moveType === 2;
    if (isReorder) insert(el, container, parentAnchor);
    if (!isReorder || isTeleportDisabled(props)) {
        if (shapeFlag & 16) for(let i = 0; i < children.length; i++)move(children[i], container, parentAnchor, 2);
    }
    if (isReorder) insert(anchor, container, parentAnchor);
}
function hydrateTeleport(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, { o: { nextSibling, parentNode, querySelector, insert, createText } }, hydrateChildren) {
    const target = vnode.target = resolveTarget(vnode.props, querySelector);
    if (target) {
        const targetNode = target._lpa || target.firstChild;
        if (vnode.shapeFlag & 16) {
            if (isTeleportDisabled(vnode.props)) {
                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, slotScopeIds, optimized);
                vnode.targetStart = targetNode;
                vnode.targetAnchor = targetNode && nextSibling(targetNode);
            } else {
                vnode.anchor = nextSibling(node);
                let targetAnchor = targetNode;
                while(targetAnchor){
                    if (targetAnchor && targetAnchor.nodeType === 8) {
                        if (targetAnchor.data === "teleport start anchor") vnode.targetStart = targetAnchor;
                        else if (targetAnchor.data === "teleport anchor") {
                            vnode.targetAnchor = targetAnchor;
                            target._lpa = vnode.targetAnchor && nextSibling(vnode.targetAnchor);
                            break;
                        }
                    }
                    targetAnchor = nextSibling(targetAnchor);
                }
                if (!vnode.targetAnchor) prepareAnchor(target, vnode, createText, insert);
                hydrateChildren(targetNode && nextSibling(targetNode), vnode, target, parentComponent, parentSuspense, slotScopeIds, optimized);
            }
        }
        updateCssVars(vnode);
    }
    return vnode.anchor && nextSibling(vnode.anchor);
}
const Teleport = TeleportImpl;
function updateCssVars(vnode) {
    const ctx = vnode.ctx;
    if (ctx && ctx.ut) {
        let node = vnode.children[0].el;
        while(node && node !== vnode.targetAnchor){
            if (node.nodeType === 1) node.setAttribute("data-v-owner", ctx.uid);
            node = node.nextSibling;
        }
        ctx.ut();
    }
}
function prepareAnchor(target, vnode, createText, insert) {
    const targetStart = vnode.targetStart = createText("");
    const targetAnchor = vnode.targetAnchor = createText("");
    targetStart[TeleportEndKey] = targetAnchor;
    if (target) {
        insert(targetStart, target);
        insert(targetAnchor, target);
    }
    return targetAnchor;
}
let hasLoggedMismatchError = false;
const logMismatchError = ()=>{
    if (hasLoggedMismatchError) return;
    console.error("Hydration completed but contains mismatches.");
    hasLoggedMismatchError = true;
};
const isSVGContainer = (container)=>container.namespaceURI.includes("svg") && container.tagName !== "foreignObject";
const isMathMLContainer = (container)=>container.namespaceURI.includes("MathML");
const getContainerType = (container)=>{
    if (isSVGContainer(container)) return "svg";
    if (isMathMLContainer(container)) return "mathml";
    return void 0;
};
const isComment = (node)=>node.nodeType === 8 /* COMMENT */ ;
function createHydrationFunctions(rendererInternals) {
    const { mt: mountComponent, p: patch, o: { patchProp, createText, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;
    const hydrate = (vnode, container)=>{
        if (!container.hasChildNodes()) {
            warn$1(`Attempting to hydrate existing markup but container is empty. Performing full mount instead.`);
            patch(null, vnode, container);
            flushPostFlushCbs();
            container._vnode = vnode;
            return;
        }
        hydrateNode(container.firstChild, vnode, null, null, null);
        flushPostFlushCbs();
        container._vnode = vnode;
    };
    const hydrateNode = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized = false)=>{
        optimized = optimized || !!vnode.dynamicChildren;
        const isFragmentStart = isComment(node) && node.data === "[";
        const onMismatch = ()=>handleMismatch(node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragmentStart);
        const { type, ref, shapeFlag, patchFlag } = vnode;
        let domType = node.nodeType;
        vnode.el = node;
        (0, _shared.def)(node, "__vnode", vnode, true);
        (0, _shared.def)(node, "__vueParentComponent", parentComponent, true);
        if (patchFlag === -2) {
            optimized = false;
            vnode.dynamicChildren = null;
        }
        let nextNode = null;
        switch(type){
            case Text:
                if (domType !== 3 /* TEXT */ ) {
                    if (vnode.children === "") {
                        insert(vnode.el = createText(""), parentNode(node), node);
                        nextNode = node;
                    } else nextNode = onMismatch();
                } else {
                    if (node.data !== vnode.children) {
                        warn$1(`Hydration text mismatch in`, node.parentNode, `
  - rendered on server: ${JSON.stringify(node.data)}
  - expected on client: ${JSON.stringify(vnode.children)}`);
                        logMismatchError();
                        node.data = vnode.children;
                    }
                    nextNode = nextSibling(node);
                }
                break;
            case Comment:
                if (isTemplateNode(node)) {
                    nextNode = nextSibling(node);
                    replaceNode(vnode.el = node.content.firstChild, node, parentComponent);
                } else if (domType !== 8 /* COMMENT */  || isFragmentStart) nextNode = onMismatch();
                else nextNode = nextSibling(node);
                break;
            case Static:
                if (isFragmentStart) {
                    node = nextSibling(node);
                    domType = node.nodeType;
                }
                if (domType === 1 /* ELEMENT */  || domType === 3 /* TEXT */ ) {
                    nextNode = node;
                    const needToAdoptContent = !vnode.children.length;
                    for(let i = 0; i < vnode.staticCount; i++){
                        if (needToAdoptContent) vnode.children += nextNode.nodeType === 1 /* ELEMENT */  ? nextNode.outerHTML : nextNode.data;
                        if (i === vnode.staticCount - 1) vnode.anchor = nextNode;
                        nextNode = nextSibling(nextNode);
                    }
                    return isFragmentStart ? nextSibling(nextNode) : nextNode;
                } else onMismatch();
                break;
            case Fragment:
                if (!isFragmentStart) nextNode = onMismatch();
                else nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);
                break;
            default:
                if (shapeFlag & 1) {
                    if ((domType !== 1 /* ELEMENT */  || vnode.type.toLowerCase() !== node.tagName.toLowerCase()) && !isTemplateNode(node)) nextNode = onMismatch();
                    else nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);
                } else if (shapeFlag & 6) {
                    vnode.slotScopeIds = slotScopeIds;
                    const container = parentNode(node);
                    if (isFragmentStart) nextNode = locateClosingAnchor(node);
                    else if (isComment(node) && node.data === "teleport start") nextNode = locateClosingAnchor(node, node.data, "teleport end");
                    else nextNode = nextSibling(node);
                    mountComponent(vnode, container, null, parentComponent, parentSuspense, getContainerType(container), optimized);
                    if (isAsyncWrapper(vnode)) {
                        let subTree;
                        if (isFragmentStart) {
                            subTree = createVNode(Fragment);
                            subTree.anchor = nextNode ? nextNode.previousSibling : container.lastChild;
                        } else subTree = node.nodeType === 3 ? createTextVNode("") : createVNode("div");
                        subTree.el = node;
                        vnode.component.subTree = subTree;
                    }
                } else if (shapeFlag & 64) {
                    if (domType !== 8 /* COMMENT */ ) nextNode = onMismatch();
                    else nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, rendererInternals, hydrateChildren);
                } else if (shapeFlag & 128) nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, getContainerType(parentNode(node)), slotScopeIds, optimized, rendererInternals, hydrateNode);
                else warn$1("Invalid HostVNode type:", type, `(${typeof type})`);
        }
        if (ref != null) setRef(ref, null, parentSuspense, vnode);
        return nextNode;
    };
    const hydrateElement = (el, vnode, parentComponent, parentSuspense, slotScopeIds, optimized)=>{
        optimized = optimized || !!vnode.dynamicChildren;
        const { type, props, patchFlag, shapeFlag, dirs, transition } = vnode;
        const forcePatch = type === "input" || type === "option";
        {
            if (dirs) invokeDirectiveHook(vnode, null, parentComponent, "created");
            let needCallTransitionHooks = false;
            if (isTemplateNode(el)) {
                needCallTransitionHooks = needTransition(parentSuspense, transition) && parentComponent && parentComponent.vnode.props && parentComponent.vnode.props.appear;
                const content = el.content.firstChild;
                if (needCallTransitionHooks) transition.beforeEnter(content);
                replaceNode(content, el, parentComponent);
                vnode.el = el = content;
            }
            if (shapeFlag & 16 && // skip if element has innerHTML / textContent
            !(props && (props.innerHTML || props.textContent))) {
                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, slotScopeIds, optimized);
                let hasWarned = false;
                while(next){
                    if (!hasWarned) {
                        warn$1(`Hydration children mismatch on`, el, `
Server rendered element contains more child nodes than client vdom.`);
                        hasWarned = true;
                    }
                    logMismatchError();
                    const cur = next;
                    next = next.nextSibling;
                    remove(cur);
                }
            } else if (shapeFlag & 8) {
                if (el.textContent !== vnode.children) {
                    warn$1(`Hydration text content mismatch on`, el, `
  - rendered on server: ${el.textContent}
  - expected on client: ${vnode.children}`);
                    logMismatchError();
                    el.textContent = vnode.children;
                }
            }
            if (props) {
                const isCustomElement = el.tagName.includes("-");
                for(const key in props){
                    if (// #11189 skip if this node has directives that have created hooks
                    // as it could have mutated the DOM in any possible way
                    !(dirs && dirs.some((d)=>d.dir.created)) && propHasMismatch(el, key, props[key], vnode, parentComponent)) logMismatchError();
                    if (forcePatch && (key.endsWith("value") || key === "indeterminate") || (0, _shared.isOn)(key) && !(0, _shared.isReservedProp)(key) || // force hydrate v-bind with .prop modifiers
                    key[0] === "." || isCustomElement) patchProp(el, key, null, props[key], void 0, parentComponent);
                }
            }
            let vnodeHooks;
            if (vnodeHooks = props && props.onVnodeBeforeMount) invokeVNodeHook(vnodeHooks, parentComponent, vnode);
            if (dirs) invokeDirectiveHook(vnode, null, parentComponent, "beforeMount");
            if ((vnodeHooks = props && props.onVnodeMounted) || dirs || needCallTransitionHooks) queueEffectWithSuspense(()=>{
                vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);
                needCallTransitionHooks && transition.enter(el);
                dirs && invokeDirectiveHook(vnode, null, parentComponent, "mounted");
            }, parentSuspense);
        }
        return el.nextSibling;
    };
    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, slotScopeIds, optimized)=>{
        optimized = optimized || !!parentVNode.dynamicChildren;
        const children = parentVNode.children;
        const l = children.length;
        let hasWarned = false;
        for(let i = 0; i < l; i++){
            const vnode = optimized ? children[i] : children[i] = normalizeVNode(children[i]);
            const isText = vnode.type === Text;
            if (node) {
                if (isText && !optimized) {
                    let next = children[i + 1];
                    if (next && (next = normalizeVNode(next)).type === Text) {
                        insert(createText(node.data.slice(vnode.children.length)), container, nextSibling(node));
                        node.data = vnode.children;
                    }
                }
                node = hydrateNode(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);
            } else if (isText && !vnode.children) insert(vnode.el = createText(""), container);
            else {
                if (!hasWarned) {
                    warn$1(`Hydration children mismatch on`, container, `
Server rendered element contains fewer child nodes than client vdom.`);
                    hasWarned = true;
                }
                logMismatchError();
                patch(null, vnode, container, null, parentComponent, parentSuspense, getContainerType(container), slotScopeIds);
            }
        }
        return node;
    };
    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized)=>{
        const { slotScopeIds: fragmentSlotScopeIds } = vnode;
        if (fragmentSlotScopeIds) slotScopeIds = slotScopeIds ? slotScopeIds.concat(fragmentSlotScopeIds) : fragmentSlotScopeIds;
        const container = parentNode(node);
        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, slotScopeIds, optimized);
        if (next && isComment(next) && next.data === "]") return nextSibling(vnode.anchor = next);
        else {
            logMismatchError();
            insert(vnode.anchor = createComment(`]`), container, next);
            return next;
        }
    };
    const handleMismatch = (node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragment)=>{
        warn$1(`Hydration node mismatch:
- rendered on server:`, node, node.nodeType === 3 /* TEXT */  ? `(text)` : isComment(node) && node.data === "[" ? `(start of fragment)` : ``, `
- expected on client:`, vnode.type);
        logMismatchError();
        vnode.el = null;
        if (isFragment) {
            const end = locateClosingAnchor(node);
            while(true){
                const next2 = nextSibling(node);
                if (next2 && next2 !== end) remove(next2);
                else break;
            }
        }
        const next = nextSibling(node);
        const container = parentNode(node);
        remove(node);
        patch(null, vnode, container, next, parentComponent, parentSuspense, getContainerType(container), slotScopeIds);
        return next;
    };
    const locateClosingAnchor = (node, open = "[", close = "]")=>{
        let match = 0;
        while(node){
            node = nextSibling(node);
            if (node && isComment(node)) {
                if (node.data === open) match++;
                if (node.data === close) {
                    if (match === 0) return nextSibling(node);
                    else match--;
                }
            }
        }
        return node;
    };
    const replaceNode = (newNode, oldNode, parentComponent)=>{
        const parentNode2 = oldNode.parentNode;
        if (parentNode2) parentNode2.replaceChild(newNode, oldNode);
        let parent = parentComponent;
        while(parent){
            if (parent.vnode.el === oldNode) parent.vnode.el = parent.subTree.el = newNode;
            parent = parent.parent;
        }
    };
    const isTemplateNode = (node)=>{
        return node.nodeType === 1 /* ELEMENT */  && node.tagName.toLowerCase() === "template";
    };
    return [
        hydrate,
        hydrateNode
    ];
}
function propHasMismatch(el, key, clientValue, vnode, instance) {
    let mismatchType;
    let mismatchKey;
    let actual;
    let expected;
    if (key === "class") {
        actual = el.getAttribute("class");
        expected = (0, _shared.normalizeClass)(clientValue);
        if (!isSetEqual(toClassSet(actual || ""), toClassSet(expected))) mismatchType = mismatchKey = `class`;
    } else if (key === "style") {
        actual = el.getAttribute("style") || "";
        expected = (0, _shared.isString)(clientValue) ? clientValue : (0, _shared.stringifyStyle)((0, _shared.normalizeStyle)(clientValue));
        const actualMap = toStyleMap(actual);
        const expectedMap = toStyleMap(expected);
        if (vnode.dirs) {
            for (const { dir, value } of vnode.dirs)if (dir.name === "show" && !value) expectedMap.set("display", "none");
        }
        if (instance) resolveCssVars(instance, vnode, expectedMap);
        if (!isMapEqual(actualMap, expectedMap)) mismatchType = mismatchKey = "style";
    } else if (el instanceof SVGElement && (0, _shared.isKnownSvgAttr)(key) || el instanceof HTMLElement && ((0, _shared.isBooleanAttr)(key) || (0, _shared.isKnownHtmlAttr)(key))) {
        if ((0, _shared.isBooleanAttr)(key)) {
            actual = el.hasAttribute(key);
            expected = (0, _shared.includeBooleanAttr)(clientValue);
        } else if (clientValue == null) {
            actual = el.hasAttribute(key);
            expected = false;
        } else {
            if (el.hasAttribute(key)) actual = el.getAttribute(key);
            else if (key === "value" && el.tagName === "TEXTAREA") actual = el.value;
            else actual = false;
            expected = (0, _shared.isRenderableAttrValue)(clientValue) ? String(clientValue) : false;
        }
        if (actual !== expected) {
            mismatchType = `attribute`;
            mismatchKey = key;
        }
    }
    if (mismatchType) {
        const format = (v1)=>v1 === false ? `(not rendered)` : `${mismatchKey}="${v1}"`;
        const preSegment = `Hydration ${mismatchType} mismatch on`;
        const postSegment = `
  - rendered on server: ${format(actual)}
  - expected on client: ${format(expected)}
  Note: this mismatch is check-only. The DOM will not be rectified in production due to performance overhead.
  You should fix the source of the mismatch.`;
        warn$1(preSegment, el, postSegment);
        return true;
    }
    return false;
}
function toClassSet(str) {
    return new Set(str.trim().split(/\s+/));
}
function isSetEqual(a, b) {
    if (a.size !== b.size) return false;
    for (const s of a){
        if (!b.has(s)) return false;
    }
    return true;
}
function toStyleMap(str) {
    const styleMap = /* @__PURE__ */ new Map();
    for (const item of str.split(";")){
        let [key, value] = item.split(":");
        key = key.trim();
        value = value && value.trim();
        if (key && value) styleMap.set(key, value);
    }
    return styleMap;
}
function isMapEqual(a, b) {
    if (a.size !== b.size) return false;
    for (const [key, value] of a){
        if (value !== b.get(key)) return false;
    }
    return true;
}
function resolveCssVars(instance, vnode, expectedMap) {
    const root = instance.subTree;
    if (instance.getCssVars && (vnode === root || root && root.type === Fragment && root.children.includes(vnode))) {
        const cssVars = instance.getCssVars();
        for(const key in cssVars)expectedMap.set(`--${key}`, String(cssVars[key]));
    }
    if (vnode === root && instance.parent) resolveCssVars(instance.parent, instance.vnode, expectedMap);
}
let supported;
let perf;
function startMeasure(instance, type) {
    if (instance.appContext.config.performance && isSupported()) perf.mark(`vue-${type}-${instance.uid}`);
    devtoolsPerfStart(instance, type, isSupported() ? perf.now() : Date.now());
}
function endMeasure(instance, type) {
    if (instance.appContext.config.performance && isSupported()) {
        const startTag = `vue-${type}-${instance.uid}`;
        const endTag = startTag + `:end`;
        perf.mark(endTag);
        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);
        perf.clearMarks(startTag);
        perf.clearMarks(endTag);
    }
    devtoolsPerfEnd(instance, type, isSupported() ? perf.now() : Date.now());
}
function isSupported() {
    if (supported !== void 0) return supported;
    if (typeof window !== "undefined" && window.performance) {
        supported = true;
        perf = window.performance;
    } else supported = false;
    return supported;
}
function initFeatureFlags() {
    const needWarn = [];
    if (typeof __VUE_OPTIONS_API__ !== "boolean") {
        needWarn.push(`__VUE_OPTIONS_API__`);
        (0, _shared.getGlobalThis)().__VUE_OPTIONS_API__ = true;
    }
    if (typeof __VUE_PROD_DEVTOOLS__ !== "boolean") {
        needWarn.push(`__VUE_PROD_DEVTOOLS__`);
        (0, _shared.getGlobalThis)().__VUE_PROD_DEVTOOLS__ = false;
    }
    if (typeof __VUE_PROD_HYDRATION_MISMATCH_DETAILS__ !== "boolean") {
        needWarn.push(`__VUE_PROD_HYDRATION_MISMATCH_DETAILS__`);
        (0, _shared.getGlobalThis)().__VUE_PROD_HYDRATION_MISMATCH_DETAILS__ = false;
    }
    if (0, needWarn.length) {
        const multi = needWarn.length > 1;
        console.warn(`Feature flag${multi ? `s` : ``} ${needWarn.join(", ")} ${multi ? `are` : `is`} not explicitly defined. You are running the esm-bundler build of Vue, which expects these compile-time feature flags to be globally injected via the bundler config in order to get better tree-shaking in the production bundle.

For more details, see https://link.vuejs.org/feature-flags.`);
    }
}
const queuePostRenderEffect = queueEffectWithSuspense;
function createRenderer(options) {
    return baseCreateRenderer(options);
}
function createHydrationRenderer(options) {
    return baseCreateRenderer(options, createHydrationFunctions);
}
function baseCreateRenderer(options, createHydrationFns) {
    initFeatureFlags();
    const target = (0, _shared.getGlobalThis)();
    target.__VUE__ = true;
    setDevtoolsHook$1(target.__VUE_DEVTOOLS_GLOBAL_HOOK__, target);
    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = (0, _shared.NOOP), insertStaticContent: hostInsertStaticContent } = options;
    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, namespace, slotScopeIds = null, optimized = isHmrUpdating ? false : !!n2.dynamicChildren)=>{
        if (n1 === n2) return;
        if (n1 && !isSameVNodeType(n1, n2)) {
            anchor = getNextHostNode(n1);
            unmount(n1, parentComponent, parentSuspense, true);
            n1 = null;
        }
        if (n2.patchFlag === -2) {
            optimized = false;
            n2.dynamicChildren = null;
        }
        const { type, ref, shapeFlag } = n2;
        switch(type){
            case Text:
                processText(n1, n2, container, anchor);
                break;
            case Comment:
                processCommentNode(n1, n2, container, anchor);
                break;
            case Static:
                if (n1 == null) mountStaticNode(n2, container, anchor, namespace);
                else patchStaticNode(n1, n2, container, namespace);
                break;
            case Fragment:
                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized);
                break;
            default:
                if (shapeFlag & 1) processElement(n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized);
                else if (shapeFlag & 6) processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized);
                else if (shapeFlag & 64) type.process(n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, internals);
                else if (shapeFlag & 128) type.process(n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, internals);
                else warn$1("Invalid VNode type:", type, `(${typeof type})`);
        }
        if (ref != null && parentComponent) setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2);
    };
    const processText = (n1, n2, container, anchor)=>{
        if (n1 == null) hostInsert(n2.el = hostCreateText(n2.children), container, anchor);
        else {
            const el = n2.el = n1.el;
            if (n2.children !== n1.children) hostSetText(el, n2.children);
        }
    };
    const processCommentNode = (n1, n2, container, anchor)=>{
        if (n1 == null) hostInsert(n2.el = hostCreateComment(n2.children || ""), container, anchor);
        else n2.el = n1.el;
    };
    const mountStaticNode = (n2, container, anchor, namespace)=>{
        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, namespace, n2.el, n2.anchor);
    };
    const patchStaticNode = (n1, n2, container, namespace)=>{
        if (n2.children !== n1.children) {
            const anchor = hostNextSibling(n1.anchor);
            removeStaticNode(n1);
            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, namespace);
        } else {
            n2.el = n1.el;
            n2.anchor = n1.anchor;
        }
    };
    const moveStaticNode = ({ el, anchor }, container, nextSibling)=>{
        let next;
        while(el && el !== anchor){
            next = hostNextSibling(el);
            hostInsert(el, container, nextSibling);
            el = next;
        }
        hostInsert(anchor, container, nextSibling);
    };
    const removeStaticNode = ({ el, anchor })=>{
        let next;
        while(el && el !== anchor){
            next = hostNextSibling(el);
            hostRemove(el);
            el = next;
        }
        hostRemove(anchor);
    };
    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized)=>{
        if (n2.type === "svg") namespace = "svg";
        else if (n2.type === "math") namespace = "mathml";
        if (n1 == null) mountElement(n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized);
        else patchElement(n1, n2, parentComponent, parentSuspense, namespace, slotScopeIds, optimized);
    };
    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized)=>{
        let el;
        let vnodeHook;
        const { props, shapeFlag, transition, dirs } = vnode;
        el = vnode.el = hostCreateElement(vnode.type, namespace, props && props.is, props);
        if (shapeFlag & 8) hostSetElementText(el, vnode.children);
        else if (shapeFlag & 16) mountChildren(vnode.children, el, null, parentComponent, parentSuspense, resolveChildrenNamespace(vnode, namespace), slotScopeIds, optimized);
        if (dirs) invokeDirectiveHook(vnode, null, parentComponent, "created");
        setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent);
        if (props) {
            for(const key in props)if (key !== "value" && !(0, _shared.isReservedProp)(key)) hostPatchProp(el, key, null, props[key], namespace, parentComponent);
            if ("value" in props) hostPatchProp(el, "value", null, props.value, namespace);
            if (vnodeHook = props.onVnodeBeforeMount) invokeVNodeHook(vnodeHook, parentComponent, vnode);
        }
        (0, _shared.def)(el, "__vnode", vnode, true);
        (0, _shared.def)(el, "__vueParentComponent", parentComponent, true);
        if (dirs) invokeDirectiveHook(vnode, null, parentComponent, "beforeMount");
        const needCallTransitionHooks = needTransition(parentSuspense, transition);
        if (needCallTransitionHooks) transition.beforeEnter(el);
        hostInsert(el, container, anchor);
        if ((vnodeHook = props && props.onVnodeMounted) || needCallTransitionHooks || dirs) queuePostRenderEffect(()=>{
            vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);
            needCallTransitionHooks && transition.enter(el);
            dirs && invokeDirectiveHook(vnode, null, parentComponent, "mounted");
        }, parentSuspense);
    };
    const setScopeId = (el, vnode, scopeId, slotScopeIds, parentComponent)=>{
        if (scopeId) hostSetScopeId(el, scopeId);
        if (slotScopeIds) for(let i = 0; i < slotScopeIds.length; i++)hostSetScopeId(el, slotScopeIds[i]);
        if (parentComponent) {
            let subTree = parentComponent.subTree;
            if (subTree.patchFlag > 0 && subTree.patchFlag & 2048) subTree = filterSingleRoot(subTree.children) || subTree;
            if (vnode === subTree) {
                const parentVNode = parentComponent.vnode;
                setScopeId(el, parentVNode, parentVNode.scopeId, parentVNode.slotScopeIds, parentComponent.parent);
            }
        }
    };
    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, start = 0)=>{
        for(let i = start; i < children.length; i++){
            const child = children[i] = optimized ? cloneIfMounted(children[i]) : normalizeVNode(children[i]);
            patch(null, child, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized);
        }
    };
    const patchElement = (n1, n2, parentComponent, parentSuspense, namespace, slotScopeIds, optimized)=>{
        const el = n2.el = n1.el;
        el.__vnode = n2;
        let { patchFlag, dynamicChildren, dirs } = n2;
        patchFlag |= n1.patchFlag & 16;
        const oldProps = n1.props || (0, _shared.EMPTY_OBJ);
        const newProps = n2.props || (0, _shared.EMPTY_OBJ);
        let vnodeHook;
        parentComponent && toggleRecurse(parentComponent, false);
        if (vnodeHook = newProps.onVnodeBeforeUpdate) invokeVNodeHook(vnodeHook, parentComponent, n2, n1);
        if (dirs) invokeDirectiveHook(n2, n1, parentComponent, "beforeUpdate");
        parentComponent && toggleRecurse(parentComponent, true);
        if (isHmrUpdating) {
            patchFlag = 0;
            optimized = false;
            dynamicChildren = null;
        }
        if (oldProps.innerHTML && newProps.innerHTML == null || oldProps.textContent && newProps.textContent == null) hostSetElementText(el, "");
        if (dynamicChildren) {
            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, resolveChildrenNamespace(n2, namespace), slotScopeIds);
            traverseStaticChildren(n1, n2);
        } else if (!optimized) patchChildren(n1, n2, el, null, parentComponent, parentSuspense, resolveChildrenNamespace(n2, namespace), slotScopeIds, false);
        if (patchFlag > 0) {
            if (patchFlag & 16) patchProps(el, oldProps, newProps, parentComponent, namespace);
            else {
                if (patchFlag & 2) {
                    if (oldProps.class !== newProps.class) hostPatchProp(el, "class", null, newProps.class, namespace);
                }
                if (patchFlag & 4) hostPatchProp(el, "style", oldProps.style, newProps.style, namespace);
                if (patchFlag & 8) {
                    const propsToUpdate = n2.dynamicProps;
                    for(let i = 0; i < propsToUpdate.length; i++){
                        const key = propsToUpdate[i];
                        const prev = oldProps[key];
                        const next = newProps[key];
                        if (next !== prev || key === "value") hostPatchProp(el, key, prev, next, namespace, parentComponent);
                    }
                }
            }
            if (patchFlag & 1) {
                if (n1.children !== n2.children) hostSetElementText(el, n2.children);
            }
        } else if (!optimized && dynamicChildren == null) patchProps(el, oldProps, newProps, parentComponent, namespace);
        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) queuePostRenderEffect(()=>{
            vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);
            dirs && invokeDirectiveHook(n2, n1, parentComponent, "updated");
        }, parentSuspense);
    };
    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, namespace, slotScopeIds)=>{
        for(let i = 0; i < newChildren.length; i++){
            const oldVNode = oldChildren[i];
            const newVNode = newChildren[i];
            const container = // oldVNode may be an errored async setup() component inside Suspense
            // which will not have a mounted element
            oldVNode.el && // - In the case of a Fragment, we need to provide the actual parent
            // of the Fragment itself so it can move its children.
            (oldVNode.type === Fragment || // - In the case of different nodes, there is going to be a replacement
            // which also requires the correct parent container
            !isSameVNodeType(oldVNode, newVNode) || // - In the case of a component, it could contain anything.
            oldVNode.shapeFlag & 70) ? hostParentNode(oldVNode.el) : // In other cases, the parent container is not actually used so we
            // just pass the block element here to avoid a DOM parentNode call.
            fallbackContainer;
            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, namespace, slotScopeIds, true);
        }
    };
    const patchProps = (el, oldProps, newProps, parentComponent, namespace)=>{
        if (oldProps !== newProps) {
            if (oldProps !== (0, _shared.EMPTY_OBJ)) {
                for(const key in oldProps)if (!(0, _shared.isReservedProp)(key) && !(key in newProps)) hostPatchProp(el, key, oldProps[key], null, namespace, parentComponent);
            }
            for(const key in newProps){
                if ((0, _shared.isReservedProp)(key)) continue;
                const next = newProps[key];
                const prev = oldProps[key];
                if (next !== prev && key !== "value") hostPatchProp(el, key, prev, next, namespace, parentComponent);
            }
            if ("value" in newProps) hostPatchProp(el, "value", oldProps.value, newProps.value, namespace);
        }
    };
    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized)=>{
        const fragmentStartAnchor = n2.el = n1 ? n1.el : hostCreateText("");
        const fragmentEndAnchor = n2.anchor = n1 ? n1.anchor : hostCreateText("");
        let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2;
        if (// #5523 dev root fragment may inherit directives
        isHmrUpdating || patchFlag & 2048) {
            patchFlag = 0;
            optimized = false;
            dynamicChildren = null;
        }
        if (fragmentSlotScopeIds) slotScopeIds = slotScopeIds ? slotScopeIds.concat(fragmentSlotScopeIds) : fragmentSlotScopeIds;
        if (n1 == null) {
            hostInsert(fragmentStartAnchor, container, anchor);
            hostInsert(fragmentEndAnchor, container, anchor);
            mountChildren(// #10007
            // such fragment like `<></>` will be compiled into
            // a fragment which doesn't have a children.
            // In this case fallback to an empty array
            n2.children || [], container, fragmentEndAnchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized);
        } else if (patchFlag > 0 && patchFlag & 64 && dynamicChildren && // #2715 the previous fragment could've been a BAILed one as a result
        // of renderSlot() with no valid children
        n1.dynamicChildren) {
            patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, namespace, slotScopeIds);
            traverseStaticChildren(n1, n2);
        } else patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized);
    };
    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized)=>{
        n2.slotScopeIds = slotScopeIds;
        if (n1 == null) {
            if (n2.shapeFlag & 512) parentComponent.ctx.activate(n2, container, anchor, namespace, optimized);
            else mountComponent(n2, container, anchor, parentComponent, parentSuspense, namespace, optimized);
        } else updateComponent(n1, n2, optimized);
    };
    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, namespace, optimized)=>{
        const instance = initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense);
        if (0, instance.type.__hmrId) registerHMR(instance);
        pushWarningContext(initialVNode);
        startMeasure(instance, `mount`);
        if (isKeepAlive(initialVNode)) instance.ctx.renderer = internals;
        startMeasure(instance, `init`);
        setupComponent(instance, false, optimized);
        endMeasure(instance, `init`);
        if (instance.asyncDep) {
            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect, optimized);
            if (!initialVNode.el) {
                const placeholder = instance.subTree = createVNode(Comment);
                processCommentNode(null, placeholder, container, anchor);
            }
        } else setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, namespace, optimized);
        popWarningContext();
        endMeasure(instance, `mount`);
    };
    const updateComponent = (n1, n2, optimized)=>{
        const instance = n2.component = n1.component;
        if (shouldUpdateComponent(n1, n2, optimized)) {
            if (instance.asyncDep && !instance.asyncResolved) {
                pushWarningContext(n2);
                updateComponentPreRender(instance, n2, optimized);
                popWarningContext();
                return;
            } else {
                instance.next = n2;
                invalidateJob(instance.update);
                instance.effect.dirty = true;
                instance.update();
            }
        } else {
            n2.el = n1.el;
            instance.vnode = n2;
        }
    };
    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, namespace, optimized)=>{
        const componentUpdateFn = ()=>{
            if (!instance.isMounted) {
                let vnodeHook;
                const { el, props } = initialVNode;
                const { bm, m, parent } = instance;
                const isAsyncWrapperVNode = isAsyncWrapper(initialVNode);
                toggleRecurse(instance, false);
                if (bm) (0, _shared.invokeArrayFns)(bm);
                if (!isAsyncWrapperVNode && (vnodeHook = props && props.onVnodeBeforeMount)) invokeVNodeHook(vnodeHook, parent, initialVNode);
                toggleRecurse(instance, true);
                if (el && hydrateNode) {
                    const hydrateSubTree = ()=>{
                        startMeasure(instance, `render`);
                        instance.subTree = renderComponentRoot(instance);
                        endMeasure(instance, `render`);
                        startMeasure(instance, `hydrate`);
                        hydrateNode(el, instance.subTree, instance, parentSuspense, null);
                        endMeasure(instance, `hydrate`);
                    };
                    if (isAsyncWrapperVNode) initialVNode.type.__asyncLoader().then(// note: we are moving the render call into an async callback,
                    // which means it won't track dependencies - but it's ok because
                    // a server-rendered async wrapper is already in resolved state
                    // and it will never need to change.
                    ()=>!instance.isUnmounted && hydrateSubTree());
                    else hydrateSubTree();
                } else {
                    startMeasure(instance, `render`);
                    const subTree = instance.subTree = renderComponentRoot(instance);
                    endMeasure(instance, `render`);
                    startMeasure(instance, `patch`);
                    patch(null, subTree, container, anchor, instance, parentSuspense, namespace);
                    endMeasure(instance, `patch`);
                    initialVNode.el = subTree.el;
                }
                if (m) queuePostRenderEffect(m, parentSuspense);
                if (!isAsyncWrapperVNode && (vnodeHook = props && props.onVnodeMounted)) {
                    const scopedInitialVNode = initialVNode;
                    queuePostRenderEffect(()=>invokeVNodeHook(vnodeHook, parent, scopedInitialVNode), parentSuspense);
                }
                if (initialVNode.shapeFlag & 256 || parent && isAsyncWrapper(parent.vnode) && parent.vnode.shapeFlag & 256) instance.a && queuePostRenderEffect(instance.a, parentSuspense);
                instance.isMounted = true;
                devtoolsComponentAdded(instance);
                initialVNode = container = anchor = null;
            } else {
                let { next, bu, u, parent, vnode } = instance;
                {
                    const nonHydratedAsyncRoot = locateNonHydratedAsyncRoot(instance);
                    if (nonHydratedAsyncRoot) {
                        if (next) {
                            next.el = vnode.el;
                            updateComponentPreRender(instance, next, optimized);
                        }
                        nonHydratedAsyncRoot.asyncDep.then(()=>{
                            if (!instance.isUnmounted) componentUpdateFn();
                        });
                        return;
                    }
                }
                let originNext = next;
                let vnodeHook;
                pushWarningContext(next || instance.vnode);
                toggleRecurse(instance, false);
                if (next) {
                    next.el = vnode.el;
                    updateComponentPreRender(instance, next, optimized);
                } else next = vnode;
                if (bu) (0, _shared.invokeArrayFns)(bu);
                if (vnodeHook = next.props && next.props.onVnodeBeforeUpdate) invokeVNodeHook(vnodeHook, parent, next, vnode);
                toggleRecurse(instance, true);
                startMeasure(instance, `render`);
                const nextTree = renderComponentRoot(instance);
                endMeasure(instance, `render`);
                const prevTree = instance.subTree;
                instance.subTree = nextTree;
                startMeasure(instance, `patch`);
                patch(prevTree, nextTree, // parent may have changed if it's in a teleport
                hostParentNode(prevTree.el), // anchor may have changed if it's in a fragment
                getNextHostNode(prevTree), instance, parentSuspense, namespace);
                endMeasure(instance, `patch`);
                next.el = nextTree.el;
                if (originNext === null) updateHOCHostEl(instance, nextTree.el);
                if (u) queuePostRenderEffect(u, parentSuspense);
                if (vnodeHook = next.props && next.props.onVnodeUpdated) queuePostRenderEffect(()=>invokeVNodeHook(vnodeHook, parent, next, vnode), parentSuspense);
                devtoolsComponentUpdated(instance);
                popWarningContext();
            }
        };
        const effect = instance.effect = new (0, _reactivity.ReactiveEffect)(componentUpdateFn, (0, _shared.NOOP), ()=>queueJob(update), instance.scope);
        const update = instance.update = ()=>{
            if (effect.dirty) effect.run();
        };
        update.i = instance;
        update.id = instance.uid;
        toggleRecurse(instance, true);
        effect.onTrack = instance.rtc ? (e)=>(0, _shared.invokeArrayFns)(instance.rtc, e) : void 0;
        effect.onTrigger = instance.rtg ? (e)=>(0, _shared.invokeArrayFns)(instance.rtg, e) : void 0;
        update();
    };
    const updateComponentPreRender = (instance, nextVNode, optimized)=>{
        nextVNode.component = instance;
        const prevProps = instance.vnode.props;
        instance.vnode = nextVNode;
        instance.next = null;
        updateProps(instance, nextVNode.props, prevProps, optimized);
        updateSlots(instance, nextVNode.children, optimized);
        (0, _reactivity.pauseTracking)();
        flushPreFlushCbs(instance);
        (0, _reactivity.resetTracking)();
    };
    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized = false)=>{
        const c1 = n1 && n1.children;
        const prevShapeFlag = n1 ? n1.shapeFlag : 0;
        const c2 = n2.children;
        const { patchFlag, shapeFlag } = n2;
        if (patchFlag > 0) {
            if (patchFlag & 128) {
                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized);
                return;
            } else if (patchFlag & 256) {
                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized);
                return;
            }
        }
        if (shapeFlag & 8) {
            if (prevShapeFlag & 16) unmountChildren(c1, parentComponent, parentSuspense);
            if (c2 !== c1) hostSetElementText(container, c2);
        } else if (prevShapeFlag & 16) {
            if (shapeFlag & 16) patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized);
            else unmountChildren(c1, parentComponent, parentSuspense, true);
        } else {
            if (prevShapeFlag & 8) hostSetElementText(container, "");
            if (shapeFlag & 16) mountChildren(c2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized);
        }
    };
    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized)=>{
        c1 = c1 || (0, _shared.EMPTY_ARR);
        c2 = c2 || (0, _shared.EMPTY_ARR);
        const oldLength = c1.length;
        const newLength = c2.length;
        const commonLength = Math.min(oldLength, newLength);
        let i;
        for(i = 0; i < commonLength; i++){
            const nextChild = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);
            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, namespace, slotScopeIds, optimized);
        }
        if (oldLength > newLength) unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);
        else mountChildren(c2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, commonLength);
    };
    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized)=>{
        let i = 0;
        const l2 = c2.length;
        let e1 = c1.length - 1;
        let e2 = l2 - 1;
        while(i <= e1 && i <= e2){
            const n1 = c1[i];
            const n2 = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);
            if (isSameVNodeType(n1, n2)) patch(n1, n2, container, null, parentComponent, parentSuspense, namespace, slotScopeIds, optimized);
            else break;
            i++;
        }
        while(i <= e1 && i <= e2){
            const n1 = c1[e1];
            const n2 = c2[e2] = optimized ? cloneIfMounted(c2[e2]) : normalizeVNode(c2[e2]);
            if (isSameVNodeType(n1, n2)) patch(n1, n2, container, null, parentComponent, parentSuspense, namespace, slotScopeIds, optimized);
            else break;
            e1--;
            e2--;
        }
        if (i > e1) {
            if (i <= e2) {
                const nextPos = e2 + 1;
                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;
                while(i <= e2){
                    patch(null, c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]), container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized);
                    i++;
                }
            }
        } else if (i > e2) while(i <= e1){
            unmount(c1[i], parentComponent, parentSuspense, true);
            i++;
        }
        else {
            const s1 = i;
            const s2 = i;
            const keyToNewIndexMap = /* @__PURE__ */ new Map();
            for(i = s2; i <= e2; i++){
                const nextChild = c2[i] = optimized ? cloneIfMounted(c2[i]) : normalizeVNode(c2[i]);
                if (nextChild.key != null) {
                    if (keyToNewIndexMap.has(nextChild.key)) warn$1(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);
                    keyToNewIndexMap.set(nextChild.key, i);
                }
            }
            let j;
            let patched = 0;
            const toBePatched = e2 - s2 + 1;
            let moved = false;
            let maxNewIndexSoFar = 0;
            const newIndexToOldIndexMap = new Array(toBePatched);
            for(i = 0; i < toBePatched; i++)newIndexToOldIndexMap[i] = 0;
            for(i = s1; i <= e1; i++){
                const prevChild = c1[i];
                if (patched >= toBePatched) {
                    unmount(prevChild, parentComponent, parentSuspense, true);
                    continue;
                }
                let newIndex;
                if (prevChild.key != null) newIndex = keyToNewIndexMap.get(prevChild.key);
                else {
                    for(j = s2; j <= e2; j++)if (newIndexToOldIndexMap[j - s2] === 0 && isSameVNodeType(prevChild, c2[j])) {
                        newIndex = j;
                        break;
                    }
                }
                if (newIndex === void 0) unmount(prevChild, parentComponent, parentSuspense, true);
                else {
                    newIndexToOldIndexMap[newIndex - s2] = i + 1;
                    if (newIndex >= maxNewIndexSoFar) maxNewIndexSoFar = newIndex;
                    else moved = true;
                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, namespace, slotScopeIds, optimized);
                    patched++;
                }
            }
            const increasingNewIndexSequence = moved ? getSequence(newIndexToOldIndexMap) : (0, _shared.EMPTY_ARR);
            j = increasingNewIndexSequence.length - 1;
            for(i = toBePatched - 1; i >= 0; i--){
                const nextIndex = s2 + i;
                const nextChild = c2[nextIndex];
                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;
                if (newIndexToOldIndexMap[i] === 0) patch(null, nextChild, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized);
                else if (moved) {
                    if (j < 0 || i !== increasingNewIndexSequence[j]) move(nextChild, container, anchor, 2);
                    else j--;
                }
            }
        }
    };
    const move = (vnode, container, anchor, moveType, parentSuspense = null)=>{
        const { el, type, transition, children, shapeFlag } = vnode;
        if (shapeFlag & 6) {
            move(vnode.component.subTree, container, anchor, moveType);
            return;
        }
        if (shapeFlag & 128) {
            vnode.suspense.move(container, anchor, moveType);
            return;
        }
        if (shapeFlag & 64) {
            type.move(vnode, container, anchor, internals);
            return;
        }
        if (type === Fragment) {
            hostInsert(el, container, anchor);
            for(let i = 0; i < children.length; i++)move(children[i], container, anchor, moveType);
            hostInsert(vnode.anchor, container, anchor);
            return;
        }
        if (type === Static) {
            moveStaticNode(vnode, container, anchor);
            return;
        }
        const needTransition2 = moveType !== 2 && shapeFlag & 1 && transition;
        if (needTransition2) {
            if (moveType === 0) {
                transition.beforeEnter(el);
                hostInsert(el, container, anchor);
                queuePostRenderEffect(()=>transition.enter(el), parentSuspense);
            } else {
                const { leave, delayLeave, afterLeave } = transition;
                const remove2 = ()=>hostInsert(el, container, anchor);
                const performLeave = ()=>{
                    leave(el, ()=>{
                        remove2();
                        afterLeave && afterLeave();
                    });
                };
                if (delayLeave) delayLeave(el, remove2, performLeave);
                else performLeave();
            }
        } else hostInsert(el, container, anchor);
    };
    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false)=>{
        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs, cacheIndex } = vnode;
        if (patchFlag === -2) optimized = false;
        if (ref != null) setRef(ref, null, parentSuspense, vnode, true);
        if (cacheIndex != null) parentComponent.renderCache[cacheIndex] = void 0;
        if (shapeFlag & 256) {
            parentComponent.ctx.deactivate(vnode);
            return;
        }
        const shouldInvokeDirs = shapeFlag & 1 && dirs;
        const shouldInvokeVnodeHook = !isAsyncWrapper(vnode);
        let vnodeHook;
        if (shouldInvokeVnodeHook && (vnodeHook = props && props.onVnodeBeforeUnmount)) invokeVNodeHook(vnodeHook, parentComponent, vnode);
        if (shapeFlag & 6) unmountComponent(vnode.component, parentSuspense, doRemove);
        else {
            if (shapeFlag & 128) {
                vnode.suspense.unmount(parentSuspense, doRemove);
                return;
            }
            if (shouldInvokeDirs) invokeDirectiveHook(vnode, null, parentComponent, "beforeUnmount");
            if (shapeFlag & 64) vnode.type.remove(vnode, parentComponent, parentSuspense, internals, doRemove);
            else if (dynamicChildren && // #5154
            // when v-once is used inside a block, setBlockTracking(-1) marks the
            // parent block with hasOnce: true
            // so that it doesn't take the fast path during unmount - otherwise
            // components nested in v-once are never unmounted.
            !dynamicChildren.hasOnce && // #1153: fast path should not be taken for non-stable (v-for) fragments
            (type !== Fragment || patchFlag > 0 && patchFlag & 64)) unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);
            else if (type === Fragment && patchFlag & 384 || !optimized && shapeFlag & 16) unmountChildren(children, parentComponent, parentSuspense);
            if (doRemove) remove(vnode);
        }
        if (shouldInvokeVnodeHook && (vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) queuePostRenderEffect(()=>{
            vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);
            shouldInvokeDirs && invokeDirectiveHook(vnode, null, parentComponent, "unmounted");
        }, parentSuspense);
    };
    const remove = (vnode)=>{
        const { type, el, anchor, transition } = vnode;
        if (type === Fragment) {
            if (vnode.patchFlag > 0 && vnode.patchFlag & 2048 && transition && !transition.persisted) vnode.children.forEach((child)=>{
                if (child.type === Comment) hostRemove(child.el);
                else remove(child);
            });
            else removeFragment(el, anchor);
            return;
        }
        if (type === Static) {
            removeStaticNode(vnode);
            return;
        }
        const performRemove = ()=>{
            hostRemove(el);
            if (transition && !transition.persisted && transition.afterLeave) transition.afterLeave();
        };
        if (vnode.shapeFlag & 1 && transition && !transition.persisted) {
            const { leave, delayLeave } = transition;
            const performLeave = ()=>leave(el, performRemove);
            if (delayLeave) delayLeave(vnode.el, performRemove, performLeave);
            else performLeave();
        } else performRemove();
    };
    const removeFragment = (cur, end)=>{
        let next;
        while(cur !== end){
            next = hostNextSibling(cur);
            hostRemove(cur);
            cur = next;
        }
        hostRemove(end);
    };
    const unmountComponent = (instance, parentSuspense, doRemove)=>{
        if (0, instance.type.__hmrId) unregisterHMR(instance);
        const { bum, scope, update, subTree, um, m, a } = instance;
        invalidateMount(m);
        invalidateMount(a);
        if (bum) (0, _shared.invokeArrayFns)(bum);
        scope.stop();
        if (update) {
            update.active = false;
            unmount(subTree, instance, parentSuspense, doRemove);
        }
        if (um) queuePostRenderEffect(um, parentSuspense);
        queuePostRenderEffect(()=>{
            instance.isUnmounted = true;
        }, parentSuspense);
        if (parentSuspense && parentSuspense.pendingBranch && !parentSuspense.isUnmounted && instance.asyncDep && !instance.asyncResolved && instance.suspenseId === parentSuspense.pendingId) {
            parentSuspense.deps--;
            if (parentSuspense.deps === 0) parentSuspense.resolve();
        }
        devtoolsComponentRemoved(instance);
    };
    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0)=>{
        for(let i = start; i < children.length; i++)unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);
    };
    const getNextHostNode = (vnode)=>{
        if (vnode.shapeFlag & 6) return getNextHostNode(vnode.component.subTree);
        if (vnode.shapeFlag & 128) return vnode.suspense.next();
        const el = hostNextSibling(vnode.anchor || vnode.el);
        const teleportEnd = el && el[TeleportEndKey];
        return teleportEnd ? hostNextSibling(teleportEnd) : el;
    };
    let isFlushing = false;
    const render = (vnode, container, namespace)=>{
        if (vnode == null) {
            if (container._vnode) unmount(container._vnode, null, null, true);
        } else patch(container._vnode || null, vnode, container, null, null, null, namespace);
        container._vnode = vnode;
        if (!isFlushing) {
            isFlushing = true;
            flushPreFlushCbs();
            flushPostFlushCbs();
            isFlushing = false;
        }
    };
    const internals = {
        p: patch,
        um: unmount,
        m: move,
        r: remove,
        mt: mountComponent,
        mc: mountChildren,
        pc: patchChildren,
        pbc: patchBlockChildren,
        n: getNextHostNode,
        o: options
    };
    let hydrate;
    let hydrateNode;
    if (createHydrationFns) [hydrate, hydrateNode] = createHydrationFns(internals);
    return {
        render,
        hydrate,
        createApp: createAppAPI(render, hydrate)
    };
}
function resolveChildrenNamespace({ type, props }, currentNamespace) {
    return currentNamespace === "svg" && type === "foreignObject" || currentNamespace === "mathml" && type === "annotation-xml" && props && props.encoding && props.encoding.includes("html") ? void 0 : currentNamespace;
}
function toggleRecurse({ effect, update }, allowed) {
    effect.allowRecurse = update.allowRecurse = allowed;
}
function needTransition(parentSuspense, transition) {
    return (!parentSuspense || parentSuspense && !parentSuspense.pendingBranch) && transition && !transition.persisted;
}
function traverseStaticChildren(n1, n2, shallow = false) {
    const ch1 = n1.children;
    const ch2 = n2.children;
    if ((0, _shared.isArray)(ch1) && (0, _shared.isArray)(ch2)) for(let i = 0; i < ch1.length; i++){
        const c1 = ch1[i];
        let c2 = ch2[i];
        if (c2.shapeFlag & 1 && !c2.dynamicChildren) {
            if (c2.patchFlag <= 0 || c2.patchFlag === 32) {
                c2 = ch2[i] = cloneIfMounted(ch2[i]);
                c2.el = c1.el;
            }
            if (!shallow && c2.patchFlag !== -2) traverseStaticChildren(c1, c2);
        }
        if (c2.type === Text) c2.el = c1.el;
        if (c2.type === Comment && !c2.el) c2.el = c1.el;
    }
}
function getSequence(arr) {
    const p = arr.slice();
    const result = [
        0
    ];
    let i, j, u, v1, c;
    const len = arr.length;
    for(i = 0; i < len; i++){
        const arrI = arr[i];
        if (arrI !== 0) {
            j = result[result.length - 1];
            if (arr[j] < arrI) {
                p[i] = j;
                result.push(i);
                continue;
            }
            u = 0;
            v1 = result.length - 1;
            while(u < v1){
                c = u + v1 >> 1;
                if (arr[result[c]] < arrI) u = c + 1;
                else v1 = c;
            }
            if (arrI < arr[result[u]]) {
                if (u > 0) p[i] = result[u - 1];
                result[u] = i;
            }
        }
    }
    u = result.length;
    v1 = result[u - 1];
    while(u-- > 0){
        result[u] = v1;
        v1 = p[v1];
    }
    return result;
}
function locateNonHydratedAsyncRoot(instance) {
    const subComponent = instance.subTree.component;
    if (subComponent) {
        if (subComponent.asyncDep && !subComponent.asyncResolved) return subComponent;
        else return locateNonHydratedAsyncRoot(subComponent);
    }
}
function invalidateMount(hooks) {
    if (hooks) for(let i = 0; i < hooks.length; i++)hooks[i].active = false;
}
const ssrContextKey = Symbol.for("v-scx");
const useSSRContext = ()=>{
    {
        const ctx = inject(ssrContextKey);
        if (!ctx) warn$1(`Server rendering context not provided. Make sure to only call useSSRContext() conditionally in the server build.`);
        return ctx;
    }
};
function watchEffect(effect, options) {
    return doWatch(effect, null, options);
}
function watchPostEffect(effect, options) {
    return doWatch(effect, null, (0, _shared.extend)({}, options, {
        flush: "post"
    }));
}
function watchSyncEffect(effect, options) {
    return doWatch(effect, null, (0, _shared.extend)({}, options, {
        flush: "sync"
    }));
}
const INITIAL_WATCHER_VALUE = {};
function watch(source, cb, options) {
    if (!(0, _shared.isFunction)(cb)) warn$1(`\`watch(fn, options?)\` signature has been moved to a separate API. Use \`watchEffect(fn, options?)\` instead. \`watch\` now only supports \`watch(source, cb, options?) signature.`);
    return doWatch(source, cb, options);
}
function doWatch(source, cb, { immediate, deep, flush, once, onTrack, onTrigger } = (0, _shared.EMPTY_OBJ)) {
    if (cb && once) {
        const _cb = cb;
        cb = (...args)=>{
            _cb(...args);
            unwatch();
        };
    }
    if (deep !== void 0 && typeof deep === "number") warn$1(`watch() "deep" option with number value will be used as watch depth in future versions. Please use a boolean instead to avoid potential breakage.`);
    if (!cb) {
        if (immediate !== void 0) warn$1(`watch() "immediate" option is only respected when using the watch(source, callback, options?) signature.`);
        if (deep !== void 0) warn$1(`watch() "deep" option is only respected when using the watch(source, callback, options?) signature.`);
        if (once !== void 0) warn$1(`watch() "once" option is only respected when using the watch(source, callback, options?) signature.`);
    }
    const warnInvalidSource = (s)=>{
        warn$1(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types.`);
    };
    const instance = currentInstance;
    const reactiveGetter = (source2)=>deep === true ? source2 : // for deep: false, only traverse root-level properties
        traverse(source2, deep === false ? 1 : void 0);
    let getter;
    let forceTrigger = false;
    let isMultiSource = false;
    if ((0, _reactivity.isRef)(source)) {
        getter = ()=>source.value;
        forceTrigger = (0, _reactivity.isShallow)(source);
    } else if ((0, _reactivity.isReactive)(source)) {
        getter = ()=>reactiveGetter(source);
        forceTrigger = true;
    } else if ((0, _shared.isArray)(source)) {
        isMultiSource = true;
        forceTrigger = source.some((s)=>(0, _reactivity.isReactive)(s) || (0, _reactivity.isShallow)(s));
        getter = ()=>source.map((s)=>{
                if ((0, _reactivity.isRef)(s)) return s.value;
                else if ((0, _reactivity.isReactive)(s)) return reactiveGetter(s);
                else if ((0, _shared.isFunction)(s)) return callWithErrorHandling(s, instance, 2);
                else warnInvalidSource(s);
            });
    } else if ((0, _shared.isFunction)(source)) {
        if (cb) getter = ()=>callWithErrorHandling(source, instance, 2);
        else getter = ()=>{
            if (cleanup) cleanup();
            return callWithAsyncErrorHandling(source, instance, 3, [
                onCleanup
            ]);
        };
    } else {
        getter = (0, _shared.NOOP);
        warnInvalidSource(source);
    }
    if (cb && deep) {
        const baseGetter = getter;
        getter = ()=>traverse(baseGetter());
    }
    let cleanup;
    let onCleanup = (fn)=>{
        cleanup = effect.onStop = ()=>{
            callWithErrorHandling(fn, instance, 4);
            cleanup = effect.onStop = void 0;
        };
    };
    let ssrCleanup;
    if (isInSSRComponentSetup) {
        onCleanup = (0, _shared.NOOP);
        if (!cb) getter();
        else if (immediate) callWithAsyncErrorHandling(cb, instance, 3, [
            getter(),
            isMultiSource ? [] : void 0,
            onCleanup
        ]);
        if (flush === "sync") {
            const ctx = useSSRContext();
            ssrCleanup = ctx.__watcherHandles || (ctx.__watcherHandles = []);
        } else return 0, _shared.NOOP;
    }
    let oldValue = isMultiSource ? new Array(source.length).fill(INITIAL_WATCHER_VALUE) : INITIAL_WATCHER_VALUE;
    const job = ()=>{
        if (!effect.active || !effect.dirty) return;
        if (cb) {
            const newValue = effect.run();
            if (deep || forceTrigger || (isMultiSource ? newValue.some((v1, i)=>(0, _shared.hasChanged)(v1, oldValue[i])) : (0, _shared.hasChanged)(newValue, oldValue)) || false) {
                if (cleanup) cleanup();
                callWithAsyncErrorHandling(cb, instance, 3, [
                    newValue,
                    // pass undefined as the old value when it's changed for the first time
                    oldValue === INITIAL_WATCHER_VALUE ? void 0 : isMultiSource && oldValue[0] === INITIAL_WATCHER_VALUE ? [] : oldValue,
                    onCleanup
                ]);
                oldValue = newValue;
            }
        } else effect.run();
    };
    job.allowRecurse = !!cb;
    let scheduler;
    if (flush === "sync") scheduler = job;
    else if (flush === "post") scheduler = ()=>queuePostRenderEffect(job, instance && instance.suspense);
    else {
        job.pre = true;
        if (instance) job.id = instance.uid;
        scheduler = ()=>queueJob(job);
    }
    const effect = new (0, _reactivity.ReactiveEffect)(getter, (0, _shared.NOOP), scheduler);
    const scope = (0, _reactivity.getCurrentScope)();
    const unwatch = ()=>{
        effect.stop();
        if (scope) (0, _shared.remove)(scope.effects, effect);
    };
    effect.onTrack = onTrack;
    effect.onTrigger = onTrigger;
    if (cb) {
        if (immediate) job();
        else oldValue = effect.run();
    } else if (flush === "post") queuePostRenderEffect(effect.run.bind(effect), instance && instance.suspense);
    else effect.run();
    if (ssrCleanup) ssrCleanup.push(unwatch);
    return unwatch;
}
function instanceWatch(source, value, options) {
    const publicThis = this.proxy;
    const getter = (0, _shared.isString)(source) ? source.includes(".") ? createPathGetter(publicThis, source) : ()=>publicThis[source] : source.bind(publicThis, publicThis);
    let cb;
    if ((0, _shared.isFunction)(value)) cb = value;
    else {
        cb = value.handler;
        options = value;
    }
    const reset = setCurrentInstance(this);
    const res = doWatch(getter, cb.bind(publicThis), options);
    reset();
    return res;
}
function createPathGetter(ctx, path) {
    const segments = path.split(".");
    return ()=>{
        let cur = ctx;
        for(let i = 0; i < segments.length && cur; i++)cur = cur[segments[i]];
        return cur;
    };
}
function traverse(value, depth = Infinity, seen) {
    if (depth <= 0 || !(0, _shared.isObject)(value) || value["__v_skip"]) return value;
    seen = seen || /* @__PURE__ */ new Set();
    if (seen.has(value)) return value;
    seen.add(value);
    depth--;
    if ((0, _reactivity.isRef)(value)) traverse(value.value, depth, seen);
    else if ((0, _shared.isArray)(value)) for(let i = 0; i < value.length; i++)traverse(value[i], depth, seen);
    else if ((0, _shared.isSet)(value) || (0, _shared.isMap)(value)) value.forEach((v1)=>{
        traverse(v1, depth, seen);
    });
    else if ((0, _shared.isPlainObject)(value)) {
        for(const key in value)traverse(value[key], depth, seen);
        for (const key of Object.getOwnPropertySymbols(value))if (Object.prototype.propertyIsEnumerable.call(value, key)) traverse(value[key], depth, seen);
    }
    return value;
}
function useModel(props, name, options = (0, _shared.EMPTY_OBJ)) {
    const i = getCurrentInstance();
    if (!i) {
        warn$1(`useModel() called without active instance.`);
        return (0, _reactivity.ref)();
    }
    if (!i.propsOptions[0][name]) {
        warn$1(`useModel() called with prop "${name}" which is not declared.`);
        return (0, _reactivity.ref)();
    }
    const camelizedName = (0, _shared.camelize)(name);
    const hyphenatedName = (0, _shared.hyphenate)(name);
    const modifiers = getModelModifiers(props, name);
    const res = (0, _reactivity.customRef)((track, trigger)=>{
        let localValue;
        let prevSetValue = (0, _shared.EMPTY_OBJ);
        let prevEmittedValue;
        watchSyncEffect(()=>{
            const propValue = props[name];
            if ((0, _shared.hasChanged)(localValue, propValue)) {
                localValue = propValue;
                trigger();
            }
        });
        return {
            get () {
                track();
                return options.get ? options.get(localValue) : localValue;
            },
            set (value) {
                const emittedValue = options.set ? options.set(value) : value;
                if (!(0, _shared.hasChanged)(emittedValue, localValue) && !(prevSetValue !== (0, _shared.EMPTY_OBJ) && (0, _shared.hasChanged)(value, prevSetValue))) return;
                const rawProps = i.vnode.props;
                if (!(rawProps && // check if parent has passed v-model
                (name in rawProps || camelizedName in rawProps || hyphenatedName in rawProps) && (`onUpdate:${name}` in rawProps || `onUpdate:${camelizedName}` in rawProps || `onUpdate:${hyphenatedName}` in rawProps))) {
                    localValue = value;
                    trigger();
                }
                i.emit(`update:${name}`, emittedValue);
                if ((0, _shared.hasChanged)(value, emittedValue) && (0, _shared.hasChanged)(value, prevSetValue) && !(0, _shared.hasChanged)(emittedValue, prevEmittedValue)) trigger();
                prevSetValue = value;
                prevEmittedValue = emittedValue;
            }
        };
    });
    res[Symbol.iterator] = ()=>{
        let i2 = 0;
        return {
            next () {
                if (i2 < 2) return {
                    value: i2++ ? modifiers || (0, _shared.EMPTY_OBJ) : res,
                    done: false
                };
                else return {
                    done: true
                };
            }
        };
    };
    return res;
}
const getModelModifiers = (props, modelName)=>{
    return modelName === "modelValue" || modelName === "model-value" ? props.modelModifiers : props[`${modelName}Modifiers`] || props[`${(0, _shared.camelize)(modelName)}Modifiers`] || props[`${(0, _shared.hyphenate)(modelName)}Modifiers`];
};
function emit(instance, event, ...rawArgs) {
    if (instance.isUnmounted) return;
    const props = instance.vnode.props || (0, _shared.EMPTY_OBJ);
    {
        const { emitsOptions, propsOptions: [propsOptions] } = instance;
        if (emitsOptions) {
            if (!(event in emitsOptions) && true) {
                if (!propsOptions || !((0, _shared.toHandlerKey)((0, _shared.camelize)(event)) in propsOptions)) warn$1(`Component emitted event "${event}" but it is neither declared in the emits option nor as an "${(0, _shared.toHandlerKey)((0, _shared.camelize)(event))}" prop.`);
            } else {
                const validator = emitsOptions[event];
                if ((0, _shared.isFunction)(validator)) {
                    const isValid = validator(...rawArgs);
                    if (!isValid) warn$1(`Invalid event arguments: event validation failed for event "${event}".`);
                }
            }
        }
    }
    let args = rawArgs;
    const isModelListener = event.startsWith("update:");
    const modifiers = isModelListener && getModelModifiers(props, event.slice(7));
    if (modifiers) {
        if (modifiers.trim) args = rawArgs.map((a)=>(0, _shared.isString)(a) ? a.trim() : a);
        if (modifiers.number) args = rawArgs.map((0, _shared.looseToNumber));
    }
    devtoolsComponentEmit(instance, event, args);
    {
        const lowerCaseEvent = event.toLowerCase();
        if (lowerCaseEvent !== event && props[(0, _shared.toHandlerKey)(lowerCaseEvent)]) warn$1(`Event "${lowerCaseEvent}" is emitted in component ${formatComponentName(instance, instance.type)} but the handler is registered for "${event}". Note that HTML attributes are case-insensitive and you cannot use v-on to listen to camelCase events when using in-DOM templates. You should probably use "${(0, _shared.hyphenate)(event)}" instead of "${event}".`);
    }
    let handlerName;
    let handler = props[handlerName = (0, _shared.toHandlerKey)(event)] || // also try camelCase event handler (#2249)
    props[handlerName = (0, _shared.toHandlerKey)((0, _shared.camelize)(event))];
    if (!handler && isModelListener) handler = props[handlerName = (0, _shared.toHandlerKey)((0, _shared.hyphenate)(event))];
    if (handler) callWithAsyncErrorHandling(handler, instance, 6, args);
    const onceHandler = props[handlerName + `Once`];
    if (onceHandler) {
        if (!instance.emitted) instance.emitted = {};
        else if (instance.emitted[handlerName]) return;
        instance.emitted[handlerName] = true;
        callWithAsyncErrorHandling(onceHandler, instance, 6, args);
    }
}
function normalizeEmitsOptions(comp, appContext, asMixin = false) {
    const cache = appContext.emitsCache;
    const cached = cache.get(comp);
    if (cached !== void 0) return cached;
    const raw = comp.emits;
    let normalized = {};
    let hasExtends = false;
    if (__VUE_OPTIONS_API__ && !(0, _shared.isFunction)(comp)) {
        const extendEmits = (raw2)=>{
            const normalizedFromExtend = normalizeEmitsOptions(raw2, appContext, true);
            if (normalizedFromExtend) {
                hasExtends = true;
                (0, _shared.extend)(normalized, normalizedFromExtend);
            }
        };
        if (!asMixin && appContext.mixins.length) appContext.mixins.forEach(extendEmits);
        if (comp.extends) extendEmits(comp.extends);
        if (comp.mixins) comp.mixins.forEach(extendEmits);
    }
    if (!raw && !hasExtends) {
        if ((0, _shared.isObject)(comp)) cache.set(comp, null);
        return null;
    }
    if ((0, _shared.isArray)(raw)) raw.forEach((key)=>normalized[key] = null);
    else (0, _shared.extend)(normalized, raw);
    if ((0, _shared.isObject)(comp)) cache.set(comp, normalized);
    return normalized;
}
function isEmitListener(options, key) {
    if (!options || !(0, _shared.isOn)(key)) return false;
    key = key.slice(2).replace(/Once$/, "");
    return (0, _shared.hasOwn)(options, key[0].toLowerCase() + key.slice(1)) || (0, _shared.hasOwn)(options, (0, _shared.hyphenate)(key)) || (0, _shared.hasOwn)(options, key);
}
let accessedAttrs = false;
function markAttrsAccessed() {
    accessedAttrs = true;
}
function renderComponentRoot(instance) {
    const { type: Component, vnode, proxy, withProxy, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, props, data, setupState, ctx, inheritAttrs } = instance;
    const prev = setCurrentRenderingInstance(instance);
    let result;
    let fallthroughAttrs;
    accessedAttrs = false;
    try {
        if (vnode.shapeFlag & 4) {
            const proxyToUse = withProxy || proxy;
            const thisProxy = (0, setupState.__isScriptSetup) ? new Proxy(proxyToUse, {
                get (target, key, receiver) {
                    warn$1(`Property '${String(key)}' was accessed via 'this'. Avoid using 'this' in templates.`);
                    return Reflect.get(target, key, receiver);
                }
            }) : proxyToUse;
            result = normalizeVNode(render.call(thisProxy, proxyToUse, renderCache, (0, _reactivity.shallowReadonly)(props), setupState, data, ctx));
            fallthroughAttrs = attrs;
        } else {
            const render2 = Component;
            if (attrs === props) markAttrsAccessed();
            result = normalizeVNode(render2.length > 1 ? render2((0, _reactivity.shallowReadonly)(props), {
                get attrs () {
                    markAttrsAccessed();
                    return (0, _reactivity.shallowReadonly)(attrs);
                },
                slots,
                emit
            }) : render2((0, _reactivity.shallowReadonly)(props), null));
            fallthroughAttrs = Component.props ? attrs : getFunctionalFallthrough(attrs);
        }
    } catch (err) {
        blockStack.length = 0;
        handleError(err, instance, 1);
        result = createVNode(Comment);
    }
    let root = result;
    let setRoot = void 0;
    if (result.patchFlag > 0 && result.patchFlag & 2048) [root, setRoot] = getChildRoot(result);
    if (fallthroughAttrs && inheritAttrs !== false) {
        const keys = Object.keys(fallthroughAttrs);
        const { shapeFlag } = root;
        if (keys.length) {
            if (shapeFlag & 7) {
                if (propsOptions && keys.some((0, _shared.isModelListener))) fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);
                root = cloneVNode(root, fallthroughAttrs, false, true);
            } else if (!accessedAttrs && root.type !== Comment) {
                const allAttrs = Object.keys(attrs);
                const eventAttrs = [];
                const extraAttrs = [];
                for(let i = 0, l = allAttrs.length; i < l; i++){
                    const key = allAttrs[i];
                    if ((0, _shared.isOn)(key)) {
                        if (!(0, _shared.isModelListener)(key)) eventAttrs.push(key[2].toLowerCase() + key.slice(3));
                    } else extraAttrs.push(key);
                }
                if (extraAttrs.length) warn$1(`Extraneous non-props attributes (${extraAttrs.join(", ")}) were passed to component but could not be automatically inherited because component renders fragment or text root nodes.`);
                if (eventAttrs.length) warn$1(`Extraneous non-emits event listeners (${eventAttrs.join(", ")}) were passed to component but could not be automatically inherited because component renders fragment or text root nodes. If the listener is intended to be a component custom event listener only, declare it using the "emits" option.`);
            }
        }
    }
    if (vnode.dirs) {
        if (!isElementRoot(root)) warn$1(`Runtime directive used on component with non-element root node. The directives will not function as intended.`);
        root = cloneVNode(root, null, false, true);
        root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;
    }
    if (vnode.transition) {
        if (!isElementRoot(root)) warn$1(`Component inside <Transition> renders non-element root node that cannot be animated.`);
        root.transition = vnode.transition;
    }
    if (setRoot) setRoot(root);
    else result = root;
    setCurrentRenderingInstance(prev);
    return result;
}
const getChildRoot = (vnode)=>{
    const rawChildren = vnode.children;
    const dynamicChildren = vnode.dynamicChildren;
    const childRoot = filterSingleRoot(rawChildren, false);
    if (!childRoot) return [
        vnode,
        void 0
    ];
    else if (childRoot.patchFlag > 0 && childRoot.patchFlag & 2048) return getChildRoot(childRoot);
    const index = rawChildren.indexOf(childRoot);
    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;
    const setRoot = (updatedRoot)=>{
        rawChildren[index] = updatedRoot;
        if (dynamicChildren) {
            if (dynamicIndex > -1) dynamicChildren[dynamicIndex] = updatedRoot;
            else if (updatedRoot.patchFlag > 0) vnode.dynamicChildren = [
                ...dynamicChildren,
                updatedRoot
            ];
        }
    };
    return [
        normalizeVNode(childRoot),
        setRoot
    ];
};
function filterSingleRoot(children, recurse = true) {
    let singleRoot;
    for(let i = 0; i < children.length; i++){
        const child = children[i];
        if (isVNode(child)) {
            if (child.type !== Comment || child.children === "v-if") {
                if (singleRoot) return;
                else {
                    singleRoot = child;
                    if (recurse && singleRoot.patchFlag > 0 && singleRoot.patchFlag & 2048) return filterSingleRoot(singleRoot.children);
                }
            }
        } else return;
    }
    return singleRoot;
}
const getFunctionalFallthrough = (attrs)=>{
    let res;
    for(const key in attrs)if (key === "class" || key === "style" || (0, _shared.isOn)(key)) (res || (res = {}))[key] = attrs[key];
    return res;
};
const filterModelListeners = (attrs, props)=>{
    const res = {};
    for(const key in attrs)if (!(0, _shared.isModelListener)(key) || !(key.slice(9) in props)) res[key] = attrs[key];
    return res;
};
const isElementRoot = (vnode)=>{
    return vnode.shapeFlag & 7 || vnode.type === Comment;
};
function shouldUpdateComponent(prevVNode, nextVNode, optimized) {
    const { props: prevProps, children: prevChildren, component } = prevVNode;
    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;
    const emits = component.emitsOptions;
    if ((prevChildren || nextChildren) && isHmrUpdating) return true;
    if (nextVNode.dirs || nextVNode.transition) return true;
    if (optimized && patchFlag >= 0) {
        if (patchFlag & 1024) return true;
        if (patchFlag & 16) {
            if (!prevProps) return !!nextProps;
            return hasPropsChanged(prevProps, nextProps, emits);
        } else if (patchFlag & 8) {
            const dynamicProps = nextVNode.dynamicProps;
            for(let i = 0; i < dynamicProps.length; i++){
                const key = dynamicProps[i];
                if (nextProps[key] !== prevProps[key] && !isEmitListener(emits, key)) return true;
            }
        }
    } else {
        if (prevChildren || nextChildren) {
            if (!nextChildren || !nextChildren.$stable) return true;
        }
        if (prevProps === nextProps) return false;
        if (!prevProps) return !!nextProps;
        if (!nextProps) return true;
        return hasPropsChanged(prevProps, nextProps, emits);
    }
    return false;
}
function hasPropsChanged(prevProps, nextProps, emitsOptions) {
    const nextKeys = Object.keys(nextProps);
    if (nextKeys.length !== Object.keys(prevProps).length) return true;
    for(let i = 0; i < nextKeys.length; i++){
        const key = nextKeys[i];
        if (nextProps[key] !== prevProps[key] && !isEmitListener(emitsOptions, key)) return true;
    }
    return false;
}
function updateHOCHostEl({ vnode, parent }, el) {
    while(parent){
        const root = parent.subTree;
        if (root.suspense && root.suspense.activeBranch === vnode) root.el = vnode.el;
        if (root === vnode) {
            (vnode = parent.vnode).el = el;
            parent = parent.parent;
        } else break;
    }
}
const isSuspense = (type)=>type.__isSuspense;
let suspenseId = 0;
const SuspenseImpl = {
    name: "Suspense",
    // In order to make Suspense tree-shakable, we need to avoid importing it
    // directly in the renderer. The renderer checks for the __isSuspense flag
    // on a vnode's type and calls the `process` method, passing in renderer
    // internals.
    __isSuspense: true,
    process (n1, n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, rendererInternals) {
        if (n1 == null) mountSuspense(n2, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, rendererInternals);
        else {
            if (parentSuspense && parentSuspense.deps > 0 && !n1.suspense.isInFallback) {
                n2.suspense = n1.suspense;
                n2.suspense.vnode = n2;
                n2.el = n1.el;
                return;
            }
            patchSuspense(n1, n2, container, anchor, parentComponent, namespace, slotScopeIds, optimized, rendererInternals);
        }
    },
    hydrate: hydrateSuspense,
    normalize: normalizeSuspenseChildren
};
const Suspense = SuspenseImpl;
function triggerEvent(vnode, name) {
    const eventListener = vnode.props && vnode.props[name];
    if ((0, _shared.isFunction)(eventListener)) eventListener();
}
function mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, rendererInternals) {
    const { p: patch, o: { createElement } } = rendererInternals;
    const hiddenContainer = createElement("div");
    const suspense = vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, namespace, slotScopeIds, optimized, rendererInternals);
    patch(null, suspense.pendingBranch = vnode.ssContent, hiddenContainer, null, parentComponent, suspense, namespace, slotScopeIds);
    if (suspense.deps > 0) {
        triggerEvent(vnode, "onPending");
        triggerEvent(vnode, "onFallback");
        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context
        namespace, slotScopeIds);
        setActiveBranch(suspense, vnode.ssFallback);
    } else suspense.resolve(false, true);
}
function patchSuspense(n1, n2, container, anchor, parentComponent, namespace, slotScopeIds, optimized, { p: patch, um: unmount, o: { createElement } }) {
    const suspense = n2.suspense = n1.suspense;
    suspense.vnode = n2;
    n2.el = n1.el;
    const newBranch = n2.ssContent;
    const newFallback = n2.ssFallback;
    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;
    if (pendingBranch) {
        suspense.pendingBranch = newBranch;
        if (isSameVNodeType(newBranch, pendingBranch)) {
            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, namespace, slotScopeIds, optimized);
            if (suspense.deps <= 0) suspense.resolve();
            else if (isInFallback) {
                if (!isHydrating) {
                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context
                    namespace, slotScopeIds, optimized);
                    setActiveBranch(suspense, newFallback);
                }
            }
        } else {
            suspense.pendingId = suspenseId++;
            if (isHydrating) {
                suspense.isHydrating = false;
                suspense.activeBranch = pendingBranch;
            } else unmount(pendingBranch, parentComponent, suspense);
            suspense.deps = 0;
            suspense.effects.length = 0;
            suspense.hiddenContainer = createElement("div");
            if (isInFallback) {
                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, namespace, slotScopeIds, optimized);
                if (suspense.deps <= 0) suspense.resolve();
                else {
                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context
                    namespace, slotScopeIds, optimized);
                    setActiveBranch(suspense, newFallback);
                }
            } else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {
                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, namespace, slotScopeIds, optimized);
                suspense.resolve(true);
            } else {
                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, namespace, slotScopeIds, optimized);
                if (suspense.deps <= 0) suspense.resolve();
            }
        }
    } else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {
        patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, namespace, slotScopeIds, optimized);
        setActiveBranch(suspense, newBranch);
    } else {
        triggerEvent(n2, "onPending");
        suspense.pendingBranch = newBranch;
        if (newBranch.shapeFlag & 512) suspense.pendingId = newBranch.component.suspenseId;
        else suspense.pendingId = suspenseId++;
        patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, namespace, slotScopeIds, optimized);
        if (suspense.deps <= 0) suspense.resolve();
        else {
            const { timeout, pendingId } = suspense;
            if (timeout > 0) setTimeout(()=>{
                if (suspense.pendingId === pendingId) suspense.fallback(newFallback);
            }, timeout);
            else if (timeout === 0) suspense.fallback(newFallback);
        }
    }
}
let hasWarned = false;
function createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, namespace, slotScopeIds, optimized, rendererInternals, isHydrating = false) {
    if (!hasWarned) {
        hasWarned = true;
        console[console.info ? "info" : "log"](`<Suspense> is an experimental feature and its API will likely change.`);
    }
    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;
    let parentSuspenseId;
    const isSuspensible = isVNodeSuspensible(vnode);
    if (isSuspensible) {
        if (parentSuspense && parentSuspense.pendingBranch) {
            parentSuspenseId = parentSuspense.pendingId;
            parentSuspense.deps++;
        }
    }
    const timeout = vnode.props ? (0, _shared.toNumber)(vnode.props.timeout) : void 0;
    assertNumber(timeout, `Suspense timeout`);
    const initialAnchor = anchor;
    const suspense = {
        vnode,
        parent: parentSuspense,
        parentComponent,
        namespace,
        container,
        hiddenContainer,
        deps: 0,
        pendingId: suspenseId++,
        timeout: typeof timeout === "number" ? timeout : -1,
        activeBranch: null,
        pendingBranch: null,
        isInFallback: !isHydrating,
        isHydrating,
        isUnmounted: false,
        effects: [],
        resolve (resume = false, sync = false) {
            if (!resume && !suspense.pendingBranch) throw new Error(`suspense.resolve() is called without a pending branch.`);
            if (suspense.isUnmounted) throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);
            const { vnode: vnode2, activeBranch, pendingBranch, pendingId, effects, parentComponent: parentComponent2, container: container2 } = suspense;
            let delayEnter = false;
            if (suspense.isHydrating) suspense.isHydrating = false;
            else if (!resume) {
                delayEnter = activeBranch && pendingBranch.transition && pendingBranch.transition.mode === "out-in";
                if (delayEnter) activeBranch.transition.afterLeave = ()=>{
                    if (pendingId === suspense.pendingId) {
                        move(pendingBranch, container2, anchor === initialAnchor ? next(activeBranch) : anchor, 0);
                        queuePostFlushCb(effects);
                    }
                };
                if (activeBranch) {
                    if (parentNode(activeBranch.el) !== suspense.hiddenContainer) anchor = next(activeBranch);
                    unmount(activeBranch, parentComponent2, suspense, true);
                }
                if (!delayEnter) move(pendingBranch, container2, anchor, 0);
            }
            setActiveBranch(suspense, pendingBranch);
            suspense.pendingBranch = null;
            suspense.isInFallback = false;
            let parent = suspense.parent;
            let hasUnresolvedAncestor = false;
            while(parent){
                if (parent.pendingBranch) {
                    parent.effects.push(...effects);
                    hasUnresolvedAncestor = true;
                    break;
                }
                parent = parent.parent;
            }
            if (!hasUnresolvedAncestor && !delayEnter) queuePostFlushCb(effects);
            suspense.effects = [];
            if (isSuspensible) {
                if (parentSuspense && parentSuspense.pendingBranch && parentSuspenseId === parentSuspense.pendingId) {
                    parentSuspense.deps--;
                    if (parentSuspense.deps === 0 && !sync) parentSuspense.resolve();
                }
            }
            triggerEvent(vnode2, "onResolve");
        },
        fallback (fallbackVNode) {
            if (!suspense.pendingBranch) return;
            const { vnode: vnode2, activeBranch, parentComponent: parentComponent2, container: container2, namespace: namespace2 } = suspense;
            triggerEvent(vnode2, "onFallback");
            const anchor2 = next(activeBranch);
            const mountFallback = ()=>{
                if (!suspense.isInFallback) return;
                patch(null, fallbackVNode, container2, anchor2, parentComponent2, null, // fallback tree will not have suspense context
                namespace2, slotScopeIds, optimized);
                setActiveBranch(suspense, fallbackVNode);
            };
            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === "out-in";
            if (delayEnter) activeBranch.transition.afterLeave = mountFallback;
            suspense.isInFallback = true;
            unmount(activeBranch, parentComponent2, null, // no suspense so unmount hooks fire now
            true);
            if (!delayEnter) mountFallback();
        },
        move (container2, anchor2, type) {
            suspense.activeBranch && move(suspense.activeBranch, container2, anchor2, type);
            suspense.container = container2;
        },
        next () {
            return suspense.activeBranch && next(suspense.activeBranch);
        },
        registerDep (instance, setupRenderEffect, optimized2) {
            const isInPendingSuspense = !!suspense.pendingBranch;
            if (isInPendingSuspense) suspense.deps++;
            const hydratedEl = instance.vnode.el;
            instance.asyncDep.catch((err)=>{
                handleError(err, instance, 0);
            }).then((asyncSetupResult)=>{
                if (instance.isUnmounted || suspense.isUnmounted || suspense.pendingId !== instance.suspenseId) return;
                instance.asyncResolved = true;
                const { vnode: vnode2 } = instance;
                pushWarningContext(vnode2);
                handleSetupResult(instance, asyncSetupResult, false);
                if (hydratedEl) vnode2.el = hydratedEl;
                const placeholder = !hydratedEl && instance.subTree.el;
                setupRenderEffect(instance, vnode2, // component may have been moved before resolve.
                // if this is not a hydration, instance.subTree will be the comment
                // placeholder.
                parentNode(hydratedEl || instance.subTree.el), // anchor will not be used if this is hydration, so only need to
                // consider the comment placeholder case.
                hydratedEl ? null : next(instance.subTree), suspense, namespace, optimized2);
                if (placeholder) remove(placeholder);
                updateHOCHostEl(instance, vnode2.el);
                popWarningContext();
                if (isInPendingSuspense && --suspense.deps === 0) suspense.resolve();
            });
        },
        unmount (parentSuspense2, doRemove) {
            suspense.isUnmounted = true;
            if (suspense.activeBranch) unmount(suspense.activeBranch, parentComponent, parentSuspense2, doRemove);
            if (suspense.pendingBranch) unmount(suspense.pendingBranch, parentComponent, parentSuspense2, doRemove);
        }
    };
    return suspense;
}
function hydrateSuspense(node, vnode, parentComponent, parentSuspense, namespace, slotScopeIds, optimized, rendererInternals, hydrateNode) {
    const suspense = vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, // eslint-disable-next-line no-restricted-globals
    document.createElement("div"), null, namespace, slotScopeIds, optimized, rendererInternals, true);
    const result = hydrateNode(node, suspense.pendingBranch = vnode.ssContent, parentComponent, suspense, slotScopeIds, optimized);
    if (suspense.deps === 0) suspense.resolve(false, true);
    return result;
}
function normalizeSuspenseChildren(vnode) {
    const { shapeFlag, children } = vnode;
    const isSlotChildren = shapeFlag & 32;
    vnode.ssContent = normalizeSuspenseSlot(isSlotChildren ? children.default : children);
    vnode.ssFallback = isSlotChildren ? normalizeSuspenseSlot(children.fallback) : createVNode(Comment);
}
function normalizeSuspenseSlot(s) {
    let block;
    if ((0, _shared.isFunction)(s)) {
        const trackBlock = isBlockTreeEnabled && s._c;
        if (trackBlock) {
            s._d = false;
            openBlock();
        }
        s = s();
        if (trackBlock) {
            s._d = true;
            block = currentBlock;
            closeBlock();
        }
    }
    if ((0, _shared.isArray)(s)) {
        const singleChild = filterSingleRoot(s);
        if (!singleChild && s.filter((child)=>child !== NULL_DYNAMIC_COMPONENT).length > 0) warn$1(`<Suspense> slots expect a single root node.`);
        s = singleChild;
    }
    s = normalizeVNode(s);
    if (block && !s.dynamicChildren) s.dynamicChildren = block.filter((c)=>c !== s);
    return s;
}
function queueEffectWithSuspense(fn, suspense) {
    if (suspense && suspense.pendingBranch) {
        if ((0, _shared.isArray)(fn)) suspense.effects.push(...fn);
        else suspense.effects.push(fn);
    } else queuePostFlushCb(fn);
}
function setActiveBranch(suspense, branch) {
    suspense.activeBranch = branch;
    const { vnode, parentComponent } = suspense;
    let el = branch.el;
    while(!el && branch.component){
        branch = branch.component.subTree;
        el = branch.el;
    }
    vnode.el = el;
    if (parentComponent && parentComponent.subTree === vnode) {
        parentComponent.vnode.el = el;
        updateHOCHostEl(parentComponent, el);
    }
}
function isVNodeSuspensible(vnode) {
    const suspensible = vnode.props && vnode.props.suspensible;
    return suspensible != null && suspensible !== false;
}
const Fragment = Symbol.for("v-fgt");
const Text = Symbol.for("v-txt");
const Comment = Symbol.for("v-cmt");
const Static = Symbol.for("v-stc");
const blockStack = [];
let currentBlock = null;
function openBlock(disableTracking = false) {
    blockStack.push(currentBlock = disableTracking ? null : []);
}
function closeBlock() {
    blockStack.pop();
    currentBlock = blockStack[blockStack.length - 1] || null;
}
let isBlockTreeEnabled = 1;
function setBlockTracking(value) {
    isBlockTreeEnabled += value;
    if (value < 0 && currentBlock) currentBlock.hasOnce = true;
}
function setupBlock(vnode) {
    vnode.dynamicChildren = isBlockTreeEnabled > 0 ? currentBlock || (0, _shared.EMPTY_ARR) : null;
    closeBlock();
    if (isBlockTreeEnabled > 0 && currentBlock) currentBlock.push(vnode);
    return vnode;
}
function createElementBlock(type, props, children, patchFlag, dynamicProps, shapeFlag) {
    return setupBlock(createBaseVNode(type, props, children, patchFlag, dynamicProps, shapeFlag, true));
}
function createBlock(type, props, children, patchFlag, dynamicProps) {
    return setupBlock(createVNode(type, props, children, patchFlag, dynamicProps, true));
}
function isVNode(value) {
    return value ? value.__v_isVNode === true : false;
}
function isSameVNodeType(n1, n2) {
    if (n2.shapeFlag & 6 && n1.component) {
        const dirtyInstances = hmrDirtyComponents.get(n2.type);
        if (dirtyInstances && dirtyInstances.has(n1.component)) {
            n1.shapeFlag &= -257;
            n2.shapeFlag &= -513;
            return false;
        }
    }
    return n1.type === n2.type && n1.key === n2.key;
}
let vnodeArgsTransformer;
function transformVNodeArgs(transformer) {
    vnodeArgsTransformer = transformer;
}
const createVNodeWithArgsTransform = (...args)=>{
    return _createVNode(...vnodeArgsTransformer ? vnodeArgsTransformer(args, currentRenderingInstance) : args);
};
const normalizeKey = ({ key })=>key != null ? key : null;
const normalizeRef = ({ ref, ref_key, ref_for })=>{
    if (typeof ref === "number") ref = "" + ref;
    return ref != null ? (0, _shared.isString)(ref) || (0, _reactivity.isRef)(ref) || (0, _shared.isFunction)(ref) ? {
        i: currentRenderingInstance,
        r: ref,
        k: ref_key,
        f: !!ref_for
    } : ref : null;
};
function createBaseVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, shapeFlag = type === Fragment ? 0 : 1, isBlockNode = false, needFullChildrenNormalization = false) {
    const vnode = {
        __v_isVNode: true,
        __v_skip: true,
        type,
        props,
        key: props && normalizeKey(props),
        ref: props && normalizeRef(props),
        scopeId: currentScopeId,
        slotScopeIds: null,
        children,
        component: null,
        suspense: null,
        ssContent: null,
        ssFallback: null,
        dirs: null,
        transition: null,
        el: null,
        anchor: null,
        target: null,
        targetStart: null,
        targetAnchor: null,
        staticCount: 0,
        shapeFlag,
        patchFlag,
        dynamicProps,
        dynamicChildren: null,
        appContext: null,
        ctx: currentRenderingInstance
    };
    if (needFullChildrenNormalization) {
        normalizeChildren(vnode, children);
        if (shapeFlag & 128) type.normalize(vnode);
    } else if (children) vnode.shapeFlag |= (0, _shared.isString)(children) ? 8 : 16;
    if (vnode.key !== vnode.key) warn$1(`VNode created with invalid key (NaN). VNode type:`, vnode.type);
    if (isBlockTreeEnabled > 0 && // avoid a block node from tracking itself
    !isBlockNode && // has current parent block
    currentBlock && // presence of a patch flag indicates this node needs patching on updates.
    // component nodes also should always be patched, because even if the
    // component doesn't need to update, it needs to persist the instance on to
    // the next vnode so that it can be properly unmounted later.
    (vnode.patchFlag > 0 || shapeFlag & 6) && // the EVENTS flag is only for hydration and if it is the only flag, the
    // vnode should not be considered dynamic due to handler caching.
    vnode.patchFlag !== 32) currentBlock.push(vnode);
    return vnode;
}
const createVNode = createVNodeWithArgsTransform;
function _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {
    if (!type || type === NULL_DYNAMIC_COMPONENT) {
        if (!type) warn$1(`Invalid vnode type when creating vnode: ${type}.`);
        type = Comment;
    }
    if (isVNode(type)) {
        const cloned = cloneVNode(type, props, true);
        if (children) normalizeChildren(cloned, children);
        if (isBlockTreeEnabled > 0 && !isBlockNode && currentBlock) {
            if (cloned.shapeFlag & 6) currentBlock[currentBlock.indexOf(type)] = cloned;
            else currentBlock.push(cloned);
        }
        cloned.patchFlag = -2;
        return cloned;
    }
    if (isClassComponent(type)) type = type.__vccOpts;
    if (props) {
        props = guardReactiveProps(props);
        let { class: klass, style } = props;
        if (klass && !(0, _shared.isString)(klass)) props.class = (0, _shared.normalizeClass)(klass);
        if ((0, _shared.isObject)(style)) {
            if ((0, _reactivity.isProxy)(style) && !(0, _shared.isArray)(style)) style = (0, _shared.extend)({}, style);
            props.style = (0, _shared.normalizeStyle)(style);
        }
    }
    const shapeFlag = (0, _shared.isString)(type) ? 1 : isSuspense(type) ? 128 : isTeleport(type) ? 64 : (0, _shared.isObject)(type) ? 4 : (0, _shared.isFunction)(type) ? 2 : 0;
    if (shapeFlag & 4 && (0, _reactivity.isProxy)(type)) {
        type = (0, _reactivity.toRaw)(type);
        warn$1(`Vue received a Component that was made a reactive object. This can lead to unnecessary performance overhead and should be avoided by marking the component with \`markRaw\` or using \`shallowRef\` instead of \`ref\`.`, `
Component that was made reactive: `, type);
    }
    return createBaseVNode(type, props, children, patchFlag, dynamicProps, shapeFlag, isBlockNode, true);
}
function guardReactiveProps(props) {
    if (!props) return null;
    return (0, _reactivity.isProxy)(props) || isInternalObject(props) ? (0, _shared.extend)({}, props) : props;
}
function cloneVNode(vnode, extraProps, mergeRef = false, cloneTransition = false) {
    const { props, ref, patchFlag, children, transition } = vnode;
    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;
    const cloned = {
        __v_isVNode: true,
        __v_skip: true,
        type: vnode.type,
        props: mergedProps,
        key: mergedProps && normalizeKey(mergedProps),
        ref: extraProps && extraProps.ref ? // #2078 in the case of <component :is="vnode" ref="extra"/>
        // if the vnode itself already has a ref, cloneVNode will need to merge
        // the refs so the single vnode can be set on multiple refs
        mergeRef && ref ? (0, _shared.isArray)(ref) ? ref.concat(normalizeRef(extraProps)) : [
            ref,
            normalizeRef(extraProps)
        ] : normalizeRef(extraProps) : ref,
        scopeId: vnode.scopeId,
        slotScopeIds: vnode.slotScopeIds,
        children: patchFlag === -1 && (0, _shared.isArray)(children) ? children.map(deepCloneVNode) : children,
        target: vnode.target,
        targetStart: vnode.targetStart,
        targetAnchor: vnode.targetAnchor,
        staticCount: vnode.staticCount,
        shapeFlag: vnode.shapeFlag,
        // if the vnode is cloned with extra props, we can no longer assume its
        // existing patch flag to be reliable and need to add the FULL_PROPS flag.
        // note: preserve flag for fragments since they use the flag for children
        // fast paths only.
        patchFlag: extraProps && vnode.type !== Fragment ? patchFlag === -1 ? 16 : patchFlag | 16 : patchFlag,
        dynamicProps: vnode.dynamicProps,
        dynamicChildren: vnode.dynamicChildren,
        appContext: vnode.appContext,
        dirs: vnode.dirs,
        transition,
        // These should technically only be non-null on mounted VNodes. However,
        // they *should* be copied for kept-alive vnodes. So we just always copy
        // them since them being non-null during a mount doesn't affect the logic as
        // they will simply be overwritten.
        component: vnode.component,
        suspense: vnode.suspense,
        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),
        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),
        el: vnode.el,
        anchor: vnode.anchor,
        ctx: vnode.ctx,
        ce: vnode.ce
    };
    if (transition && cloneTransition) setTransitionHooks(cloned, transition.clone(cloned));
    return cloned;
}
function deepCloneVNode(vnode) {
    const cloned = cloneVNode(vnode);
    if ((0, _shared.isArray)(vnode.children)) cloned.children = vnode.children.map(deepCloneVNode);
    return cloned;
}
function createTextVNode(text = " ", flag = 0) {
    return createVNode(Text, null, text, flag);
}
function createStaticVNode(content, numberOfNodes) {
    const vnode = createVNode(Static, null, content);
    vnode.staticCount = numberOfNodes;
    return vnode;
}
function createCommentVNode(text = "", asBlock = false) {
    return asBlock ? (openBlock(), createBlock(Comment, null, text)) : createVNode(Comment, null, text);
}
function normalizeVNode(child) {
    if (child == null || typeof child === "boolean") return createVNode(Comment);
    else if ((0, _shared.isArray)(child)) return createVNode(Fragment, null, // #3666, avoid reference pollution when reusing vnode
    child.slice());
    else if (typeof child === "object") return cloneIfMounted(child);
    else return createVNode(Text, null, String(child));
}
function cloneIfMounted(child) {
    return child.el === null && child.patchFlag !== -1 || child.memo ? child : cloneVNode(child);
}
function normalizeChildren(vnode, children) {
    let type = 0;
    const { shapeFlag } = vnode;
    if (children == null) children = null;
    else if ((0, _shared.isArray)(children)) type = 16;
    else if (typeof children === "object") {
        if (shapeFlag & 65) {
            const slot = children.default;
            if (slot) {
                slot._c && (slot._d = false);
                normalizeChildren(vnode, slot());
                slot._c && (slot._d = true);
            }
            return;
        } else {
            type = 32;
            const slotFlag = children._;
            if (!slotFlag && !isInternalObject(children)) children._ctx = currentRenderingInstance;
            else if (slotFlag === 3 && currentRenderingInstance) {
                if (currentRenderingInstance.slots._ === 1) children._ = 1;
                else {
                    children._ = 2;
                    vnode.patchFlag |= 1024;
                }
            }
        }
    } else if ((0, _shared.isFunction)(children)) {
        children = {
            default: children,
            _ctx: currentRenderingInstance
        };
        type = 32;
    } else {
        children = String(children);
        if (shapeFlag & 64) {
            type = 16;
            children = [
                createTextVNode(children)
            ];
        } else type = 8;
    }
    vnode.children = children;
    vnode.shapeFlag |= type;
}
function mergeProps(...args) {
    const ret = {};
    for(let i = 0; i < args.length; i++){
        const toMerge = args[i];
        for(const key in toMerge){
            if (key === "class") {
                if (ret.class !== toMerge.class) ret.class = (0, _shared.normalizeClass)([
                    ret.class,
                    toMerge.class
                ]);
            } else if (key === "style") ret.style = (0, _shared.normalizeStyle)([
                ret.style,
                toMerge.style
            ]);
            else if ((0, _shared.isOn)(key)) {
                const existing = ret[key];
                const incoming = toMerge[key];
                if (incoming && existing !== incoming && !((0, _shared.isArray)(existing) && existing.includes(incoming))) ret[key] = existing ? [].concat(existing, incoming) : incoming;
            } else if (key !== "") ret[key] = toMerge[key];
        }
    }
    return ret;
}
function invokeVNodeHook(hook, instance, vnode, prevVNode = null) {
    callWithAsyncErrorHandling(hook, instance, 7, [
        vnode,
        prevVNode
    ]);
}
const emptyAppContext = createAppContext();
let uid = 0;
function createComponentInstance(vnode, parent, suspense) {
    const type = vnode.type;
    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;
    const instance = {
        uid: uid++,
        vnode,
        type,
        parent,
        appContext,
        root: null,
        // to be immediately set
        next: null,
        subTree: null,
        // will be set synchronously right after creation
        effect: null,
        update: null,
        // will be set synchronously right after creation
        scope: new (0, _reactivity.EffectScope)(true),
        render: null,
        proxy: null,
        exposed: null,
        exposeProxy: null,
        withProxy: null,
        provides: parent ? parent.provides : Object.create(appContext.provides),
        accessCache: null,
        renderCache: [],
        // local resolved assets
        components: null,
        directives: null,
        // resolved props and emits options
        propsOptions: normalizePropsOptions(type, appContext),
        emitsOptions: normalizeEmitsOptions(type, appContext),
        // emit
        emit: null,
        // to be set immediately
        emitted: null,
        // props default value
        propsDefaults: (0, _shared.EMPTY_OBJ),
        // inheritAttrs
        inheritAttrs: type.inheritAttrs,
        // state
        ctx: (0, _shared.EMPTY_OBJ),
        data: (0, _shared.EMPTY_OBJ),
        props: (0, _shared.EMPTY_OBJ),
        attrs: (0, _shared.EMPTY_OBJ),
        slots: (0, _shared.EMPTY_OBJ),
        refs: (0, _shared.EMPTY_OBJ),
        setupState: (0, _shared.EMPTY_OBJ),
        setupContext: null,
        // suspense related
        suspense,
        suspenseId: suspense ? suspense.pendingId : 0,
        asyncDep: null,
        asyncResolved: false,
        // lifecycle hooks
        // not using enums here because it results in computed properties
        isMounted: false,
        isUnmounted: false,
        isDeactivated: false,
        bc: null,
        c: null,
        bm: null,
        m: null,
        bu: null,
        u: null,
        um: null,
        bum: null,
        da: null,
        a: null,
        rtg: null,
        rtc: null,
        ec: null,
        sp: null
    };
    instance.ctx = createDevRenderContext(instance);
    instance.root = parent ? parent.root : instance;
    instance.emit = emit.bind(null, instance);
    if (vnode.ce) vnode.ce(instance);
    return instance;
}
let currentInstance = null;
const getCurrentInstance = ()=>currentInstance || currentRenderingInstance;
let internalSetCurrentInstance;
let setInSSRSetupState;
{
    const g = (0, _shared.getGlobalThis)();
    const registerGlobalSetter = (key, setter)=>{
        let setters;
        if (!(setters = g[key])) setters = g[key] = [];
        setters.push(setter);
        return (v1)=>{
            if (setters.length > 1) setters.forEach((set)=>set(v1));
            else setters[0](v1);
        };
    };
    internalSetCurrentInstance = registerGlobalSetter(`__VUE_INSTANCE_SETTERS__`, (v1)=>currentInstance = v1);
    setInSSRSetupState = registerGlobalSetter(`__VUE_SSR_SETTERS__`, (v1)=>isInSSRComponentSetup = v1);
}const setCurrentInstance = (instance)=>{
    const prev = currentInstance;
    internalSetCurrentInstance(instance);
    instance.scope.on();
    return ()=>{
        instance.scope.off();
        internalSetCurrentInstance(prev);
    };
};
const unsetCurrentInstance = ()=>{
    currentInstance && currentInstance.scope.off();
    internalSetCurrentInstance(null);
};
const isBuiltInTag = /* @__PURE__ */ (0, _shared.makeMap)("slot,component");
function validateComponentName(name, { isNativeTag }) {
    if (isBuiltInTag(name) || isNativeTag(name)) warn$1("Do not use built-in or reserved HTML elements as component id: " + name);
}
function isStatefulComponent(instance) {
    return instance.vnode.shapeFlag & 4;
}
let isInSSRComponentSetup = false;
function setupComponent(instance, isSSR = false, optimized = false) {
    isSSR && setInSSRSetupState(isSSR);
    const { props, children } = instance.vnode;
    const isStateful = isStatefulComponent(instance);
    initProps(instance, props, isStateful, isSSR);
    initSlots(instance, children, optimized);
    const setupResult = isStateful ? setupStatefulComponent(instance, isSSR) : void 0;
    isSSR && setInSSRSetupState(false);
    return setupResult;
}
function setupStatefulComponent(instance, isSSR) {
    var _a;
    const Component = instance.type;
    if (Component.name) validateComponentName(Component.name, instance.appContext.config);
    if (Component.components) {
        const names = Object.keys(Component.components);
        for(let i = 0; i < names.length; i++)validateComponentName(names[i], instance.appContext.config);
    }
    if (Component.directives) {
        const names = Object.keys(Component.directives);
        for(let i = 0; i < names.length; i++)validateDirectiveName(names[i]);
    }
    if (Component.compilerOptions && isRuntimeOnly()) warn$1(`"compilerOptions" is only supported when using a build of Vue that includes the runtime compiler. Since you are using a runtime-only build, the options should be passed via your build tool config instead.`);
    instance.accessCache = /* @__PURE__ */ Object.create(null);
    instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);
    exposePropsOnRenderContext(instance);
    const { setup } = Component;
    if (setup) {
        const setupContext = instance.setupContext = setup.length > 1 ? createSetupContext(instance) : null;
        const reset = setCurrentInstance(instance);
        (0, _reactivity.pauseTracking)();
        const setupResult = callWithErrorHandling(setup, instance, 0, [
            (0, _reactivity.shallowReadonly)(instance.props),
            setupContext
        ]);
        (0, _reactivity.resetTracking)();
        reset();
        if ((0, _shared.isPromise)(setupResult)) {
            setupResult.then(unsetCurrentInstance, unsetCurrentInstance);
            if (isSSR) return setupResult.then((resolvedResult)=>{
                handleSetupResult(instance, resolvedResult, isSSR);
            }).catch((e)=>{
                handleError(e, instance, 0);
            });
            else {
                instance.asyncDep = setupResult;
                if (!instance.suspense) {
                    const name = (_a = Component.name) != null ? _a : "Anonymous";
                    warn$1(`Component <${name}>: setup function returned a promise, but no <Suspense> boundary was found in the parent component tree. A component with async setup() must be nested in a <Suspense> in order to be rendered.`);
                }
            }
        } else handleSetupResult(instance, setupResult, isSSR);
    } else finishComponentSetup(instance, isSSR);
}
function handleSetupResult(instance, setupResult, isSSR) {
    if ((0, _shared.isFunction)(setupResult)) {
        if (instance.type.__ssrInlineRender) instance.ssrRender = setupResult;
        else instance.render = setupResult;
    } else if ((0, _shared.isObject)(setupResult)) {
        if (isVNode(setupResult)) warn$1(`setup() should not return VNodes directly - return a render function instead.`);
        instance.devtoolsRawSetupState = setupResult;
        instance.setupState = (0, _reactivity.proxyRefs)(setupResult);
        exposeSetupStateOnRenderContext(instance);
    } else if (setupResult !== void 0) warn$1(`setup() should return an object. Received: ${setupResult === null ? "null" : typeof setupResult}`);
    finishComponentSetup(instance, isSSR);
}
let compile;
let installWithProxy;
function registerRuntimeCompiler(_compile) {
    compile = _compile;
    installWithProxy = (i)=>{
        if (i.render._rc) i.withProxy = new Proxy(i.ctx, RuntimeCompiledPublicInstanceProxyHandlers);
    };
}
const isRuntimeOnly = ()=>!compile;
function finishComponentSetup(instance, isSSR, skipOptions) {
    const Component = instance.type;
    if (!instance.render) {
        if (!isSSR && compile && !Component.render) {
            const template = Component.template || resolveMergedOptions(instance).template;
            if (template) {
                startMeasure(instance, `compile`);
                const { isCustomElement, compilerOptions } = instance.appContext.config;
                const { delimiters, compilerOptions: componentCompilerOptions } = Component;
                const finalCompilerOptions = (0, _shared.extend)((0, _shared.extend)({
                    isCustomElement,
                    delimiters
                }, compilerOptions), componentCompilerOptions);
                Component.render = compile(template, finalCompilerOptions);
                endMeasure(instance, `compile`);
            }
        }
        instance.render = Component.render || (0, _shared.NOOP);
        if (installWithProxy) installWithProxy(instance);
    }
    if (__VUE_OPTIONS_API__ && true) {
        const reset = setCurrentInstance(instance);
        (0, _reactivity.pauseTracking)();
        try {
            applyOptions(instance);
        } finally{
            (0, _reactivity.resetTracking)();
            reset();
        }
    }
    if (!Component.render && instance.render === (0, _shared.NOOP) && !isSSR) {
        if (!compile && Component.template) warn$1(`Component provided template option but runtime compilation is not supported in this build of Vue.` + ` Configure your bundler to alias "vue" to "vue/dist/vue.esm-bundler.js".`);
        else warn$1(`Component is missing template or render function: `, Component);
    }
}
const attrsProxyHandlers = {
    get (target, key) {
        markAttrsAccessed();
        (0, _reactivity.track)(target, "get", "");
        return target[key];
    },
    set () {
        warn$1(`setupContext.attrs is readonly.`);
        return false;
    },
    deleteProperty () {
        warn$1(`setupContext.attrs is readonly.`);
        return false;
    }
};
function getSlotsProxy(instance) {
    return new Proxy(instance.slots, {
        get (target, key) {
            (0, _reactivity.track)(instance, "get", "$slots");
            return target[key];
        }
    });
}
function createSetupContext(instance) {
    const expose = (exposed)=>{
        if (instance.exposed) warn$1(`expose() should be called only once per setup().`);
        if (exposed != null) {
            let exposedType = typeof exposed;
            if (exposedType === "object") {
                if ((0, _shared.isArray)(exposed)) exposedType = "array";
                else if ((0, _reactivity.isRef)(exposed)) exposedType = "ref";
            }
            if (exposedType !== "object") warn$1(`expose() should be passed a plain object, received ${exposedType}.`);
        }
        instance.exposed = exposed || {};
    };
    {
        let attrsProxy;
        let slotsProxy;
        return Object.freeze({
            get attrs () {
                return attrsProxy || (attrsProxy = new Proxy(instance.attrs, attrsProxyHandlers));
            },
            get slots () {
                return slotsProxy || (slotsProxy = getSlotsProxy(instance));
            },
            get emit () {
                return (event, ...args)=>instance.emit(event, ...args);
            },
            expose
        });
    }
}
function getComponentPublicInstance(instance) {
    if (instance.exposed) return instance.exposeProxy || (instance.exposeProxy = new Proxy((0, _reactivity.proxyRefs)((0, _reactivity.markRaw)(instance.exposed)), {
        get (target, key) {
            if (key in target) return target[key];
            else if (key in publicPropertiesMap) return publicPropertiesMap[key](instance);
        },
        has (target, key) {
            return key in target || key in publicPropertiesMap;
        }
    }));
    else return instance.proxy;
}
const classifyRE = /(?:^|[-_])(\w)/g;
const classify = (str)=>str.replace(classifyRE, (c)=>c.toUpperCase()).replace(/[-_]/g, "");
function getComponentName(Component, includeInferred = true) {
    return (0, _shared.isFunction)(Component) ? Component.displayName || Component.name : Component.name || includeInferred && Component.__name;
}
function formatComponentName(instance, Component, isRoot = false) {
    let name = getComponentName(Component);
    if (!name && Component.__file) {
        const match = Component.__file.match(/([^/\\]+)\.\w+$/);
        if (match) name = match[1];
    }
    if (!name && instance && instance.parent) {
        const inferFromRegistry = (registry)=>{
            for(const key in registry){
                if (registry[key] === Component) return key;
            }
        };
        name = inferFromRegistry(instance.components || instance.parent.type.components) || inferFromRegistry(instance.appContext.components);
    }
    return name ? classify(name) : isRoot ? `App` : `Anonymous`;
}
function isClassComponent(value) {
    return (0, _shared.isFunction)(value) && "__vccOpts" in value;
}
const computed = (getterOrOptions, debugOptions)=>{
    const c = (0, _reactivity.computed)(getterOrOptions, debugOptions, isInSSRComponentSetup);
    {
        const i = getCurrentInstance();
        if (i && i.appContext.config.warnRecursiveComputed) c._warnRecursive = true;
    }
    return c;
};
function h(type, propsOrChildren, children) {
    const l = arguments.length;
    if (l === 2) {
        if ((0, _shared.isObject)(propsOrChildren) && !(0, _shared.isArray)(propsOrChildren)) {
            if (isVNode(propsOrChildren)) return createVNode(type, null, [
                propsOrChildren
            ]);
            return createVNode(type, propsOrChildren);
        } else return createVNode(type, null, propsOrChildren);
    } else {
        if (l > 3) children = Array.prototype.slice.call(arguments, 2);
        else if (l === 3 && isVNode(children)) children = [
            children
        ];
        return createVNode(type, propsOrChildren, children);
    }
}
function initCustomFormatter() {
    if (typeof window === "undefined") return;
    const vueStyle = {
        style: "color:#3ba776"
    };
    const numberStyle = {
        style: "color:#1677ff"
    };
    const stringStyle = {
        style: "color:#f5222d"
    };
    const keywordStyle = {
        style: "color:#eb2f96"
    };
    const formatter = {
        __vue_custom_formatter: true,
        header (obj) {
            if (!(0, _shared.isObject)(obj)) return null;
            if (obj.__isVue) return [
                "div",
                vueStyle,
                `VueInstance`
            ];
            else if ((0, _reactivity.isRef)(obj)) return [
                "div",
                {},
                [
                    "span",
                    vueStyle,
                    genRefFlag(obj)
                ],
                "<",
                formatValue(obj.value),
                `>`
            ];
            else if ((0, _reactivity.isReactive)(obj)) return [
                "div",
                {},
                [
                    "span",
                    vueStyle,
                    (0, _reactivity.isShallow)(obj) ? "ShallowReactive" : "Reactive"
                ],
                "<",
                formatValue(obj),
                `>${(0, _reactivity.isReadonly)(obj) ? ` (readonly)` : ``}`
            ];
            else if ((0, _reactivity.isReadonly)(obj)) return [
                "div",
                {},
                [
                    "span",
                    vueStyle,
                    (0, _reactivity.isShallow)(obj) ? "ShallowReadonly" : "Readonly"
                ],
                "<",
                formatValue(obj),
                ">"
            ];
            return null;
        },
        hasBody (obj) {
            return obj && obj.__isVue;
        },
        body (obj) {
            if (obj && obj.__isVue) return [
                "div",
                {},
                ...formatInstance(obj.$)
            ];
        }
    };
    function formatInstance(instance) {
        const blocks = [];
        if (instance.type.props && instance.props) blocks.push(createInstanceBlock("props", (0, _reactivity.toRaw)(instance.props)));
        if (instance.setupState !== (0, _shared.EMPTY_OBJ)) blocks.push(createInstanceBlock("setup", instance.setupState));
        if (instance.data !== (0, _shared.EMPTY_OBJ)) blocks.push(createInstanceBlock("data", (0, _reactivity.toRaw)(instance.data)));
        const computed = extractKeys(instance, "computed");
        if (computed) blocks.push(createInstanceBlock("computed", computed));
        const injected = extractKeys(instance, "inject");
        if (injected) blocks.push(createInstanceBlock("injected", injected));
        blocks.push([
            "div",
            {},
            [
                "span",
                {
                    style: keywordStyle.style + ";opacity:0.66"
                },
                "$ (internal): "
            ],
            [
                "object",
                {
                    object: instance
                }
            ]
        ]);
        return blocks;
    }
    function createInstanceBlock(type, target) {
        target = (0, _shared.extend)({}, target);
        if (!Object.keys(target).length) return [
            "span",
            {}
        ];
        return [
            "div",
            {
                style: "line-height:1.25em;margin-bottom:0.6em"
            },
            [
                "div",
                {
                    style: "color:#476582"
                },
                type
            ],
            [
                "div",
                {
                    style: "padding-left:1.25em"
                },
                ...Object.keys(target).map((key)=>{
                    return [
                        "div",
                        {},
                        [
                            "span",
                            keywordStyle,
                            key + ": "
                        ],
                        formatValue(target[key], false)
                    ];
                })
            ]
        ];
    }
    function formatValue(v1, asRaw = true) {
        if (typeof v1 === "number") return [
            "span",
            numberStyle,
            v1
        ];
        else if (typeof v1 === "string") return [
            "span",
            stringStyle,
            JSON.stringify(v1)
        ];
        else if (typeof v1 === "boolean") return [
            "span",
            keywordStyle,
            v1
        ];
        else if ((0, _shared.isObject)(v1)) return [
            "object",
            {
                object: asRaw ? (0, _reactivity.toRaw)(v1) : v1
            }
        ];
        else return [
            "span",
            stringStyle,
            String(v1)
        ];
    }
    function extractKeys(instance, type) {
        const Comp = instance.type;
        if ((0, _shared.isFunction)(Comp)) return;
        const extracted = {};
        for(const key in instance.ctx)if (isKeyOfType(Comp, key, type)) extracted[key] = instance.ctx[key];
        return extracted;
    }
    function isKeyOfType(Comp, key, type) {
        const opts = Comp[type];
        if ((0, _shared.isArray)(opts) && opts.includes(key) || (0, _shared.isObject)(opts) && key in opts) return true;
        if (Comp.extends && isKeyOfType(Comp.extends, key, type)) return true;
        if (Comp.mixins && Comp.mixins.some((m)=>isKeyOfType(m, key, type))) return true;
    }
    function genRefFlag(v1) {
        if ((0, _reactivity.isShallow)(v1)) return `ShallowRef`;
        if (v1.effect) return `ComputedRef`;
        return `Ref`;
    }
    if (window.devtoolsFormatters) window.devtoolsFormatters.push(formatter);
    else window.devtoolsFormatters = [
        formatter
    ];
}
function withMemo(memo, render, cache, index) {
    const cached = cache[index];
    if (cached && isMemoSame(cached, memo)) return cached;
    const ret = render();
    ret.memo = memo.slice();
    ret.cacheIndex = index;
    return cache[index] = ret;
}
function isMemoSame(cached, memo) {
    const prev = cached.memo;
    if (prev.length != memo.length) return false;
    for(let i = 0; i < prev.length; i++){
        if ((0, _shared.hasChanged)(prev[i], memo[i])) return false;
    }
    if (isBlockTreeEnabled > 0 && currentBlock) currentBlock.push(cached);
    return true;
}
const version = "3.4.38";
const warn = warn$1;
const ErrorTypeStrings = ErrorTypeStrings$1;
const devtools = devtools$1;
const setDevtoolsHook = setDevtoolsHook$1;
const _ssrUtils = {
    createComponentInstance,
    setupComponent,
    renderComponentRoot,
    setCurrentRenderingInstance,
    isVNode: isVNode,
    normalizeVNode,
    getComponentPublicInstance,
    ensureValidVNode
};
const ssrUtils = _ssrUtils;
const resolveFilter = null;
const compatUtils = null;
const DeprecationTypes = null;

},{"@vue/reactivity":"eX1EI","@vue/shared":"kJKup","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"eX1EI":[function(require,module,exports) {
/**
* @vue/reactivity v3.4.38
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "EffectScope", ()=>EffectScope);
parcelHelpers.export(exports, "ITERATE_KEY", ()=>ITERATE_KEY);
parcelHelpers.export(exports, "ReactiveEffect", ()=>ReactiveEffect);
parcelHelpers.export(exports, "ReactiveFlags", ()=>ReactiveFlags);
parcelHelpers.export(exports, "TrackOpTypes", ()=>TrackOpTypes);
parcelHelpers.export(exports, "TriggerOpTypes", ()=>TriggerOpTypes);
parcelHelpers.export(exports, "computed", ()=>computed);
parcelHelpers.export(exports, "customRef", ()=>customRef);
parcelHelpers.export(exports, "deferredComputed", ()=>deferredComputed);
parcelHelpers.export(exports, "effect", ()=>effect);
parcelHelpers.export(exports, "effectScope", ()=>effectScope);
parcelHelpers.export(exports, "enableTracking", ()=>enableTracking);
parcelHelpers.export(exports, "getCurrentScope", ()=>getCurrentScope);
parcelHelpers.export(exports, "isProxy", ()=>isProxy);
parcelHelpers.export(exports, "isReactive", ()=>isReactive);
parcelHelpers.export(exports, "isReadonly", ()=>isReadonly);
parcelHelpers.export(exports, "isRef", ()=>isRef);
parcelHelpers.export(exports, "isShallow", ()=>isShallow);
parcelHelpers.export(exports, "markRaw", ()=>markRaw);
parcelHelpers.export(exports, "onScopeDispose", ()=>onScopeDispose);
parcelHelpers.export(exports, "pauseScheduling", ()=>pauseScheduling);
parcelHelpers.export(exports, "pauseTracking", ()=>pauseTracking);
parcelHelpers.export(exports, "proxyRefs", ()=>proxyRefs);
parcelHelpers.export(exports, "reactive", ()=>reactive);
parcelHelpers.export(exports, "readonly", ()=>readonly);
parcelHelpers.export(exports, "ref", ()=>ref);
parcelHelpers.export(exports, "resetScheduling", ()=>resetScheduling);
parcelHelpers.export(exports, "resetTracking", ()=>resetTracking);
parcelHelpers.export(exports, "shallowReactive", ()=>shallowReactive);
parcelHelpers.export(exports, "shallowReadonly", ()=>shallowReadonly);
parcelHelpers.export(exports, "shallowRef", ()=>shallowRef);
parcelHelpers.export(exports, "stop", ()=>stop);
parcelHelpers.export(exports, "toRaw", ()=>toRaw);
parcelHelpers.export(exports, "toRef", ()=>toRef);
parcelHelpers.export(exports, "toRefs", ()=>toRefs);
parcelHelpers.export(exports, "toValue", ()=>toValue);
parcelHelpers.export(exports, "track", ()=>track);
parcelHelpers.export(exports, "trigger", ()=>trigger);
parcelHelpers.export(exports, "triggerRef", ()=>triggerRef);
parcelHelpers.export(exports, "unref", ()=>unref);
var _shared = require("@vue/shared");
function warn(msg, ...args) {
    console.warn(`[Vue warn] ${msg}`, ...args);
}
let activeEffectScope;
class EffectScope {
    constructor(detached = false){
        this.detached = detached;
        /**
     * @internal
     */ this._active = true;
        /**
     * @internal
     */ this.effects = [];
        /**
     * @internal
     */ this.cleanups = [];
        this.parent = activeEffectScope;
        if (!detached && activeEffectScope) this.index = (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(this) - 1;
    }
    get active() {
        return this._active;
    }
    run(fn) {
        if (this._active) {
            const currentEffectScope = activeEffectScope;
            try {
                activeEffectScope = this;
                return fn();
            } finally{
                activeEffectScope = currentEffectScope;
            }
        } else warn(`cannot run an inactive effect scope.`);
    }
    /**
   * This should only be called on non-detached scopes
   * @internal
   */ on() {
        activeEffectScope = this;
    }
    /**
   * This should only be called on non-detached scopes
   * @internal
   */ off() {
        activeEffectScope = this.parent;
    }
    stop(fromParent) {
        if (this._active) {
            let i, l;
            for(i = 0, l = this.effects.length; i < l; i++)this.effects[i].stop();
            for(i = 0, l = this.cleanups.length; i < l; i++)this.cleanups[i]();
            if (this.scopes) for(i = 0, l = this.scopes.length; i < l; i++)this.scopes[i].stop(true);
            if (!this.detached && this.parent && !fromParent) {
                const last = this.parent.scopes.pop();
                if (last && last !== this) {
                    this.parent.scopes[this.index] = last;
                    last.index = this.index;
                }
            }
            this.parent = void 0;
            this._active = false;
        }
    }
}
function effectScope(detached) {
    return new EffectScope(detached);
}
function recordEffectScope(effect, scope = activeEffectScope) {
    if (scope && scope.active) scope.effects.push(effect);
}
function getCurrentScope() {
    return activeEffectScope;
}
function onScopeDispose(fn) {
    if (activeEffectScope) activeEffectScope.cleanups.push(fn);
    else warn(`onScopeDispose() is called when there is no active effect scope to be associated with.`);
}
let activeEffect;
class ReactiveEffect {
    constructor(fn, trigger, scheduler, scope){
        this.fn = fn;
        this.trigger = trigger;
        this.scheduler = scheduler;
        this.active = true;
        this.deps = [];
        /**
     * @internal
     */ this._dirtyLevel = 4;
        /**
     * @internal
     */ this._trackId = 0;
        /**
     * @internal
     */ this._runnings = 0;
        /**
     * @internal
     */ this._shouldSchedule = false;
        /**
     * @internal
     */ this._depsLength = 0;
        recordEffectScope(this, scope);
    }
    get dirty() {
        if (this._dirtyLevel === 2 || this._dirtyLevel === 3) {
            this._dirtyLevel = 1;
            pauseTracking();
            for(let i = 0; i < this._depsLength; i++){
                const dep = this.deps[i];
                if (dep.computed) {
                    triggerComputed(dep.computed);
                    if (this._dirtyLevel >= 4) break;
                }
            }
            if (this._dirtyLevel === 1) this._dirtyLevel = 0;
            resetTracking();
        }
        return this._dirtyLevel >= 4;
    }
    set dirty(v) {
        this._dirtyLevel = v ? 4 : 0;
    }
    run() {
        this._dirtyLevel = 0;
        if (!this.active) return this.fn();
        let lastShouldTrack = shouldTrack;
        let lastEffect = activeEffect;
        try {
            shouldTrack = true;
            activeEffect = this;
            this._runnings++;
            preCleanupEffect(this);
            return this.fn();
        } finally{
            postCleanupEffect(this);
            this._runnings--;
            activeEffect = lastEffect;
            shouldTrack = lastShouldTrack;
        }
    }
    stop() {
        if (this.active) {
            preCleanupEffect(this);
            postCleanupEffect(this);
            this.onStop && this.onStop();
            this.active = false;
        }
    }
}
function triggerComputed(computed) {
    return computed.value;
}
function preCleanupEffect(effect2) {
    effect2._trackId++;
    effect2._depsLength = 0;
}
function postCleanupEffect(effect2) {
    if (effect2.deps.length > effect2._depsLength) {
        for(let i = effect2._depsLength; i < effect2.deps.length; i++)cleanupDepEffect(effect2.deps[i], effect2);
        effect2.deps.length = effect2._depsLength;
    }
}
function cleanupDepEffect(dep, effect2) {
    const trackId = dep.get(effect2);
    if (trackId !== void 0 && effect2._trackId !== trackId) {
        dep.delete(effect2);
        if (dep.size === 0) dep.cleanup();
    }
}
function effect(fn, options) {
    if (fn.effect instanceof ReactiveEffect) fn = fn.effect.fn;
    const _effect = new ReactiveEffect(fn, (0, _shared.NOOP), ()=>{
        if (_effect.dirty) _effect.run();
    });
    if (options) {
        (0, _shared.extend)(_effect, options);
        if (options.scope) recordEffectScope(_effect, options.scope);
    }
    if (!options || !options.lazy) _effect.run();
    const runner = _effect.run.bind(_effect);
    runner.effect = _effect;
    return runner;
}
function stop(runner) {
    runner.effect.stop();
}
let shouldTrack = true;
let pauseScheduleStack = 0;
const trackStack = [];
function pauseTracking() {
    trackStack.push(shouldTrack);
    shouldTrack = false;
}
function enableTracking() {
    trackStack.push(shouldTrack);
    shouldTrack = true;
}
function resetTracking() {
    const last = trackStack.pop();
    shouldTrack = last === void 0 ? true : last;
}
function pauseScheduling() {
    pauseScheduleStack++;
}
function resetScheduling() {
    pauseScheduleStack--;
    while(!pauseScheduleStack && queueEffectSchedulers.length)queueEffectSchedulers.shift()();
}
function trackEffect(effect2, dep, debuggerEventExtraInfo) {
    var _a;
    if (dep.get(effect2) !== effect2._trackId) {
        dep.set(effect2, effect2._trackId);
        const oldDep = effect2.deps[effect2._depsLength];
        if (oldDep !== dep) {
            if (oldDep) cleanupDepEffect(oldDep, effect2);
            effect2.deps[effect2._depsLength++] = dep;
        } else effect2._depsLength++;
        (_a = effect2.onTrack) == null || _a.call(effect2, (0, _shared.extend)({
            effect: effect2
        }, debuggerEventExtraInfo));
    }
}
const queueEffectSchedulers = [];
function triggerEffects(dep, dirtyLevel, debuggerEventExtraInfo) {
    var _a;
    pauseScheduling();
    for (const effect2 of dep.keys()){
        let tracking;
        if (effect2._dirtyLevel < dirtyLevel && (tracking != null ? tracking : tracking = dep.get(effect2) === effect2._trackId)) {
            effect2._shouldSchedule || (effect2._shouldSchedule = effect2._dirtyLevel === 0);
            effect2._dirtyLevel = dirtyLevel;
        }
        if (effect2._shouldSchedule && (tracking != null ? tracking : tracking = dep.get(effect2) === effect2._trackId)) {
            (_a = effect2.onTrigger) == null || _a.call(effect2, (0, _shared.extend)({
                effect: effect2
            }, debuggerEventExtraInfo));
            effect2.trigger();
            if ((!effect2._runnings || effect2.allowRecurse) && effect2._dirtyLevel !== 2) {
                effect2._shouldSchedule = false;
                if (effect2.scheduler) queueEffectSchedulers.push(effect2.scheduler);
            }
        }
    }
    resetScheduling();
}
const createDep = (cleanup, computed)=>{
    const dep = /* @__PURE__ */ new Map();
    dep.cleanup = cleanup;
    dep.computed = computed;
    return dep;
};
const targetMap = /* @__PURE__ */ new WeakMap();
const ITERATE_KEY = Symbol("iterate");
const MAP_KEY_ITERATE_KEY = Symbol("Map key iterate");
function track(target, type, key) {
    if (shouldTrack && activeEffect) {
        let depsMap = targetMap.get(target);
        if (!depsMap) targetMap.set(target, depsMap = /* @__PURE__ */ new Map());
        let dep = depsMap.get(key);
        if (!dep) depsMap.set(key, dep = createDep(()=>depsMap.delete(key)));
        trackEffect(activeEffect, dep, {
            target,
            type,
            key
        });
    }
}
function trigger(target, type, key, newValue, oldValue, oldTarget) {
    const depsMap = targetMap.get(target);
    if (!depsMap) return;
    let deps = [];
    if (type === "clear") deps = [
        ...depsMap.values()
    ];
    else if (key === "length" && (0, _shared.isArray)(target)) {
        const newLength = Number(newValue);
        depsMap.forEach((dep, key2)=>{
            if (key2 === "length" || !(0, _shared.isSymbol)(key2) && key2 >= newLength) deps.push(dep);
        });
    } else {
        if (key !== void 0) deps.push(depsMap.get(key));
        switch(type){
            case "add":
                if (!(0, _shared.isArray)(target)) {
                    deps.push(depsMap.get(ITERATE_KEY));
                    if ((0, _shared.isMap)(target)) deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));
                } else if ((0, _shared.isIntegerKey)(key)) deps.push(depsMap.get("length"));
                break;
            case "delete":
                if (!(0, _shared.isArray)(target)) {
                    deps.push(depsMap.get(ITERATE_KEY));
                    if ((0, _shared.isMap)(target)) deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));
                }
                break;
            case "set":
                if ((0, _shared.isMap)(target)) deps.push(depsMap.get(ITERATE_KEY));
                break;
        }
    }
    pauseScheduling();
    for (const dep of deps)if (dep) triggerEffects(dep, 4, {
        target,
        type,
        key,
        newValue,
        oldValue,
        oldTarget
    });
    resetScheduling();
}
function getDepFromReactive(object, key) {
    const depsMap = targetMap.get(object);
    return depsMap && depsMap.get(key);
}
const isNonTrackableKeys = /* @__PURE__ */ (0, _shared.makeMap)(`__proto__,__v_isRef,__isVue`);
const builtInSymbols = new Set(/* @__PURE__ */ Object.getOwnPropertyNames(Symbol).filter((key)=>key !== "arguments" && key !== "caller").map((key)=>Symbol[key]).filter((0, _shared.isSymbol)));
const arrayInstrumentations = /* @__PURE__ */ createArrayInstrumentations();
function createArrayInstrumentations() {
    const instrumentations = {};
    [
        "includes",
        "indexOf",
        "lastIndexOf"
    ].forEach((key)=>{
        instrumentations[key] = function(...args) {
            const arr = toRaw(this);
            for(let i = 0, l = this.length; i < l; i++)track(arr, "get", i + "");
            const res = arr[key](...args);
            if (res === -1 || res === false) return arr[key](...args.map(toRaw));
            else return res;
        };
    });
    [
        "push",
        "pop",
        "shift",
        "unshift",
        "splice"
    ].forEach((key)=>{
        instrumentations[key] = function(...args) {
            pauseTracking();
            pauseScheduling();
            const res = toRaw(this)[key].apply(this, args);
            resetScheduling();
            resetTracking();
            return res;
        };
    });
    return instrumentations;
}
function hasOwnProperty(key) {
    if (!(0, _shared.isSymbol)(key)) key = String(key);
    const obj = toRaw(this);
    track(obj, "has", key);
    return obj.hasOwnProperty(key);
}
class BaseReactiveHandler {
    constructor(_isReadonly = false, _isShallow = false){
        this._isReadonly = _isReadonly;
        this._isShallow = _isShallow;
    }
    get(target, key, receiver) {
        const isReadonly2 = this._isReadonly, isShallow2 = this._isShallow;
        if (key === "__v_isReactive") return !isReadonly2;
        else if (key === "__v_isReadonly") return isReadonly2;
        else if (key === "__v_isShallow") return isShallow2;
        else if (key === "__v_raw") {
            if (receiver === (isReadonly2 ? isShallow2 ? shallowReadonlyMap : readonlyMap : isShallow2 ? shallowReactiveMap : reactiveMap).get(target) || // receiver is not the reactive proxy, but has the same prototype
            // this means the receiver is a user proxy of the reactive proxy
            Object.getPrototypeOf(target) === Object.getPrototypeOf(receiver)) return target;
            return;
        }
        const targetIsArray = (0, _shared.isArray)(target);
        if (!isReadonly2) {
            if (targetIsArray && (0, _shared.hasOwn)(arrayInstrumentations, key)) return Reflect.get(arrayInstrumentations, key, receiver);
            if (key === "hasOwnProperty") return hasOwnProperty;
        }
        const res = Reflect.get(target, key, receiver);
        if ((0, _shared.isSymbol)(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) return res;
        if (!isReadonly2) track(target, "get", key);
        if (isShallow2) return res;
        if (isRef(res)) return targetIsArray && (0, _shared.isIntegerKey)(key) ? res : res.value;
        if ((0, _shared.isObject)(res)) return isReadonly2 ? readonly(res) : reactive(res);
        return res;
    }
}
class MutableReactiveHandler extends BaseReactiveHandler {
    constructor(isShallow2 = false){
        super(false, isShallow2);
    }
    set(target, key, value, receiver) {
        let oldValue = target[key];
        if (!this._isShallow) {
            const isOldValueReadonly = isReadonly(oldValue);
            if (!isShallow(value) && !isReadonly(value)) {
                oldValue = toRaw(oldValue);
                value = toRaw(value);
            }
            if (!(0, _shared.isArray)(target) && isRef(oldValue) && !isRef(value)) {
                if (isOldValueReadonly) return false;
                else {
                    oldValue.value = value;
                    return true;
                }
            }
        }
        const hadKey = (0, _shared.isArray)(target) && (0, _shared.isIntegerKey)(key) ? Number(key) < target.length : (0, _shared.hasOwn)(target, key);
        const result = Reflect.set(target, key, value, receiver);
        if (target === toRaw(receiver)) {
            if (!hadKey) trigger(target, "add", key, value);
            else if ((0, _shared.hasChanged)(value, oldValue)) trigger(target, "set", key, value, oldValue);
        }
        return result;
    }
    deleteProperty(target, key) {
        const hadKey = (0, _shared.hasOwn)(target, key);
        const oldValue = target[key];
        const result = Reflect.deleteProperty(target, key);
        if (result && hadKey) trigger(target, "delete", key, void 0, oldValue);
        return result;
    }
    has(target, key) {
        const result = Reflect.has(target, key);
        if (!(0, _shared.isSymbol)(key) || !builtInSymbols.has(key)) track(target, "has", key);
        return result;
    }
    ownKeys(target) {
        track(target, "iterate", (0, _shared.isArray)(target) ? "length" : ITERATE_KEY);
        return Reflect.ownKeys(target);
    }
}
class ReadonlyReactiveHandler extends BaseReactiveHandler {
    constructor(isShallow2 = false){
        super(true, isShallow2);
    }
    set(target, key) {
        warn(`Set operation on key "${String(key)}" failed: target is readonly.`, target);
        return true;
    }
    deleteProperty(target, key) {
        warn(`Delete operation on key "${String(key)}" failed: target is readonly.`, target);
        return true;
    }
}
const mutableHandlers = /* @__PURE__ */ new MutableReactiveHandler();
const readonlyHandlers = /* @__PURE__ */ new ReadonlyReactiveHandler();
const shallowReactiveHandlers = /* @__PURE__ */ new MutableReactiveHandler(true);
const shallowReadonlyHandlers = /* @__PURE__ */ new ReadonlyReactiveHandler(true);
const toShallow = (value)=>value;
const getProto = (v)=>Reflect.getPrototypeOf(v);
function get(target, key, isReadonly2 = false, isShallow2 = false) {
    target = target["__v_raw"];
    const rawTarget = toRaw(target);
    const rawKey = toRaw(key);
    if (!isReadonly2) {
        if ((0, _shared.hasChanged)(key, rawKey)) track(rawTarget, "get", key);
        track(rawTarget, "get", rawKey);
    }
    const { has: has2 } = getProto(rawTarget);
    const wrap = isShallow2 ? toShallow : isReadonly2 ? toReadonly : toReactive;
    if (has2.call(rawTarget, key)) return wrap(target.get(key));
    else if (has2.call(rawTarget, rawKey)) return wrap(target.get(rawKey));
    else if (target !== rawTarget) target.get(key);
}
function has(key, isReadonly2 = false) {
    const target = this["__v_raw"];
    const rawTarget = toRaw(target);
    const rawKey = toRaw(key);
    if (!isReadonly2) {
        if ((0, _shared.hasChanged)(key, rawKey)) track(rawTarget, "has", key);
        track(rawTarget, "has", rawKey);
    }
    return key === rawKey ? target.has(key) : target.has(key) || target.has(rawKey);
}
function size(target, isReadonly2 = false) {
    target = target["__v_raw"];
    !isReadonly2 && track(toRaw(target), "iterate", ITERATE_KEY);
    return Reflect.get(target, "size", target);
}
function add(value, _isShallow = false) {
    if (!_isShallow && !isShallow(value) && !isReadonly(value)) value = toRaw(value);
    const target = toRaw(this);
    const proto = getProto(target);
    const hadKey = proto.has.call(target, value);
    if (!hadKey) {
        target.add(value);
        trigger(target, "add", value, value);
    }
    return this;
}
function set(key, value, _isShallow = false) {
    if (!_isShallow && !isShallow(value) && !isReadonly(value)) value = toRaw(value);
    const target = toRaw(this);
    const { has: has2, get: get2 } = getProto(target);
    let hadKey = has2.call(target, key);
    if (!hadKey) {
        key = toRaw(key);
        hadKey = has2.call(target, key);
    } else checkIdentityKeys(target, has2, key);
    const oldValue = get2.call(target, key);
    target.set(key, value);
    if (!hadKey) trigger(target, "add", key, value);
    else if ((0, _shared.hasChanged)(value, oldValue)) trigger(target, "set", key, value, oldValue);
    return this;
}
function deleteEntry(key) {
    const target = toRaw(this);
    const { has: has2, get: get2 } = getProto(target);
    let hadKey = has2.call(target, key);
    if (!hadKey) {
        key = toRaw(key);
        hadKey = has2.call(target, key);
    } else checkIdentityKeys(target, has2, key);
    const oldValue = get2 ? get2.call(target, key) : void 0;
    const result = target.delete(key);
    if (hadKey) trigger(target, "delete", key, void 0, oldValue);
    return result;
}
function clear() {
    const target = toRaw(this);
    const hadItems = target.size !== 0;
    const oldTarget = (0, _shared.isMap)(target) ? new Map(target) : new Set(target);
    const result = target.clear();
    if (hadItems) trigger(target, "clear", void 0, void 0, oldTarget);
    return result;
}
function createForEach(isReadonly2, isShallow2) {
    return function forEach(callback, thisArg) {
        const observed = this;
        const target = observed["__v_raw"];
        const rawTarget = toRaw(target);
        const wrap = isShallow2 ? toShallow : isReadonly2 ? toReadonly : toReactive;
        !isReadonly2 && track(rawTarget, "iterate", ITERATE_KEY);
        return target.forEach((value, key)=>{
            return callback.call(thisArg, wrap(value), wrap(key), observed);
        });
    };
}
function createIterableMethod(method, isReadonly2, isShallow2) {
    return function(...args) {
        const target = this["__v_raw"];
        const rawTarget = toRaw(target);
        const targetIsMap = (0, _shared.isMap)(rawTarget);
        const isPair = method === "entries" || method === Symbol.iterator && targetIsMap;
        const isKeyOnly = method === "keys" && targetIsMap;
        const innerIterator = target[method](...args);
        const wrap = isShallow2 ? toShallow : isReadonly2 ? toReadonly : toReactive;
        !isReadonly2 && track(rawTarget, "iterate", isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);
        return {
            // iterator protocol
            next () {
                const { value, done } = innerIterator.next();
                return done ? {
                    value,
                    done
                } : {
                    value: isPair ? [
                        wrap(value[0]),
                        wrap(value[1])
                    ] : wrap(value),
                    done
                };
            },
            // iterable protocol
            [Symbol.iterator] () {
                return this;
            }
        };
    };
}
function createReadonlyMethod(type) {
    return function(...args) {
        {
            const key = args[0] ? `on key "${args[0]}" ` : ``;
            warn(`${(0, _shared.capitalize)(type)} operation ${key}failed: target is readonly.`, toRaw(this));
        }
        return type === "delete" ? false : type === "clear" ? void 0 : this;
    };
}
function createInstrumentations() {
    const mutableInstrumentations2 = {
        get (key) {
            return get(this, key);
        },
        get size () {
            return size(this);
        },
        has,
        add,
        set,
        delete: deleteEntry,
        clear,
        forEach: createForEach(false, false)
    };
    const shallowInstrumentations2 = {
        get (key) {
            return get(this, key, false, true);
        },
        get size () {
            return size(this);
        },
        has,
        add (value) {
            return add.call(this, value, true);
        },
        set (key, value) {
            return set.call(this, key, value, true);
        },
        delete: deleteEntry,
        clear,
        forEach: createForEach(false, true)
    };
    const readonlyInstrumentations2 = {
        get (key) {
            return get(this, key, true);
        },
        get size () {
            return size(this, true);
        },
        has (key) {
            return has.call(this, key, true);
        },
        add: createReadonlyMethod("add"),
        set: createReadonlyMethod("set"),
        delete: createReadonlyMethod("delete"),
        clear: createReadonlyMethod("clear"),
        forEach: createForEach(true, false)
    };
    const shallowReadonlyInstrumentations2 = {
        get (key) {
            return get(this, key, true, true);
        },
        get size () {
            return size(this, true);
        },
        has (key) {
            return has.call(this, key, true);
        },
        add: createReadonlyMethod("add"),
        set: createReadonlyMethod("set"),
        delete: createReadonlyMethod("delete"),
        clear: createReadonlyMethod("clear"),
        forEach: createForEach(true, true)
    };
    const iteratorMethods = [
        "keys",
        "values",
        "entries",
        Symbol.iterator
    ];
    iteratorMethods.forEach((method)=>{
        mutableInstrumentations2[method] = createIterableMethod(method, false, false);
        readonlyInstrumentations2[method] = createIterableMethod(method, true, false);
        shallowInstrumentations2[method] = createIterableMethod(method, false, true);
        shallowReadonlyInstrumentations2[method] = createIterableMethod(method, true, true);
    });
    return [
        mutableInstrumentations2,
        readonlyInstrumentations2,
        shallowInstrumentations2,
        shallowReadonlyInstrumentations2
    ];
}
const [mutableInstrumentations, readonlyInstrumentations, shallowInstrumentations, shallowReadonlyInstrumentations] = /* @__PURE__ */ createInstrumentations();
function createInstrumentationGetter(isReadonly2, shallow) {
    const instrumentations = shallow ? isReadonly2 ? shallowReadonlyInstrumentations : shallowInstrumentations : isReadonly2 ? readonlyInstrumentations : mutableInstrumentations;
    return (target, key, receiver)=>{
        if (key === "__v_isReactive") return !isReadonly2;
        else if (key === "__v_isReadonly") return isReadonly2;
        else if (key === "__v_raw") return target;
        return Reflect.get((0, _shared.hasOwn)(instrumentations, key) && key in target ? instrumentations : target, key, receiver);
    };
}
const mutableCollectionHandlers = {
    get: /* @__PURE__ */ createInstrumentationGetter(false, false)
};
const shallowCollectionHandlers = {
    get: /* @__PURE__ */ createInstrumentationGetter(false, true)
};
const readonlyCollectionHandlers = {
    get: /* @__PURE__ */ createInstrumentationGetter(true, false)
};
const shallowReadonlyCollectionHandlers = {
    get: /* @__PURE__ */ createInstrumentationGetter(true, true)
};
function checkIdentityKeys(target, has2, key) {
    const rawKey = toRaw(key);
    if (rawKey !== key && has2.call(target, rawKey)) {
        const type = (0, _shared.toRawType)(target);
        warn(`Reactive ${type} contains both the raw and reactive versions of the same object${type === `Map` ? ` as keys` : ``}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`);
    }
}
const reactiveMap = /* @__PURE__ */ new WeakMap();
const shallowReactiveMap = /* @__PURE__ */ new WeakMap();
const readonlyMap = /* @__PURE__ */ new WeakMap();
const shallowReadonlyMap = /* @__PURE__ */ new WeakMap();
function targetTypeMap(rawType) {
    switch(rawType){
        case "Object":
        case "Array":
            return 1 /* COMMON */ ;
        case "Map":
        case "Set":
        case "WeakMap":
        case "WeakSet":
            return 2 /* COLLECTION */ ;
        default:
            return 0 /* INVALID */ ;
    }
}
function getTargetType(value) {
    return value["__v_skip"] || !Object.isExtensible(value) ? 0 /* INVALID */  : targetTypeMap((0, _shared.toRawType)(value));
}
function reactive(target) {
    if (isReadonly(target)) return target;
    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers, reactiveMap);
}
function shallowReactive(target) {
    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers, shallowReactiveMap);
}
function readonly(target) {
    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers, readonlyMap);
}
function shallowReadonly(target) {
    return createReactiveObject(target, true, shallowReadonlyHandlers, shallowReadonlyCollectionHandlers, shallowReadonlyMap);
}
function createReactiveObject(target, isReadonly2, baseHandlers, collectionHandlers, proxyMap) {
    if (!(0, _shared.isObject)(target)) {
        warn(`value cannot be made ${isReadonly2 ? "readonly" : "reactive"}: ${String(target)}`);
        return target;
    }
    if (target["__v_raw"] && !(isReadonly2 && target["__v_isReactive"])) return target;
    const existingProxy = proxyMap.get(target);
    if (existingProxy) return existingProxy;
    const targetType = getTargetType(target);
    if (targetType === 0 /* INVALID */ ) return target;
    const proxy = new Proxy(target, targetType === 2 /* COLLECTION */  ? collectionHandlers : baseHandlers);
    proxyMap.set(target, proxy);
    return proxy;
}
function isReactive(value) {
    if (isReadonly(value)) return isReactive(value["__v_raw"]);
    return !!(value && value["__v_isReactive"]);
}
function isReadonly(value) {
    return !!(value && value["__v_isReadonly"]);
}
function isShallow(value) {
    return !!(value && value["__v_isShallow"]);
}
function isProxy(value) {
    return value ? !!value["__v_raw"] : false;
}
function toRaw(observed) {
    const raw = observed && observed["__v_raw"];
    return raw ? toRaw(raw) : observed;
}
function markRaw(value) {
    if (Object.isExtensible(value)) (0, _shared.def)(value, "__v_skip", true);
    return value;
}
const toReactive = (value)=>(0, _shared.isObject)(value) ? reactive(value) : value;
const toReadonly = (value)=>(0, _shared.isObject)(value) ? readonly(value) : value;
const COMPUTED_SIDE_EFFECT_WARN = `Computed is still dirty after getter evaluation, likely because a computed is mutating its own dependency in its getter. State mutations in computed getters should be avoided.  Check the docs for more details: https://vuejs.org/guide/essentials/computed.html#getters-should-be-side-effect-free`;
class ComputedRefImpl {
    constructor(getter, _setter, isReadonly, isSSR){
        this.getter = getter;
        this._setter = _setter;
        this.dep = void 0;
        this.__v_isRef = true;
        this["__v_isReadonly"] = false;
        this.effect = new ReactiveEffect(()=>getter(this._value), ()=>triggerRefValue(this, this.effect._dirtyLevel === 2 ? 2 : 3));
        this.effect.computed = this;
        this.effect.active = this._cacheable = !isSSR;
        this["__v_isReadonly"] = isReadonly;
    }
    get value() {
        const self = toRaw(this);
        if ((!self._cacheable || self.effect.dirty) && (0, _shared.hasChanged)(self._value, self._value = self.effect.run())) triggerRefValue(self, 4);
        trackRefValue(self);
        if (self.effect._dirtyLevel >= 2) {
            if (0, this._warnRecursive) warn(COMPUTED_SIDE_EFFECT_WARN, `

getter: `, this.getter);
            triggerRefValue(self, 2);
        }
        return self._value;
    }
    set value(newValue) {
        this._setter(newValue);
    }
    // #region polyfill _dirty for backward compatibility third party code for Vue <= 3.3.x
    get _dirty() {
        return this.effect.dirty;
    }
    set _dirty(v) {
        this.effect.dirty = v;
    }
}
function computed(getterOrOptions, debugOptions, isSSR = false) {
    let getter;
    let setter;
    const onlyGetter = (0, _shared.isFunction)(getterOrOptions);
    if (onlyGetter) {
        getter = getterOrOptions;
        setter = ()=>{
            warn("Write operation failed: computed value is readonly");
        };
    } else {
        getter = getterOrOptions.get;
        setter = getterOrOptions.set;
    }
    const cRef = new ComputedRefImpl(getter, setter, onlyGetter || !setter, isSSR);
    if (debugOptions && !isSSR) {
        cRef.effect.onTrack = debugOptions.onTrack;
        cRef.effect.onTrigger = debugOptions.onTrigger;
    }
    return cRef;
}
function trackRefValue(ref2) {
    var _a;
    if (shouldTrack && activeEffect) {
        ref2 = toRaw(ref2);
        trackEffect(activeEffect, (_a = ref2.dep) != null ? _a : ref2.dep = createDep(()=>ref2.dep = void 0, ref2 instanceof ComputedRefImpl ? ref2 : void 0), {
            target: ref2,
            type: "get",
            key: "value"
        });
    }
}
function triggerRefValue(ref2, dirtyLevel = 4, newVal, oldVal) {
    ref2 = toRaw(ref2);
    const dep = ref2.dep;
    if (dep) triggerEffects(dep, dirtyLevel, {
        target: ref2,
        type: "set",
        key: "value",
        newValue: newVal,
        oldValue: oldVal
    });
}
function isRef(r) {
    return !!(r && r.__v_isRef === true);
}
function ref(value) {
    return createRef(value, false);
}
function shallowRef(value) {
    return createRef(value, true);
}
function createRef(rawValue, shallow) {
    if (isRef(rawValue)) return rawValue;
    return new RefImpl(rawValue, shallow);
}
class RefImpl {
    constructor(value, __v_isShallow){
        this.__v_isShallow = __v_isShallow;
        this.dep = void 0;
        this.__v_isRef = true;
        this._rawValue = __v_isShallow ? value : toRaw(value);
        this._value = __v_isShallow ? value : toReactive(value);
    }
    get value() {
        trackRefValue(this);
        return this._value;
    }
    set value(newVal) {
        const useDirectValue = this.__v_isShallow || isShallow(newVal) || isReadonly(newVal);
        newVal = useDirectValue ? newVal : toRaw(newVal);
        if ((0, _shared.hasChanged)(newVal, this._rawValue)) {
            const oldVal = this._rawValue;
            this._rawValue = newVal;
            this._value = useDirectValue ? newVal : toReactive(newVal);
            triggerRefValue(this, 4, newVal, oldVal);
        }
    }
}
function triggerRef(ref2) {
    triggerRefValue(ref2, 4, (0, ref2.value));
}
function unref(ref2) {
    return isRef(ref2) ? ref2.value : ref2;
}
function toValue(source) {
    return (0, _shared.isFunction)(source) ? source() : unref(source);
}
const shallowUnwrapHandlers = {
    get: (target, key, receiver)=>unref(Reflect.get(target, key, receiver)),
    set: (target, key, value, receiver)=>{
        const oldValue = target[key];
        if (isRef(oldValue) && !isRef(value)) {
            oldValue.value = value;
            return true;
        } else return Reflect.set(target, key, value, receiver);
    }
};
function proxyRefs(objectWithRefs) {
    return isReactive(objectWithRefs) ? objectWithRefs : new Proxy(objectWithRefs, shallowUnwrapHandlers);
}
class CustomRefImpl {
    constructor(factory){
        this.dep = void 0;
        this.__v_isRef = true;
        const { get, set } = factory(()=>trackRefValue(this), ()=>triggerRefValue(this));
        this._get = get;
        this._set = set;
    }
    get value() {
        return this._get();
    }
    set value(newVal) {
        this._set(newVal);
    }
}
function customRef(factory) {
    return new CustomRefImpl(factory);
}
function toRefs(object) {
    if (!isProxy(object)) warn(`toRefs() expects a reactive object but received a plain one.`);
    const ret = (0, _shared.isArray)(object) ? new Array(object.length) : {};
    for(const key in object)ret[key] = propertyToRef(object, key);
    return ret;
}
class ObjectRefImpl {
    constructor(_object, _key, _defaultValue){
        this._object = _object;
        this._key = _key;
        this._defaultValue = _defaultValue;
        this.__v_isRef = true;
    }
    get value() {
        const val = this._object[this._key];
        return val === void 0 ? this._defaultValue : val;
    }
    set value(newVal) {
        this._object[this._key] = newVal;
    }
    get dep() {
        return getDepFromReactive(toRaw(this._object), this._key);
    }
}
class GetterRefImpl {
    constructor(_getter){
        this._getter = _getter;
        this.__v_isRef = true;
        this.__v_isReadonly = true;
    }
    get value() {
        return this._getter();
    }
}
function toRef(source, key, defaultValue) {
    if (isRef(source)) return source;
    else if ((0, _shared.isFunction)(source)) return new GetterRefImpl(source);
    else if ((0, _shared.isObject)(source) && arguments.length > 1) return propertyToRef(source, key, defaultValue);
    else return ref(source);
}
function propertyToRef(source, key, defaultValue) {
    const val = source[key];
    return isRef(val) ? val : new ObjectRefImpl(source, key, defaultValue);
}
const deferredComputed = computed;
const TrackOpTypes = {
    "GET": "get",
    "HAS": "has",
    "ITERATE": "iterate"
};
const TriggerOpTypes = {
    "SET": "set",
    "ADD": "add",
    "DELETE": "delete",
    "CLEAR": "clear"
};
const ReactiveFlags = {
    "SKIP": "__v_skip",
    "IS_REACTIVE": "__v_isReactive",
    "IS_READONLY": "__v_isReadonly",
    "IS_SHALLOW": "__v_isShallow",
    "RAW": "__v_raw"
};

},{"@vue/shared":"kJKup","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"kJKup":[function(require,module,exports) {
/**
* @vue/shared v3.4.38
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/ /*! #__NO_SIDE_EFFECTS__ */ // @__NO_SIDE_EFFECTS__
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "EMPTY_ARR", ()=>EMPTY_ARR);
parcelHelpers.export(exports, "EMPTY_OBJ", ()=>EMPTY_OBJ);
parcelHelpers.export(exports, "NO", ()=>NO);
parcelHelpers.export(exports, "NOOP", ()=>NOOP);
parcelHelpers.export(exports, "PatchFlagNames", ()=>PatchFlagNames);
parcelHelpers.export(exports, "PatchFlags", ()=>PatchFlags);
parcelHelpers.export(exports, "ShapeFlags", ()=>ShapeFlags);
parcelHelpers.export(exports, "SlotFlags", ()=>SlotFlags);
parcelHelpers.export(exports, "camelize", ()=>camelize);
parcelHelpers.export(exports, "capitalize", ()=>capitalize);
parcelHelpers.export(exports, "def", ()=>def);
parcelHelpers.export(exports, "escapeHtml", ()=>escapeHtml);
parcelHelpers.export(exports, "escapeHtmlComment", ()=>escapeHtmlComment);
parcelHelpers.export(exports, "extend", ()=>extend);
parcelHelpers.export(exports, "genPropsAccessExp", ()=>genPropsAccessExp);
parcelHelpers.export(exports, "generateCodeFrame", ()=>generateCodeFrame);
parcelHelpers.export(exports, "getGlobalThis", ()=>getGlobalThis);
parcelHelpers.export(exports, "hasChanged", ()=>hasChanged);
parcelHelpers.export(exports, "hasOwn", ()=>hasOwn);
parcelHelpers.export(exports, "hyphenate", ()=>hyphenate);
parcelHelpers.export(exports, "includeBooleanAttr", ()=>includeBooleanAttr);
parcelHelpers.export(exports, "invokeArrayFns", ()=>invokeArrayFns);
parcelHelpers.export(exports, "isArray", ()=>isArray);
parcelHelpers.export(exports, "isBooleanAttr", ()=>isBooleanAttr);
parcelHelpers.export(exports, "isBuiltInDirective", ()=>isBuiltInDirective);
parcelHelpers.export(exports, "isDate", ()=>isDate);
parcelHelpers.export(exports, "isFunction", ()=>isFunction);
parcelHelpers.export(exports, "isGloballyAllowed", ()=>isGloballyAllowed);
parcelHelpers.export(exports, "isGloballyWhitelisted", ()=>isGloballyWhitelisted);
parcelHelpers.export(exports, "isHTMLTag", ()=>isHTMLTag);
parcelHelpers.export(exports, "isIntegerKey", ()=>isIntegerKey);
parcelHelpers.export(exports, "isKnownHtmlAttr", ()=>isKnownHtmlAttr);
parcelHelpers.export(exports, "isKnownSvgAttr", ()=>isKnownSvgAttr);
parcelHelpers.export(exports, "isMap", ()=>isMap);
parcelHelpers.export(exports, "isMathMLTag", ()=>isMathMLTag);
parcelHelpers.export(exports, "isModelListener", ()=>isModelListener);
parcelHelpers.export(exports, "isObject", ()=>isObject);
parcelHelpers.export(exports, "isOn", ()=>isOn);
parcelHelpers.export(exports, "isPlainObject", ()=>isPlainObject);
parcelHelpers.export(exports, "isPromise", ()=>isPromise);
parcelHelpers.export(exports, "isRegExp", ()=>isRegExp);
parcelHelpers.export(exports, "isRenderableAttrValue", ()=>isRenderableAttrValue);
parcelHelpers.export(exports, "isReservedProp", ()=>isReservedProp);
parcelHelpers.export(exports, "isSSRSafeAttrName", ()=>isSSRSafeAttrName);
parcelHelpers.export(exports, "isSVGTag", ()=>isSVGTag);
parcelHelpers.export(exports, "isSet", ()=>isSet);
parcelHelpers.export(exports, "isSpecialBooleanAttr", ()=>isSpecialBooleanAttr);
parcelHelpers.export(exports, "isString", ()=>isString);
parcelHelpers.export(exports, "isSymbol", ()=>isSymbol);
parcelHelpers.export(exports, "isVoidTag", ()=>isVoidTag);
parcelHelpers.export(exports, "looseEqual", ()=>looseEqual);
parcelHelpers.export(exports, "looseIndexOf", ()=>looseIndexOf);
parcelHelpers.export(exports, "looseToNumber", ()=>looseToNumber);
parcelHelpers.export(exports, "makeMap", ()=>makeMap);
parcelHelpers.export(exports, "normalizeClass", ()=>normalizeClass);
parcelHelpers.export(exports, "normalizeProps", ()=>normalizeProps);
parcelHelpers.export(exports, "normalizeStyle", ()=>normalizeStyle);
parcelHelpers.export(exports, "objectToString", ()=>objectToString);
parcelHelpers.export(exports, "parseStringStyle", ()=>parseStringStyle);
parcelHelpers.export(exports, "propsToAttrMap", ()=>propsToAttrMap);
parcelHelpers.export(exports, "remove", ()=>remove);
parcelHelpers.export(exports, "slotFlagsText", ()=>slotFlagsText);
parcelHelpers.export(exports, "stringifyStyle", ()=>stringifyStyle);
parcelHelpers.export(exports, "toDisplayString", ()=>toDisplayString);
parcelHelpers.export(exports, "toHandlerKey", ()=>toHandlerKey);
parcelHelpers.export(exports, "toNumber", ()=>toNumber);
parcelHelpers.export(exports, "toRawType", ()=>toRawType);
parcelHelpers.export(exports, "toTypeString", ()=>toTypeString);
var global = arguments[3];
function makeMap(str, expectsLowerCase) {
    const set = new Set(str.split(","));
    return expectsLowerCase ? (val)=>set.has(val.toLowerCase()) : (val)=>set.has(val);
}
const EMPTY_OBJ = Object.freeze({});
const EMPTY_ARR = Object.freeze([]);
const NOOP = ()=>{};
const NO = ()=>false;
const isOn = (key)=>key.charCodeAt(0) === 111 && key.charCodeAt(1) === 110 && // uppercase letter
    (key.charCodeAt(2) > 122 || key.charCodeAt(2) < 97);
const isModelListener = (key)=>key.startsWith("onUpdate:");
const extend = Object.assign;
const remove = (arr, el)=>{
    const i = arr.indexOf(el);
    if (i > -1) arr.splice(i, 1);
};
const hasOwnProperty = Object.prototype.hasOwnProperty;
const hasOwn = (val, key)=>hasOwnProperty.call(val, key);
const isArray = Array.isArray;
const isMap = (val)=>toTypeString(val) === "[object Map]";
const isSet = (val)=>toTypeString(val) === "[object Set]";
const isDate = (val)=>toTypeString(val) === "[object Date]";
const isRegExp = (val)=>toTypeString(val) === "[object RegExp]";
const isFunction = (val)=>typeof val === "function";
const isString = (val)=>typeof val === "string";
const isSymbol = (val)=>typeof val === "symbol";
const isObject = (val)=>val !== null && typeof val === "object";
const isPromise = (val)=>{
    return (isObject(val) || isFunction(val)) && isFunction(val.then) && isFunction(val.catch);
};
const objectToString = Object.prototype.toString;
const toTypeString = (value)=>objectToString.call(value);
const toRawType = (value)=>{
    return toTypeString(value).slice(8, -1);
};
const isPlainObject = (val)=>toTypeString(val) === "[object Object]";
const isIntegerKey = (key)=>isString(key) && key !== "NaN" && key[0] !== "-" && "" + parseInt(key, 10) === key;
const isReservedProp = /* @__PURE__ */ makeMap(// the leading comma is intentional so empty string "" is also included
",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted");
const isBuiltInDirective = /* @__PURE__ */ makeMap("bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo");
const cacheStringFunction = (fn)=>{
    const cache = /* @__PURE__ */ Object.create(null);
    return (str)=>{
        const hit = cache[str];
        return hit || (cache[str] = fn(str));
    };
};
const camelizeRE = /-(\w)/g;
const camelize = cacheStringFunction((str)=>{
    return str.replace(camelizeRE, (_, c)=>c ? c.toUpperCase() : "");
});
const hyphenateRE = /\B([A-Z])/g;
const hyphenate = cacheStringFunction((str)=>str.replace(hyphenateRE, "-$1").toLowerCase());
const capitalize = cacheStringFunction((str)=>{
    return str.charAt(0).toUpperCase() + str.slice(1);
});
const toHandlerKey = cacheStringFunction((str)=>{
    const s = str ? `on${capitalize(str)}` : ``;
    return s;
});
const hasChanged = (value, oldValue)=>!Object.is(value, oldValue);
const invokeArrayFns = (fns, ...arg)=>{
    for(let i = 0; i < fns.length; i++)fns[i](...arg);
};
const def = (obj, key, value, writable = false)=>{
    Object.defineProperty(obj, key, {
        configurable: true,
        enumerable: false,
        writable,
        value
    });
};
const looseToNumber = (val)=>{
    const n = parseFloat(val);
    return isNaN(n) ? val : n;
};
const toNumber = (val)=>{
    const n = isString(val) ? Number(val) : NaN;
    return isNaN(n) ? val : n;
};
let _globalThis;
const getGlobalThis = ()=>{
    return _globalThis || (_globalThis = typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : {});
};
const identRE = /^[_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*$/;
function genPropsAccessExp(name) {
    return identRE.test(name) ? `__props.${name}` : `__props[${JSON.stringify(name)}]`;
}
const PatchFlags = {
    "TEXT": 1,
    "1": "TEXT",
    "CLASS": 2,
    "2": "CLASS",
    "STYLE": 4,
    "4": "STYLE",
    "PROPS": 8,
    "8": "PROPS",
    "FULL_PROPS": 16,
    "16": "FULL_PROPS",
    "NEED_HYDRATION": 32,
    "32": "NEED_HYDRATION",
    "STABLE_FRAGMENT": 64,
    "64": "STABLE_FRAGMENT",
    "KEYED_FRAGMENT": 128,
    "128": "KEYED_FRAGMENT",
    "UNKEYED_FRAGMENT": 256,
    "256": "UNKEYED_FRAGMENT",
    "NEED_PATCH": 512,
    "512": "NEED_PATCH",
    "DYNAMIC_SLOTS": 1024,
    "1024": "DYNAMIC_SLOTS",
    "DEV_ROOT_FRAGMENT": 2048,
    "2048": "DEV_ROOT_FRAGMENT",
    "HOISTED": -1,
    "-1": "HOISTED",
    "BAIL": -2,
    "-2": "BAIL"
};
const PatchFlagNames = {
    [1]: `TEXT`,
    [2]: `CLASS`,
    [4]: `STYLE`,
    [8]: `PROPS`,
    [16]: `FULL_PROPS`,
    [32]: `NEED_HYDRATION`,
    [64]: `STABLE_FRAGMENT`,
    [128]: `KEYED_FRAGMENT`,
    [256]: `UNKEYED_FRAGMENT`,
    [512]: `NEED_PATCH`,
    [1024]: `DYNAMIC_SLOTS`,
    [2048]: `DEV_ROOT_FRAGMENT`,
    [-1]: `HOISTED`,
    [-2]: `BAIL`
};
const ShapeFlags = {
    "ELEMENT": 1,
    "1": "ELEMENT",
    "FUNCTIONAL_COMPONENT": 2,
    "2": "FUNCTIONAL_COMPONENT",
    "STATEFUL_COMPONENT": 4,
    "4": "STATEFUL_COMPONENT",
    "TEXT_CHILDREN": 8,
    "8": "TEXT_CHILDREN",
    "ARRAY_CHILDREN": 16,
    "16": "ARRAY_CHILDREN",
    "SLOTS_CHILDREN": 32,
    "32": "SLOTS_CHILDREN",
    "TELEPORT": 64,
    "64": "TELEPORT",
    "SUSPENSE": 128,
    "128": "SUSPENSE",
    "COMPONENT_SHOULD_KEEP_ALIVE": 256,
    "256": "COMPONENT_SHOULD_KEEP_ALIVE",
    "COMPONENT_KEPT_ALIVE": 512,
    "512": "COMPONENT_KEPT_ALIVE",
    "COMPONENT": 6,
    "6": "COMPONENT"
};
const SlotFlags = {
    "STABLE": 1,
    "1": "STABLE",
    "DYNAMIC": 2,
    "2": "DYNAMIC",
    "FORWARDED": 3,
    "3": "FORWARDED"
};
const slotFlagsText = {
    [1]: "STABLE",
    [2]: "DYNAMIC",
    [3]: "FORWARDED"
};
const GLOBALS_ALLOWED = "Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,console,Error";
const isGloballyAllowed = /* @__PURE__ */ makeMap(GLOBALS_ALLOWED);
const isGloballyWhitelisted = isGloballyAllowed;
const range = 2;
function generateCodeFrame(source, start = 0, end = source.length) {
    start = Math.max(0, Math.min(start, source.length));
    end = Math.max(0, Math.min(end, source.length));
    if (start > end) return "";
    let lines = source.split(/(\r?\n)/);
    const newlineSequences = lines.filter((_, idx)=>idx % 2 === 1);
    lines = lines.filter((_, idx)=>idx % 2 === 0);
    let count = 0;
    const res = [];
    for(let i = 0; i < lines.length; i++){
        count += lines[i].length + (newlineSequences[i] && newlineSequences[i].length || 0);
        if (count >= start) {
            for(let j = i - range; j <= i + range || end > count; j++){
                if (j < 0 || j >= lines.length) continue;
                const line = j + 1;
                res.push(`${line}${" ".repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);
                const lineLength = lines[j].length;
                const newLineSeqLength = newlineSequences[j] && newlineSequences[j].length || 0;
                if (j === i) {
                    const pad = start - (count - (lineLength + newLineSeqLength));
                    const length = Math.max(1, end > count ? lineLength - pad : end - start);
                    res.push(`   |  ` + " ".repeat(pad) + "^".repeat(length));
                } else if (j > i) {
                    if (end > count) {
                        const length = Math.max(Math.min(end - count, lineLength), 1);
                        res.push(`   |  ` + "^".repeat(length));
                    }
                    count += lineLength + newLineSeqLength;
                }
            }
            break;
        }
    }
    return res.join("\n");
}
function normalizeStyle(value) {
    if (isArray(value)) {
        const res = {};
        for(let i = 0; i < value.length; i++){
            const item = value[i];
            const normalized = isString(item) ? parseStringStyle(item) : normalizeStyle(item);
            if (normalized) for(const key in normalized)res[key] = normalized[key];
        }
        return res;
    } else if (isString(value) || isObject(value)) return value;
}
const listDelimiterRE = /;(?![^(]*\))/g;
const propertyDelimiterRE = /:([^]+)/;
const styleCommentRE = /\/\*[^]*?\*\//g;
function parseStringStyle(cssText) {
    const ret = {};
    cssText.replace(styleCommentRE, "").split(listDelimiterRE).forEach((item)=>{
        if (item) {
            const tmp = item.split(propertyDelimiterRE);
            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());
        }
    });
    return ret;
}
function stringifyStyle(styles) {
    let ret = "";
    if (!styles || isString(styles)) return ret;
    for(const key in styles){
        const value = styles[key];
        if (isString(value) || typeof value === "number") {
            const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);
            ret += `${normalizedKey}:${value};`;
        }
    }
    return ret;
}
function normalizeClass(value) {
    let res = "";
    if (isString(value)) res = value;
    else if (isArray(value)) for(let i = 0; i < value.length; i++){
        const normalized = normalizeClass(value[i]);
        if (normalized) res += normalized + " ";
    }
    else if (isObject(value)) {
        for(const name in value)if (value[name]) res += name + " ";
    }
    return res.trim();
}
function normalizeProps(props) {
    if (!props) return null;
    let { class: klass, style } = props;
    if (klass && !isString(klass)) props.class = normalizeClass(klass);
    if (style) props.style = normalizeStyle(style);
    return props;
}
const HTML_TAGS = "html,body,base,head,link,meta,style,title,address,article,aside,footer,header,hgroup,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot";
const SVG_TAGS = "svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistantLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,text,textPath,title,tspan,unknown,use,view";
const MATH_TAGS = "annotation,annotation-xml,maction,maligngroup,malignmark,math,menclose,merror,mfenced,mfrac,mfraction,mglyph,mi,mlabeledtr,mlongdiv,mmultiscripts,mn,mo,mover,mpadded,mphantom,mprescripts,mroot,mrow,ms,mscarries,mscarry,msgroup,msline,mspace,msqrt,msrow,mstack,mstyle,msub,msubsup,msup,mtable,mtd,mtext,mtr,munder,munderover,none,semantics";
const VOID_TAGS = "area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr";
const isHTMLTag = /* @__PURE__ */ makeMap(HTML_TAGS);
const isSVGTag = /* @__PURE__ */ makeMap(SVG_TAGS);
const isMathMLTag = /* @__PURE__ */ makeMap(MATH_TAGS);
const isVoidTag = /* @__PURE__ */ makeMap(VOID_TAGS);
const specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;
const isSpecialBooleanAttr = /* @__PURE__ */ makeMap(specialBooleanAttrs);
const isBooleanAttr = /* @__PURE__ */ makeMap(specialBooleanAttrs + `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,inert,loop,open,required,reversed,scoped,seamless,checked,muted,multiple,selected`);
function includeBooleanAttr(value) {
    return !!value || value === "";
}
const unsafeAttrCharRE = /[>/="'\u0009\u000a\u000c\u0020]/;
const attrValidationCache = {};
function isSSRSafeAttrName(name) {
    if (attrValidationCache.hasOwnProperty(name)) return attrValidationCache[name];
    const isUnsafe = unsafeAttrCharRE.test(name);
    if (isUnsafe) console.error(`unsafe attribute name: ${name}`);
    return attrValidationCache[name] = !isUnsafe;
}
const propsToAttrMap = {
    acceptCharset: "accept-charset",
    className: "class",
    htmlFor: "for",
    httpEquiv: "http-equiv"
};
const isKnownHtmlAttr = /* @__PURE__ */ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,border,buffered,capture,challenge,charset,checked,cite,class,code,codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,formaction,formenctype,formmethod,formnovalidate,formtarget,headers,height,hidden,high,href,hreflang,http-equiv,icon,id,importance,inert,integrity,ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,start,step,style,summary,tabindex,target,title,translate,type,usemap,value,width,wrap`);
const isKnownSvgAttr = /* @__PURE__ */ makeMap(`xmlns,accent-height,accumulate,additive,alignment-baseline,alphabetic,amplitude,arabic-form,ascent,attributeName,attributeType,azimuth,baseFrequency,baseline-shift,baseProfile,bbox,begin,bias,by,calcMode,cap-height,class,clip,clipPathUnits,clip-path,clip-rule,color,color-interpolation,color-interpolation-filters,color-profile,color-rendering,contentScriptType,contentStyleType,crossorigin,cursor,cx,cy,d,decelerate,descent,diffuseConstant,direction,display,divisor,dominant-baseline,dur,dx,dy,edgeMode,elevation,enable-background,end,exponent,fill,fill-opacity,fill-rule,filter,filterRes,filterUnits,flood-color,flood-opacity,font-family,font-size,font-size-adjust,font-stretch,font-style,font-variant,font-weight,format,from,fr,fx,fy,g1,g2,glyph-name,glyph-orientation-horizontal,glyph-orientation-vertical,glyphRef,gradientTransform,gradientUnits,hanging,height,href,hreflang,horiz-adv-x,horiz-origin-x,id,ideographic,image-rendering,in,in2,intercept,k,k1,k2,k3,k4,kernelMatrix,kernelUnitLength,kerning,keyPoints,keySplines,keyTimes,lang,lengthAdjust,letter-spacing,lighting-color,limitingConeAngle,local,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mask,maskContentUnits,maskUnits,mathematical,max,media,method,min,mode,name,numOctaves,offset,opacity,operator,order,orient,orientation,origin,overflow,overline-position,overline-thickness,panose-1,paint-order,path,pathLength,patternContentUnits,patternTransform,patternUnits,ping,pointer-events,points,pointsAtX,pointsAtY,pointsAtZ,preserveAlpha,preserveAspectRatio,primitiveUnits,r,radius,referrerPolicy,refX,refY,rel,rendering-intent,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,result,rotate,rx,ry,scale,seed,shape-rendering,slope,spacing,specularConstant,specularExponent,speed,spreadMethod,startOffset,stdDeviation,stemh,stemv,stitchTiles,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,string,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,style,surfaceScale,systemLanguage,tabindex,tableValues,target,targetX,targetY,text-anchor,text-decoration,text-rendering,textLength,to,transform,transform-origin,type,u1,u2,underline-position,underline-thickness,unicode,unicode-bidi,unicode-range,units-per-em,v-alphabetic,v-hanging,v-ideographic,v-mathematical,values,vector-effect,version,vert-adv-y,vert-origin-x,vert-origin-y,viewBox,viewTarget,visibility,width,widths,word-spacing,writing-mode,x,x-height,x1,x2,xChannelSelector,xlink:actuate,xlink:arcrole,xlink:href,xlink:role,xlink:show,xlink:title,xlink:type,xmlns:xlink,xml:base,xml:lang,xml:space,y,y1,y2,yChannelSelector,z,zoomAndPan`);
function isRenderableAttrValue(value) {
    if (value == null) return false;
    const type = typeof value;
    return type === "string" || type === "number" || type === "boolean";
}
const escapeRE = /["'&<>]/;
function escapeHtml(string) {
    const str = "" + string;
    const match = escapeRE.exec(str);
    if (!match) return str;
    let html = "";
    let escaped;
    let index;
    let lastIndex = 0;
    for(index = match.index; index < str.length; index++){
        switch(str.charCodeAt(index)){
            case 34:
                escaped = "&quot;";
                break;
            case 38:
                escaped = "&amp;";
                break;
            case 39:
                escaped = "&#39;";
                break;
            case 60:
                escaped = "&lt;";
                break;
            case 62:
                escaped = "&gt;";
                break;
            default:
                continue;
        }
        if (lastIndex !== index) html += str.slice(lastIndex, index);
        lastIndex = index + 1;
        html += escaped;
    }
    return lastIndex !== index ? html + str.slice(lastIndex, index) : html;
}
const commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;
function escapeHtmlComment(src) {
    return src.replace(commentStripRE, "");
}
function looseCompareArrays(a, b) {
    if (a.length !== b.length) return false;
    let equal = true;
    for(let i = 0; equal && i < a.length; i++)equal = looseEqual(a[i], b[i]);
    return equal;
}
function looseEqual(a, b) {
    if (a === b) return true;
    let aValidType = isDate(a);
    let bValidType = isDate(b);
    if (aValidType || bValidType) return aValidType && bValidType ? a.getTime() === b.getTime() : false;
    aValidType = isSymbol(a);
    bValidType = isSymbol(b);
    if (aValidType || bValidType) return a === b;
    aValidType = isArray(a);
    bValidType = isArray(b);
    if (aValidType || bValidType) return aValidType && bValidType ? looseCompareArrays(a, b) : false;
    aValidType = isObject(a);
    bValidType = isObject(b);
    if (aValidType || bValidType) {
        if (!aValidType || !bValidType) return false;
        const aKeysCount = Object.keys(a).length;
        const bKeysCount = Object.keys(b).length;
        if (aKeysCount !== bKeysCount) return false;
        for(const key in a){
            const aHasKey = a.hasOwnProperty(key);
            const bHasKey = b.hasOwnProperty(key);
            if (aHasKey && !bHasKey || !aHasKey && bHasKey || !looseEqual(a[key], b[key])) return false;
        }
    }
    return String(a) === String(b);
}
function looseIndexOf(arr, val) {
    return arr.findIndex((item)=>looseEqual(item, val));
}
const isRef = (val)=>{
    return !!(val && val.__v_isRef === true);
};
const toDisplayString = (val)=>{
    return isString(val) ? val : val == null ? "" : isArray(val) || isObject(val) && (val.toString === objectToString || !isFunction(val.toString)) ? isRef(val) ? toDisplayString(val.value) : JSON.stringify(val, replacer, 2) : String(val);
};
const replacer = (_key, val)=>{
    if (isRef(val)) return replacer(_key, val.value);
    else if (isMap(val)) return {
        [`Map(${val.size})`]: [
            ...val.entries()
        ].reduce((entries, [key, val2], i)=>{
            entries[stringifySymbol(key, i) + " =>"] = val2;
            return entries;
        }, {})
    };
    else if (isSet(val)) return {
        [`Set(${val.size})`]: [
            ...val.values()
        ].map((v)=>stringifySymbol(v))
    };
    else if (isSymbol(val)) return stringifySymbol(val);
    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) return String(val);
    return val;
};
const stringifySymbol = (v, i = "")=>{
    var _a;
    return(// Symbol.description in es2019+ so we need to cast here to pass
    // the lib: es2016 check
    isSymbol(v) ? `Symbol(${(_a = v.description) != null ? _a : i})` : v);
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"5oERU":[function(require,module,exports) {
exports.interopDefault = function(a) {
    return a && a.__esModule ? a : {
        default: a
    };
};
exports.defineInteropFlag = function(a) {
    Object.defineProperty(a, "__esModule", {
        value: true
    });
};
exports.exportAll = function(source, dest) {
    Object.keys(source).forEach(function(key) {
        if (key === "default" || key === "__esModule" || Object.prototype.hasOwnProperty.call(dest, key)) return;
        Object.defineProperty(dest, key, {
            enumerable: true,
            get: function() {
                return source[key];
            }
        });
    });
    return dest;
};
exports.export = function(dest, destName, get) {
    Object.defineProperty(dest, destName, {
        enumerable: true,
        get: get
    });
};

},{}],"5PCKi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
let script;
let initialize = ()=>{
    script = require("5569a091f3c24165");
    if (script.__esModule) script = script.default;
    script.render = require("a1a1a23e097e248d").render;
    script.__cssModules = require("f4c8e73db5a92829").default;
    require("b93ef45881d45a45").default(script);
    script.__scopeId = "data-v-edd33f";
    script.__file = "/Users/rm/Local Sites/wp-juggler-server/app/public/wp-content/plugins/wp-juggler-server/src/control-panel/vue/App.vue";
};
initialize();
if (module.hot) {
    script.__hmrId = "edd33f-hmr";
    module.hot.accept(()=>{
        setTimeout(()=>{
            initialize();
            if (!__VUE_HMR_RUNTIME__.createRecord("edd33f-hmr", script)) __VUE_HMR_RUNTIME__.reload("edd33f-hmr", script);
        }, 0);
    });
}
exports.default = script;

},{"5569a091f3c24165":"1vnZW","a1a1a23e097e248d":"e7mfF","f4c8e73db5a92829":"jvxye","b93ef45881d45a45":"cwDHb","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"1vnZW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _storeJs = require("./store.js");
var _vue = require("vue");
var _vueQuery = require("@tanstack/vue-query");
var _expandedRowVue = require("./ExpandedRow.vue");
var _expandedRowVueDefault = parcelHelpers.interopDefault(_expandedRowVue);
var _themesPluginsPanelVue = require("./ThemesPluginsPanel.vue");
var _themesPluginsPanelVueDefault = parcelHelpers.interopDefault(_themesPluginsPanelVue);
var _healthPanelVue = require("./HealthPanel.vue");
var _healthPanelVueDefault = parcelHelpers.interopDefault(_healthPanelVue);
var _uptimePanelVue = require("./UptimePanel.vue");
var _uptimePanelVueDefault = parcelHelpers.interopDefault(_uptimePanelVue);
var _noticesPanelVue = require("./NoticesPanel.vue");
var _noticesPanelVueDefault = parcelHelpers.interopDefault(_noticesPanelVue);
exports.default = {
    __name: "App",
    setup (__props, { expose: __expose }) {
        __expose();
        const queryClient = (0, _vueQuery.useQueryClient)();
        const store = (0, _storeJs.useWpjsStore)();
        const search = (0, _vue.ref)("");
        const expanded = (0, _vue.ref)([]);
        const headers = [
            {
                title: "",
                key: "network",
                align: "center",
                sortable: false
            },
            {
                title: "Title",
                value: "title",
                align: "start",
                sortable: true
            },
            {
                title: "Url",
                key: "wp_juggler_server_site_url",
                align: "start",
                sortable: true
            },
            {
                title: "Messages",
                key: "events",
                align: "center",
                sortable: false
            },
            {
                title: "Downtime incidents",
                key: "uptime",
                align: "center",
                sortable: false
            },
            {
                title: "Updates",
                key: "updates",
                align: "center",
                sortable: false
            },
            {
                title: "Checksum",
                key: "checksum",
                align: "center",
                sortable: false
            },
            {
                title: "Links",
                key: "links",
                align: "center",
                sortable: false
            },
            {
                title: "WP admin",
                key: "wp_admin",
                align: "center",
                sortable: false
            }
        ];
        const { isLoading, isError, isFetching, data, error, refetch } = (0, _vueQuery.useQuery)({
            queryKey: [
                "wpjs-control-panel"
            ],
            queryFn: getDashboard
        });
        async function doAjax(args) {
            let result;
            try {
                const response = await fetch(store.ajaxUrl, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/x-www-form-urlencoded"
                    },
                    body: new URLSearchParams(args)
                });
                const result = await response.json();
                return result;
            } catch (error) {
                throw error;
            }
        }
        async function getDashboard() {
            let ret = {};
            const response = await doAjax({
                action: "wpjs_get_control_panel"
            });
            ret = response.data;
            return ret;
        }
        function backToDashboard() {
            window.location.href = wpjs_control_panel_object.adminurl;
        }
        function calculateColor(day) {
            if (day.total_num == 0) return "blue-lighten-5";
            if (day.fail_num == 0) return "success";
            return "error";
        }
        const gotoUrl = (url)=>{
            const newWindow = window.open(url, "_blank", "noopener,noreferrer");
            if (newWindow) newWindow.opener = null;
        };
        (0, _vue.onMounted)(()=>{
            store.nonce = wpjs_control_panel_object.nonce;
            store.ajaxUrl = wpjs_control_panel_object.ajaxurl;
        });
        const __returned__ = {
            queryClient,
            store,
            search,
            expanded,
            headers,
            isLoading,
            isError,
            isFetching,
            data,
            error,
            refetch,
            doAjax,
            getDashboard,
            backToDashboard,
            calculateColor,
            gotoUrl,
            get useWpjsStore () {
                return 0, _storeJs.useWpjsStore;
            },
            onMounted: (0, _vue.onMounted),
            computed: (0, _vue.computed),
            ref: (0, _vue.ref),
            get useQueryClient () {
                return 0, _vueQuery.useQueryClient;
            },
            get useQuery () {
                return 0, _vueQuery.useQuery;
            },
            get useMutation () {
                return 0, _vueQuery.useMutation;
            },
            ExpandedRow: (0, _expandedRowVueDefault.default),
            ThemesPluginsPanel: (0, _themesPluginsPanelVueDefault.default),
            HealthPanel: (0, _healthPanelVueDefault.default),
            UptimePanel: (0, _uptimePanelVueDefault.default),
            NoticesPanel: (0, _noticesPanelVueDefault.default)
        };
        Object.defineProperty(__returned__, "__isScriptSetup", {
            enumerable: false,
            value: true
        });
        return __returned__;
    }
};

},{"./store.js":"7kZ8m","vue":"gCTam","@tanstack/vue-query":"aI0Kc","./ExpandedRow.vue":"2IIHS","./ThemesPluginsPanel.vue":"9DdWS","./HealthPanel.vue":"jr9wA","./UptimePanel.vue":"hwbx4","./NoticesPanel.vue":"3sk65","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"7kZ8m":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useWpjsStore", ()=>useWpjsStore);
var _pinia = require("pinia");
var _vue = require("vue");
const useWpjsStore = (0, _pinia.defineStore)("wpjsstore", ()=>{
    const initial = (0, _vue.ref)("Dashboard");
    const activatedThemes = (0, _vue.ref)(false);
    const activatedHealth = (0, _vue.ref)(false);
    const activatedUptime = (0, _vue.ref)(false);
    const activatedSite = (0, _vue.ref)(null);
    const activatedNotices = (0, _vue.ref)(null);
    const nonce = (0, _vue.ref)("");
    const ajaxUrl = (0, _vue.ref)("");
    /* watch(activetab, (newactivetab, prevactivetab) => {
      
    }) */ /* function increment() {
      count.value++
    } */ //return { zoomlevel, doubleCount, increment }
    return {
        initial,
        nonce,
        ajaxUrl,
        activatedSite,
        activatedThemes,
        activatedHealth,
        activatedUptime,
        activatedNotices
    };
});

},{"pinia":"hqc1O","vue":"gCTam","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"hqc1O":[function(require,module,exports) {
/*!
 * pinia v2.2.2
 * (c) 2024 Eduardo San Martin Morote
 * @license MIT
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MutationType", ()=>MutationType);
parcelHelpers.export(exports, "PiniaVuePlugin", ()=>PiniaVuePlugin);
parcelHelpers.export(exports, "acceptHMRUpdate", ()=>acceptHMRUpdate);
parcelHelpers.export(exports, "createPinia", ()=>createPinia);
parcelHelpers.export(exports, "defineStore", ()=>defineStore);
parcelHelpers.export(exports, "disposePinia", ()=>disposePinia);
parcelHelpers.export(exports, "getActivePinia", ()=>getActivePinia);
parcelHelpers.export(exports, "mapActions", ()=>mapActions);
parcelHelpers.export(exports, "mapGetters", ()=>mapGetters);
parcelHelpers.export(exports, "mapState", ()=>mapState);
parcelHelpers.export(exports, "mapStores", ()=>mapStores);
parcelHelpers.export(exports, "mapWritableState", ()=>mapWritableState);
parcelHelpers.export(exports, "setActivePinia", ()=>setActivePinia);
parcelHelpers.export(exports, "setMapStoreSuffix", ()=>setMapStoreSuffix);
parcelHelpers.export(exports, "skipHydrate", ()=>skipHydrate);
parcelHelpers.export(exports, "storeToRefs", ()=>storeToRefs);
var _vueDemi = require("vue-demi");
var _devtoolsApi = require("@vue/devtools-api");
var global = arguments[3];
/**
 * setActivePinia must be called to handle SSR at the top of functions like
 * `fetch`, `setup`, `serverPrefetch` and others
 */ let activePinia;
/**
 * Sets or unsets the active pinia. Used in SSR and internally when calling
 * actions and getters
 *
 * @param pinia - Pinia instance
 */ // @ts-expect-error: cannot constrain the type of the return
const setActivePinia = (pinia)=>activePinia = pinia;
/**
 * Get the currently active pinia if there is any.
 */ const getActivePinia = ()=>(0, _vueDemi.hasInjectionContext)() && (0, _vueDemi.inject)(piniaSymbol) || activePinia;
const piniaSymbol = Symbol("pinia");
function isPlainObject(// eslint-disable-next-line @typescript-eslint/no-explicit-any
o) {
    return o && typeof o === "object" && Object.prototype.toString.call(o) === "[object Object]" && typeof o.toJSON !== "function";
}
// type DeepReadonly<T> = { readonly [P in keyof T]: DeepReadonly<T[P]> }
// TODO: can we change these to numbers?
/**
 * Possible types for SubscriptionCallback
 */ var MutationType;
(function(MutationType) {
    /**
     * Direct mutation of the state:
     *
     * - `store.name = 'new name'`
     * - `store.$state.name = 'new name'`
     * - `store.list.push('new item')`
     */ MutationType["direct"] = "direct";
    /**
     * Mutated the state with `$patch` and an object
     *
     * - `store.$patch({ name: 'newName' })`
     */ MutationType["patchObject"] = "patch object";
    /**
     * Mutated the state with `$patch` and a function
     *
     * - `store.$patch(state => state.name = 'newName')`
     */ MutationType["patchFunction"] = "patch function";
// maybe reset? for $state = {} and $reset
})(MutationType || (MutationType = {}));
const IS_CLIENT = typeof window !== "undefined";
/*
 * FileSaver.js A saveAs() FileSaver implementation.
 *
 * Originally by Eli Grey, adapted as an ESM module by Eduardo San Martin
 * Morote.
 *
 * License : MIT
 */ // The one and only way of getting global scope in all environments
// https://stackoverflow.com/q/3277182/1008999
const _global = /*#__PURE__*/ (()=>typeof window === "object" && window.window === window ? window : typeof self === "object" && self.self === self ? self : typeof global === "object" && global.global === global ? global : typeof globalThis === "object" ? globalThis : {
        HTMLElement: null
    })();
function bom(blob, { autoBom = false } = {}) {
    // prepend BOM for UTF-8 XML and text/* types (including HTML)
    // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF
    if (autoBom && /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(blob.type)) return new Blob([
        String.fromCharCode(0xfeff),
        blob
    ], {
        type: blob.type
    });
    return blob;
}
function download(url, name, opts) {
    const xhr = new XMLHttpRequest();
    xhr.open("GET", url);
    xhr.responseType = "blob";
    xhr.onload = function() {
        saveAs(xhr.response, name, opts);
    };
    xhr.onerror = function() {
        console.error("could not download file");
    };
    xhr.send();
}
function corsEnabled(url) {
    const xhr = new XMLHttpRequest();
    // use sync to avoid popup blocker
    xhr.open("HEAD", url, false);
    try {
        xhr.send();
    } catch (e) {}
    return xhr.status >= 200 && xhr.status <= 299;
}
// `a.click()` doesn't work for all browsers (#465)
function click(node) {
    try {
        node.dispatchEvent(new MouseEvent("click"));
    } catch (e) {
        const evt = document.createEvent("MouseEvents");
        evt.initMouseEvent("click", true, true, window, 0, 0, 0, 80, 20, false, false, false, false, 0, null);
        node.dispatchEvent(evt);
    }
}
const _navigator = typeof navigator === "object" ? navigator : {
    userAgent: ""
};
// Detect WebView inside a native macOS app by ruling out all browsers
// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too
// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos
const isMacOSWebView = /*#__PURE__*/ (()=>/Macintosh/.test(_navigator.userAgent) && /AppleWebKit/.test(_navigator.userAgent) && !/Safari/.test(_navigator.userAgent))();
const saveAs = !IS_CLIENT ? ()=>{} // noop
 : typeof HTMLAnchorElement !== "undefined" && "download" in HTMLAnchorElement.prototype && !isMacOSWebView ? downloadSaveAs : "msSaveOrOpenBlob" in _navigator ? msSaveAs : fileSaverSaveAs;
function downloadSaveAs(blob, name = "download", opts) {
    const a = document.createElement("a");
    a.download = name;
    a.rel = "noopener"; // tabnabbing
    // TODO: detect chrome extensions & packaged apps
    // a.target = '_blank'
    if (typeof blob === "string") {
        // Support regular links
        a.href = blob;
        if (a.origin !== location.origin) {
            if (corsEnabled(a.href)) download(blob, name, opts);
            else {
                a.target = "_blank";
                click(a);
            }
        } else click(a);
    } else {
        // Support blobs
        a.href = URL.createObjectURL(blob);
        setTimeout(function() {
            URL.revokeObjectURL(a.href);
        }, 4e4); // 40s
        setTimeout(function() {
            click(a);
        }, 0);
    }
}
function msSaveAs(blob, name = "download", opts) {
    if (typeof blob === "string") {
        if (corsEnabled(blob)) download(blob, name, opts);
        else {
            const a = document.createElement("a");
            a.href = blob;
            a.target = "_blank";
            setTimeout(function() {
                click(a);
            });
        }
    } else // @ts-ignore: works on windows
    navigator.msSaveOrOpenBlob(bom(blob, opts), name);
}
function fileSaverSaveAs(blob, name, opts, popup) {
    // Open a popup immediately do go around popup blocker
    // Mostly only available on user interaction and the fileReader is async so...
    popup = popup || open("", "_blank");
    if (popup) popup.document.title = popup.document.body.innerText = "downloading...";
    if (typeof blob === "string") return download(blob, name, opts);
    const force = blob.type === "application/octet-stream";
    const isSafari = /constructor/i.test(String(_global.HTMLElement)) || "safari" in _global;
    const isChromeIOS = /CriOS\/[\d]+/.test(navigator.userAgent);
    if ((isChromeIOS || force && isSafari || isMacOSWebView) && typeof FileReader !== "undefined") {
        // Safari doesn't allow downloading of blob URLs
        const reader = new FileReader();
        reader.onloadend = function() {
            let url = reader.result;
            if (typeof url !== "string") {
                popup = null;
                throw new Error("Wrong reader.result type");
            }
            url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, "data:attachment/file;");
            if (popup) popup.location.href = url;
            else location.assign(url);
            popup = null; // reverse-tabnabbing #460
        };
        reader.readAsDataURL(blob);
    } else {
        const url = URL.createObjectURL(blob);
        if (popup) popup.location.assign(url);
        else location.href = url;
        popup = null; // reverse-tabnabbing #460
        setTimeout(function() {
            URL.revokeObjectURL(url);
        }, 4e4); // 40s
    }
}
/**
 * Shows a toast or console.log
 *
 * @param message - message to log
 * @param type - different color of the tooltip
 */ function toastMessage(message, type) {
    const piniaMessage = "\uD83C\uDF4D " + message;
    if (typeof __VUE_DEVTOOLS_TOAST__ === "function") // No longer available :(
    __VUE_DEVTOOLS_TOAST__(piniaMessage, type);
    else if (type === "error") console.error(piniaMessage);
    else if (type === "warn") console.warn(piniaMessage);
    else console.log(piniaMessage);
}
function isPinia(o) {
    return "_a" in o && "install" in o;
}
/**
 * This file contain devtools actions, they are not Pinia actions.
 */ // ---
function checkClipboardAccess() {
    if (!("clipboard" in navigator)) {
        toastMessage(`Your browser doesn't support the Clipboard API`, "error");
        return true;
    }
}
function checkNotFocusedError(error) {
    if (error instanceof Error && error.message.toLowerCase().includes("document is not focused")) {
        toastMessage('You need to activate the "Emulate a focused page" setting in the "Rendering" panel of devtools.', "warn");
        return true;
    }
    return false;
}
async function actionGlobalCopyState(pinia) {
    if (checkClipboardAccess()) return;
    try {
        await navigator.clipboard.writeText(JSON.stringify(pinia.state.value));
        toastMessage("Global state copied to clipboard.");
    } catch (error) {
        if (checkNotFocusedError(error)) return;
        toastMessage(`Failed to serialize the state. Check the console for more details.`, "error");
        console.error(error);
    }
}
async function actionGlobalPasteState(pinia) {
    if (checkClipboardAccess()) return;
    try {
        loadStoresState(pinia, JSON.parse(await navigator.clipboard.readText()));
        toastMessage("Global state pasted from clipboard.");
    } catch (error) {
        if (checkNotFocusedError(error)) return;
        toastMessage(`Failed to deserialize the state from clipboard. Check the console for more details.`, "error");
        console.error(error);
    }
}
async function actionGlobalSaveState(pinia) {
    try {
        saveAs(new Blob([
            JSON.stringify(pinia.state.value)
        ], {
            type: "text/plain;charset=utf-8"
        }), "pinia-state.json");
    } catch (error) {
        toastMessage(`Failed to export the state as JSON. Check the console for more details.`, "error");
        console.error(error);
    }
}
let fileInput;
function getFileOpener() {
    if (!fileInput) {
        fileInput = document.createElement("input");
        fileInput.type = "file";
        fileInput.accept = ".json";
    }
    function openFile() {
        return new Promise((resolve, reject)=>{
            fileInput.onchange = async ()=>{
                const files = fileInput.files;
                if (!files) return resolve(null);
                const file = files.item(0);
                if (!file) return resolve(null);
                return resolve({
                    text: await file.text(),
                    file
                });
            };
            // @ts-ignore: TODO: changed from 4.3 to 4.4
            fileInput.oncancel = ()=>resolve(null);
            fileInput.onerror = reject;
            fileInput.click();
        });
    }
    return openFile;
}
async function actionGlobalOpenStateFile(pinia) {
    try {
        const open1 = getFileOpener();
        const result = await open1();
        if (!result) return;
        const { text, file } = result;
        loadStoresState(pinia, JSON.parse(text));
        toastMessage(`Global state imported from "${file.name}".`);
    } catch (error) {
        toastMessage(`Failed to import the state from JSON. Check the console for more details.`, "error");
        console.error(error);
    }
}
function loadStoresState(pinia, state) {
    for(const key in state){
        const storeState = pinia.state.value[key];
        // store is already instantiated, patch it
        if (storeState) Object.assign(storeState, state[key]);
        else // store is not instantiated, set the initial state
        pinia.state.value[key] = state[key];
    }
}
function formatDisplay(display) {
    return {
        _custom: {
            display
        }
    };
}
const PINIA_ROOT_LABEL = "\uD83C\uDF4D Pinia (root)";
const PINIA_ROOT_ID = "_root";
function formatStoreForInspectorTree(store) {
    return isPinia(store) ? {
        id: PINIA_ROOT_ID,
        label: PINIA_ROOT_LABEL
    } : {
        id: store.$id,
        label: store.$id
    };
}
function formatStoreForInspectorState(store) {
    if (isPinia(store)) {
        const storeNames = Array.from(store._s.keys());
        const storeMap = store._s;
        const state = {
            state: storeNames.map((storeId)=>({
                    editable: true,
                    key: storeId,
                    value: store.state.value[storeId]
                })),
            getters: storeNames.filter((id)=>storeMap.get(id)._getters).map((id)=>{
                const store = storeMap.get(id);
                return {
                    editable: false,
                    key: id,
                    value: store._getters.reduce((getters, key)=>{
                        getters[key] = store[key];
                        return getters;
                    }, {})
                };
            })
        };
        return state;
    }
    const state = {
        state: Object.keys(store.$state).map((key)=>({
                editable: true,
                key,
                value: store.$state[key]
            }))
    };
    // avoid adding empty getters
    if (store._getters && store._getters.length) state.getters = store._getters.map((getterName)=>({
            editable: false,
            key: getterName,
            value: store[getterName]
        }));
    if (store._customProperties.size) state.customProperties = Array.from(store._customProperties).map((key)=>({
            editable: true,
            key,
            value: store[key]
        }));
    return state;
}
function formatEventData(events) {
    if (!events) return {};
    if (Array.isArray(events)) // TODO: handle add and delete for arrays and objects
    return events.reduce((data, event)=>{
        data.keys.push(event.key);
        data.operations.push(event.type);
        data.oldValue[event.key] = event.oldValue;
        data.newValue[event.key] = event.newValue;
        return data;
    }, {
        oldValue: {},
        keys: [],
        operations: [],
        newValue: {}
    });
    else return {
        operation: formatDisplay(events.type),
        key: formatDisplay(events.key),
        oldValue: events.oldValue,
        newValue: events.newValue
    };
}
function formatMutationType(type) {
    switch(type){
        case MutationType.direct:
            return "mutation";
        case MutationType.patchFunction:
            return "$patch";
        case MutationType.patchObject:
            return "$patch";
        default:
            return "unknown";
    }
}
// timeline can be paused when directly changing the state
let isTimelineActive = true;
const componentStateTypes = [];
const MUTATIONS_LAYER_ID = "pinia:mutations";
const INSPECTOR_ID = "pinia";
const { assign: assign$1 } = Object;
/**
 * Gets the displayed name of a store in devtools
 *
 * @param id - id of the store
 * @returns a formatted string
 */ const getStoreType = (id)=>"\uD83C\uDF4D " + id;
/**
 * Add the pinia plugin without any store. Allows displaying a Pinia plugin tab
 * as soon as it is added to the application.
 *
 * @param app - Vue application
 * @param pinia - pinia instance
 */ function registerPiniaDevtools(app, pinia) {
    (0, _devtoolsApi.setupDevtoolsPlugin)({
        id: "dev.esm.pinia",
        label: "Pinia \uD83C\uDF4D",
        logo: "https://pinia.vuejs.org/logo.svg",
        packageName: "pinia",
        homepage: "https://pinia.vuejs.org",
        componentStateTypes,
        app
    }, (api)=>{
        if (typeof api.now !== "function") toastMessage("You seem to be using an outdated version of Vue Devtools. Are you still using the Beta release instead of the stable one? You can find the links at https://devtools.vuejs.org/guide/installation.html.");
        api.addTimelineLayer({
            id: MUTATIONS_LAYER_ID,
            label: `Pinia \u{1F34D}`,
            color: 0xe5df88
        });
        api.addInspector({
            id: INSPECTOR_ID,
            label: "Pinia \uD83C\uDF4D",
            icon: "storage",
            treeFilterPlaceholder: "Search stores",
            actions: [
                {
                    icon: "content_copy",
                    action: ()=>{
                        actionGlobalCopyState(pinia);
                    },
                    tooltip: "Serialize and copy the state"
                },
                {
                    icon: "content_paste",
                    action: async ()=>{
                        await actionGlobalPasteState(pinia);
                        api.sendInspectorTree(INSPECTOR_ID);
                        api.sendInspectorState(INSPECTOR_ID);
                    },
                    tooltip: "Replace the state with the content of your clipboard"
                },
                {
                    icon: "save",
                    action: ()=>{
                        actionGlobalSaveState(pinia);
                    },
                    tooltip: "Save the state as a JSON file"
                },
                {
                    icon: "folder_open",
                    action: async ()=>{
                        await actionGlobalOpenStateFile(pinia);
                        api.sendInspectorTree(INSPECTOR_ID);
                        api.sendInspectorState(INSPECTOR_ID);
                    },
                    tooltip: "Import the state from a JSON file"
                }
            ],
            nodeActions: [
                {
                    icon: "restore",
                    tooltip: 'Reset the state (with "$reset")',
                    action: (nodeId)=>{
                        const store = pinia._s.get(nodeId);
                        if (!store) toastMessage(`Cannot reset "${nodeId}" store because it wasn't found.`, "warn");
                        else if (typeof store.$reset !== "function") toastMessage(`Cannot reset "${nodeId}" store because it doesn't have a "$reset" method implemented.`, "warn");
                        else {
                            store.$reset();
                            toastMessage(`Store "${nodeId}" reset.`);
                        }
                    }
                }
            ]
        });
        api.on.inspectComponent((payload, ctx)=>{
            const proxy = payload.componentInstance && payload.componentInstance.proxy;
            if (proxy && proxy._pStores) {
                const piniaStores = payload.componentInstance.proxy._pStores;
                Object.values(piniaStores).forEach((store)=>{
                    payload.instanceData.state.push({
                        type: getStoreType(store.$id),
                        key: "state",
                        editable: true,
                        value: store._isOptionsAPI ? {
                            _custom: {
                                value: (0, _vueDemi.toRaw)(store.$state),
                                actions: [
                                    {
                                        icon: "restore",
                                        tooltip: "Reset the state of this store",
                                        action: ()=>store.$reset()
                                    }
                                ]
                            }
                        } : Object.keys(store.$state).reduce((state, key)=>{
                            state[key] = store.$state[key];
                            return state;
                        }, {})
                    });
                    if (store._getters && store._getters.length) payload.instanceData.state.push({
                        type: getStoreType(store.$id),
                        key: "getters",
                        editable: false,
                        value: store._getters.reduce((getters, key)=>{
                            try {
                                getters[key] = store[key];
                            } catch (error) {
                                // @ts-expect-error: we just want to show it in devtools
                                getters[key] = error;
                            }
                            return getters;
                        }, {})
                    });
                });
            }
        });
        api.on.getInspectorTree((payload)=>{
            if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {
                let stores = [
                    pinia
                ];
                stores = stores.concat(Array.from(pinia._s.values()));
                payload.rootNodes = (payload.filter ? stores.filter((store)=>"$id" in store ? store.$id.toLowerCase().includes(payload.filter.toLowerCase()) : PINIA_ROOT_LABEL.toLowerCase().includes(payload.filter.toLowerCase())) : stores).map(formatStoreForInspectorTree);
            }
        });
        // Expose pinia instance as $pinia to window
        globalThis.$pinia = pinia;
        api.on.getInspectorState((payload)=>{
            if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {
                const inspectedStore = payload.nodeId === PINIA_ROOT_ID ? pinia : pinia._s.get(payload.nodeId);
                if (!inspectedStore) // this could be the selected store restored for a different project
                // so it's better not to say anything here
                return;
                if (inspectedStore) {
                    // Expose selected store as $store to window
                    if (payload.nodeId !== PINIA_ROOT_ID) globalThis.$store = (0, _vueDemi.toRaw)(inspectedStore);
                    payload.state = formatStoreForInspectorState(inspectedStore);
                }
            }
        });
        api.on.editInspectorState((payload, ctx)=>{
            if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {
                const inspectedStore = payload.nodeId === PINIA_ROOT_ID ? pinia : pinia._s.get(payload.nodeId);
                if (!inspectedStore) return toastMessage(`store "${payload.nodeId}" not found`, "error");
                const { path } = payload;
                if (!isPinia(inspectedStore)) // access only the state
                {
                    if (path.length !== 1 || !inspectedStore._customProperties.has(path[0]) || path[0] in inspectedStore.$state) path.unshift("$state");
                } else // Root access, we can omit the `.value` because the devtools API does it for us
                path.unshift("state");
                isTimelineActive = false;
                payload.set(inspectedStore, path, payload.state.value);
                isTimelineActive = true;
            }
        });
        api.on.editComponentState((payload)=>{
            if (payload.type.startsWith("\uD83C\uDF4D")) {
                const storeId = payload.type.replace(/^🍍\s*/, "");
                const store = pinia._s.get(storeId);
                if (!store) return toastMessage(`store "${storeId}" not found`, "error");
                const { path } = payload;
                if (path[0] !== "state") return toastMessage(`Invalid path for store "${storeId}":\n${path}\nOnly state can be modified.`);
                // rewrite the first entry to be able to directly set the state as
                // well as any other path
                path[0] = "$state";
                isTimelineActive = false;
                payload.set(store, path, payload.state.value);
                isTimelineActive = true;
            }
        });
    });
}
function addStoreToDevtools(app, store) {
    if (!componentStateTypes.includes(getStoreType(store.$id))) componentStateTypes.push(getStoreType(store.$id));
    (0, _devtoolsApi.setupDevtoolsPlugin)({
        id: "dev.esm.pinia",
        label: "Pinia \uD83C\uDF4D",
        logo: "https://pinia.vuejs.org/logo.svg",
        packageName: "pinia",
        homepage: "https://pinia.vuejs.org",
        componentStateTypes,
        app,
        settings: {
            logStoreChanges: {
                label: "Notify about new/deleted stores",
                type: "boolean",
                defaultValue: true
            }
        }
    }, (api)=>{
        // gracefully handle errors
        const now = typeof api.now === "function" ? api.now.bind(api) : Date.now;
        store.$onAction(({ after, onError, name, args })=>{
            const groupId = runningActionId++;
            api.addTimelineEvent({
                layerId: MUTATIONS_LAYER_ID,
                event: {
                    time: now(),
                    title: "\uD83D\uDEEB " + name,
                    subtitle: "start",
                    data: {
                        store: formatDisplay(store.$id),
                        action: formatDisplay(name),
                        args
                    },
                    groupId
                }
            });
            after((result)=>{
                activeAction = undefined;
                api.addTimelineEvent({
                    layerId: MUTATIONS_LAYER_ID,
                    event: {
                        time: now(),
                        title: "\uD83D\uDEEC " + name,
                        subtitle: "end",
                        data: {
                            store: formatDisplay(store.$id),
                            action: formatDisplay(name),
                            args,
                            result
                        },
                        groupId
                    }
                });
            });
            onError((error)=>{
                activeAction = undefined;
                api.addTimelineEvent({
                    layerId: MUTATIONS_LAYER_ID,
                    event: {
                        time: now(),
                        logType: "error",
                        title: "\uD83D\uDCA5 " + name,
                        subtitle: "end",
                        data: {
                            store: formatDisplay(store.$id),
                            action: formatDisplay(name),
                            args,
                            error
                        },
                        groupId
                    }
                });
            });
        }, true);
        store._customProperties.forEach((name)=>{
            (0, _vueDemi.watch)(()=>(0, _vueDemi.unref)(store[name]), (newValue, oldValue)=>{
                api.notifyComponentUpdate();
                api.sendInspectorState(INSPECTOR_ID);
                if (isTimelineActive) api.addTimelineEvent({
                    layerId: MUTATIONS_LAYER_ID,
                    event: {
                        time: now(),
                        title: "Change",
                        subtitle: name,
                        data: {
                            newValue,
                            oldValue
                        },
                        groupId: activeAction
                    }
                });
            }, {
                deep: true
            });
        });
        store.$subscribe(({ events, type }, state)=>{
            api.notifyComponentUpdate();
            api.sendInspectorState(INSPECTOR_ID);
            if (!isTimelineActive) return;
            // rootStore.state[store.id] = state
            const eventData = {
                time: now(),
                title: formatMutationType(type),
                data: assign$1({
                    store: formatDisplay(store.$id)
                }, formatEventData(events)),
                groupId: activeAction
            };
            if (type === MutationType.patchFunction) eventData.subtitle = "\u2935\uFE0F";
            else if (type === MutationType.patchObject) eventData.subtitle = "\uD83E\uDDE9";
            else if (events && !Array.isArray(events)) eventData.subtitle = events.type;
            if (events) eventData.data["rawEvent(s)"] = {
                _custom: {
                    display: "DebuggerEvent",
                    type: "object",
                    tooltip: "raw DebuggerEvent[]",
                    value: events
                }
            };
            api.addTimelineEvent({
                layerId: MUTATIONS_LAYER_ID,
                event: eventData
            });
        }, {
            detached: true,
            flush: "sync"
        });
        const hotUpdate = store._hotUpdate;
        store._hotUpdate = (0, _vueDemi.markRaw)((newStore)=>{
            hotUpdate(newStore);
            api.addTimelineEvent({
                layerId: MUTATIONS_LAYER_ID,
                event: {
                    time: now(),
                    title: "\uD83D\uDD25 " + store.$id,
                    subtitle: "HMR update",
                    data: {
                        store: formatDisplay(store.$id),
                        info: formatDisplay(`HMR update`)
                    }
                }
            });
            // update the devtools too
            api.notifyComponentUpdate();
            api.sendInspectorTree(INSPECTOR_ID);
            api.sendInspectorState(INSPECTOR_ID);
        });
        const { $dispose } = store;
        store.$dispose = ()=>{
            $dispose();
            api.notifyComponentUpdate();
            api.sendInspectorTree(INSPECTOR_ID);
            api.sendInspectorState(INSPECTOR_ID);
            api.getSettings().logStoreChanges && toastMessage(`Disposed "${store.$id}" store \u{1F5D1}`);
        };
        // trigger an update so it can display new registered stores
        api.notifyComponentUpdate();
        api.sendInspectorTree(INSPECTOR_ID);
        api.sendInspectorState(INSPECTOR_ID);
        api.getSettings().logStoreChanges && toastMessage(`"${store.$id}" store installed \u{1F195}`);
    });
}
let runningActionId = 0;
let activeAction;
/**
 * Patches a store to enable action grouping in devtools by wrapping the store with a Proxy that is passed as the
 * context of all actions, allowing us to set `runningAction` on each access and effectively associating any state
 * mutation to the action.
 *
 * @param store - store to patch
 * @param actionNames - list of actionst to patch
 */ function patchActionForGrouping(store, actionNames, wrapWithProxy) {
    // original actions of the store as they are given by pinia. We are going to override them
    const actions = actionNames.reduce((storeActions, actionName)=>{
        // use toRaw to avoid tracking #541
        storeActions[actionName] = (0, _vueDemi.toRaw)(store)[actionName];
        return storeActions;
    }, {});
    for(const actionName in actions)store[actionName] = function() {
        // the running action id is incremented in a before action hook
        const _actionId = runningActionId;
        const trackedStore = wrapWithProxy ? new Proxy(store, {
            get (...args) {
                activeAction = _actionId;
                return Reflect.get(...args);
            },
            set (...args) {
                activeAction = _actionId;
                return Reflect.set(...args);
            }
        }) : store;
        // For Setup Stores we need https://github.com/tc39/proposal-async-context
        activeAction = _actionId;
        const retValue = actions[actionName].apply(trackedStore, arguments);
        // this is safer as async actions in Setup Stores would associate mutations done outside of the action
        activeAction = undefined;
        return retValue;
    };
}
/**
 * pinia.use(devtoolsPlugin)
 */ function devtoolsPlugin({ app, store, options }) {
    // HMR module
    if (store.$id.startsWith("__hot:")) return;
    // detect option api vs setup api
    store._isOptionsAPI = !!options.state;
    // Do not overwrite actions mocked by @pinia/testing (#2298)
    if (!store._p._testing) {
        patchActionForGrouping(store, Object.keys(options.actions), store._isOptionsAPI);
        // Upgrade the HMR to also update the new actions
        const originalHotUpdate = store._hotUpdate;
        (0, _vueDemi.toRaw)(store)._hotUpdate = function(newStore) {
            originalHotUpdate.apply(this, arguments);
            patchActionForGrouping(store, Object.keys(newStore._hmrPayload.actions), !!store._isOptionsAPI);
        };
    }
    addStoreToDevtools(app, // FIXME: is there a way to allow the assignment from Store<Id, S, G, A> to StoreGeneric?
    store);
}
/**
 * Creates a Pinia instance to be used by the application
 */ function createPinia() {
    const scope = (0, _vueDemi.effectScope)(true);
    // NOTE: here we could check the window object for a state and directly set it
    // if there is anything like it with Vue 3 SSR
    const state = scope.run(()=>(0, _vueDemi.ref)({}));
    let _p = [];
    // plugins added before calling app.use(pinia)
    let toBeInstalled = [];
    const pinia = (0, _vueDemi.markRaw)({
        install (app) {
            // this allows calling useStore() outside of a component setup after
            // installing pinia's plugin
            setActivePinia(pinia);
            if (!(0, _vueDemi.isVue2)) {
                pinia._a = app;
                app.provide(piniaSymbol, pinia);
                app.config.globalProperties.$pinia = pinia;
                /* istanbul ignore else */ if (IS_CLIENT) registerPiniaDevtools(app, pinia);
                toBeInstalled.forEach((plugin)=>_p.push(plugin));
                toBeInstalled = [];
            }
        },
        use (plugin) {
            if (!this._a && !(0, _vueDemi.isVue2)) toBeInstalled.push(plugin);
            else _p.push(plugin);
            return this;
        },
        _p,
        // it's actually undefined here
        // @ts-expect-error
        _a: null,
        _e: scope,
        _s: new Map(),
        state
    });
    // pinia devtools rely on dev only features so they cannot be forced unless
    // the dev build of Vue is used. Avoid old browsers like IE11.
    if (typeof Proxy !== "undefined") pinia.use(devtoolsPlugin);
    return pinia;
}
/**
 * Dispose a Pinia instance by stopping its effectScope and removing the state, plugins and stores. This is mostly
 * useful in tests, with both a testing pinia or a regular pinia and in applications that use multiple pinia instances.
 * Once disposed, the pinia instance cannot be used anymore.
 *
 * @param pinia - pinia instance
 */ function disposePinia(pinia) {
    pinia._e.stop();
    pinia._s.clear();
    pinia._p.splice(0);
    pinia.state.value = {};
    // @ts-expect-error: non valid
    pinia._a = null;
}
/**
 * Checks if a function is a `StoreDefinition`.
 *
 * @param fn - object to test
 * @returns true if `fn` is a StoreDefinition
 */ const isUseStore = (fn)=>{
    return typeof fn === "function" && typeof fn.$id === "string";
};
/**
 * Mutates in place `newState` with `oldState` to _hot update_ it. It will
 * remove any key not existing in `newState` and recursively merge plain
 * objects.
 *
 * @param newState - new state object to be patched
 * @param oldState - old state that should be used to patch newState
 * @returns - newState
 */ function patchObject(newState, oldState) {
    // no need to go through symbols because they cannot be serialized anyway
    for(const key in oldState){
        const subPatch = oldState[key];
        // skip the whole sub tree
        if (!(key in newState)) continue;
        const targetValue = newState[key];
        if (isPlainObject(targetValue) && isPlainObject(subPatch) && !(0, _vueDemi.isRef)(subPatch) && !(0, _vueDemi.isReactive)(subPatch)) newState[key] = patchObject(targetValue, subPatch);
        else // objects are either a bit more complex (e.g. refs) or primitives, so we
        // just set the whole thing
        if (0, _vueDemi.isVue2) (0, _vueDemi.set)(newState, key, subPatch);
        else newState[key] = subPatch;
    }
    return newState;
}
/**
 * Creates an _accept_ function to pass to `import.meta.hot` in Vite applications.
 *
 * @example
 * ```js
 * const useUser = defineStore(...)
 * if (import.meta.hot) {
 *   import.meta.hot.accept(acceptHMRUpdate(useUser, import.meta.hot))
 * }
 * ```
 *
 * @param initialUseStore - return of the defineStore to hot update
 * @param hot - `import.meta.hot`
 */ function acceptHMRUpdate(initialUseStore, hot) {
    return (newModule)=>{
        const pinia = hot.data.pinia || initialUseStore._pinia;
        if (!pinia) // this store is still not used
        return;
        // preserve the pinia instance across loads
        hot.data.pinia = pinia;
        // console.log('got data', newStore)
        for(const exportName in newModule){
            const useStore = newModule[exportName];
            // console.log('checking for', exportName)
            if (isUseStore(useStore) && pinia._s.has(useStore.$id)) {
                // console.log('Accepting update for', useStore.$id)
                const id = useStore.$id;
                if (id !== initialUseStore.$id) {
                    console.warn(`The id of the store changed from "${initialUseStore.$id}" to "${id}". Reloading.`);
                    // return import.meta.hot.invalidate()
                    return hot.invalidate();
                }
                const existingStore = pinia._s.get(id);
                if (!existingStore) {
                    console.log(`[Pinia]: skipping hmr because store doesn't exist yet`);
                    return;
                }
                useStore(pinia, existingStore);
            }
        }
    };
}
const noop = ()=>{};
function addSubscription(subscriptions, callback, detached, onCleanup = noop) {
    subscriptions.push(callback);
    const removeSubscription = ()=>{
        const idx = subscriptions.indexOf(callback);
        if (idx > -1) {
            subscriptions.splice(idx, 1);
            onCleanup();
        }
    };
    if (!detached && (0, _vueDemi.getCurrentScope)()) (0, _vueDemi.onScopeDispose)(removeSubscription);
    return removeSubscription;
}
function triggerSubscriptions(subscriptions, ...args) {
    subscriptions.slice().forEach((callback)=>{
        callback(...args);
    });
}
const fallbackRunWithContext = (fn)=>fn();
/**
 * Marks a function as an action for `$onAction`
 * @internal
 */ const ACTION_MARKER = Symbol();
/**
 * Action name symbol. Allows to add a name to an action after defining it
 * @internal
 */ const ACTION_NAME = Symbol();
function mergeReactiveObjects(target, patchToApply) {
    // Handle Map instances
    if (target instanceof Map && patchToApply instanceof Map) patchToApply.forEach((value, key)=>target.set(key, value));
    else if (target instanceof Set && patchToApply instanceof Set) // Handle Set instances
    patchToApply.forEach(target.add, target);
    // no need to go through symbols because they cannot be serialized anyway
    for(const key in patchToApply){
        if (!patchToApply.hasOwnProperty(key)) continue;
        const subPatch = patchToApply[key];
        const targetValue = target[key];
        if (isPlainObject(targetValue) && isPlainObject(subPatch) && target.hasOwnProperty(key) && !(0, _vueDemi.isRef)(subPatch) && !(0, _vueDemi.isReactive)(subPatch)) // NOTE: here I wanted to warn about inconsistent types but it's not possible because in setup stores one might
        // start the value of a property as a certain type e.g. a Map, and then for some reason, during SSR, change that
        // to `undefined`. When trying to hydrate, we want to override the Map with `undefined`.
        target[key] = mergeReactiveObjects(targetValue, subPatch);
        else // @ts-expect-error: subPatch is a valid value
        target[key] = subPatch;
    }
    return target;
}
const skipHydrateSymbol = Symbol("pinia:skipHydration");
const skipHydrateMap = /*#__PURE__*/ new WeakMap();
/**
 * Tells Pinia to skip the hydration process of a given object. This is useful in setup stores (only) when you return a
 * stateful object in the store but it isn't really state. e.g. returning a router instance in a setup store.
 *
 * @param obj - target object
 * @returns obj
 */ function skipHydrate(obj) {
    return (0, _vueDemi.isVue2) ? /* istanbul ignore next */ skipHydrateMap.set(obj, 1) && obj : Object.defineProperty(obj, skipHydrateSymbol, {});
}
/**
 * Returns whether a value should be hydrated
 *
 * @param obj - target variable
 * @returns true if `obj` should be hydrated
 */ function shouldHydrate(obj) {
    return (0, _vueDemi.isVue2) ? /* istanbul ignore next */ !skipHydrateMap.has(obj) : !isPlainObject(obj) || !obj.hasOwnProperty(skipHydrateSymbol);
}
const { assign } = Object;
function isComputed(o) {
    return !!((0, _vueDemi.isRef)(o) && o.effect);
}
function createOptionsStore(id, options, pinia, hot) {
    const { state, actions, getters } = options;
    const initialState = pinia.state.value[id];
    let store;
    function setup() {
        if (!initialState && !hot) {
            /* istanbul ignore if */ if (0, _vueDemi.isVue2) (0, _vueDemi.set)(pinia.state.value, id, state ? state() : {});
            else pinia.state.value[id] = state ? state() : {};
        }
        // avoid creating a state in pinia.state.value
        const localState = hot ? (0, _vueDemi.toRefs)((0, _vueDemi.ref)(state ? state() : {}).value) : (0, _vueDemi.toRefs)(pinia.state.value[id]);
        return assign(localState, actions, Object.keys(getters || {}).reduce((computedGetters, name)=>{
            if (name in localState) console.warn(`[\u{1F34D}]: A getter cannot have the same name as another state property. Rename one of them. Found with "${name}" in store "${id}".`);
            computedGetters[name] = (0, _vueDemi.markRaw)((0, _vueDemi.computed)(()=>{
                setActivePinia(pinia);
                // it was created just before
                const store = pinia._s.get(id);
                // allow cross using stores
                /* istanbul ignore if */ if ((0, _vueDemi.isVue2) && !store._r) return;
                // @ts-expect-error
                // return getters![name].call(context, context)
                // TODO: avoid reading the getter while assigning with a global variable
                return getters[name].call(store, store);
            }));
            return computedGetters;
        }, {}));
    }
    store = createSetupStore(id, setup, options, pinia, hot, true);
    return store;
}
function createSetupStore($id, setup, options = {}, pinia, hot, isOptionsStore) {
    let scope;
    const optionsForPlugin = assign({
        actions: {}
    }, options);
    /* istanbul ignore if */ if (!pinia._e.active) throw new Error("Pinia destroyed");
    // watcher options for $subscribe
    const $subscribeOptions = {
        deep: true
    };
    /* istanbul ignore else */ if (!(0, _vueDemi.isVue2)) $subscribeOptions.onTrigger = (event)=>{
        /* istanbul ignore else */ if (isListening) debuggerEvents = event;
        else if (isListening == false && !store._hotUpdating) {
            // let patch send all the events together later
            /* istanbul ignore else */ if (Array.isArray(debuggerEvents)) debuggerEvents.push(event);
            else console.error("\uD83C\uDF4D debuggerEvents should be an array. This is most likely an internal Pinia bug.");
        }
    };
    // internal state
    let isListening; // set to true at the end
    let isSyncListening; // set to true at the end
    let subscriptions = [];
    let actionSubscriptions = [];
    let debuggerEvents;
    const initialState = pinia.state.value[$id];
    // avoid setting the state for option stores if it is set
    // by the setup
    if (!isOptionsStore && !initialState && !hot) {
        /* istanbul ignore if */ if (0, _vueDemi.isVue2) (0, _vueDemi.set)(pinia.state.value, $id, {});
        else pinia.state.value[$id] = {};
    }
    const hotState = (0, _vueDemi.ref)({});
    // avoid triggering too many listeners
    // https://github.com/vuejs/pinia/issues/1129
    let activeListener;
    function $patch(partialStateOrMutator) {
        let subscriptionMutation;
        isListening = isSyncListening = false;
        debuggerEvents = [];
        if (typeof partialStateOrMutator === "function") {
            partialStateOrMutator(pinia.state.value[$id]);
            subscriptionMutation = {
                type: MutationType.patchFunction,
                storeId: $id,
                events: debuggerEvents
            };
        } else {
            mergeReactiveObjects(pinia.state.value[$id], partialStateOrMutator);
            subscriptionMutation = {
                type: MutationType.patchObject,
                payload: partialStateOrMutator,
                storeId: $id,
                events: debuggerEvents
            };
        }
        const myListenerId = activeListener = Symbol();
        (0, _vueDemi.nextTick)().then(()=>{
            if (activeListener === myListenerId) isListening = true;
        });
        isSyncListening = true;
        // because we paused the watcher, we need to manually call the subscriptions
        triggerSubscriptions(subscriptions, subscriptionMutation, pinia.state.value[$id]);
    }
    const $reset = isOptionsStore ? function $reset() {
        const { state } = options;
        const newState = state ? state() : {};
        // we use a patch to group all changes into one single subscription
        this.$patch(($state)=>{
            // @ts-expect-error: FIXME: shouldn't error?
            assign($state, newState);
        });
    } : ()=>{
        throw new Error(`\u{1F34D}: Store "${$id}" is built using the setup syntax and does not implement $reset().`);
    };
    function $dispose() {
        scope.stop();
        subscriptions = [];
        actionSubscriptions = [];
        pinia._s.delete($id);
    }
    /**
     * Helper that wraps function so it can be tracked with $onAction
     * @param fn - action to wrap
     * @param name - name of the action
     */ const action = (fn, name = "")=>{
        if (ACTION_MARKER in fn) {
            fn[ACTION_NAME] = name;
            return fn;
        }
        const wrappedAction = function() {
            setActivePinia(pinia);
            const args = Array.from(arguments);
            const afterCallbackList = [];
            const onErrorCallbackList = [];
            function after(callback) {
                afterCallbackList.push(callback);
            }
            function onError(callback) {
                onErrorCallbackList.push(callback);
            }
            // @ts-expect-error
            triggerSubscriptions(actionSubscriptions, {
                args,
                name: wrappedAction[ACTION_NAME],
                store,
                after,
                onError
            });
            let ret;
            try {
                ret = fn.apply(this && this.$id === $id ? this : store, args);
            // handle sync errors
            } catch (error) {
                triggerSubscriptions(onErrorCallbackList, error);
                throw error;
            }
            if (ret instanceof Promise) return ret.then((value)=>{
                triggerSubscriptions(afterCallbackList, value);
                return value;
            }).catch((error)=>{
                triggerSubscriptions(onErrorCallbackList, error);
                return Promise.reject(error);
            });
            // trigger after callbacks
            triggerSubscriptions(afterCallbackList, ret);
            return ret;
        };
        wrappedAction[ACTION_MARKER] = true;
        wrappedAction[ACTION_NAME] = name; // will be set later
        // @ts-expect-error: we are intentionally limiting the returned type to just Fn
        // because all the added properties are internals that are exposed through `$onAction()` only
        return wrappedAction;
    };
    const _hmrPayload = /*#__PURE__*/ (0, _vueDemi.markRaw)({
        actions: {},
        getters: {},
        state: [],
        hotState
    });
    const partialStore = {
        _p: pinia,
        // _s: scope,
        $id,
        $onAction: addSubscription.bind(null, actionSubscriptions),
        $patch,
        $reset,
        $subscribe (callback, options = {}) {
            const removeSubscription = addSubscription(subscriptions, callback, options.detached, ()=>stopWatcher());
            const stopWatcher = scope.run(()=>(0, _vueDemi.watch)(()=>pinia.state.value[$id], (state)=>{
                    if (options.flush === "sync" ? isSyncListening : isListening) callback({
                        storeId: $id,
                        type: MutationType.direct,
                        events: debuggerEvents
                    }, state);
                }, assign({}, $subscribeOptions, options)));
            return removeSubscription;
        },
        $dispose
    };
    /* istanbul ignore if */ if (0, _vueDemi.isVue2) // start as non ready
    partialStore._r = false;
    const store = (0, _vueDemi.reactive)(assign({
        _hmrPayload,
        _customProperties: (0, _vueDemi.markRaw)(new Set())
    }, partialStore));
    // store the partial store now so the setup of stores can instantiate each other before they are finished without
    // creating infinite loops.
    pinia._s.set($id, store);
    const runWithContext = pinia._a && pinia._a.runWithContext || fallbackRunWithContext;
    // TODO: idea create skipSerialize that marks properties as non serializable and they are skipped
    const setupStore = runWithContext(()=>pinia._e.run(()=>(scope = (0, _vueDemi.effectScope)()).run(()=>setup({
                    action
                }))));
    // overwrite existing actions to support $onAction
    for(const key in setupStore){
        const prop = setupStore[key];
        if ((0, _vueDemi.isRef)(prop) && !isComputed(prop) || (0, _vueDemi.isReactive)(prop)) {
            // mark it as a piece of state to be serialized
            if (hot) (0, _vueDemi.set)(hotState.value, key, (0, _vueDemi.toRef)(setupStore, key));
            else if (!isOptionsStore) {
                // in setup stores we must hydrate the state and sync pinia state tree with the refs the user just created
                if (initialState && shouldHydrate(prop)) {
                    if ((0, _vueDemi.isRef)(prop)) prop.value = initialState[key];
                    else // probably a reactive object, lets recursively assign
                    // @ts-expect-error: prop is unknown
                    mergeReactiveObjects(prop, initialState[key]);
                }
                // transfer the ref to the pinia state to keep everything in sync
                /* istanbul ignore if */ if (0, _vueDemi.isVue2) (0, _vueDemi.set)(pinia.state.value[$id], key, prop);
                else pinia.state.value[$id][key] = prop;
            }
            _hmrPayload.state.push(key);
        // action
        } else if (typeof prop === "function") {
            const actionValue = hot ? prop : action(prop, key);
            // this a hot module replacement store because the hotUpdate method needs
            // to do it with the right context
            /* istanbul ignore if */ if (0, _vueDemi.isVue2) (0, _vueDemi.set)(setupStore, key, actionValue);
            else // @ts-expect-error
            setupStore[key] = actionValue;
            _hmrPayload.actions[key] = prop;
            // list actions so they can be used in plugins
            // @ts-expect-error
            optionsForPlugin.actions[key] = prop;
        } else // add getters for devtools
        if (isComputed(prop)) {
            _hmrPayload.getters[key] = isOptionsStore ? options.getters[key] : prop;
            if (IS_CLIENT) {
                const getters = setupStore._getters || // @ts-expect-error: same
                (setupStore._getters = (0, _vueDemi.markRaw)([]));
                getters.push(key);
            }
        }
    }
    // add the state, getters, and action properties
    /* istanbul ignore if */ if (0, _vueDemi.isVue2) Object.keys(setupStore).forEach((key)=>{
        (0, _vueDemi.set)(store, key, setupStore[key]);
    });
    else {
        assign(store, setupStore);
        // allows retrieving reactive objects with `storeToRefs()`. Must be called after assigning to the reactive object.
        // Make `storeToRefs()` work with `reactive()` #799
        assign((0, _vueDemi.toRaw)(store), setupStore);
    }
    // use this instead of a computed with setter to be able to create it anywhere
    // without linking the computed lifespan to wherever the store is first
    // created.
    Object.defineProperty(store, "$state", {
        get: ()=>hot ? hotState.value : pinia.state.value[$id],
        set: (state)=>{
            /* istanbul ignore if */ if (hot) throw new Error("cannot set hotState");
            $patch(($state)=>{
                // @ts-expect-error: FIXME: shouldn't error?
                assign($state, state);
            });
        }
    });
    store._hotUpdate = (0, _vueDemi.markRaw)((newStore)=>{
        store._hotUpdating = true;
        newStore._hmrPayload.state.forEach((stateKey)=>{
            if (stateKey in store.$state) {
                const newStateTarget = newStore.$state[stateKey];
                const oldStateSource = store.$state[stateKey];
                if (typeof newStateTarget === "object" && isPlainObject(newStateTarget) && isPlainObject(oldStateSource)) patchObject(newStateTarget, oldStateSource);
                else // transfer the ref
                newStore.$state[stateKey] = oldStateSource;
            }
            // patch direct access properties to allow store.stateProperty to work as
            // store.$state.stateProperty
            (0, _vueDemi.set)(store, stateKey, (0, _vueDemi.toRef)(newStore.$state, stateKey));
        });
        // remove deleted state properties
        Object.keys(store.$state).forEach((stateKey)=>{
            if (!(stateKey in newStore.$state)) (0, _vueDemi.del)(store, stateKey);
        });
        // avoid devtools logging this as a mutation
        isListening = false;
        isSyncListening = false;
        pinia.state.value[$id] = (0, _vueDemi.toRef)(newStore._hmrPayload, "hotState");
        isSyncListening = true;
        (0, _vueDemi.nextTick)().then(()=>{
            isListening = true;
        });
        for(const actionName in newStore._hmrPayload.actions){
            const actionFn = newStore[actionName];
            (0, _vueDemi.set)(store, actionName, action(actionFn, actionName));
        }
        // TODO: does this work in both setup and option store?
        for(const getterName in newStore._hmrPayload.getters){
            const getter = newStore._hmrPayload.getters[getterName];
            const getterValue = isOptionsStore ? (0, _vueDemi.computed)(()=>{
                setActivePinia(pinia);
                return getter.call(store, store);
            }) : getter;
            (0, _vueDemi.set)(store, getterName, getterValue);
        }
        // remove deleted getters
        Object.keys(store._hmrPayload.getters).forEach((key)=>{
            if (!(key in newStore._hmrPayload.getters)) (0, _vueDemi.del)(store, key);
        });
        // remove old actions
        Object.keys(store._hmrPayload.actions).forEach((key)=>{
            if (!(key in newStore._hmrPayload.actions)) (0, _vueDemi.del)(store, key);
        });
        // update the values used in devtools and to allow deleting new properties later on
        store._hmrPayload = newStore._hmrPayload;
        store._getters = newStore._getters;
        store._hotUpdating = false;
    });
    if (IS_CLIENT) {
        const nonEnumerable = {
            writable: true,
            configurable: true,
            // avoid warning on devtools trying to display this property
            enumerable: false
        };
        [
            "_p",
            "_hmrPayload",
            "_getters",
            "_customProperties"
        ].forEach((p)=>{
            Object.defineProperty(store, p, assign({
                value: store[p]
            }, nonEnumerable));
        });
    }
    /* istanbul ignore if */ if (0, _vueDemi.isVue2) // mark the store as ready before plugins
    store._r = true;
    // apply all plugins
    pinia._p.forEach((extender)=>{
        /* istanbul ignore else */ if (IS_CLIENT) {
            const extensions = scope.run(()=>extender({
                    store: store,
                    app: pinia._a,
                    pinia,
                    options: optionsForPlugin
                }));
            Object.keys(extensions || {}).forEach((key)=>store._customProperties.add(key));
            assign(store, extensions);
        } else assign(store, scope.run(()=>extender({
                store: store,
                app: pinia._a,
                pinia,
                options: optionsForPlugin
            })));
    });
    if ((0, store.$state) && typeof store.$state === "object" && typeof store.$state.constructor === "function" && !store.$state.constructor.toString().includes("[native code]")) console.warn(`[\u{1F34D}]: The "state" must be a plain object. It cannot be
` + `\tstate: () => new MyClass()\n` + `Found in store "${store.$id}".`);
    // only apply hydrate to option stores with an initial state in pinia
    if (initialState && isOptionsStore && options.hydrate) options.hydrate(store.$state, initialState);
    isListening = true;
    isSyncListening = true;
    return store;
}
// improves tree shaking
/*#__NO_SIDE_EFFECTS__*/ function defineStore(// TODO: add proper types from above
idOrOptions, setup, setupOptions) {
    let id;
    let options;
    const isSetupStore = typeof setup === "function";
    if (typeof idOrOptions === "string") {
        id = idOrOptions;
        // the option store setup will contain the actual options in this case
        options = isSetupStore ? setupOptions : setup;
    } else {
        options = idOrOptions;
        id = idOrOptions.id;
        if (typeof id !== "string") throw new Error(`[\u{1F34D}]: "defineStore()" must be passed a store id as its first argument.`);
    }
    function useStore(pinia, hot) {
        const hasContext = (0, _vueDemi.hasInjectionContext)();
        pinia = pinia || (hasContext ? (0, _vueDemi.inject)(piniaSymbol, null) : null);
        if (pinia) setActivePinia(pinia);
        if (!activePinia) throw new Error(`[\u{1F34D}]: "getActivePinia()" was called but there was no active Pinia. Are you trying to use a store before calling "app.use(pinia)"?
` + `See https://pinia.vuejs.org/core-concepts/outside-component-usage.html for help.\n` + `This will fail in production.`);
        pinia = activePinia;
        if (!pinia._s.has(id)) {
            // creating the store registers it in `pinia._s`
            if (isSetupStore) createSetupStore(id, setup, options, pinia);
            else createOptionsStore(id, options, pinia);
            // @ts-expect-error: not the right inferred type
            useStore._pinia = pinia;
        }
        const store = pinia._s.get(id);
        if (hot) {
            const hotId = "__hot:" + id;
            const newStore = isSetupStore ? createSetupStore(hotId, setup, options, pinia, true) : createOptionsStore(hotId, assign({}, options), pinia, true);
            hot._hotUpdate(newStore);
            // cleanup the state properties and the store from the cache
            delete pinia.state.value[hotId];
            pinia._s.delete(hotId);
        }
        if (IS_CLIENT) {
            const currentInstance = (0, _vueDemi.getCurrentInstance)();
            // save stores in instances to access them devtools
            if (currentInstance && currentInstance.proxy && // avoid adding stores that are just built for hot module replacement
            !hot) {
                const vm = currentInstance.proxy;
                const cache = "_pStores" in vm ? vm._pStores : vm._pStores = {};
                cache[id] = store;
            }
        }
        // StoreGeneric cannot be casted towards Store
        return store;
    }
    useStore.$id = id;
    return useStore;
}
let mapStoreSuffix = "Store";
/**
 * Changes the suffix added by `mapStores()`. Can be set to an empty string.
 * Defaults to `"Store"`. Make sure to extend the MapStoresCustomization
 * interface if you are using TypeScript.
 *
 * @param suffix - new suffix
 */ function setMapStoreSuffix(suffix // could be 'Store' but that would be annoying for JS
) {
    mapStoreSuffix = suffix;
}
/**
 * Allows using stores without the composition API (`setup()`) by generating an
 * object to be spread in the `computed` field of a component. It accepts a list
 * of store definitions.
 *
 * @example
 * ```js
 * export default {
 *   computed: {
 *     // other computed properties
 *     ...mapStores(useUserStore, useCartStore)
 *   },
 *
 *   created() {
 *     this.userStore // store with id "user"
 *     this.cartStore // store with id "cart"
 *   }
 * }
 * ```
 *
 * @param stores - list of stores to map to an object
 */ function mapStores(...stores) {
    if (Array.isArray(stores[0])) {
        console.warn(`[\u{1F34D}]: Directly pass all stores to "mapStores()" without putting them in an array:
` + `Replace\n` + `\tmapStores([useAuthStore, useCartStore])\n` + `with\n` + `\tmapStores(useAuthStore, useCartStore)\n` + `This will fail in production if not fixed.`);
        stores = stores[0];
    }
    return stores.reduce((reduced, useStore)=>{
        // @ts-expect-error: $id is added by defineStore
        reduced[useStore.$id + mapStoreSuffix] = function() {
            return useStore(this.$pinia);
        };
        return reduced;
    }, {});
}
/**
 * Allows using state and getters from one store without using the composition
 * API (`setup()`) by generating an object to be spread in the `computed` field
 * of a component.
 *
 * @param useStore - store to map from
 * @param keysOrMapper - array or object
 */ function mapState(useStore, keysOrMapper) {
    return Array.isArray(keysOrMapper) ? keysOrMapper.reduce((reduced, key)=>{
        reduced[key] = function() {
            return useStore(this.$pinia)[key];
        };
        return reduced;
    }, {}) : Object.keys(keysOrMapper).reduce((reduced, key)=>{
        // @ts-expect-error
        reduced[key] = function() {
            const store = useStore(this.$pinia);
            const storeKey = keysOrMapper[key];
            // for some reason TS is unable to infer the type of storeKey to be a
            // function
            return typeof storeKey === "function" ? storeKey.call(this, store) : store[storeKey];
        };
        return reduced;
    }, {});
}
/**
 * Alias for `mapState()`. You should use `mapState()` instead.
 * @deprecated use `mapState()` instead.
 */ const mapGetters = mapState;
/**
 * Allows directly using actions from your store without using the composition
 * API (`setup()`) by generating an object to be spread in the `methods` field
 * of a component.
 *
 * @param useStore - store to map from
 * @param keysOrMapper - array or object
 */ function mapActions(useStore, keysOrMapper) {
    return Array.isArray(keysOrMapper) ? keysOrMapper.reduce((reduced, key)=>{
        // @ts-expect-error
        reduced[key] = function(...args) {
            // @ts-expect-error: FIXME: should work?
            return useStore(this.$pinia)[key](...args);
        };
        return reduced;
    }, {}) : Object.keys(keysOrMapper).reduce((reduced, key)=>{
        // @ts-expect-error
        reduced[key] = function(...args) {
            // @ts-expect-error: FIXME: should work?
            return useStore(this.$pinia)[keysOrMapper[key]](...args);
        };
        return reduced;
    }, {});
}
/**
 * Allows using state and getters from one store without using the composition
 * API (`setup()`) by generating an object to be spread in the `computed` field
 * of a component.
 *
 * @param useStore - store to map from
 * @param keysOrMapper - array or object
 */ function mapWritableState(useStore, keysOrMapper) {
    return Array.isArray(keysOrMapper) ? keysOrMapper.reduce((reduced, key)=>{
        // @ts-ignore
        reduced[key] = {
            get () {
                // @ts-expect-error: FIXME: should work?
                return useStore(this.$pinia)[key];
            },
            set (value) {
                // @ts-expect-error: FIXME: should work?
                return useStore(this.$pinia)[key] = value;
            }
        };
        return reduced;
    }, {}) : Object.keys(keysOrMapper).reduce((reduced, key)=>{
        // @ts-ignore
        reduced[key] = {
            get () {
                // @ts-expect-error: FIXME: should work?
                return useStore(this.$pinia)[keysOrMapper[key]];
            },
            set (value) {
                // @ts-expect-error: FIXME: should work?
                return useStore(this.$pinia)[keysOrMapper[key]] = value;
            }
        };
        return reduced;
    }, {});
}
/**
 * Creates an object of references with all the state, getters, and plugin-added
 * state properties of the store. Similar to `toRefs()` but specifically
 * designed for Pinia stores so methods and non reactive properties are
 * completely ignored.
 *
 * @param store - store to extract the refs from
 */ function storeToRefs(store) {
    // See https://github.com/vuejs/pinia/issues/852
    // It's easier to just use toRefs() even if it includes more stuff
    if (0, _vueDemi.isVue2) // @ts-expect-error: toRefs include methods and others
    return (0, _vueDemi.toRefs)(store);
    else {
        store = (0, _vueDemi.toRaw)(store);
        const refs = {};
        for(const key in store){
            const value = store[key];
            if ((0, _vueDemi.isRef)(value) || (0, _vueDemi.isReactive)(value)) // @ts-expect-error: the key is state or getter
            refs[key] = // ---
            (0, _vueDemi.toRef)(store, key);
        }
        return refs;
    }
}
/**
 * Vue 2 Plugin that must be installed for pinia to work. Note **you don't need
 * this plugin if you are using Nuxt.js**. Use the `buildModule` instead:
 * https://pinia.vuejs.org/ssr/nuxt.html.
 *
 * @example
 * ```js
 * import Vue from 'vue'
 * import { PiniaVuePlugin, createPinia } from 'pinia'
 *
 * Vue.use(PiniaVuePlugin)
 * const pinia = createPinia()
 *
 * new Vue({
 *   el: '#app',
 *   // ...
 *   pinia,
 * })
 * ```
 *
 * @param _Vue - `Vue` imported from 'vue'.
 */ const PiniaVuePlugin = function(_Vue) {
    // Equivalent of
    // app.config.globalProperties.$pinia = pinia
    _Vue.mixin({
        beforeCreate () {
            const options = this.$options;
            if (options.pinia) {
                const pinia = options.pinia;
                // HACK: taken from provide(): https://github.com/vuejs/composition-api/blob/main/src/apis/inject.ts#L31
                /* istanbul ignore else */ if (!this._provided) {
                    const provideCache = {};
                    Object.defineProperty(this, "_provided", {
                        get: ()=>provideCache,
                        set: (v)=>Object.assign(provideCache, v)
                    });
                }
                this._provided[piniaSymbol] = pinia;
                // propagate the pinia instance in an SSR friendly way
                // avoid adding it to nuxt twice
                /* istanbul ignore else */ if (!this.$pinia) this.$pinia = pinia;
                pinia._a = this;
                if (IS_CLIENT) // this allows calling useStore() outside of a component setup after
                // installing pinia's plugin
                setActivePinia(pinia);
                if (IS_CLIENT) registerPiniaDevtools(pinia._a, pinia);
            } else if (!this.$pinia && options.parent && options.parent.$pinia) this.$pinia = options.parent.$pinia;
        },
        destroyed () {
            delete this._pStores;
        }
    });
};

},{"vue-demi":"6HQ4m","@vue/devtools-api":"mub9B","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"6HQ4m":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "set", ()=>set);
parcelHelpers.export(exports, "del", ()=>del);
parcelHelpers.export(exports, "Vue", ()=>_vue);
parcelHelpers.export(exports, "Vue2", ()=>Vue2);
parcelHelpers.export(exports, "isVue2", ()=>isVue2);
parcelHelpers.export(exports, "isVue3", ()=>isVue3);
parcelHelpers.export(exports, "install", ()=>install);
var _vue = require("vue");
parcelHelpers.exportAll(_vue, exports);
var isVue2 = false;
var isVue3 = true;
var Vue2 = undefined;
function install() {}
function set(target, key, val) {
    if (Array.isArray(target)) {
        target.length = Math.max(target.length, key);
        target.splice(key, 1, val);
        return val;
    }
    target[key] = val;
    return val;
}
function del(target, key) {
    if (Array.isArray(target)) {
        target.splice(key, 1);
        return;
    }
    delete target[key];
}

},{"vue":"gCTam","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"mub9B":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "setupDevtoolsPlugin", ()=>setupDevtoolsPlugin);
var _envJs = require("./env.js");
var _constJs = require("./const.js");
var _proxyJs = require("./proxy.js");
var _indexJs = require("./api/index.js");
parcelHelpers.exportAll(_indexJs, exports);
var _pluginJs = require("./plugin.js");
parcelHelpers.exportAll(_pluginJs, exports);
var _timeJs = require("./time.js");
parcelHelpers.exportAll(_timeJs, exports);
function setupDevtoolsPlugin(pluginDescriptor, setupFn) {
    const descriptor = pluginDescriptor;
    const target = (0, _envJs.getTarget)();
    const hook = (0, _envJs.getDevtoolsGlobalHook)();
    const enableProxy = (0, _envJs.isProxyAvailable) && descriptor.enableEarlyProxy;
    if (hook && (target.__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__ || !enableProxy)) hook.emit((0, _constJs.HOOK_SETUP), pluginDescriptor, setupFn);
    else {
        const proxy = enableProxy ? new (0, _proxyJs.ApiProxy)(descriptor, hook) : null;
        const list = target.__VUE_DEVTOOLS_PLUGINS__ = target.__VUE_DEVTOOLS_PLUGINS__ || [];
        list.push({
            pluginDescriptor: descriptor,
            setupFn,
            proxy
        });
        if (proxy) setupFn(proxy.proxiedTarget);
    }
}

},{"./env.js":"krHVj","./const.js":"goEqF","./proxy.js":"ieQdr","./api/index.js":false,"./plugin.js":false,"./time.js":false,"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"krHVj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getDevtoolsGlobalHook", ()=>getDevtoolsGlobalHook);
parcelHelpers.export(exports, "getTarget", ()=>getTarget);
parcelHelpers.export(exports, "isProxyAvailable", ()=>isProxyAvailable);
function getDevtoolsGlobalHook() {
    return getTarget().__VUE_DEVTOOLS_GLOBAL_HOOK__;
}
function getTarget() {
    // @ts-expect-error navigator and windows are not available in all environments
    return typeof navigator !== "undefined" && typeof window !== "undefined" ? window : typeof globalThis !== "undefined" ? globalThis : {};
}
const isProxyAvailable = typeof Proxy === "function";

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"goEqF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "HOOK_SETUP", ()=>HOOK_SETUP);
parcelHelpers.export(exports, "HOOK_PLUGIN_SETTINGS_SET", ()=>HOOK_PLUGIN_SETTINGS_SET);
const HOOK_SETUP = "devtools-plugin:setup";
const HOOK_PLUGIN_SETTINGS_SET = "plugin:settings:set";

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"ieQdr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ApiProxy", ()=>ApiProxy);
var _constJs = require("./const.js");
var _timeJs = require("./time.js");
class ApiProxy {
    constructor(plugin, hook){
        this.target = null;
        this.targetQueue = [];
        this.onQueue = [];
        this.plugin = plugin;
        this.hook = hook;
        const defaultSettings = {};
        if (plugin.settings) for(const id in plugin.settings){
            const item = plugin.settings[id];
            defaultSettings[id] = item.defaultValue;
        }
        const localSettingsSaveId = `__vue-devtools-plugin-settings__${plugin.id}`;
        let currentSettings = Object.assign({}, defaultSettings);
        try {
            const raw = localStorage.getItem(localSettingsSaveId);
            const data = JSON.parse(raw);
            Object.assign(currentSettings, data);
        } catch (e) {
        // noop
        }
        this.fallbacks = {
            getSettings () {
                return currentSettings;
            },
            setSettings (value) {
                try {
                    localStorage.setItem(localSettingsSaveId, JSON.stringify(value));
                } catch (e) {
                // noop
                }
                currentSettings = value;
            },
            now () {
                return (0, _timeJs.now)();
            }
        };
        if (hook) hook.on((0, _constJs.HOOK_PLUGIN_SETTINGS_SET), (pluginId, value)=>{
            if (pluginId === this.plugin.id) this.fallbacks.setSettings(value);
        });
        this.proxiedOn = new Proxy({}, {
            get: (_target, prop)=>{
                if (this.target) return this.target.on[prop];
                else return (...args)=>{
                    this.onQueue.push({
                        method: prop,
                        args
                    });
                };
            }
        });
        this.proxiedTarget = new Proxy({}, {
            get: (_target, prop)=>{
                if (this.target) return this.target[prop];
                else if (prop === "on") return this.proxiedOn;
                else if (Object.keys(this.fallbacks).includes(prop)) return (...args)=>{
                    this.targetQueue.push({
                        method: prop,
                        args,
                        resolve: ()=>{}
                    });
                    return this.fallbacks[prop](...args);
                };
                else return (...args)=>{
                    return new Promise((resolve)=>{
                        this.targetQueue.push({
                            method: prop,
                            args,
                            resolve
                        });
                    });
                };
            }
        });
    }
    async setRealTarget(target) {
        this.target = target;
        for (const item of this.onQueue)this.target.on[item.method](...item.args);
        for (const item of this.targetQueue)item.resolve(await this.target[item.method](...item.args));
    }
}

},{"./const.js":"goEqF","./time.js":"aM5UD","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"aM5UD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isPerformanceSupported", ()=>isPerformanceSupported);
parcelHelpers.export(exports, "now", ()=>now);
let supported;
let perf;
function isPerformanceSupported() {
    var _a;
    if (supported !== undefined) return supported;
    if (typeof window !== "undefined" && window.performance) {
        supported = true;
        perf = window.performance;
    } else if (typeof globalThis !== "undefined" && ((_a = globalThis.perf_hooks) === null || _a === void 0 ? void 0 : _a.performance)) {
        supported = true;
        perf = globalThis.perf_hooks.performance;
    } else supported = false;
    return supported;
}
function now() {
    return isPerformanceSupported() ? perf.now() : Date.now();
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"aI0Kc":[function(require,module,exports) {
// src/index.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MutationCache", ()=>(0, _mutationCacheJs.MutationCache));
parcelHelpers.export(exports, "QueryCache", ()=>(0, _queryCacheJs.QueryCache));
parcelHelpers.export(exports, "QueryClient", ()=>(0, _queryClientJs.QueryClient));
parcelHelpers.export(exports, "VUE_QUERY_CLIENT", ()=>(0, _utilsJs.VUE_QUERY_CLIENT));
parcelHelpers.export(exports, "VueQueryPlugin", ()=>(0, _vueQueryPluginJs.VueQueryPlugin));
parcelHelpers.export(exports, "infiniteQueryOptions", ()=>(0, _infiniteQueryOptionsJs.infiniteQueryOptions));
parcelHelpers.export(exports, "queryOptions", ()=>(0, _queryOptionsJs.queryOptions));
parcelHelpers.export(exports, "useInfiniteQuery", ()=>(0, _useInfiniteQueryJs.useInfiniteQuery));
parcelHelpers.export(exports, "useIsFetching", ()=>(0, _useIsFetchingJs.useIsFetching));
parcelHelpers.export(exports, "useIsMutating", ()=>(0, _useMutationStateJs.useIsMutating));
parcelHelpers.export(exports, "useMutation", ()=>(0, _useMutationJs.useMutation));
parcelHelpers.export(exports, "useMutationState", ()=>(0, _useMutationStateJs.useMutationState));
parcelHelpers.export(exports, "useQueries", ()=>(0, _useQueriesJs.useQueries));
parcelHelpers.export(exports, "useQuery", ()=>(0, _useQueryJs.useQuery));
parcelHelpers.export(exports, "useQueryClient", ()=>(0, _useQueryClientJs.useQueryClient));
var _queryCore = require("@tanstack/query-core");
parcelHelpers.exportAll(_queryCore, exports);
var _useQueryClientJs = require("./useQueryClient.js");
var _vueQueryPluginJs = require("./vueQueryPlugin.js");
var _queryClientJs = require("./queryClient.js");
var _queryCacheJs = require("./queryCache.js");
var _queryOptionsJs = require("./queryOptions.js");
var _infiniteQueryOptionsJs = require("./infiniteQueryOptions.js");
var _mutationCacheJs = require("./mutationCache.js");
var _useQueryJs = require("./useQuery.js");
var _useQueriesJs = require("./useQueries.js");
var _useInfiniteQueryJs = require("./useInfiniteQuery.js");
var _useMutationJs = require("./useMutation.js");
var _useIsFetchingJs = require("./useIsFetching.js");
var _useMutationStateJs = require("./useMutationState.js");
var _utilsJs = require("./utils.js");

},{"@tanstack/query-core":false,"./useQueryClient.js":"7D9aY","./vueQueryPlugin.js":"gBnAn","./queryClient.js":false,"./queryCache.js":false,"./queryOptions.js":false,"./infiniteQueryOptions.js":false,"./mutationCache.js":false,"./useQuery.js":"dBhPp","./useQueries.js":false,"./useInfiniteQuery.js":false,"./useMutation.js":"19lY6","./useIsFetching.js":false,"./useMutationState.js":false,"./utils.js":false,"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"iqSRy":[function(require,module,exports) {
// src/index.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CancelledError", ()=>(0, _retryerJs.CancelledError));
parcelHelpers.export(exports, "InfiniteQueryObserver", ()=>(0, _infiniteQueryObserverJs.InfiniteQueryObserver));
parcelHelpers.export(exports, "Mutation", ()=>(0, _mutationJs.Mutation));
parcelHelpers.export(exports, "MutationCache", ()=>(0, _mutationCacheJs.MutationCache));
parcelHelpers.export(exports, "MutationObserver", ()=>(0, _mutationObserverJs.MutationObserver));
parcelHelpers.export(exports, "QueriesObserver", ()=>(0, _queriesObserverJs.QueriesObserver));
parcelHelpers.export(exports, "Query", ()=>(0, _queryJs.Query));
parcelHelpers.export(exports, "QueryCache", ()=>(0, _queryCacheJs.QueryCache));
parcelHelpers.export(exports, "QueryClient", ()=>(0, _queryClientJs.QueryClient));
parcelHelpers.export(exports, "QueryObserver", ()=>(0, _queryObserverJs.QueryObserver));
parcelHelpers.export(exports, "defaultShouldDehydrateMutation", ()=>(0, _hydrationJs.defaultShouldDehydrateMutation));
parcelHelpers.export(exports, "defaultShouldDehydrateQuery", ()=>(0, _hydrationJs.defaultShouldDehydrateQuery));
parcelHelpers.export(exports, "dehydrate", ()=>(0, _hydrationJs.dehydrate));
parcelHelpers.export(exports, "focusManager", ()=>(0, _focusManagerJs.focusManager));
parcelHelpers.export(exports, "hashKey", ()=>(0, _utilsJs.hashKey));
parcelHelpers.export(exports, "hydrate", ()=>(0, _hydrationJs.hydrate));
parcelHelpers.export(exports, "isCancelledError", ()=>(0, _retryerJs.isCancelledError));
parcelHelpers.export(exports, "isServer", ()=>(0, _utilsJs.isServer));
parcelHelpers.export(exports, "keepPreviousData", ()=>(0, _utilsJs.keepPreviousData));
parcelHelpers.export(exports, "matchMutation", ()=>(0, _utilsJs.matchMutation));
parcelHelpers.export(exports, "matchQuery", ()=>(0, _utilsJs.matchQuery));
parcelHelpers.export(exports, "notifyManager", ()=>(0, _notifyManagerJs.notifyManager));
parcelHelpers.export(exports, "onlineManager", ()=>(0, _onlineManagerJs.onlineManager));
parcelHelpers.export(exports, "replaceEqualDeep", ()=>(0, _utilsJs.replaceEqualDeep));
parcelHelpers.export(exports, "skipToken", ()=>(0, _utilsJs.skipToken));
var _retryerJs = require("./retryer.js");
var _queryCacheJs = require("./queryCache.js");
var _queryClientJs = require("./queryClient.js");
var _queryObserverJs = require("./queryObserver.js");
var _queriesObserverJs = require("./queriesObserver.js");
var _infiniteQueryObserverJs = require("./infiniteQueryObserver.js");
var _mutationCacheJs = require("./mutationCache.js");
var _mutationObserverJs = require("./mutationObserver.js");
var _notifyManagerJs = require("./notifyManager.js");
var _focusManagerJs = require("./focusManager.js");
var _onlineManagerJs = require("./onlineManager.js");
var _utilsJs = require("./utils.js");
var _hydrationJs = require("./hydration.js");
var _typesJs = require("./types.js");
parcelHelpers.exportAll(_typesJs, exports);
var _queryJs = require("./query.js");
var _mutationJs = require("./mutation.js");

},{"./retryer.js":false,"./queryCache.js":"kLVBQ","./queryClient.js":"fA2tC","./queryObserver.js":"1R76W","./queriesObserver.js":false,"./infiniteQueryObserver.js":false,"./mutationCache.js":"dVPut","./mutationObserver.js":"dfckE","./notifyManager.js":false,"./focusManager.js":false,"./onlineManager.js":"fkqkX","./utils.js":"jWMgc","./hydration.js":false,"./types.js":false,"./query.js":false,"./mutation.js":false,"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"5YENh":[function(require,module,exports) {
// src/retryer.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "CancelledError", ()=>CancelledError);
parcelHelpers.export(exports, "canFetch", ()=>canFetch);
parcelHelpers.export(exports, "createRetryer", ()=>createRetryer);
parcelHelpers.export(exports, "isCancelledError", ()=>isCancelledError);
var _focusManagerJs = require("./focusManager.js");
var _onlineManagerJs = require("./onlineManager.js");
var _utilsJs = require("./utils.js");
function defaultRetryDelay(failureCount) {
    return Math.min(1e3 * 2 ** failureCount, 3e4);
}
function canFetch(networkMode) {
    return (networkMode ?? "online") === "online" ? (0, _onlineManagerJs.onlineManager).isOnline() : true;
}
var CancelledError = class extends Error {
    constructor(options){
        super("CancelledError");
        this.revert = options?.revert;
        this.silent = options?.silent;
    }
};
function isCancelledError(value) {
    return value instanceof CancelledError;
}
function createRetryer(config) {
    let isRetryCancelled = false;
    let failureCount = 0;
    let isResolved = false;
    let continueFn;
    let promiseResolve;
    let promiseReject;
    const promise = new Promise((outerResolve, outerReject)=>{
        promiseResolve = outerResolve;
        promiseReject = outerReject;
    });
    const cancel = (cancelOptions)=>{
        if (!isResolved) {
            reject(new CancelledError(cancelOptions));
            config.abort?.();
        }
    };
    const cancelRetry = ()=>{
        isRetryCancelled = true;
    };
    const continueRetry = ()=>{
        isRetryCancelled = false;
    };
    const canContinue = ()=>(0, _focusManagerJs.focusManager).isFocused() && (config.networkMode === "always" || (0, _onlineManagerJs.onlineManager).isOnline()) && config.canRun();
    const canStart = ()=>canFetch(config.networkMode) && config.canRun();
    const resolve = (value)=>{
        if (!isResolved) {
            isResolved = true;
            config.onSuccess?.(value);
            continueFn?.();
            promiseResolve(value);
        }
    };
    const reject = (value)=>{
        if (!isResolved) {
            isResolved = true;
            config.onError?.(value);
            continueFn?.();
            promiseReject(value);
        }
    };
    const pause = ()=>{
        return new Promise((continueResolve)=>{
            continueFn = (value)=>{
                if (isResolved || canContinue()) continueResolve(value);
            };
            config.onPause?.();
        }).then(()=>{
            continueFn = void 0;
            if (!isResolved) config.onContinue?.();
        });
    };
    const run = ()=>{
        if (isResolved) return;
        let promiseOrValue;
        const initialPromise = failureCount === 0 ? config.initialPromise : void 0;
        try {
            promiseOrValue = initialPromise ?? config.fn();
        } catch (error) {
            promiseOrValue = Promise.reject(error);
        }
        Promise.resolve(promiseOrValue).then(resolve).catch((error)=>{
            if (isResolved) return;
            const retry = config.retry ?? ((0, _utilsJs.isServer) ? 0 : 3);
            const retryDelay = config.retryDelay ?? defaultRetryDelay;
            const delay = typeof retryDelay === "function" ? retryDelay(failureCount, error) : retryDelay;
            const shouldRetry = retry === true || typeof retry === "number" && failureCount < retry || typeof retry === "function" && retry(failureCount, error);
            if (isRetryCancelled || !shouldRetry) {
                reject(error);
                return;
            }
            failureCount++;
            config.onFail?.(failureCount, error);
            (0, _utilsJs.sleep)(delay).then(()=>{
                return canContinue() ? void 0 : pause();
            }).then(()=>{
                if (isRetryCancelled) reject(error);
                else run();
            });
        });
    };
    return {
        promise,
        cancel,
        continue: ()=>{
            continueFn?.();
            return promise;
        },
        cancelRetry,
        continueRetry,
        canStart,
        start: ()=>{
            if (canStart()) run();
            else pause().then(run);
            return promise;
        }
    };
}

},{"./focusManager.js":"4yjDl","./onlineManager.js":"fkqkX","./utils.js":"jWMgc","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"4yjDl":[function(require,module,exports) {
// src/focusManager.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "FocusManager", ()=>FocusManager);
parcelHelpers.export(exports, "focusManager", ()=>focusManager);
var _subscribableJs = require("./subscribable.js");
var _utilsJs = require("./utils.js");
var FocusManager = class extends (0, _subscribableJs.Subscribable) {
    #focused;
    #cleanup;
    #setup;
    constructor(){
        super();
        this.#setup = (onFocus)=>{
            if (!(0, _utilsJs.isServer) && window.addEventListener) {
                const listener = ()=>onFocus();
                window.addEventListener("visibilitychange", listener, false);
                return ()=>{
                    window.removeEventListener("visibilitychange", listener);
                };
            }
            return;
        };
    }
    onSubscribe() {
        if (!this.#cleanup) this.setEventListener(this.#setup);
    }
    onUnsubscribe() {
        if (!this.hasListeners()) {
            this.#cleanup?.();
            this.#cleanup = void 0;
        }
    }
    setEventListener(setup) {
        this.#setup = setup;
        this.#cleanup?.();
        this.#cleanup = setup((focused)=>{
            if (typeof focused === "boolean") this.setFocused(focused);
            else this.onFocus();
        });
    }
    setFocused(focused) {
        const changed = this.#focused !== focused;
        if (changed) {
            this.#focused = focused;
            this.onFocus();
        }
    }
    onFocus() {
        const isFocused = this.isFocused();
        this.listeners.forEach((listener)=>{
            listener(isFocused);
        });
    }
    isFocused() {
        if (typeof this.#focused === "boolean") return this.#focused;
        return globalThis.document?.visibilityState !== "hidden";
    }
};
var focusManager = new FocusManager();

},{"./subscribable.js":"1iYUD","./utils.js":"jWMgc","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"1iYUD":[function(require,module,exports) {
// src/subscribable.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Subscribable", ()=>Subscribable);
var Subscribable = class {
    constructor(){
        this.listeners = /* @__PURE__ */ new Set();
        this.subscribe = this.subscribe.bind(this);
    }
    subscribe(listener) {
        this.listeners.add(listener);
        this.onSubscribe();
        return ()=>{
            this.listeners.delete(listener);
            this.onUnsubscribe();
        };
    }
    hasListeners() {
        return this.listeners.size > 0;
    }
    onSubscribe() {}
    onUnsubscribe() {}
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"jWMgc":[function(require,module,exports) {
// src/utils.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "addToEnd", ()=>addToEnd);
parcelHelpers.export(exports, "addToStart", ()=>addToStart);
parcelHelpers.export(exports, "ensureQueryFn", ()=>ensureQueryFn);
parcelHelpers.export(exports, "functionalUpdate", ()=>functionalUpdate);
parcelHelpers.export(exports, "hashKey", ()=>hashKey);
parcelHelpers.export(exports, "hashQueryKeyByOptions", ()=>hashQueryKeyByOptions);
parcelHelpers.export(exports, "isPlainArray", ()=>isPlainArray);
parcelHelpers.export(exports, "isPlainObject", ()=>isPlainObject);
parcelHelpers.export(exports, "isServer", ()=>isServer);
parcelHelpers.export(exports, "isValidTimeout", ()=>isValidTimeout);
parcelHelpers.export(exports, "keepPreviousData", ()=>keepPreviousData);
parcelHelpers.export(exports, "matchMutation", ()=>matchMutation);
parcelHelpers.export(exports, "matchQuery", ()=>matchQuery);
parcelHelpers.export(exports, "noop", ()=>noop);
parcelHelpers.export(exports, "partialMatchKey", ()=>partialMatchKey);
parcelHelpers.export(exports, "replaceData", ()=>replaceData);
parcelHelpers.export(exports, "replaceEqualDeep", ()=>replaceEqualDeep);
parcelHelpers.export(exports, "resolveEnabled", ()=>resolveEnabled);
parcelHelpers.export(exports, "resolveStaleTime", ()=>resolveStaleTime);
parcelHelpers.export(exports, "shallowEqualObjects", ()=>shallowEqualObjects);
parcelHelpers.export(exports, "skipToken", ()=>skipToken);
parcelHelpers.export(exports, "sleep", ()=>sleep);
parcelHelpers.export(exports, "timeUntilStale", ()=>timeUntilStale);
var isServer = typeof window === "undefined" || "Deno" in globalThis;
function noop() {
    return void 0;
}
function functionalUpdate(updater, input) {
    return typeof updater === "function" ? updater(input) : updater;
}
function isValidTimeout(value) {
    return typeof value === "number" && value >= 0 && value !== Infinity;
}
function timeUntilStale(updatedAt, staleTime) {
    return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);
}
function resolveStaleTime(staleTime, query) {
    return typeof staleTime === "function" ? staleTime(query) : staleTime;
}
function resolveEnabled(enabled, query) {
    return typeof enabled === "function" ? enabled(query) : enabled;
}
function matchQuery(filters, query) {
    const { type = "all", exact, fetchStatus, predicate, queryKey, stale } = filters;
    if (queryKey) {
        if (exact) {
            if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) return false;
        } else if (!partialMatchKey(query.queryKey, queryKey)) return false;
    }
    if (type !== "all") {
        const isActive = query.isActive();
        if (type === "active" && !isActive) return false;
        if (type === "inactive" && isActive) return false;
    }
    if (typeof stale === "boolean" && query.isStale() !== stale) return false;
    if (fetchStatus && fetchStatus !== query.state.fetchStatus) return false;
    if (predicate && !predicate(query)) return false;
    return true;
}
function matchMutation(filters, mutation) {
    const { exact, status, predicate, mutationKey } = filters;
    if (mutationKey) {
        if (!mutation.options.mutationKey) return false;
        if (exact) {
            if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) return false;
        } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) return false;
    }
    if (status && mutation.state.status !== status) return false;
    if (predicate && !predicate(mutation)) return false;
    return true;
}
function hashQueryKeyByOptions(queryKey, options) {
    const hashFn = options?.queryKeyHashFn || hashKey;
    return hashFn(queryKey);
}
function hashKey(queryKey) {
    return JSON.stringify(queryKey, (_, val)=>isPlainObject(val) ? Object.keys(val).sort().reduce((result, key)=>{
            result[key] = val[key];
            return result;
        }, {}) : val);
}
function partialMatchKey(a, b) {
    if (a === b) return true;
    if (typeof a !== typeof b) return false;
    if (a && b && typeof a === "object" && typeof b === "object") return !Object.keys(b).some((key)=>!partialMatchKey(a[key], b[key]));
    return false;
}
function replaceEqualDeep(a, b) {
    if (a === b) return a;
    const array = isPlainArray(a) && isPlainArray(b);
    if (array || isPlainObject(a) && isPlainObject(b)) {
        const aItems = array ? a : Object.keys(a);
        const aSize = aItems.length;
        const bItems = array ? b : Object.keys(b);
        const bSize = bItems.length;
        const copy = array ? [] : {};
        let equalItems = 0;
        for(let i = 0; i < bSize; i++){
            const key = array ? i : bItems[i];
            if ((!array && aItems.includes(key) || array) && a[key] === void 0 && b[key] === void 0) {
                copy[key] = void 0;
                equalItems++;
            } else {
                copy[key] = replaceEqualDeep(a[key], b[key]);
                if (copy[key] === a[key] && a[key] !== void 0) equalItems++;
            }
        }
        return aSize === bSize && equalItems === aSize ? a : copy;
    }
    return b;
}
function shallowEqualObjects(a, b) {
    if (!b || Object.keys(a).length !== Object.keys(b).length) return false;
    for(const key in a){
        if (a[key] !== b[key]) return false;
    }
    return true;
}
function isPlainArray(value) {
    return Array.isArray(value) && value.length === Object.keys(value).length;
}
function isPlainObject(o) {
    if (!hasObjectPrototype(o)) return false;
    const ctor = o.constructor;
    if (ctor === void 0) return true;
    const prot = ctor.prototype;
    if (!hasObjectPrototype(prot)) return false;
    if (!prot.hasOwnProperty("isPrototypeOf")) return false;
    if (Object.getPrototypeOf(o) !== Object.prototype) return false;
    return true;
}
function hasObjectPrototype(o) {
    return Object.prototype.toString.call(o) === "[object Object]";
}
function sleep(timeout) {
    return new Promise((resolve)=>{
        setTimeout(resolve, timeout);
    });
}
function replaceData(prevData, data, options) {
    if (typeof options.structuralSharing === "function") return options.structuralSharing(prevData, data);
    else if (options.structuralSharing !== false) return replaceEqualDeep(prevData, data);
    return data;
}
function keepPreviousData(previousData) {
    return previousData;
}
function addToEnd(items, item, max = 0) {
    const newItems = [
        ...items,
        item
    ];
    return max && newItems.length > max ? newItems.slice(1) : newItems;
}
function addToStart(items, item, max = 0) {
    const newItems = [
        item,
        ...items
    ];
    return max && newItems.length > max ? newItems.slice(0, -1) : newItems;
}
var skipToken = Symbol();
function ensureQueryFn(options, fetchOptions) {
    if (options.queryFn === skipToken) console.error(`Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`);
    if (!options.queryFn && fetchOptions?.initialPromise) return ()=>fetchOptions.initialPromise;
    if (!options.queryFn || options.queryFn === skipToken) return ()=>Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));
    return options.queryFn;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"fkqkX":[function(require,module,exports) {
// src/onlineManager.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "OnlineManager", ()=>OnlineManager);
parcelHelpers.export(exports, "onlineManager", ()=>onlineManager);
var _subscribableJs = require("./subscribable.js");
var _utilsJs = require("./utils.js");
var OnlineManager = class extends (0, _subscribableJs.Subscribable) {
    #online = true;
    #cleanup;
    #setup;
    constructor(){
        super();
        this.#setup = (onOnline)=>{
            if (!(0, _utilsJs.isServer) && window.addEventListener) {
                const onlineListener = ()=>onOnline(true);
                const offlineListener = ()=>onOnline(false);
                window.addEventListener("online", onlineListener, false);
                window.addEventListener("offline", offlineListener, false);
                return ()=>{
                    window.removeEventListener("online", onlineListener);
                    window.removeEventListener("offline", offlineListener);
                };
            }
            return;
        };
    }
    onSubscribe() {
        if (!this.#cleanup) this.setEventListener(this.#setup);
    }
    onUnsubscribe() {
        if (!this.hasListeners()) {
            this.#cleanup?.();
            this.#cleanup = void 0;
        }
    }
    setEventListener(setup) {
        this.#setup = setup;
        this.#cleanup?.();
        this.#cleanup = setup(this.setOnline.bind(this));
    }
    setOnline(online) {
        const changed = this.#online !== online;
        if (changed) {
            this.#online = online;
            this.listeners.forEach((listener)=>{
                listener(online);
            });
        }
    }
    isOnline() {
        return this.#online;
    }
};
var onlineManager = new OnlineManager();

},{"./subscribable.js":"1iYUD","./utils.js":"jWMgc","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"kLVBQ":[function(require,module,exports) {
// src/queryCache.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "QueryCache", ()=>QueryCache);
var _utilsJs = require("./utils.js");
var _queryJs = require("./query.js");
var _notifyManagerJs = require("./notifyManager.js");
var _subscribableJs = require("./subscribable.js");
var QueryCache = class extends (0, _subscribableJs.Subscribable) {
    constructor(config = {}){
        super();
        this.config = config;
        this.#queries = /* @__PURE__ */ new Map();
    }
    #queries;
    build(client, options, state) {
        const queryKey = options.queryKey;
        const queryHash = options.queryHash ?? (0, _utilsJs.hashQueryKeyByOptions)(queryKey, options);
        let query = this.get(queryHash);
        if (!query) {
            query = new (0, _queryJs.Query)({
                cache: this,
                queryKey,
                queryHash,
                options: client.defaultQueryOptions(options),
                state,
                defaultOptions: client.getQueryDefaults(queryKey)
            });
            this.add(query);
        }
        return query;
    }
    add(query) {
        if (!this.#queries.has(query.queryHash)) {
            this.#queries.set(query.queryHash, query);
            this.notify({
                type: "added",
                query
            });
        }
    }
    remove(query) {
        const queryInMap = this.#queries.get(query.queryHash);
        if (queryInMap) {
            query.destroy();
            if (queryInMap === query) this.#queries.delete(query.queryHash);
            this.notify({
                type: "removed",
                query
            });
        }
    }
    clear() {
        (0, _notifyManagerJs.notifyManager).batch(()=>{
            this.getAll().forEach((query)=>{
                this.remove(query);
            });
        });
    }
    get(queryHash) {
        return this.#queries.get(queryHash);
    }
    getAll() {
        return [
            ...this.#queries.values()
        ];
    }
    find(filters) {
        const defaultedFilters = {
            exact: true,
            ...filters
        };
        return this.getAll().find((query)=>(0, _utilsJs.matchQuery)(defaultedFilters, query));
    }
    findAll(filters = {}) {
        const queries = this.getAll();
        return Object.keys(filters).length > 0 ? queries.filter((query)=>(0, _utilsJs.matchQuery)(filters, query)) : queries;
    }
    notify(event) {
        (0, _notifyManagerJs.notifyManager).batch(()=>{
            this.listeners.forEach((listener)=>{
                listener(event);
            });
        });
    }
    onFocus() {
        (0, _notifyManagerJs.notifyManager).batch(()=>{
            this.getAll().forEach((query)=>{
                query.onFocus();
            });
        });
    }
    onOnline() {
        (0, _notifyManagerJs.notifyManager).batch(()=>{
            this.getAll().forEach((query)=>{
                query.onOnline();
            });
        });
    }
};

},{"./utils.js":"jWMgc","./query.js":"3MXyx","./notifyManager.js":"3ja1i","./subscribable.js":"1iYUD","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"3MXyx":[function(require,module,exports) {
// src/query.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Query", ()=>Query);
parcelHelpers.export(exports, "fetchState", ()=>fetchState);
var _utilsJs = require("./utils.js");
var _notifyManagerJs = require("./notifyManager.js");
var _retryerJs = require("./retryer.js");
var _removableJs = require("./removable.js");
var Query = class extends (0, _removableJs.Removable) {
    #initialState;
    #revertState;
    #cache;
    #retryer;
    #defaultOptions;
    #abortSignalConsumed;
    constructor(config){
        super();
        this.#abortSignalConsumed = false;
        this.#defaultOptions = config.defaultOptions;
        this.setOptions(config.options);
        this.observers = [];
        this.#cache = config.cache;
        this.queryKey = config.queryKey;
        this.queryHash = config.queryHash;
        this.#initialState = getDefaultState(this.options);
        this.state = config.state ?? this.#initialState;
        this.scheduleGc();
    }
    get meta() {
        return this.options.meta;
    }
    get promise() {
        return this.#retryer?.promise;
    }
    setOptions(options) {
        this.options = {
            ...this.#defaultOptions,
            ...options
        };
        this.updateGcTime(this.options.gcTime);
    }
    optionalRemove() {
        if (!this.observers.length && this.state.fetchStatus === "idle") this.#cache.remove(this);
    }
    setData(newData, options) {
        const data = (0, _utilsJs.replaceData)(this.state.data, newData, this.options);
        this.#dispatch({
            data,
            type: "success",
            dataUpdatedAt: options?.updatedAt,
            manual: options?.manual
        });
        return data;
    }
    setState(state, setStateOptions) {
        this.#dispatch({
            type: "setState",
            state,
            setStateOptions
        });
    }
    cancel(options) {
        const promise = this.#retryer?.promise;
        this.#retryer?.cancel(options);
        return promise ? promise.then((0, _utilsJs.noop)).catch((0, _utilsJs.noop)) : Promise.resolve();
    }
    destroy() {
        super.destroy();
        this.cancel({
            silent: true
        });
    }
    reset() {
        this.destroy();
        this.setState(this.#initialState);
    }
    isActive() {
        return this.observers.some((observer)=>(0, _utilsJs.resolveEnabled)(observer.options.enabled, this) !== false);
    }
    isDisabled() {
        return this.getObserversCount() > 0 && !this.isActive();
    }
    isStale() {
        if (this.state.isInvalidated) return true;
        if (this.getObserversCount() > 0) return this.observers.some((observer)=>observer.getCurrentResult().isStale);
        return this.state.data === void 0;
    }
    isStaleByTime(staleTime = 0) {
        return this.state.isInvalidated || this.state.data === void 0 || !(0, _utilsJs.timeUntilStale)(this.state.dataUpdatedAt, staleTime);
    }
    onFocus() {
        const observer = this.observers.find((x)=>x.shouldFetchOnWindowFocus());
        observer?.refetch({
            cancelRefetch: false
        });
        this.#retryer?.continue();
    }
    onOnline() {
        const observer = this.observers.find((x)=>x.shouldFetchOnReconnect());
        observer?.refetch({
            cancelRefetch: false
        });
        this.#retryer?.continue();
    }
    addObserver(observer) {
        if (!this.observers.includes(observer)) {
            this.observers.push(observer);
            this.clearGcTimeout();
            this.#cache.notify({
                type: "observerAdded",
                query: this,
                observer
            });
        }
    }
    removeObserver(observer) {
        if (this.observers.includes(observer)) {
            this.observers = this.observers.filter((x)=>x !== observer);
            if (!this.observers.length) {
                if (this.#retryer) {
                    if (this.#abortSignalConsumed) this.#retryer.cancel({
                        revert: true
                    });
                    else this.#retryer.cancelRetry();
                }
                this.scheduleGc();
            }
            this.#cache.notify({
                type: "observerRemoved",
                query: this,
                observer
            });
        }
    }
    getObserversCount() {
        return this.observers.length;
    }
    invalidate() {
        if (!this.state.isInvalidated) this.#dispatch({
            type: "invalidate"
        });
    }
    fetch(options, fetchOptions) {
        if (this.state.fetchStatus !== "idle") {
            if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) this.cancel({
                silent: true
            });
            else if (this.#retryer) {
                this.#retryer.continueRetry();
                return this.#retryer.promise;
            }
        }
        if (options) this.setOptions(options);
        if (!this.options.queryFn) {
            const observer = this.observers.find((x)=>x.options.queryFn);
            if (observer) this.setOptions(observer.options);
        }
        if (!Array.isArray(this.options.queryKey)) console.error(`As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`);
        const abortController = new AbortController();
        const addSignalProperty = (object)=>{
            Object.defineProperty(object, "signal", {
                enumerable: true,
                get: ()=>{
                    this.#abortSignalConsumed = true;
                    return abortController.signal;
                }
            });
        };
        const fetchFn = ()=>{
            const queryFn = (0, _utilsJs.ensureQueryFn)(this.options, fetchOptions);
            const queryFnContext = {
                queryKey: this.queryKey,
                meta: this.meta
            };
            addSignalProperty(queryFnContext);
            this.#abortSignalConsumed = false;
            if (this.options.persister) return this.options.persister(queryFn, queryFnContext, this);
            return queryFn(queryFnContext);
        };
        const context = {
            fetchOptions,
            options: this.options,
            queryKey: this.queryKey,
            state: this.state,
            fetchFn
        };
        addSignalProperty(context);
        this.options.behavior?.onFetch(context, this);
        this.#revertState = this.state;
        if (this.state.fetchStatus === "idle" || this.state.fetchMeta !== context.fetchOptions?.meta) this.#dispatch({
            type: "fetch",
            meta: context.fetchOptions?.meta
        });
        const onError = (error)=>{
            if (!((0, _retryerJs.isCancelledError)(error) && error.silent)) this.#dispatch({
                type: "error",
                error
            });
            if (!(0, _retryerJs.isCancelledError)(error)) {
                this.#cache.config.onError?.(error, this);
                this.#cache.config.onSettled?.(this.state.data, error, this);
            }
            if (!this.isFetchingOptimistic) this.scheduleGc();
            this.isFetchingOptimistic = false;
        };
        this.#retryer = (0, _retryerJs.createRetryer)({
            initialPromise: fetchOptions?.initialPromise,
            fn: context.fetchFn,
            abort: abortController.abort.bind(abortController),
            onSuccess: (data)=>{
                if (data === void 0) {
                    console.error(`Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`);
                    onError(new Error(`${this.queryHash} data is undefined`));
                    return;
                }
                this.setData(data);
                this.#cache.config.onSuccess?.(data, this);
                this.#cache.config.onSettled?.(data, this.state.error, this);
                if (!this.isFetchingOptimistic) this.scheduleGc();
                this.isFetchingOptimistic = false;
            },
            onError,
            onFail: (failureCount, error)=>{
                this.#dispatch({
                    type: "failed",
                    failureCount,
                    error
                });
            },
            onPause: ()=>{
                this.#dispatch({
                    type: "pause"
                });
            },
            onContinue: ()=>{
                this.#dispatch({
                    type: "continue"
                });
            },
            retry: context.options.retry,
            retryDelay: context.options.retryDelay,
            networkMode: context.options.networkMode,
            canRun: ()=>true
        });
        return this.#retryer.start();
    }
    #dispatch(action) {
        const reducer = (state)=>{
            switch(action.type){
                case "failed":
                    return {
                        ...state,
                        fetchFailureCount: action.failureCount,
                        fetchFailureReason: action.error
                    };
                case "pause":
                    return {
                        ...state,
                        fetchStatus: "paused"
                    };
                case "continue":
                    return {
                        ...state,
                        fetchStatus: "fetching"
                    };
                case "fetch":
                    return {
                        ...state,
                        ...fetchState(state.data, this.options),
                        fetchMeta: action.meta ?? null
                    };
                case "success":
                    return {
                        ...state,
                        data: action.data,
                        dataUpdateCount: state.dataUpdateCount + 1,
                        dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),
                        error: null,
                        isInvalidated: false,
                        status: "success",
                        ...!action.manual && {
                            fetchStatus: "idle",
                            fetchFailureCount: 0,
                            fetchFailureReason: null
                        }
                    };
                case "error":
                    const error = action.error;
                    if ((0, _retryerJs.isCancelledError)(error) && error.revert && this.#revertState) return {
                        ...this.#revertState,
                        fetchStatus: "idle"
                    };
                    return {
                        ...state,
                        error,
                        errorUpdateCount: state.errorUpdateCount + 1,
                        errorUpdatedAt: Date.now(),
                        fetchFailureCount: state.fetchFailureCount + 1,
                        fetchFailureReason: error,
                        fetchStatus: "idle",
                        status: "error"
                    };
                case "invalidate":
                    return {
                        ...state,
                        isInvalidated: true
                    };
                case "setState":
                    return {
                        ...state,
                        ...action.state
                    };
            }
        };
        this.state = reducer(this.state);
        (0, _notifyManagerJs.notifyManager).batch(()=>{
            this.observers.forEach((observer)=>{
                observer.onQueryUpdate();
            });
            this.#cache.notify({
                query: this,
                type: "updated",
                action
            });
        });
    }
};
function fetchState(data, options) {
    return {
        fetchFailureCount: 0,
        fetchFailureReason: null,
        fetchStatus: (0, _retryerJs.canFetch)(options.networkMode) ? "fetching" : "paused",
        ...data === void 0 && {
            error: null,
            status: "pending"
        }
    };
}
function getDefaultState(options) {
    const data = typeof options.initialData === "function" ? options.initialData() : options.initialData;
    const hasData = data !== void 0;
    const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === "function" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;
    return {
        data,
        dataUpdateCount: 0,
        dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,
        error: null,
        errorUpdateCount: 0,
        errorUpdatedAt: 0,
        fetchFailureCount: 0,
        fetchFailureReason: null,
        fetchMeta: null,
        isInvalidated: false,
        status: hasData ? "success" : "pending",
        fetchStatus: "idle"
    };
}

},{"./utils.js":"jWMgc","./notifyManager.js":"3ja1i","./retryer.js":"5YENh","./removable.js":"4VSAF","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"3ja1i":[function(require,module,exports) {
// src/notifyManager.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createNotifyManager", ()=>createNotifyManager);
parcelHelpers.export(exports, "notifyManager", ()=>notifyManager);
function createNotifyManager() {
    let queue = [];
    let transactions = 0;
    let notifyFn = (callback)=>{
        callback();
    };
    let batchNotifyFn = (callback)=>{
        callback();
    };
    let scheduleFn = (cb)=>setTimeout(cb, 0);
    const setScheduler = (fn)=>{
        scheduleFn = fn;
    };
    const batch = (callback)=>{
        let result;
        transactions++;
        try {
            result = callback();
        } finally{
            transactions--;
            if (!transactions) flush();
        }
        return result;
    };
    const schedule = (callback)=>{
        if (transactions) queue.push(callback);
        else scheduleFn(()=>{
            notifyFn(callback);
        });
    };
    const batchCalls = (callback)=>{
        return (...args)=>{
            schedule(()=>{
                callback(...args);
            });
        };
    };
    const flush = ()=>{
        const originalQueue = queue;
        queue = [];
        if (originalQueue.length) scheduleFn(()=>{
            batchNotifyFn(()=>{
                originalQueue.forEach((callback)=>{
                    notifyFn(callback);
                });
            });
        });
    };
    const setNotifyFunction = (fn)=>{
        notifyFn = fn;
    };
    const setBatchNotifyFunction = (fn)=>{
        batchNotifyFn = fn;
    };
    return {
        batch,
        batchCalls,
        schedule,
        setNotifyFunction,
        setBatchNotifyFunction,
        setScheduler
    };
}
var notifyManager = createNotifyManager();

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"4VSAF":[function(require,module,exports) {
// src/removable.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Removable", ()=>Removable);
var _utilsJs = require("./utils.js");
var Removable = class {
    #gcTimeout;
    destroy() {
        this.clearGcTimeout();
    }
    scheduleGc() {
        this.clearGcTimeout();
        if ((0, _utilsJs.isValidTimeout)(this.gcTime)) this.#gcTimeout = setTimeout(()=>{
            this.optionalRemove();
        }, this.gcTime);
    }
    updateGcTime(newGcTime) {
        this.gcTime = Math.max(this.gcTime || 0, newGcTime ?? ((0, _utilsJs.isServer) ? Infinity : 300000));
    }
    clearGcTimeout() {
        if (this.#gcTimeout) {
            clearTimeout(this.#gcTimeout);
            this.#gcTimeout = void 0;
        }
    }
};

},{"./utils.js":"jWMgc","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"fA2tC":[function(require,module,exports) {
// src/queryClient.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "QueryClient", ()=>QueryClient);
var _utilsJs = require("./utils.js");
var _queryCacheJs = require("./queryCache.js");
var _mutationCacheJs = require("./mutationCache.js");
var _focusManagerJs = require("./focusManager.js");
var _onlineManagerJs = require("./onlineManager.js");
var _notifyManagerJs = require("./notifyManager.js");
var _infiniteQueryBehaviorJs = require("./infiniteQueryBehavior.js");
var QueryClient = class {
    #queryCache;
    #mutationCache;
    #defaultOptions;
    #queryDefaults;
    #mutationDefaults;
    #mountCount;
    #unsubscribeFocus;
    #unsubscribeOnline;
    constructor(config = {}){
        this.#queryCache = config.queryCache || new (0, _queryCacheJs.QueryCache)();
        this.#mutationCache = config.mutationCache || new (0, _mutationCacheJs.MutationCache)();
        this.#defaultOptions = config.defaultOptions || {};
        this.#queryDefaults = /* @__PURE__ */ new Map();
        this.#mutationDefaults = /* @__PURE__ */ new Map();
        this.#mountCount = 0;
    }
    mount() {
        this.#mountCount++;
        if (this.#mountCount !== 1) return;
        this.#unsubscribeFocus = (0, _focusManagerJs.focusManager).subscribe(async (focused)=>{
            if (focused) {
                await this.resumePausedMutations();
                this.#queryCache.onFocus();
            }
        });
        this.#unsubscribeOnline = (0, _onlineManagerJs.onlineManager).subscribe(async (online)=>{
            if (online) {
                await this.resumePausedMutations();
                this.#queryCache.onOnline();
            }
        });
    }
    unmount() {
        this.#mountCount--;
        if (this.#mountCount !== 0) return;
        this.#unsubscribeFocus?.();
        this.#unsubscribeFocus = void 0;
        this.#unsubscribeOnline?.();
        this.#unsubscribeOnline = void 0;
    }
    isFetching(filters) {
        return this.#queryCache.findAll({
            ...filters,
            fetchStatus: "fetching"
        }).length;
    }
    isMutating(filters) {
        return this.#mutationCache.findAll({
            ...filters,
            status: "pending"
        }).length;
    }
    getQueryData(queryKey) {
        const options = this.defaultQueryOptions({
            queryKey
        });
        return this.#queryCache.get(options.queryHash)?.state.data;
    }
    ensureQueryData(options) {
        const cachedData = this.getQueryData(options.queryKey);
        if (cachedData === void 0) return this.fetchQuery(options);
        else {
            const defaultedOptions = this.defaultQueryOptions(options);
            const query = this.#queryCache.build(this, defaultedOptions);
            if (options.revalidateIfStale && query.isStaleByTime((0, _utilsJs.resolveStaleTime)(defaultedOptions.staleTime, query))) this.prefetchQuery(defaultedOptions);
            return Promise.resolve(cachedData);
        }
    }
    getQueriesData(filters) {
        return this.#queryCache.findAll(filters).map(({ queryKey, state })=>{
            const data = state.data;
            return [
                queryKey,
                data
            ];
        });
    }
    setQueryData(queryKey, updater, options) {
        const defaultedOptions = this.defaultQueryOptions({
            queryKey
        });
        const query = this.#queryCache.get(defaultedOptions.queryHash);
        const prevData = query?.state.data;
        const data = (0, _utilsJs.functionalUpdate)(updater, prevData);
        if (data === void 0) return void 0;
        return this.#queryCache.build(this, defaultedOptions).setData(data, {
            ...options,
            manual: true
        });
    }
    setQueriesData(filters, updater, options) {
        return (0, _notifyManagerJs.notifyManager).batch(()=>this.#queryCache.findAll(filters).map(({ queryKey })=>[
                    queryKey,
                    this.setQueryData(queryKey, updater, options)
                ]));
    }
    getQueryState(queryKey) {
        const options = this.defaultQueryOptions({
            queryKey
        });
        return this.#queryCache.get(options.queryHash)?.state;
    }
    removeQueries(filters) {
        const queryCache = this.#queryCache;
        (0, _notifyManagerJs.notifyManager).batch(()=>{
            queryCache.findAll(filters).forEach((query)=>{
                queryCache.remove(query);
            });
        });
    }
    resetQueries(filters, options) {
        const queryCache = this.#queryCache;
        const refetchFilters = {
            type: "active",
            ...filters
        };
        return (0, _notifyManagerJs.notifyManager).batch(()=>{
            queryCache.findAll(filters).forEach((query)=>{
                query.reset();
            });
            return this.refetchQueries(refetchFilters, options);
        });
    }
    cancelQueries(filters = {}, cancelOptions = {}) {
        const defaultedCancelOptions = {
            revert: true,
            ...cancelOptions
        };
        const promises = (0, _notifyManagerJs.notifyManager).batch(()=>this.#queryCache.findAll(filters).map((query)=>query.cancel(defaultedCancelOptions)));
        return Promise.all(promises).then((0, _utilsJs.noop)).catch((0, _utilsJs.noop));
    }
    invalidateQueries(filters = {}, options = {}) {
        return (0, _notifyManagerJs.notifyManager).batch(()=>{
            this.#queryCache.findAll(filters).forEach((query)=>{
                query.invalidate();
            });
            if (filters.refetchType === "none") return Promise.resolve();
            const refetchFilters = {
                ...filters,
                type: filters.refetchType ?? filters.type ?? "active"
            };
            return this.refetchQueries(refetchFilters, options);
        });
    }
    refetchQueries(filters = {}, options) {
        const fetchOptions = {
            ...options,
            cancelRefetch: options?.cancelRefetch ?? true
        };
        const promises = (0, _notifyManagerJs.notifyManager).batch(()=>this.#queryCache.findAll(filters).filter((query)=>!query.isDisabled()).map((query)=>{
                let promise = query.fetch(void 0, fetchOptions);
                if (!fetchOptions.throwOnError) promise = promise.catch((0, _utilsJs.noop));
                return query.state.fetchStatus === "paused" ? Promise.resolve() : promise;
            }));
        return Promise.all(promises).then((0, _utilsJs.noop));
    }
    fetchQuery(options) {
        const defaultedOptions = this.defaultQueryOptions(options);
        if (defaultedOptions.retry === void 0) defaultedOptions.retry = false;
        const query = this.#queryCache.build(this, defaultedOptions);
        return query.isStaleByTime((0, _utilsJs.resolveStaleTime)(defaultedOptions.staleTime, query)) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);
    }
    prefetchQuery(options) {
        return this.fetchQuery(options).then((0, _utilsJs.noop)).catch((0, _utilsJs.noop));
    }
    fetchInfiniteQuery(options) {
        options.behavior = (0, _infiniteQueryBehaviorJs.infiniteQueryBehavior)(options.pages);
        return this.fetchQuery(options);
    }
    prefetchInfiniteQuery(options) {
        return this.fetchInfiniteQuery(options).then((0, _utilsJs.noop)).catch((0, _utilsJs.noop));
    }
    resumePausedMutations() {
        if ((0, _onlineManagerJs.onlineManager).isOnline()) return this.#mutationCache.resumePausedMutations();
        return Promise.resolve();
    }
    getQueryCache() {
        return this.#queryCache;
    }
    getMutationCache() {
        return this.#mutationCache;
    }
    getDefaultOptions() {
        return this.#defaultOptions;
    }
    setDefaultOptions(options) {
        this.#defaultOptions = options;
    }
    setQueryDefaults(queryKey, options) {
        this.#queryDefaults.set((0, _utilsJs.hashKey)(queryKey), {
            queryKey,
            defaultOptions: options
        });
    }
    getQueryDefaults(queryKey) {
        const defaults = [
            ...this.#queryDefaults.values()
        ];
        let result = {};
        defaults.forEach((queryDefault)=>{
            if ((0, _utilsJs.partialMatchKey)(queryKey, queryDefault.queryKey)) result = {
                ...result,
                ...queryDefault.defaultOptions
            };
        });
        return result;
    }
    setMutationDefaults(mutationKey, options) {
        this.#mutationDefaults.set((0, _utilsJs.hashKey)(mutationKey), {
            mutationKey,
            defaultOptions: options
        });
    }
    getMutationDefaults(mutationKey) {
        const defaults = [
            ...this.#mutationDefaults.values()
        ];
        let result = {};
        defaults.forEach((queryDefault)=>{
            if ((0, _utilsJs.partialMatchKey)(mutationKey, queryDefault.mutationKey)) result = {
                ...result,
                ...queryDefault.defaultOptions
            };
        });
        return result;
    }
    defaultQueryOptions(options) {
        if (options._defaulted) return options;
        const defaultedOptions = {
            ...this.#defaultOptions.queries,
            ...this.getQueryDefaults(options.queryKey),
            ...options,
            _defaulted: true
        };
        if (!defaultedOptions.queryHash) defaultedOptions.queryHash = (0, _utilsJs.hashQueryKeyByOptions)(defaultedOptions.queryKey, defaultedOptions);
        if (defaultedOptions.refetchOnReconnect === void 0) defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== "always";
        if (defaultedOptions.throwOnError === void 0) defaultedOptions.throwOnError = !!defaultedOptions.suspense;
        if (!defaultedOptions.networkMode && defaultedOptions.persister) defaultedOptions.networkMode = "offlineFirst";
        if (defaultedOptions.enabled !== true && defaultedOptions.queryFn === (0, _utilsJs.skipToken)) defaultedOptions.enabled = false;
        return defaultedOptions;
    }
    defaultMutationOptions(options) {
        if (options?._defaulted) return options;
        return {
            ...this.#defaultOptions.mutations,
            ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),
            ...options,
            _defaulted: true
        };
    }
    clear() {
        this.#queryCache.clear();
        this.#mutationCache.clear();
    }
};

},{"./utils.js":"jWMgc","./queryCache.js":"kLVBQ","./mutationCache.js":"dVPut","./focusManager.js":"4yjDl","./onlineManager.js":"fkqkX","./notifyManager.js":"3ja1i","./infiniteQueryBehavior.js":"fHJDt","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"dVPut":[function(require,module,exports) {
// src/mutationCache.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MutationCache", ()=>MutationCache);
var _notifyManagerJs = require("./notifyManager.js");
var _mutationJs = require("./mutation.js");
var _utilsJs = require("./utils.js");
var _subscribableJs = require("./subscribable.js");
var MutationCache = class extends (0, _subscribableJs.Subscribable) {
    constructor(config = {}){
        super();
        this.config = config;
        this.#mutations = /* @__PURE__ */ new Map();
        this.#mutationId = Date.now();
    }
    #mutations;
    #mutationId;
    build(client, options, state) {
        const mutation = new (0, _mutationJs.Mutation)({
            mutationCache: this,
            mutationId: ++this.#mutationId,
            options: client.defaultMutationOptions(options),
            state
        });
        this.add(mutation);
        return mutation;
    }
    add(mutation) {
        const scope = scopeFor(mutation);
        const mutations = this.#mutations.get(scope) ?? [];
        mutations.push(mutation);
        this.#mutations.set(scope, mutations);
        this.notify({
            type: "added",
            mutation
        });
    }
    remove(mutation) {
        const scope = scopeFor(mutation);
        if (this.#mutations.has(scope)) {
            const mutations = this.#mutations.get(scope)?.filter((x)=>x !== mutation);
            if (mutations) {
                if (mutations.length === 0) this.#mutations.delete(scope);
                else this.#mutations.set(scope, mutations);
            }
        }
        this.notify({
            type: "removed",
            mutation
        });
    }
    canRun(mutation) {
        const firstPendingMutation = this.#mutations.get(scopeFor(mutation))?.find((m)=>m.state.status === "pending");
        return !firstPendingMutation || firstPendingMutation === mutation;
    }
    runNext(mutation) {
        const foundMutation = this.#mutations.get(scopeFor(mutation))?.find((m)=>m !== mutation && m.state.isPaused);
        return foundMutation?.continue() ?? Promise.resolve();
    }
    clear() {
        (0, _notifyManagerJs.notifyManager).batch(()=>{
            this.getAll().forEach((mutation)=>{
                this.remove(mutation);
            });
        });
    }
    getAll() {
        return [
            ...this.#mutations.values()
        ].flat();
    }
    find(filters) {
        const defaultedFilters = {
            exact: true,
            ...filters
        };
        return this.getAll().find((mutation)=>(0, _utilsJs.matchMutation)(defaultedFilters, mutation));
    }
    findAll(filters = {}) {
        return this.getAll().filter((mutation)=>(0, _utilsJs.matchMutation)(filters, mutation));
    }
    notify(event) {
        (0, _notifyManagerJs.notifyManager).batch(()=>{
            this.listeners.forEach((listener)=>{
                listener(event);
            });
        });
    }
    resumePausedMutations() {
        const pausedMutations = this.getAll().filter((x)=>x.state.isPaused);
        return (0, _notifyManagerJs.notifyManager).batch(()=>Promise.all(pausedMutations.map((mutation)=>mutation.continue().catch((0, _utilsJs.noop)))));
    }
};
function scopeFor(mutation) {
    return mutation.options.scope?.id ?? String(mutation.mutationId);
}

},{"./notifyManager.js":"3ja1i","./mutation.js":"7TKev","./utils.js":"jWMgc","./subscribable.js":"1iYUD","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"7TKev":[function(require,module,exports) {
// src/mutation.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Mutation", ()=>Mutation);
parcelHelpers.export(exports, "getDefaultState", ()=>getDefaultState);
var _notifyManagerJs = require("./notifyManager.js");
var _removableJs = require("./removable.js");
var _retryerJs = require("./retryer.js");
var Mutation = class extends (0, _removableJs.Removable) {
    #observers;
    #mutationCache;
    #retryer;
    constructor(config){
        super();
        this.mutationId = config.mutationId;
        this.#mutationCache = config.mutationCache;
        this.#observers = [];
        this.state = config.state || getDefaultState();
        this.setOptions(config.options);
        this.scheduleGc();
    }
    setOptions(options) {
        this.options = options;
        this.updateGcTime(this.options.gcTime);
    }
    get meta() {
        return this.options.meta;
    }
    addObserver(observer) {
        if (!this.#observers.includes(observer)) {
            this.#observers.push(observer);
            this.clearGcTimeout();
            this.#mutationCache.notify({
                type: "observerAdded",
                mutation: this,
                observer
            });
        }
    }
    removeObserver(observer) {
        this.#observers = this.#observers.filter((x)=>x !== observer);
        this.scheduleGc();
        this.#mutationCache.notify({
            type: "observerRemoved",
            mutation: this,
            observer
        });
    }
    optionalRemove() {
        if (!this.#observers.length) {
            if (this.state.status === "pending") this.scheduleGc();
            else this.#mutationCache.remove(this);
        }
    }
    continue() {
        return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before
        this.execute(this.state.variables);
    }
    async execute(variables) {
        this.#retryer = (0, _retryerJs.createRetryer)({
            fn: ()=>{
                if (!this.options.mutationFn) return Promise.reject(new Error("No mutationFn found"));
                return this.options.mutationFn(variables);
            },
            onFail: (failureCount, error)=>{
                this.#dispatch({
                    type: "failed",
                    failureCount,
                    error
                });
            },
            onPause: ()=>{
                this.#dispatch({
                    type: "pause"
                });
            },
            onContinue: ()=>{
                this.#dispatch({
                    type: "continue"
                });
            },
            retry: this.options.retry ?? 0,
            retryDelay: this.options.retryDelay,
            networkMode: this.options.networkMode,
            canRun: ()=>this.#mutationCache.canRun(this)
        });
        const restored = this.state.status === "pending";
        const isPaused = !this.#retryer.canStart();
        try {
            if (!restored) {
                this.#dispatch({
                    type: "pending",
                    variables,
                    isPaused
                });
                await this.#mutationCache.config.onMutate?.(variables, this);
                const context = await this.options.onMutate?.(variables);
                if (context !== this.state.context) this.#dispatch({
                    type: "pending",
                    context,
                    variables,
                    isPaused
                });
            }
            const data = await this.#retryer.start();
            await this.#mutationCache.config.onSuccess?.(data, variables, this.state.context, this);
            await this.options.onSuccess?.(data, variables, this.state.context);
            await this.#mutationCache.config.onSettled?.(data, null, this.state.variables, this.state.context, this);
            await this.options.onSettled?.(data, null, variables, this.state.context);
            this.#dispatch({
                type: "success",
                data
            });
            return data;
        } catch (error) {
            try {
                await this.#mutationCache.config.onError?.(error, variables, this.state.context, this);
                await this.options.onError?.(error, variables, this.state.context);
                await this.#mutationCache.config.onSettled?.(void 0, error, this.state.variables, this.state.context, this);
                await this.options.onSettled?.(void 0, error, variables, this.state.context);
                throw error;
            } finally{
                this.#dispatch({
                    type: "error",
                    error
                });
            }
        } finally{
            this.#mutationCache.runNext(this);
        }
    }
    #dispatch(action) {
        const reducer = (state)=>{
            switch(action.type){
                case "failed":
                    return {
                        ...state,
                        failureCount: action.failureCount,
                        failureReason: action.error
                    };
                case "pause":
                    return {
                        ...state,
                        isPaused: true
                    };
                case "continue":
                    return {
                        ...state,
                        isPaused: false
                    };
                case "pending":
                    return {
                        ...state,
                        context: action.context,
                        data: void 0,
                        failureCount: 0,
                        failureReason: null,
                        error: null,
                        isPaused: action.isPaused,
                        status: "pending",
                        variables: action.variables,
                        submittedAt: Date.now()
                    };
                case "success":
                    return {
                        ...state,
                        data: action.data,
                        failureCount: 0,
                        failureReason: null,
                        error: null,
                        status: "success",
                        isPaused: false
                    };
                case "error":
                    return {
                        ...state,
                        data: void 0,
                        error: action.error,
                        failureCount: state.failureCount + 1,
                        failureReason: action.error,
                        isPaused: false,
                        status: "error"
                    };
            }
        };
        this.state = reducer(this.state);
        (0, _notifyManagerJs.notifyManager).batch(()=>{
            this.#observers.forEach((observer)=>{
                observer.onMutationUpdate(action);
            });
            this.#mutationCache.notify({
                mutation: this,
                type: "updated",
                action
            });
        });
    }
};
function getDefaultState() {
    return {
        context: void 0,
        data: void 0,
        error: null,
        failureCount: 0,
        failureReason: null,
        isPaused: false,
        status: "idle",
        variables: void 0,
        submittedAt: 0
    };
}

},{"./notifyManager.js":"3ja1i","./removable.js":"4VSAF","./retryer.js":"5YENh","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"fHJDt":[function(require,module,exports) {
// src/infiniteQueryBehavior.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "hasNextPage", ()=>hasNextPage);
parcelHelpers.export(exports, "hasPreviousPage", ()=>hasPreviousPage);
parcelHelpers.export(exports, "infiniteQueryBehavior", ()=>infiniteQueryBehavior);
var _utilsJs = require("./utils.js");
function infiniteQueryBehavior(pages) {
    return {
        onFetch: (context, query)=>{
            const fetchFn = async ()=>{
                const options = context.options;
                const direction = context.fetchOptions?.meta?.fetchMore?.direction;
                const oldPages = context.state.data?.pages || [];
                const oldPageParams = context.state.data?.pageParams || [];
                const empty = {
                    pages: [],
                    pageParams: []
                };
                let cancelled = false;
                const addSignalProperty = (object)=>{
                    Object.defineProperty(object, "signal", {
                        enumerable: true,
                        get: ()=>{
                            if (context.signal.aborted) cancelled = true;
                            else context.signal.addEventListener("abort", ()=>{
                                cancelled = true;
                            });
                            return context.signal;
                        }
                    });
                };
                const queryFn = (0, _utilsJs.ensureQueryFn)(context.options, context.fetchOptions);
                const fetchPage = async (data, param, previous)=>{
                    if (cancelled) return Promise.reject();
                    if (param == null && data.pages.length) return Promise.resolve(data);
                    const queryFnContext = {
                        queryKey: context.queryKey,
                        pageParam: param,
                        direction: previous ? "backward" : "forward",
                        meta: context.options.meta
                    };
                    addSignalProperty(queryFnContext);
                    const page = await queryFn(queryFnContext);
                    const { maxPages } = context.options;
                    const addTo = previous ? (0, _utilsJs.addToStart) : (0, _utilsJs.addToEnd);
                    return {
                        pages: addTo(data.pages, page, maxPages),
                        pageParams: addTo(data.pageParams, param, maxPages)
                    };
                };
                let result;
                if (direction && oldPages.length) {
                    const previous = direction === "backward";
                    const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;
                    const oldData = {
                        pages: oldPages,
                        pageParams: oldPageParams
                    };
                    const param = pageParamFn(options, oldData);
                    result = await fetchPage(oldData, param, previous);
                } else {
                    result = await fetchPage(empty, oldPageParams[0] ?? options.initialPageParam);
                    const remainingPages = pages ?? oldPages.length;
                    for(let i = 1; i < remainingPages; i++){
                        const param = getNextPageParam(options, result);
                        if (param == null) break;
                        result = await fetchPage(result, param);
                    }
                }
                return result;
            };
            if (context.options.persister) context.fetchFn = ()=>{
                return context.options.persister?.(fetchFn, {
                    queryKey: context.queryKey,
                    meta: context.options.meta,
                    signal: context.signal
                }, query);
            };
            else context.fetchFn = fetchFn;
        }
    };
}
function getNextPageParam(options, { pages, pageParams }) {
    const lastIndex = pages.length - 1;
    return pages.length > 0 ? options.getNextPageParam(pages[lastIndex], pages, pageParams[lastIndex], pageParams) : void 0;
}
function getPreviousPageParam(options, { pages, pageParams }) {
    return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;
}
function hasNextPage(options, data) {
    if (!data) return false;
    return getNextPageParam(options, data) != null;
}
function hasPreviousPage(options, data) {
    if (!data || !options.getPreviousPageParam) return false;
    return getPreviousPageParam(options, data) != null;
}

},{"./utils.js":"jWMgc","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"1R76W":[function(require,module,exports) {
// src/queryObserver.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "QueryObserver", ()=>QueryObserver);
var _utilsJs = require("./utils.js");
var _notifyManagerJs = require("./notifyManager.js");
var _focusManagerJs = require("./focusManager.js");
var _subscribableJs = require("./subscribable.js");
var _queryJs = require("./query.js");
var QueryObserver = class extends (0, _subscribableJs.Subscribable) {
    constructor(client, options){
        super();
        this.options = options;
        this.#client = client;
        this.#selectError = null;
        this.bindMethods();
        this.setOptions(options);
    }
    #client;
    #currentQuery = void 0;
    #currentQueryInitialState = void 0;
    #currentResult = void 0;
    #currentResultState;
    #currentResultOptions;
    #selectError;
    #selectFn;
    #selectResult;
    // This property keeps track of the last query with defined data.
    // It will be used to pass the previous data and query to the placeholder function between renders.
    #lastQueryWithDefinedData;
    #staleTimeoutId;
    #refetchIntervalId;
    #currentRefetchInterval;
    #trackedProps = /* @__PURE__ */ new Set();
    bindMethods() {
        this.refetch = this.refetch.bind(this);
    }
    onSubscribe() {
        if (this.listeners.size === 1) {
            this.#currentQuery.addObserver(this);
            if (shouldFetchOnMount(this.#currentQuery, this.options)) this.#executeFetch();
            else this.updateResult();
            this.#updateTimers();
        }
    }
    onUnsubscribe() {
        if (!this.hasListeners()) this.destroy();
    }
    shouldFetchOnReconnect() {
        return shouldFetchOn(this.#currentQuery, this.options, this.options.refetchOnReconnect);
    }
    shouldFetchOnWindowFocus() {
        return shouldFetchOn(this.#currentQuery, this.options, this.options.refetchOnWindowFocus);
    }
    destroy() {
        this.listeners = /* @__PURE__ */ new Set();
        this.#clearStaleTimeout();
        this.#clearRefetchInterval();
        this.#currentQuery.removeObserver(this);
    }
    setOptions(options, notifyOptions) {
        const prevOptions = this.options;
        const prevQuery = this.#currentQuery;
        this.options = this.#client.defaultQueryOptions(options);
        if (this.options.enabled !== void 0 && typeof this.options.enabled !== "boolean" && typeof this.options.enabled !== "function" && typeof (0, _utilsJs.resolveEnabled)(this.options.enabled, this.#currentQuery) !== "boolean") throw new Error("Expected enabled to be a boolean or a callback that returns a boolean");
        this.#updateQuery();
        this.#currentQuery.setOptions(this.options);
        if (prevOptions._defaulted && !(0, _utilsJs.shallowEqualObjects)(this.options, prevOptions)) this.#client.getQueryCache().notify({
            type: "observerOptionsUpdated",
            query: this.#currentQuery,
            observer: this
        });
        const mounted = this.hasListeners();
        if (mounted && shouldFetchOptionally(this.#currentQuery, prevQuery, this.options, prevOptions)) this.#executeFetch();
        this.updateResult(notifyOptions);
        if (mounted && (this.#currentQuery !== prevQuery || (0, _utilsJs.resolveEnabled)(this.options.enabled, this.#currentQuery) !== (0, _utilsJs.resolveEnabled)(prevOptions.enabled, this.#currentQuery) || (0, _utilsJs.resolveStaleTime)(this.options.staleTime, this.#currentQuery) !== (0, _utilsJs.resolveStaleTime)(prevOptions.staleTime, this.#currentQuery))) this.#updateStaleTimeout();
        const nextRefetchInterval = this.#computeRefetchInterval();
        if (mounted && (this.#currentQuery !== prevQuery || (0, _utilsJs.resolveEnabled)(this.options.enabled, this.#currentQuery) !== (0, _utilsJs.resolveEnabled)(prevOptions.enabled, this.#currentQuery) || nextRefetchInterval !== this.#currentRefetchInterval)) this.#updateRefetchInterval(nextRefetchInterval);
    }
    getOptimisticResult(options) {
        const query = this.#client.getQueryCache().build(this.#client, options);
        const result = this.createResult(query, options);
        if (shouldAssignObserverCurrentProperties(this, result)) {
            this.#currentResult = result;
            this.#currentResultOptions = this.options;
            this.#currentResultState = this.#currentQuery.state;
        }
        return result;
    }
    getCurrentResult() {
        return this.#currentResult;
    }
    trackResult(result, onPropTracked) {
        const trackedResult = {};
        Object.keys(result).forEach((key)=>{
            Object.defineProperty(trackedResult, key, {
                configurable: false,
                enumerable: true,
                get: ()=>{
                    this.trackProp(key);
                    onPropTracked?.(key);
                    return result[key];
                }
            });
        });
        return trackedResult;
    }
    trackProp(key) {
        this.#trackedProps.add(key);
    }
    getCurrentQuery() {
        return this.#currentQuery;
    }
    refetch({ ...options } = {}) {
        return this.fetch({
            ...options
        });
    }
    fetchOptimistic(options) {
        const defaultedOptions = this.#client.defaultQueryOptions(options);
        const query = this.#client.getQueryCache().build(this.#client, defaultedOptions);
        query.isFetchingOptimistic = true;
        return query.fetch().then(()=>this.createResult(query, defaultedOptions));
    }
    fetch(fetchOptions) {
        return this.#executeFetch({
            ...fetchOptions,
            cancelRefetch: fetchOptions.cancelRefetch ?? true
        }).then(()=>{
            this.updateResult();
            return this.#currentResult;
        });
    }
    #executeFetch(fetchOptions) {
        this.#updateQuery();
        let promise = this.#currentQuery.fetch(this.options, fetchOptions);
        if (!fetchOptions?.throwOnError) promise = promise.catch((0, _utilsJs.noop));
        return promise;
    }
    #updateStaleTimeout() {
        this.#clearStaleTimeout();
        const staleTime = (0, _utilsJs.resolveStaleTime)(this.options.staleTime, this.#currentQuery);
        if ((0, _utilsJs.isServer) || this.#currentResult.isStale || !(0, _utilsJs.isValidTimeout)(staleTime)) return;
        const time = (0, _utilsJs.timeUntilStale)(this.#currentResult.dataUpdatedAt, staleTime);
        const timeout = time + 1;
        this.#staleTimeoutId = setTimeout(()=>{
            if (!this.#currentResult.isStale) this.updateResult();
        }, timeout);
    }
    #computeRefetchInterval() {
        return (typeof this.options.refetchInterval === "function" ? this.options.refetchInterval(this.#currentQuery) : this.options.refetchInterval) ?? false;
    }
    #updateRefetchInterval(nextInterval) {
        this.#clearRefetchInterval();
        this.#currentRefetchInterval = nextInterval;
        if ((0, _utilsJs.isServer) || (0, _utilsJs.resolveEnabled)(this.options.enabled, this.#currentQuery) === false || !(0, _utilsJs.isValidTimeout)(this.#currentRefetchInterval) || this.#currentRefetchInterval === 0) return;
        this.#refetchIntervalId = setInterval(()=>{
            if (this.options.refetchIntervalInBackground || (0, _focusManagerJs.focusManager).isFocused()) this.#executeFetch();
        }, this.#currentRefetchInterval);
    }
    #updateTimers() {
        this.#updateStaleTimeout();
        this.#updateRefetchInterval(this.#computeRefetchInterval());
    }
    #clearStaleTimeout() {
        if (this.#staleTimeoutId) {
            clearTimeout(this.#staleTimeoutId);
            this.#staleTimeoutId = void 0;
        }
    }
    #clearRefetchInterval() {
        if (this.#refetchIntervalId) {
            clearInterval(this.#refetchIntervalId);
            this.#refetchIntervalId = void 0;
        }
    }
    createResult(query, options) {
        const prevQuery = this.#currentQuery;
        const prevOptions = this.options;
        const prevResult = this.#currentResult;
        const prevResultState = this.#currentResultState;
        const prevResultOptions = this.#currentResultOptions;
        const queryChange = query !== prevQuery;
        const queryInitialState = queryChange ? query.state : this.#currentQueryInitialState;
        const { state } = query;
        let newState = {
            ...state
        };
        let isPlaceholderData = false;
        let data;
        if (options._optimisticResults) {
            const mounted = this.hasListeners();
            const fetchOnMount = !mounted && shouldFetchOnMount(query, options);
            const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);
            if (fetchOnMount || fetchOptionally) newState = {
                ...newState,
                ...(0, _queryJs.fetchState)(state.data, query.options)
            };
            if (options._optimisticResults === "isRestoring") newState.fetchStatus = "idle";
        }
        let { error, errorUpdatedAt, status } = newState;
        if (options.select && newState.data !== void 0) {
            if (prevResult && newState.data === prevResultState?.data && options.select === this.#selectFn) data = this.#selectResult;
            else try {
                this.#selectFn = options.select;
                data = options.select(newState.data);
                data = (0, _utilsJs.replaceData)(prevResult?.data, data, options);
                this.#selectResult = data;
                this.#selectError = null;
            } catch (selectError) {
                this.#selectError = selectError;
            }
        } else data = newState.data;
        if (options.placeholderData !== void 0 && data === void 0 && status === "pending") {
            let placeholderData;
            if (prevResult?.isPlaceholderData && options.placeholderData === prevResultOptions?.placeholderData) placeholderData = prevResult.data;
            else {
                placeholderData = typeof options.placeholderData === "function" ? options.placeholderData(this.#lastQueryWithDefinedData?.state.data, this.#lastQueryWithDefinedData) : options.placeholderData;
                if (options.select && placeholderData !== void 0) try {
                    placeholderData = options.select(placeholderData);
                    this.#selectError = null;
                } catch (selectError) {
                    this.#selectError = selectError;
                }
            }
            if (placeholderData !== void 0) {
                status = "success";
                data = (0, _utilsJs.replaceData)(prevResult?.data, placeholderData, options);
                isPlaceholderData = true;
            }
        }
        if (this.#selectError) {
            error = this.#selectError;
            data = this.#selectResult;
            errorUpdatedAt = Date.now();
            status = "error";
        }
        const isFetching = newState.fetchStatus === "fetching";
        const isPending = status === "pending";
        const isError = status === "error";
        const isLoading = isPending && isFetching;
        const hasData = data !== void 0;
        const result = {
            status,
            fetchStatus: newState.fetchStatus,
            isPending,
            isSuccess: status === "success",
            isError,
            isInitialLoading: isLoading,
            isLoading,
            data,
            dataUpdatedAt: newState.dataUpdatedAt,
            error,
            errorUpdatedAt,
            failureCount: newState.fetchFailureCount,
            failureReason: newState.fetchFailureReason,
            errorUpdateCount: newState.errorUpdateCount,
            isFetched: newState.dataUpdateCount > 0 || newState.errorUpdateCount > 0,
            isFetchedAfterMount: newState.dataUpdateCount > queryInitialState.dataUpdateCount || newState.errorUpdateCount > queryInitialState.errorUpdateCount,
            isFetching,
            isRefetching: isFetching && !isPending,
            isLoadingError: isError && !hasData,
            isPaused: newState.fetchStatus === "paused",
            isPlaceholderData,
            isRefetchError: isError && hasData,
            isStale: isStale(query, options),
            refetch: this.refetch
        };
        return result;
    }
    updateResult(notifyOptions) {
        const prevResult = this.#currentResult;
        const nextResult = this.createResult(this.#currentQuery, this.options);
        this.#currentResultState = this.#currentQuery.state;
        this.#currentResultOptions = this.options;
        if (this.#currentResultState.data !== void 0) this.#lastQueryWithDefinedData = this.#currentQuery;
        if ((0, _utilsJs.shallowEqualObjects)(nextResult, prevResult)) return;
        this.#currentResult = nextResult;
        const defaultNotifyOptions = {};
        const shouldNotifyListeners = ()=>{
            if (!prevResult) return true;
            const { notifyOnChangeProps } = this.options;
            const notifyOnChangePropsValue = typeof notifyOnChangeProps === "function" ? notifyOnChangeProps() : notifyOnChangeProps;
            if (notifyOnChangePropsValue === "all" || !notifyOnChangePropsValue && !this.#trackedProps.size) return true;
            const includedProps = new Set(notifyOnChangePropsValue ?? this.#trackedProps);
            if (this.options.throwOnError) includedProps.add("error");
            return Object.keys(this.#currentResult).some((key)=>{
                const typedKey = key;
                const changed = this.#currentResult[typedKey] !== prevResult[typedKey];
                return changed && includedProps.has(typedKey);
            });
        };
        if (notifyOptions?.listeners !== false && shouldNotifyListeners()) defaultNotifyOptions.listeners = true;
        this.#notify({
            ...defaultNotifyOptions,
            ...notifyOptions
        });
    }
    #updateQuery() {
        const query = this.#client.getQueryCache().build(this.#client, this.options);
        if (query === this.#currentQuery) return;
        const prevQuery = this.#currentQuery;
        this.#currentQuery = query;
        this.#currentQueryInitialState = query.state;
        if (this.hasListeners()) {
            prevQuery?.removeObserver(this);
            query.addObserver(this);
        }
    }
    onQueryUpdate() {
        this.updateResult();
        if (this.hasListeners()) this.#updateTimers();
    }
    #notify(notifyOptions) {
        (0, _notifyManagerJs.notifyManager).batch(()=>{
            if (notifyOptions.listeners) this.listeners.forEach((listener)=>{
                listener(this.#currentResult);
            });
            this.#client.getQueryCache().notify({
                query: this.#currentQuery,
                type: "observerResultsUpdated"
            });
        });
    }
};
function shouldLoadOnMount(query, options) {
    return (0, _utilsJs.resolveEnabled)(options.enabled, query) !== false && query.state.data === void 0 && !(query.state.status === "error" && options.retryOnMount === false);
}
function shouldFetchOnMount(query, options) {
    return shouldLoadOnMount(query, options) || query.state.data !== void 0 && shouldFetchOn(query, options, options.refetchOnMount);
}
function shouldFetchOn(query, options, field) {
    if ((0, _utilsJs.resolveEnabled)(options.enabled, query) !== false) {
        const value = typeof field === "function" ? field(query) : field;
        return value === "always" || value !== false && isStale(query, options);
    }
    return false;
}
function shouldFetchOptionally(query, prevQuery, options, prevOptions) {
    return (query !== prevQuery || (0, _utilsJs.resolveEnabled)(prevOptions.enabled, query) === false) && (!options.suspense || query.state.status !== "error") && isStale(query, options);
}
function isStale(query, options) {
    return (0, _utilsJs.resolveEnabled)(options.enabled, query) !== false && query.isStaleByTime((0, _utilsJs.resolveStaleTime)(options.staleTime, query));
}
function shouldAssignObserverCurrentProperties(observer, optimisticResult) {
    if (!(0, _utilsJs.shallowEqualObjects)(observer.getCurrentResult(), optimisticResult)) return true;
    return false;
}

},{"./utils.js":"jWMgc","./notifyManager.js":"3ja1i","./focusManager.js":"4yjDl","./subscribable.js":"1iYUD","./query.js":"3MXyx","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"dfckE":[function(require,module,exports) {
// src/mutationObserver.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MutationObserver", ()=>MutationObserver);
var _mutationJs = require("./mutation.js");
var _notifyManagerJs = require("./notifyManager.js");
var _subscribableJs = require("./subscribable.js");
var _utilsJs = require("./utils.js");
var MutationObserver = class extends (0, _subscribableJs.Subscribable) {
    #client;
    #currentResult = void 0;
    #currentMutation;
    #mutateOptions;
    constructor(client, options){
        super();
        this.#client = client;
        this.setOptions(options);
        this.bindMethods();
        this.#updateResult();
    }
    bindMethods() {
        this.mutate = this.mutate.bind(this);
        this.reset = this.reset.bind(this);
    }
    setOptions(options) {
        const prevOptions = this.options;
        this.options = this.#client.defaultMutationOptions(options);
        if (!(0, _utilsJs.shallowEqualObjects)(this.options, prevOptions)) this.#client.getMutationCache().notify({
            type: "observerOptionsUpdated",
            mutation: this.#currentMutation,
            observer: this
        });
        if (prevOptions?.mutationKey && this.options.mutationKey && (0, _utilsJs.hashKey)(prevOptions.mutationKey) !== (0, _utilsJs.hashKey)(this.options.mutationKey)) this.reset();
        else if (this.#currentMutation?.state.status === "pending") this.#currentMutation.setOptions(this.options);
    }
    onUnsubscribe() {
        if (!this.hasListeners()) this.#currentMutation?.removeObserver(this);
    }
    onMutationUpdate(action) {
        this.#updateResult();
        this.#notify(action);
    }
    getCurrentResult() {
        return this.#currentResult;
    }
    reset() {
        this.#currentMutation?.removeObserver(this);
        this.#currentMutation = void 0;
        this.#updateResult();
        this.#notify();
    }
    mutate(variables, options) {
        this.#mutateOptions = options;
        this.#currentMutation?.removeObserver(this);
        this.#currentMutation = this.#client.getMutationCache().build(this.#client, this.options);
        this.#currentMutation.addObserver(this);
        return this.#currentMutation.execute(variables);
    }
    #updateResult() {
        const state = this.#currentMutation?.state ?? (0, _mutationJs.getDefaultState)();
        this.#currentResult = {
            ...state,
            isPending: state.status === "pending",
            isSuccess: state.status === "success",
            isError: state.status === "error",
            isIdle: state.status === "idle",
            mutate: this.mutate,
            reset: this.reset
        };
    }
    #notify(action) {
        (0, _notifyManagerJs.notifyManager).batch(()=>{
            if (this.#mutateOptions && this.hasListeners()) {
                const variables = this.#currentResult.variables;
                const context = this.#currentResult.context;
                if (action?.type === "success") {
                    this.#mutateOptions.onSuccess?.(action.data, variables, context);
                    this.#mutateOptions.onSettled?.(action.data, null, variables, context);
                } else if (action?.type === "error") {
                    this.#mutateOptions.onError?.(action.error, variables, context);
                    this.#mutateOptions.onSettled?.(void 0, action.error, variables, context);
                }
            }
            this.listeners.forEach((listener)=>{
                listener(this.#currentResult);
            });
        });
    }
};

},{"./mutation.js":"7TKev","./notifyManager.js":"3ja1i","./subscribable.js":"1iYUD","./utils.js":"jWMgc","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"7D9aY":[function(require,module,exports) {
// src/useQueryClient.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useQueryClient", ()=>useQueryClient);
var _vueDemi = require("vue-demi");
var _utilsJs = require("./utils.js");
function useQueryClient(id = "") {
    if (!(0, _vueDemi.hasInjectionContext)()) throw new Error("vue-query hooks can only be used inside setup() function or functions that support injection context.");
    const key = (0, _utilsJs.getClientKey)(id);
    const queryClient = (0, _vueDemi.inject)(key);
    if (!queryClient) throw new Error("No 'queryClient' found in Vue context, use 'VueQueryPlugin' to properly initialize the library.");
    return queryClient;
}

},{"vue-demi":"3tEal","./utils.js":"ebQnF","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"3tEal":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "set", ()=>set);
parcelHelpers.export(exports, "del", ()=>del);
parcelHelpers.export(exports, "Vue", ()=>_vue);
parcelHelpers.export(exports, "Vue2", ()=>Vue2);
parcelHelpers.export(exports, "isVue2", ()=>isVue2);
parcelHelpers.export(exports, "isVue3", ()=>isVue3);
parcelHelpers.export(exports, "install", ()=>install);
var _vue = require("vue");
parcelHelpers.exportAll(_vue, exports);
var isVue2 = false;
var isVue3 = true;
var Vue2 = undefined;
function install() {}
function set(target, key, val) {
    if (Array.isArray(target)) {
        target.length = Math.max(target.length, key);
        target.splice(key, 1, val);
        return val;
    }
    target[key] = val;
    return val;
}
function del(target, key) {
    if (Array.isArray(target)) {
        target.splice(key, 1);
        return;
    }
    delete target[key];
}

},{"vue":"gCTam","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"ebQnF":[function(require,module,exports) {
// src/utils.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VUE_QUERY_CLIENT", ()=>VUE_QUERY_CLIENT);
parcelHelpers.export(exports, "cloneDeep", ()=>cloneDeep);
parcelHelpers.export(exports, "cloneDeepUnref", ()=>cloneDeepUnref);
parcelHelpers.export(exports, "getClientKey", ()=>getClientKey);
parcelHelpers.export(exports, "shouldThrowError", ()=>shouldThrowError);
parcelHelpers.export(exports, "updateState", ()=>updateState);
var _vueDemi = require("vue-demi");
var VUE_QUERY_CLIENT = "VUE_QUERY_CLIENT";
function getClientKey(key) {
    const suffix = key ? `:${key}` : "";
    return `${VUE_QUERY_CLIENT}${suffix}`;
}
function updateState(state, update) {
    Object.keys(state).forEach((key)=>{
        state[key] = update[key];
    });
}
function _cloneDeep(value, customize, currentKey = "", currentLevel = 0) {
    if (customize) {
        const result = customize(value, currentKey, currentLevel);
        if (result === void 0 && (0, _vueDemi.isRef)(value)) return result;
        if (result !== void 0) return result;
    }
    if (Array.isArray(value)) return value.map((val, index)=>_cloneDeep(val, customize, String(index), currentLevel + 1));
    if (typeof value === "object" && isPlainObject(value)) {
        const entries = Object.entries(value).map(([key, val])=>[
                key,
                _cloneDeep(val, customize, key, currentLevel + 1)
            ]);
        return Object.fromEntries(entries);
    }
    return value;
}
function cloneDeep(value, customize) {
    return _cloneDeep(value, customize);
}
function cloneDeepUnref(obj, unrefGetters = false) {
    return cloneDeep(obj, (val, key, level)=>{
        if (level === 1 && key === "queryKey") return cloneDeepUnref(val, true);
        if (unrefGetters && isFunction(val)) return cloneDeepUnref(val(), unrefGetters);
        if ((0, _vueDemi.isRef)(val)) return cloneDeepUnref((0, _vueDemi.unref)(val), unrefGetters);
        return void 0;
    });
}
function isPlainObject(value) {
    if (Object.prototype.toString.call(value) !== "[object Object]") return false;
    const prototype = Object.getPrototypeOf(value);
    return prototype === null || prototype === Object.prototype;
}
function isFunction(value) {
    return typeof value === "function";
}
function shouldThrowError(throwOnError, params) {
    if (typeof throwOnError === "function") return throwOnError(...params);
    return !!throwOnError;
}

},{"vue-demi":"3tEal","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"gBnAn":[function(require,module,exports) {
// src/vueQueryPlugin.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VueQueryPlugin", ()=>VueQueryPlugin);
var _vueDemi = require("vue-demi");
var _queryCore = require("@tanstack/query-core");
var _queryClientJs = require("./queryClient.js");
var _utilsJs = require("./utils.js");
var _devtoolsJs = require("./devtools/devtools.js");
var VueQueryPlugin = {
    install: (app, options = {})=>{
        const clientKey = (0, _utilsJs.getClientKey)(options.queryClientKey);
        let client;
        if ("queryClient" in options && options.queryClient) client = options.queryClient;
        else {
            const clientConfig = "queryClientConfig" in options ? options.queryClientConfig : void 0;
            client = new (0, _queryClientJs.QueryClient)(clientConfig);
        }
        if (!(0, _queryCore.isServer)) client.mount();
        let persisterUnmount = ()=>{};
        if (options.clientPersister) {
            client.isRestoring.value = true;
            const [unmount, promise] = options.clientPersister(client);
            persisterUnmount = unmount;
            promise.then(()=>{
                client.isRestoring.value = false;
                options.clientPersisterOnSuccess?.(client);
            });
        }
        const cleanup = ()=>{
            client.unmount();
            persisterUnmount();
        };
        if (app.onUnmount) app.onUnmount(cleanup);
        else {
            const originalUnmount = app.unmount;
            app.unmount = function vueQueryUnmount() {
                cleanup();
                originalUnmount();
            };
        }
        if (0, _vueDemi.isVue2) app.mixin({
            beforeCreate () {
                if (!this._provided) {
                    const provideCache = {};
                    Object.defineProperty(this, "_provided", {
                        get: ()=>provideCache,
                        set: (v)=>Object.assign(provideCache, v)
                    });
                }
                this._provided[clientKey] = client;
                if (this === this.$root && options.enableDevtoolsV6Plugin) (0, _devtoolsJs.setupDevtools)(this, client);
            }
        });
        else {
            app.provide(clientKey, client);
            if (options.enableDevtoolsV6Plugin) (0, _devtoolsJs.setupDevtools)(app, client);
        }
    }
};

},{"vue-demi":"3tEal","@tanstack/query-core":"iqSRy","./queryClient.js":"jfPQT","./utils.js":"ebQnF","./devtools/devtools.js":"7ADjG","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"jfPQT":[function(require,module,exports) {
// src/queryClient.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "QueryClient", ()=>QueryClient);
var _vueDemi = require("vue-demi");
var _queryCore = require("@tanstack/query-core");
var _utilsJs = require("./utils.js");
var _queryCacheJs = require("./queryCache.js");
var _mutationCacheJs = require("./mutationCache.js");
var QueryClient = class extends (0, _queryCore.QueryClient) {
    constructor(config = {}){
        const vueQueryConfig = {
            defaultOptions: config.defaultOptions,
            queryCache: config.queryCache || new (0, _queryCacheJs.QueryCache)(),
            mutationCache: config.mutationCache || new (0, _mutationCacheJs.MutationCache)()
        };
        super(vueQueryConfig);
        this.isRestoring = (0, _vueDemi.ref)(false);
    }
    isFetching(filters = {}) {
        return super.isFetching((0, _utilsJs.cloneDeepUnref)(filters));
    }
    isMutating(filters = {}) {
        return super.isMutating((0, _utilsJs.cloneDeepUnref)(filters));
    }
    getQueryData(queryKey) {
        return super.getQueryData((0, _utilsJs.cloneDeepUnref)(queryKey));
    }
    ensureQueryData(options) {
        return super.ensureQueryData((0, _utilsJs.cloneDeepUnref)(options));
    }
    getQueriesData(filters) {
        return super.getQueriesData((0, _utilsJs.cloneDeepUnref)(filters));
    }
    setQueryData(queryKey, updater, options = {}) {
        return super.setQueryData((0, _utilsJs.cloneDeepUnref)(queryKey), updater, (0, _utilsJs.cloneDeepUnref)(options));
    }
    setQueriesData(filters, updater, options = {}) {
        return super.setQueriesData((0, _utilsJs.cloneDeepUnref)(filters), updater, (0, _utilsJs.cloneDeepUnref)(options));
    }
    getQueryState(queryKey) {
        return super.getQueryState((0, _utilsJs.cloneDeepUnref)(queryKey));
    }
    removeQueries(filters = {}) {
        return super.removeQueries((0, _utilsJs.cloneDeepUnref)(filters));
    }
    resetQueries(filters = {}, options = {}) {
        return super.resetQueries((0, _utilsJs.cloneDeepUnref)(filters), (0, _utilsJs.cloneDeepUnref)(options));
    }
    cancelQueries(filters = {}, options = {}) {
        return super.cancelQueries((0, _utilsJs.cloneDeepUnref)(filters), (0, _utilsJs.cloneDeepUnref)(options));
    }
    invalidateQueries(filters = {}, options = {}) {
        return new Promise((resolve)=>{
            setTimeout(async ()=>{
                await super.invalidateQueries((0, _utilsJs.cloneDeepUnref)(filters), (0, _utilsJs.cloneDeepUnref)(options));
                resolve();
            }, 0);
        });
    }
    refetchQueries(filters = {}, options = {}) {
        return super.refetchQueries((0, _utilsJs.cloneDeepUnref)(filters), (0, _utilsJs.cloneDeepUnref)(options));
    }
    fetchQuery(options) {
        return super.fetchQuery((0, _utilsJs.cloneDeepUnref)(options));
    }
    prefetchQuery(options) {
        return super.prefetchQuery((0, _utilsJs.cloneDeepUnref)(options));
    }
    fetchInfiniteQuery(options) {
        return super.fetchInfiniteQuery((0, _utilsJs.cloneDeepUnref)(options));
    }
    prefetchInfiniteQuery(options) {
        return super.prefetchInfiniteQuery((0, _utilsJs.cloneDeepUnref)(options));
    }
    setDefaultOptions(options) {
        super.setDefaultOptions((0, _utilsJs.cloneDeepUnref)(options));
    }
    setQueryDefaults(queryKey, options) {
        super.setQueryDefaults((0, _utilsJs.cloneDeepUnref)(queryKey), (0, _utilsJs.cloneDeepUnref)(options));
    }
    getQueryDefaults(queryKey) {
        return super.getQueryDefaults((0, _utilsJs.cloneDeepUnref)(queryKey));
    }
    setMutationDefaults(mutationKey, options) {
        super.setMutationDefaults((0, _utilsJs.cloneDeepUnref)(mutationKey), (0, _utilsJs.cloneDeepUnref)(options));
    }
    getMutationDefaults(mutationKey) {
        return super.getMutationDefaults((0, _utilsJs.cloneDeepUnref)(mutationKey));
    }
};

},{"vue-demi":"3tEal","@tanstack/query-core":"iqSRy","./utils.js":"ebQnF","./queryCache.js":"er4nq","./mutationCache.js":"7uWun","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"er4nq":[function(require,module,exports) {
// src/queryCache.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "QueryCache", ()=>QueryCache);
var _queryCore = require("@tanstack/query-core");
var _utilsJs = require("./utils.js");
var QueryCache = class extends (0, _queryCore.QueryCache) {
    find(filters) {
        return super.find((0, _utilsJs.cloneDeepUnref)(filters));
    }
    findAll(filters = {}) {
        return super.findAll((0, _utilsJs.cloneDeepUnref)(filters));
    }
};

},{"@tanstack/query-core":"iqSRy","./utils.js":"ebQnF","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"7uWun":[function(require,module,exports) {
// src/mutationCache.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MutationCache", ()=>MutationCache);
var _queryCore = require("@tanstack/query-core");
var _utilsJs = require("./utils.js");
var MutationCache = class extends (0, _queryCore.MutationCache) {
    find(filters) {
        return super.find((0, _utilsJs.cloneDeepUnref)(filters));
    }
    findAll(filters = {}) {
        return super.findAll((0, _utilsJs.cloneDeepUnref)(filters));
    }
};

},{"@tanstack/query-core":"iqSRy","./utils.js":"ebQnF","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"7ADjG":[function(require,module,exports) {
// src/devtools/devtools.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "setupDevtools", ()=>setupDevtools);
var _devtoolsApi = require("@vue/devtools-api");
var _matchSorterUtils = require("@tanstack/match-sorter-utils");
var _queryCore = require("@tanstack/query-core");
var _utilsJs = require("./utils.js");
var pluginId = "vue-query";
var pluginName = "Vue Query";
function setupDevtools(app, queryClient) {
    (0, _devtoolsApi.setupDevtoolsPlugin)({
        id: pluginId,
        label: pluginName,
        packageName: "vue-query",
        homepage: "https://tanstack.com/query/latest",
        logo: "https://raw.githubusercontent.com/TanStack/query/main/packages/vue-query/media/vue-query.svg",
        app,
        settings: {
            baseSort: {
                type: "choice",
                component: "button-group",
                label: "Sort Cache Entries",
                options: [
                    {
                        label: "ASC",
                        value: 1
                    },
                    {
                        label: "DESC",
                        value: -1
                    }
                ],
                defaultValue: 1
            },
            sortFn: {
                type: "choice",
                label: "Sort Function",
                options: Object.keys((0, _utilsJs.sortFns)).map((key)=>({
                        label: key,
                        value: key
                    })),
                defaultValue: Object.keys((0, _utilsJs.sortFns))[0]
            },
            onlineMode: {
                type: "choice",
                component: "button-group",
                label: "Online mode",
                options: [
                    {
                        label: "Online",
                        value: 1
                    },
                    {
                        label: "Offline",
                        value: 0
                    }
                ],
                defaultValue: 1
            }
        }
    }, (api)=>{
        const initialSettings = api.getSettings();
        (0, _queryCore.onlineManager).setOnline(Boolean(initialSettings.onlineMode.valueOf()));
        const queryCache = queryClient.getQueryCache();
        api.addInspector({
            id: pluginId,
            label: pluginName,
            icon: "api",
            nodeActions: [
                {
                    icon: "file_download",
                    tooltip: "Refetch",
                    action: (queryHash)=>{
                        queryCache.get(queryHash)?.fetch();
                    }
                },
                {
                    icon: "alarm",
                    tooltip: "Invalidate",
                    action: (queryHash)=>{
                        const query = queryCache.get(queryHash);
                        queryClient.invalidateQueries(query);
                    }
                },
                {
                    icon: "settings_backup_restore",
                    tooltip: "Reset",
                    action: (queryHash)=>{
                        queryCache.get(queryHash)?.reset();
                    }
                },
                {
                    icon: "delete",
                    tooltip: "Remove",
                    action: (queryHash)=>{
                        const query = queryCache.get(queryHash);
                        queryCache.remove(query);
                    }
                },
                {
                    icon: "hourglass_empty",
                    tooltip: "Force loading",
                    action: (queryHash)=>{
                        const query = queryCache.get(queryHash);
                        query.setState({
                            data: void 0,
                            status: "pending"
                        });
                    }
                },
                {
                    icon: "error_outline",
                    tooltip: "Force error",
                    action: (queryHash)=>{
                        const query = queryCache.get(queryHash);
                        query.setState({
                            data: void 0,
                            status: "error",
                            error: new Error("Unknown error from devtools")
                        });
                    }
                }
            ]
        });
        api.addTimelineLayer({
            id: pluginId,
            label: pluginName,
            color: 16767308
        });
        queryCache.subscribe((event)=>{
            api.sendInspectorTree(pluginId);
            api.sendInspectorState(pluginId);
            const queryEvents = [
                "added",
                "removed",
                "updated"
            ];
            if (queryEvents.includes(event.type)) api.addTimelineEvent({
                layerId: pluginId,
                event: {
                    title: event.type,
                    subtitle: event.query.queryHash,
                    time: api.now(),
                    data: {
                        queryHash: event.query.queryHash,
                        ...event
                    }
                }
            });
        });
        api.on.setPluginSettings((payload)=>{
            if (payload.key === "onlineMode") (0, _queryCore.onlineManager).setOnline(Boolean(payload.newValue));
        });
        api.on.getInspectorTree((payload)=>{
            if (payload.inspectorId === pluginId) {
                const queries = queryCache.getAll();
                const settings = api.getSettings();
                const filtered = payload.filter ? queries.filter((item)=>(0, _matchSorterUtils.rankItem)(item.queryHash, payload.filter).passed) : [
                    ...queries
                ];
                const sorted = filtered.sort((a, b)=>(0, _utilsJs.sortFns)[settings.sortFn](a, b) * settings.baseSort);
                const nodes = sorted.map((query)=>{
                    const stateLabel = (0, _utilsJs.getQueryStateLabel)(query);
                    return {
                        id: query.queryHash,
                        label: query.queryHash,
                        tags: [
                            {
                                label: `${stateLabel} [${query.getObserversCount()}]`,
                                textColor: (0, _utilsJs.getQueryStatusFg)(query),
                                backgroundColor: (0, _utilsJs.getQueryStatusBg)(query)
                            }
                        ]
                    };
                });
                payload.rootNodes = nodes;
            }
        });
        api.on.getInspectorState((payload)=>{
            if (payload.inspectorId === pluginId) {
                const query = queryCache.get(payload.nodeId);
                if (!query) return;
                payload.state = {
                    " Query Details": [
                        {
                            key: "Query key",
                            value: query.queryHash
                        },
                        {
                            key: "Query status",
                            value: (0, _utilsJs.getQueryStateLabel)(query)
                        },
                        {
                            key: "Observers",
                            value: query.getObserversCount()
                        },
                        {
                            key: "Last Updated",
                            value: new Date(query.state.dataUpdatedAt).toLocaleTimeString()
                        }
                    ],
                    "Data Explorer": [
                        {
                            key: "Data",
                            value: query.state.data
                        }
                    ],
                    "Query Explorer": [
                        {
                            key: "Query",
                            value: query
                        }
                    ]
                };
            }
        });
    });
}

},{"@vue/devtools-api":"mub9B","@tanstack/match-sorter-utils":"hB823","@tanstack/query-core":"iqSRy","./utils.js":"i5Ra1","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"hB823":[function(require,module,exports) {
/**
   * match-sorter-utils
   *
   * Copyright (c) TanStack
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "compareItems", ()=>compareItems);
parcelHelpers.export(exports, "rankItem", ()=>rankItem);
parcelHelpers.export(exports, "rankings", ()=>rankings);
const characterMap = {
    "\xc0": "A",
    "\xc1": "A",
    "\xc2": "A",
    "\xc3": "A",
    "\xc4": "A",
    "\xc5": "A",
    \u1EA4: "A",
    \u1EAE: "A",
    \u1EB2: "A",
    \u1EB4: "A",
    \u1EB6: "A",
    "\xc6": "AE",
    \u1EA6: "A",
    \u1EB0: "A",
    \u0202: "A",
    "\xc7": "C",
    \u1E08: "C",
    "\xc8": "E",
    "\xc9": "E",
    "\xca": "E",
    "\xcb": "E",
    \u1EBE: "E",
    \u1E16: "E",
    \u1EC0: "E",
    \u1E14: "E",
    \u1E1C: "E",
    \u0206: "E",
    "\xcc": "I",
    "\xcd": "I",
    "\xce": "I",
    "\xcf": "I",
    \u1E2E: "I",
    \u020A: "I",
    "\xd0": "D",
    "\xd1": "N",
    "\xd2": "O",
    "\xd3": "O",
    "\xd4": "O",
    "\xd5": "O",
    "\xd6": "O",
    "\xd8": "O",
    \u1ED0: "O",
    \u1E4C: "O",
    \u1E52: "O",
    \u020E: "O",
    "\xd9": "U",
    "\xda": "U",
    "\xdb": "U",
    "\xdc": "U",
    "\xdd": "Y",
    "\xe0": "a",
    "\xe1": "a",
    "\xe2": "a",
    "\xe3": "a",
    "\xe4": "a",
    "\xe5": "a",
    \u1EA5: "a",
    \u1EAF: "a",
    \u1EB3: "a",
    \u1EB5: "a",
    \u1EB7: "a",
    "\xe6": "ae",
    \u1EA7: "a",
    \u1EB1: "a",
    \u0203: "a",
    "\xe7": "c",
    \u1E09: "c",
    "\xe8": "e",
    "\xe9": "e",
    "\xea": "e",
    "\xeb": "e",
    \u1EBF: "e",
    \u1E17: "e",
    \u1EC1: "e",
    \u1E15: "e",
    \u1E1D: "e",
    \u0207: "e",
    "\xec": "i",
    "\xed": "i",
    "\xee": "i",
    "\xef": "i",
    \u1E2F: "i",
    \u020B: "i",
    "\xf0": "d",
    "\xf1": "n",
    "\xf2": "o",
    "\xf3": "o",
    "\xf4": "o",
    "\xf5": "o",
    "\xf6": "o",
    "\xf8": "o",
    \u1ED1: "o",
    \u1E4D: "o",
    \u1E53: "o",
    \u020F: "o",
    "\xf9": "u",
    "\xfa": "u",
    "\xfb": "u",
    "\xfc": "u",
    "\xfd": "y",
    "\xff": "y",
    \u0100: "A",
    \u0101: "a",
    \u0102: "A",
    \u0103: "a",
    \u0104: "A",
    \u0105: "a",
    \u0106: "C",
    \u0107: "c",
    \u0108: "C",
    \u0109: "c",
    \u010A: "C",
    \u010B: "c",
    \u010C: "C",
    \u010D: "c",
    C\u0306: "C",
    c\u0306: "c",
    \u010E: "D",
    \u010F: "d",
    \u0110: "D",
    \u0111: "d",
    \u0112: "E",
    \u0113: "e",
    \u0114: "E",
    \u0115: "e",
    \u0116: "E",
    \u0117: "e",
    \u0118: "E",
    \u0119: "e",
    \u011A: "E",
    \u011B: "e",
    \u011C: "G",
    \u01F4: "G",
    \u011D: "g",
    \u01F5: "g",
    \u011E: "G",
    \u011F: "g",
    \u0120: "G",
    \u0121: "g",
    \u0122: "G",
    \u0123: "g",
    \u0124: "H",
    \u0125: "h",
    \u0126: "H",
    \u0127: "h",
    \u1E2A: "H",
    \u1E2B: "h",
    \u0128: "I",
    \u0129: "i",
    \u012A: "I",
    \u012B: "i",
    \u012C: "I",
    \u012D: "i",
    \u012E: "I",
    \u012F: "i",
    \u0130: "I",
    \u0131: "i",
    \u0132: "IJ",
    \u0133: "ij",
    \u0134: "J",
    \u0135: "j",
    \u0136: "K",
    \u0137: "k",
    \u1E30: "K",
    \u1E31: "k",
    K\u0306: "K",
    k\u0306: "k",
    \u0139: "L",
    \u013A: "l",
    \u013B: "L",
    \u013C: "l",
    \u013D: "L",
    \u013E: "l",
    \u013F: "L",
    \u0140: "l",
    \u0141: "l",
    \u0142: "l",
    \u1E3E: "M",
    \u1E3F: "m",
    M\u0306: "M",
    m\u0306: "m",
    \u0143: "N",
    \u0144: "n",
    \u0145: "N",
    \u0146: "n",
    \u0147: "N",
    \u0148: "n",
    \u0149: "n",
    N\u0306: "N",
    n\u0306: "n",
    \u014C: "O",
    \u014D: "o",
    \u014E: "O",
    \u014F: "o",
    \u0150: "O",
    \u0151: "o",
    \u0152: "OE",
    \u0153: "oe",
    P\u0306: "P",
    p\u0306: "p",
    \u0154: "R",
    \u0155: "r",
    \u0156: "R",
    \u0157: "r",
    \u0158: "R",
    \u0159: "r",
    R\u0306: "R",
    r\u0306: "r",
    \u0212: "R",
    \u0213: "r",
    \u015A: "S",
    \u015B: "s",
    \u015C: "S",
    \u015D: "s",
    \u015E: "S",
    \u0218: "S",
    \u0219: "s",
    \u015F: "s",
    \u0160: "S",
    \u0161: "s",
    \u0162: "T",
    \u0163: "t",
    \u021B: "t",
    \u021A: "T",
    \u0164: "T",
    \u0165: "t",
    \u0166: "T",
    \u0167: "t",
    T\u0306: "T",
    t\u0306: "t",
    \u0168: "U",
    \u0169: "u",
    \u016A: "U",
    \u016B: "u",
    \u016C: "U",
    \u016D: "u",
    \u016E: "U",
    \u016F: "u",
    \u0170: "U",
    \u0171: "u",
    \u0172: "U",
    \u0173: "u",
    \u0216: "U",
    \u0217: "u",
    V\u0306: "V",
    v\u0306: "v",
    \u0174: "W",
    \u0175: "w",
    \u1E82: "W",
    \u1E83: "w",
    X\u0306: "X",
    x\u0306: "x",
    \u0176: "Y",
    \u0177: "y",
    \u0178: "Y",
    Y\u0306: "Y",
    y\u0306: "y",
    \u0179: "Z",
    \u017A: "z",
    \u017B: "Z",
    \u017C: "z",
    \u017D: "Z",
    \u017E: "z",
    \u017F: "s",
    \u0192: "f",
    \u01A0: "O",
    \u01A1: "o",
    \u01AF: "U",
    \u01B0: "u",
    \u01CD: "A",
    \u01CE: "a",
    \u01CF: "I",
    \u01D0: "i",
    \u01D1: "O",
    \u01D2: "o",
    \u01D3: "U",
    \u01D4: "u",
    \u01D5: "U",
    \u01D6: "u",
    \u01D7: "U",
    \u01D8: "u",
    \u01D9: "U",
    \u01DA: "u",
    \u01DB: "U",
    \u01DC: "u",
    \u1EE8: "U",
    \u1EE9: "u",
    \u1E78: "U",
    \u1E79: "u",
    \u01FA: "A",
    \u01FB: "a",
    \u01FC: "AE",
    \u01FD: "ae",
    \u01FE: "O",
    \u01FF: "o",
    "\xde": "TH",
    "\xfe": "th",
    \u1E54: "P",
    \u1E55: "p",
    \u1E64: "S",
    \u1E65: "s",
    X\u0301: "X",
    x\u0301: "x",
    \u0403: "\u0413",
    \u0453: "\u0433",
    \u040C: "\u041A",
    \u045C: "\u043A",
    A\u030B: "A",
    a\u030B: "a",
    E\u030B: "E",
    e\u030B: "e",
    I\u030B: "I",
    i\u030B: "i",
    \u01F8: "N",
    \u01F9: "n",
    \u1ED2: "O",
    \u1ED3: "o",
    \u1E50: "O",
    \u1E51: "o",
    \u1EEA: "U",
    \u1EEB: "u",
    \u1E80: "W",
    \u1E81: "w",
    \u1EF2: "Y",
    \u1EF3: "y",
    \u0200: "A",
    \u0201: "a",
    \u0204: "E",
    \u0205: "e",
    \u0208: "I",
    \u0209: "i",
    \u020C: "O",
    \u020D: "o",
    \u0210: "R",
    \u0211: "r",
    \u0214: "U",
    \u0215: "u",
    B\u030C: "B",
    b\u030C: "b",
    \u010C\u0323: "C",
    \u010D\u0323: "c",
    "\xca\u030C": "E",
    "\xea\u030C": "e",
    F\u030C: "F",
    f\u030C: "f",
    \u01E6: "G",
    \u01E7: "g",
    \u021E: "H",
    \u021F: "h",
    J\u030C: "J",
    \u01F0: "j",
    \u01E8: "K",
    \u01E9: "k",
    M\u030C: "M",
    m\u030C: "m",
    P\u030C: "P",
    p\u030C: "p",
    Q\u030C: "Q",
    q\u030C: "q",
    \u0158\u0329: "R",
    \u0159\u0329: "r",
    \u1E66: "S",
    \u1E67: "s",
    V\u030C: "V",
    v\u030C: "v",
    W\u030C: "W",
    w\u030C: "w",
    X\u030C: "X",
    x\u030C: "x",
    Y\u030C: "Y",
    y\u030C: "y",
    A\u0327: "A",
    a\u0327: "a",
    B\u0327: "B",
    b\u0327: "b",
    \u1E10: "D",
    \u1E11: "d",
    \u0228: "E",
    \u0229: "e",
    \u0190\u0327: "E",
    \u025B\u0327: "e",
    \u1E28: "H",
    \u1E29: "h",
    I\u0327: "I",
    i\u0327: "i",
    \u0197\u0327: "I",
    \u0268\u0327: "i",
    M\u0327: "M",
    m\u0327: "m",
    O\u0327: "O",
    o\u0327: "o",
    Q\u0327: "Q",
    q\u0327: "q",
    U\u0327: "U",
    u\u0327: "u",
    X\u0327: "X",
    x\u0327: "x",
    Z\u0327: "Z",
    z\u0327: "z"
};
const chars = Object.keys(characterMap).join("|");
const allAccents = new RegExp(chars, "g");
function removeAccents(str) {
    return str.replace(allAccents, (match)=>{
        return characterMap[match];
    });
}
/**
 * @name match-sorter
 * @license MIT license.
 * @copyright (c) 2099 Kent C. Dodds
 * @author Kent C. Dodds <me@kentcdodds.com> (https://kentcdodds.com)
 */ const rankings = {
    CASE_SENSITIVE_EQUAL: 7,
    EQUAL: 6,
    STARTS_WITH: 5,
    WORD_STARTS_WITH: 4,
    CONTAINS: 3,
    ACRONYM: 2,
    MATCHES: 1,
    NO_MATCH: 0
};
/**
 * Gets the highest ranking for value for the given item based on its values for the given keys
 * @param {*} item - the item to rank
 * @param {String} value - the value to rank against
 * @param {Object} options - options to control the ranking
 * @return {{rank: Number, accessorIndex: Number, accessorThreshold: Number}} - the highest ranking
 */ function rankItem(item, value, options) {
    var _options$threshold;
    options = options || {};
    options.threshold = (_options$threshold = options.threshold) != null ? _options$threshold : rankings.MATCHES;
    if (!options.accessors) {
        // if keys is not specified, then we assume the item given is ready to be matched
        const rank = getMatchRanking(item, value, options);
        return {
            // ends up being duplicate of 'item' in matches but consistent
            rankedValue: item,
            rank,
            accessorIndex: -1,
            accessorThreshold: options.threshold,
            passed: rank >= options.threshold
        };
    }
    const valuesToRank = getAllValuesToRank(item, options.accessors);
    const rankingInfo = {
        rankedValue: item,
        rank: rankings.NO_MATCH,
        accessorIndex: -1,
        accessorThreshold: options.threshold,
        passed: false
    };
    for(let i = 0; i < valuesToRank.length; i++){
        const rankValue = valuesToRank[i];
        let newRank = getMatchRanking(rankValue.itemValue, value, options);
        const { minRanking, maxRanking, threshold = options.threshold } = rankValue.attributes;
        if (newRank < minRanking && newRank >= rankings.MATCHES) newRank = minRanking;
        else if (newRank > maxRanking) newRank = maxRanking;
        newRank = Math.min(newRank, maxRanking);
        if (newRank >= threshold && newRank > rankingInfo.rank) {
            rankingInfo.rank = newRank;
            rankingInfo.passed = true;
            rankingInfo.accessorIndex = i;
            rankingInfo.accessorThreshold = threshold;
            rankingInfo.rankedValue = rankValue.itemValue;
        }
    }
    return rankingInfo;
}
/**
 * Gives a rankings score based on how well the two strings match.
 * @param {String} testString - the string to test against
 * @param {String} stringToRank - the string to rank
 * @param {Object} options - options for the match (like keepDiacritics for comparison)
 * @returns {Number} the ranking for how well stringToRank matches testString
 */ function getMatchRanking(testString, stringToRank, options) {
    testString = prepareValueForComparison(testString, options);
    stringToRank = prepareValueForComparison(stringToRank, options);
    // too long
    if (stringToRank.length > testString.length) return rankings.NO_MATCH;
    // case sensitive equals
    if (testString === stringToRank) return rankings.CASE_SENSITIVE_EQUAL;
    // Lower casing before further comparison
    testString = testString.toLowerCase();
    stringToRank = stringToRank.toLowerCase();
    // case insensitive equals
    if (testString === stringToRank) return rankings.EQUAL;
    // starts with
    if (testString.startsWith(stringToRank)) return rankings.STARTS_WITH;
    // word starts with
    if (testString.includes(` ${stringToRank}`)) return rankings.WORD_STARTS_WITH;
    // contains
    if (testString.includes(stringToRank)) return rankings.CONTAINS;
    else if (stringToRank.length === 1) // If the only character in the given stringToRank
    //   isn't even contained in the testString, then
    //   it's definitely not a match.
    return rankings.NO_MATCH;
    // acronym
    if (getAcronym(testString).includes(stringToRank)) return rankings.ACRONYM;
    // will return a number between rankings.MATCHES and
    // rankings.MATCHES + 1 depending  on how close of a match it is.
    return getClosenessRanking(testString, stringToRank);
}
/**
 * Generates an acronym for a string.
 *
 * @param {String} string the string for which to produce the acronym
 * @returns {String} the acronym
 */ function getAcronym(string) {
    let acronym = "";
    const wordsInString = string.split(" ");
    wordsInString.forEach((wordInString)=>{
        const splitByHyphenWords = wordInString.split("-");
        splitByHyphenWords.forEach((splitByHyphenWord)=>{
            acronym += splitByHyphenWord.substr(0, 1);
        });
    });
    return acronym;
}
/**
 * Returns a score based on how spread apart the
 * characters from the stringToRank are within the testString.
 * A number close to rankings.MATCHES represents a loose match. A number close
 * to rankings.MATCHES + 1 represents a tighter match.
 * @param {String} testString - the string to test against
 * @param {String} stringToRank - the string to rank
 * @returns {Number} the number between rankings.MATCHES and
 * rankings.MATCHES + 1 for how well stringToRank matches testString
 */ function getClosenessRanking(testString, stringToRank) {
    let matchingInOrderCharCount = 0;
    let charNumber = 0;
    function findMatchingCharacter(matchChar, string, index) {
        for(let j = index, J = string.length; j < J; j++){
            const stringChar = string[j];
            if (stringChar === matchChar) {
                matchingInOrderCharCount += 1;
                return j + 1;
            }
        }
        return -1;
    }
    function getRanking(spread) {
        const spreadPercentage = 1 / spread;
        const inOrderPercentage = matchingInOrderCharCount / stringToRank.length;
        const ranking = rankings.MATCHES + inOrderPercentage * spreadPercentage;
        return ranking;
    }
    const firstIndex = findMatchingCharacter(stringToRank[0], testString, 0);
    if (firstIndex < 0) return rankings.NO_MATCH;
    charNumber = firstIndex;
    for(let i = 1, I = stringToRank.length; i < I; i++){
        const matchChar = stringToRank[i];
        charNumber = findMatchingCharacter(matchChar, testString, charNumber);
        const found = charNumber > -1;
        if (!found) return rankings.NO_MATCH;
    }
    const spread = charNumber - firstIndex;
    return getRanking(spread);
}
/**
 * Sorts items that have a rank, index, and accessorIndex
 * @param {Object} a - the first item to sort
 * @param {Object} b - the second item to sort
 * @return {Number} -1 if a should come first, 1 if b should come first, 0 if equal
 */ function compareItems(a, b) {
    return a.rank === b.rank ? 0 : a.rank > b.rank ? -1 : 1;
}
/**
 * Prepares value for comparison by stringifying it, removing diacritics (if specified)
 * @param {String} value - the value to clean
 * @param {Object} options - {keepDiacritics: whether to remove diacritics}
 * @return {String} the prepared value
 */ function prepareValueForComparison(value, _ref) {
    let { keepDiacritics } = _ref;
    // value might not actually be a string at this point (we don't get to choose)
    // so part of preparing the value for comparison is ensure that it is a string
    value = `${value}`; // toString
    if (!keepDiacritics) value = removeAccents(value);
    return value;
}
/**
 * Gets value for key in item at arbitrarily nested keypath
 * @param {Object} item - the item
 * @param {Object|Function} key - the potentially nested keypath or property callback
 * @return {Array} - an array containing the value(s) at the nested keypath
 */ function getItemValues(item, accessor) {
    let accessorFn = accessor;
    if (typeof accessor === "object") accessorFn = accessor.accessor;
    const value = accessorFn(item);
    // because `value` can also be undefined
    if (value == null) return [];
    if (Array.isArray(value)) return value;
    return [
        String(value)
    ];
}
/**
 * Gets all the values for the given keys in the given item and returns an array of those values
 * @param item - the item from which the values will be retrieved
 * @param keys - the keys to use to retrieve the values
 * @return objects with {itemValue, attributes}
 */ function getAllValuesToRank(item, accessors) {
    const allValues = [];
    for(let j = 0, J = accessors.length; j < J; j++){
        const accessor = accessors[j];
        const attributes = getAccessorAttributes(accessor);
        const itemValues = getItemValues(item, accessor);
        for(let i = 0, I = itemValues.length; i < I; i++)allValues.push({
            itemValue: itemValues[i],
            attributes
        });
    }
    return allValues;
}
const defaultKeyAttributes = {
    maxRanking: Infinity,
    minRanking: -Infinity
};
/**
 * Gets all the attributes for the given accessor
 * @param accessor - the accessor from which the attributes will be retrieved
 * @return object containing the accessor's attributes
 */ function getAccessorAttributes(accessor) {
    if (typeof accessor === "function") return defaultKeyAttributes;
    return {
        ...defaultKeyAttributes,
        ...accessor
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"i5Ra1":[function(require,module,exports) {
// src/devtools/utils.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getQueryState", ()=>getQueryState);
parcelHelpers.export(exports, "getQueryStateLabel", ()=>getQueryStateLabel);
parcelHelpers.export(exports, "getQueryStatusBg", ()=>getQueryStatusBg);
parcelHelpers.export(exports, "getQueryStatusFg", ()=>getQueryStatusFg);
parcelHelpers.export(exports, "sortFns", ()=>sortFns);
function getQueryState(query) {
    if (query.state.fetchStatus === "fetching") return 0 /* Fetching */ ;
    if (query.state.fetchStatus === "paused") return 4 /* Paused */ ;
    if (!query.getObserversCount()) return 3 /* Inactive */ ;
    if (query.isStale()) return 2 /* Stale */ ;
    return 1 /* Fresh */ ;
}
function getQueryStateLabel(query) {
    const queryState = getQueryState(query);
    if (queryState === 0 /* Fetching */ ) return "fetching";
    if (queryState === 4 /* Paused */ ) return "paused";
    if (queryState === 2 /* Stale */ ) return "stale";
    if (queryState === 3 /* Inactive */ ) return "inactive";
    return "fresh";
}
function getQueryStatusFg(query) {
    const queryState = getQueryState(query);
    if (queryState === 2 /* Stale */ ) return 0;
    return 16777215;
}
function getQueryStatusBg(query) {
    const queryState = getQueryState(query);
    if (queryState === 0 /* Fetching */ ) return 27647;
    if (queryState === 4 /* Paused */ ) return 9193963;
    if (queryState === 2 /* Stale */ ) return 16757248;
    if (queryState === 3 /* Inactive */ ) return 4148832;
    return 33575;
}
var queryHashSort = (a, b)=>a.queryHash.localeCompare(b.queryHash);
var dateSort = (a, b)=>a.state.dataUpdatedAt < b.state.dataUpdatedAt ? 1 : -1;
var statusAndDateSort = (a, b)=>{
    if (getQueryState(a) === getQueryState(b)) return dateSort(a, b);
    return getQueryState(a) > getQueryState(b) ? 1 : -1;
};
var sortFns = {
    "Status > Last Updated": statusAndDateSort,
    "Query Hash": queryHashSort,
    "Last Updated": dateSort
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"dBhPp":[function(require,module,exports) {
// src/useQuery.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useQuery", ()=>useQuery);
var _queryCore = require("@tanstack/query-core");
var _useBaseQueryJs = require("./useBaseQuery.js");
function useQuery(options, queryClient) {
    return (0, _useBaseQueryJs.useBaseQuery)((0, _queryCore.QueryObserver), options, queryClient);
}

},{"@tanstack/query-core":"iqSRy","./useBaseQuery.js":"2Vle5","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"2Vle5":[function(require,module,exports) {
// src/useBaseQuery.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useBaseQuery", ()=>useBaseQuery);
var _vueDemi = require("vue-demi");
var _useQueryClientJs = require("./useQueryClient.js");
var _utilsJs = require("./utils.js");
function useBaseQuery(Observer, options, queryClient) {
    if (!(0, _vueDemi.getCurrentScope)()) console.warn('vue-query composable like "useQuery()" should only be used inside a "setup()" function or a running effect scope. They might otherwise lead to memory leaks.');
    const client = queryClient || (0, _useQueryClientJs.useQueryClient)();
    const defaultedOptions = (0, _vueDemi.computed)(()=>{
        const clonedOptions = (0, _utilsJs.cloneDeepUnref)(options);
        if (typeof clonedOptions.enabled === "function") clonedOptions.enabled = clonedOptions.enabled();
        const defaulted = client.defaultQueryOptions(clonedOptions);
        defaulted._optimisticResults = client.isRestoring.value ? "isRestoring" : "optimistic";
        return defaulted;
    });
    const observer = new Observer(client, defaultedOptions.value);
    const state = (0, _vueDemi.reactive)(observer.getCurrentResult());
    let unsubscribe = ()=>{};
    (0, _vueDemi.watch)(client.isRestoring, (isRestoring)=>{
        if (!isRestoring) {
            unsubscribe();
            unsubscribe = observer.subscribe((result)=>{
                (0, _utilsJs.updateState)(state, result);
            });
        }
    }, {
        immediate: true
    });
    const updater = ()=>{
        observer.setOptions(defaultedOptions.value);
        (0, _utilsJs.updateState)(state, observer.getCurrentResult());
    };
    (0, _vueDemi.watch)(defaultedOptions, updater);
    (0, _vueDemi.onScopeDispose)(()=>{
        unsubscribe();
    });
    const refetch = (...args)=>{
        updater();
        return state.refetch(...args);
    };
    const suspense = ()=>{
        return new Promise((resolve, reject)=>{
            let stopWatch = ()=>{};
            const run = ()=>{
                if (defaultedOptions.value.enabled !== false) {
                    observer.setOptions(defaultedOptions.value);
                    const optimisticResult = observer.getOptimisticResult(defaultedOptions.value);
                    if (optimisticResult.isStale) {
                        stopWatch();
                        observer.fetchOptimistic(defaultedOptions.value).then(resolve, (error)=>{
                            if ((0, _utilsJs.shouldThrowError)(defaultedOptions.value.throwOnError, [
                                error,
                                observer.getCurrentQuery()
                            ])) reject(error);
                            else resolve(observer.getCurrentResult());
                        });
                    } else {
                        stopWatch();
                        resolve(optimisticResult);
                    }
                }
            };
            run();
            stopWatch = (0, _vueDemi.watch)(defaultedOptions, run);
        });
    };
    (0, _vueDemi.watch)(()=>state.error, (error)=>{
        if (state.isError && !state.isFetching && (0, _utilsJs.shouldThrowError)(defaultedOptions.value.throwOnError, [
            error,
            observer.getCurrentQuery()
        ])) throw error;
    });
    const object = (0, _vueDemi.toRefs)((0, _vueDemi.readonly)(state));
    for(const key in state)if (typeof state[key] === "function") object[key] = state[key];
    object.suspense = suspense;
    object.refetch = refetch;
    return object;
}

},{"vue-demi":"3tEal","./useQueryClient.js":"7D9aY","./utils.js":"ebQnF","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"19lY6":[function(require,module,exports) {
// src/useMutation.ts
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useMutation", ()=>useMutation);
var _vueDemi = require("vue-demi");
var _queryCore = require("@tanstack/query-core");
var _utilsJs = require("./utils.js");
var _useQueryClientJs = require("./useQueryClient.js");
function useMutation(mutationOptions, queryClient) {
    if (!(0, _vueDemi.getCurrentScope)()) console.warn('vue-query composable like "useQuery()" should only be used inside a "setup()" function or a running effect scope. They might otherwise lead to memory leaks.');
    const client = queryClient || (0, _useQueryClientJs.useQueryClient)();
    const options = (0, _vueDemi.computed)(()=>{
        return client.defaultMutationOptions((0, _utilsJs.cloneDeepUnref)(mutationOptions));
    });
    const observer = new (0, _queryCore.MutationObserver)(client, options.value);
    const state = (0, _vueDemi.reactive)(observer.getCurrentResult());
    const unsubscribe = observer.subscribe((result)=>{
        (0, _utilsJs.updateState)(state, result);
    });
    const mutate = (variables, mutateOptions)=>{
        observer.mutate(variables, mutateOptions).catch(()=>{});
    };
    (0, _vueDemi.watch)(options, ()=>{
        observer.setOptions(options.value);
    });
    (0, _vueDemi.onScopeDispose)(()=>{
        unsubscribe();
    });
    const resultRefs = (0, _vueDemi.toRefs)((0, _vueDemi.readonly)(state));
    (0, _vueDemi.watch)(()=>state.error, (error)=>{
        if (error && (0, _utilsJs.shouldThrowError)(options.value.throwOnError, [
            error
        ])) throw error;
    });
    return {
        ...resultRefs,
        mutate,
        mutateAsync: state.mutate,
        reset: state.reset
    };
}

},{"vue-demi":"3tEal","@tanstack/query-core":"iqSRy","./utils.js":"ebQnF","./useQueryClient.js":"7D9aY","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"2IIHS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
let script;
let initialize = ()=>{
    script = require("230e3264727c758f");
    if (script.__esModule) script = script.default;
    script.render = require("afae823331491f67").render;
    script.__cssModules = require("e1e8b018c842a273").default;
    require("17aaf7019aa03763").default(script);
    script.__scopeId = "data-v-ab35b9";
    script.__file = "/Users/rm/Local Sites/wp-juggler-server/app/public/wp-content/plugins/wp-juggler-server/src/control-panel/vue/ExpandedRow.vue";
};
initialize();
if (module.hot) {
    script.__hmrId = "ab35b9-hmr";
    module.hot.accept(()=>{
        setTimeout(()=>{
            initialize();
            if (!__VUE_HMR_RUNTIME__.createRecord("ab35b9-hmr", script)) __VUE_HMR_RUNTIME__.reload("ab35b9-hmr", script);
        }, 0);
    });
}
exports.default = script;

},{"230e3264727c758f":"2hCQK","afae823331491f67":"hEEXg","e1e8b018c842a273":"dFAqL","17aaf7019aa03763":"9akjZ","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"2hCQK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _storeJs = require("./store.js");
var _vue = require("vue");
var _vueQuery = require("@tanstack/vue-query");
exports.default = {
    __name: "ExpandedRow",
    props: [
        "columns",
        "item"
    ],
    setup (__props, { expose: __expose }) {
        __expose();
        const store = (0, _storeJs.useWpjsStore)();
        const props = __props;
        const uptimePeriods = [
            {
                title: "Last 24 hours"
            },
            {
                title: "Last 7 days"
            },
            {
                title: "Last 30 days"
            },
            {
                title: "Last 3 months"
            }
        ];
        const selectedUptimePeriod = (0, _vue.ref)(0);
        function selectUptimePeriod(ind) {
            selectedUptimePeriod.value = ind;
        }
        function openThemesPlugins(site) {
            store.activatedSite = site;
            store.activatedThemes = true;
        }
        function openHealth(site) {
            store.activatedSite = site;
            store.activatedHealth = true;
        }
        function openUptime(site) {
            store.activatedSite = site;
            store.activatedUptime = true;
        }
        function openNotices(site) {
            store.activatedSite = site;
            store.activatedNotices = true;
        }
        const themesButton = (0, _vue.ref)(null);
        const noticesButton = (0, _vue.ref)(null);
        const __returned__ = {
            store,
            props,
            uptimePeriods,
            selectedUptimePeriod,
            selectUptimePeriod,
            openThemesPlugins,
            openHealth,
            openUptime,
            openNotices,
            themesButton,
            noticesButton,
            get useWpjsStore () {
                return 0, _storeJs.useWpjsStore;
            },
            onMounted: (0, _vue.onMounted),
            computed: (0, _vue.computed),
            ref: (0, _vue.ref),
            BaseTransitionPropsValidators: (0, _vue.BaseTransitionPropsValidators),
            get useQueryClient () {
                return 0, _vueQuery.useQueryClient;
            },
            get useQuery () {
                return 0, _vueQuery.useQuery;
            },
            get useMutation () {
                return 0, _vueQuery.useMutation;
            }
        };
        Object.defineProperty(__returned__, "__isScriptSetup", {
            enumerable: false,
            value: true
        });
        return __returned__;
    }
};

},{"./store.js":"7kZ8m","vue":"gCTam","@tanstack/vue-query":"aI0Kc","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"hEEXg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "render", ()=>render);
var _vue = require("vue");
const _hoisted_1 = [
    "colspan"
];
const _hoisted_2 = {
    class: "text-h5 font-weight-bold mt-5 mb-3"
};
const _hoisted_3 = {
    class: "text-h6 text-medium-emphasis font-weight-regular mb-5"
};
const _hoisted_4 = {
    key: 0
};
const _hoisted_5 = {
    key: 1
};
const _hoisted_6 = {
    class: "d-flex py-3 justify-space-between pt-0"
};
const _hoisted_7 = /*#__PURE__*/ (0, _vue.createElementVNode)("div", null, "Critical Improvements", -1 /* HOISTED */ );
const _hoisted_8 = /*#__PURE__*/ (0, _vue.createElementVNode)("div", null, "Recommended Improvements", -1 /* HOISTED */ );
const _hoisted_9 = {
    class: "d-flex py-3 justify-space-between pt-0"
};
const _hoisted_10 = {
    key: 0
};
const _hoisted_11 = {
    key: 1
};
const _hoisted_12 = {
    key: 2
};
const _hoisted_13 = {
    class: "d-flex py-3 justify-space-between pb-0"
};
const _hoisted_14 = {
    class: "mr-5"
};
const _hoisted_15 = {
    class: "d-flex py-3 justify-space-between"
};
const _hoisted_16 = /*#__PURE__*/ (0, _vue.createElementVNode)("div", null, "Failed frontend checks", -1 /* HOISTED */ );
const _hoisted_17 = /*#__PURE__*/ (0, _vue.createElementVNode)("div", null, "Failed API checks", -1 /* HOISTED */ );
const _hoisted_18 = {
    key: 0
};
const _hoisted_19 = {
    key: 1
};
const _hoisted_20 = {
    class: "d-flex py-3 justify-space-between pt-0"
};
const _hoisted_21 = /*#__PURE__*/ (0, _vue.createElementVNode)("div", null, "Theme updates available", -1 /* HOISTED */ );
const _hoisted_22 = /*#__PURE__*/ (0, _vue.createElementVNode)("div", null, "Plugin updates available", -1 /* HOISTED */ );
const _hoisted_23 = {
    class: "d-flex py-3 justify-space-between pt-0"
};
const _hoisted_24 = {
    key: 0
};
const _hoisted_25 = {
    key: 1
};
const _hoisted_26 = {
    key: 2
};
const _hoisted_27 = {
    key: 0
};
const _hoisted_28 = {
    key: 1
};
const _hoisted_29 = {
    class: "d-flex py-3 justify-space-between pt-0"
};
const _hoisted_30 = /*#__PURE__*/ (0, _vue.createElementVNode)("div", null, "Number of notices", -1 /* HOISTED */ );
const _hoisted_31 = /*#__PURE__*/ (0, _vue.createElementVNode)("div", {
    class: "d-flex py-3 justify-space-between pt-0"
}, [
    /*#__PURE__*/ (0, _vue.createElementVNode)("div", null, "\xa0")
], -1 /* HOISTED */ );
function render(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_v_icon = (0, _vue.resolveComponent)("v-icon");
    const _component_v_card_item = (0, _vue.resolveComponent)("v-card-item");
    const _component_v_col = (0, _vue.resolveComponent)("v-col");
    const _component_v_row = (0, _vue.resolveComponent)("v-row");
    const _component_v_card_text = (0, _vue.resolveComponent)("v-card-text");
    const _component_v_divider = (0, _vue.resolveComponent)("v-divider");
    const _component_v_btn = (0, _vue.resolveComponent)("v-btn");
    const _component_v_card = (0, _vue.resolveComponent)("v-card");
    const _component_v_list_item_title = (0, _vue.resolveComponent)("v-list-item-title");
    const _component_v_list_item = (0, _vue.resolveComponent)("v-list-item");
    const _component_v_list = (0, _vue.resolveComponent)("v-list");
    const _component_v_menu = (0, _vue.resolveComponent)("v-menu");
    return (0, _vue.openBlock)(), (0, _vue.createElementBlock)("tr", null, [
        (0, _vue.createElementVNode)("td", {
            colspan: $setup.props.columns?.length + 1
        }, [
            (0, _vue.createElementVNode)("div", _hoisted_2, (0, _vue.toDisplayString)($setup.props.item?.id) + " " + (0, _vue.toDisplayString)($setup.props.item?.title), 1 /* TEXT */ ),
            (0, _vue.createElementVNode)("div", _hoisted_3, [
                $setup.props.item.wp_juggler_multisite ? ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_icon, {
                    key: 0,
                    color: "#2196f3",
                    icon: "mdi-checkbox-multiple-blank-outline",
                    size: "large",
                    class: "rm-4 mr-4"
                })) : (0, _vue.createCommentVNode)("v-if", true),
                (0, _vue.createTextVNode)(" " + (0, _vue.toDisplayString)($setup.props.item.wp_juggler_server_site_url), 1 /* TEXT */ )
            ]),
            (0, _vue.createVNode)(_component_v_row, {
                class: "mb-4"
            }, {
                default: (0, _vue.withCtx)(()=>[
                        (0, _vue.createVNode)(_component_v_col, {
                            cols: "12",
                            md: "3"
                        }, {
                            default: (0, _vue.withCtx)(()=>[
                                    (0, _vue.createVNode)(_component_v_card, null, {
                                        default: (0, _vue.withCtx)(()=>[
                                                (0, _vue.createVNode)(_component_v_card_item, {
                                                    title: "Site Health"
                                                }, {
                                                    subtitle: (0, _vue.withCtx)(()=>[
                                                            $setup.props.item.wp_juggler_health_data_timestamp ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_4, [
                                                                (0, _vue.createVNode)(_component_v_icon, {
                                                                    class: "me-1 pb-1",
                                                                    icon: "mdi-refresh",
                                                                    size: "18"
                                                                }),
                                                                (0, _vue.createTextVNode)(" " + (0, _vue.toDisplayString)($setup.props.item.wp_juggler_health_data_timestamp), 1 /* TEXT */ )
                                                            ])) : ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_5, [
                                                                (0, _vue.createVNode)(_component_v_icon, {
                                                                    class: "me-1 pb-1",
                                                                    icon: "mdi-refresh",
                                                                    size: "18"
                                                                }),
                                                                (0, _vue.createTextVNode)(" Never ")
                                                            ]))
                                                        ]),
                                                    _: 1 /* STABLE */ 
                                                }),
                                                (0, _vue.createVNode)(_component_v_card_text, {
                                                    class: "text-medium-emphasis"
                                                }, {
                                                    default: (0, _vue.withCtx)(()=>[
                                                            (0, _vue.createElementVNode)("div", _hoisted_6, [
                                                                (0, _vue.createElementVNode)("div", null, [
                                                                    _hoisted_7,
                                                                    (0, _vue.createVNode)(_component_v_row, {
                                                                        align: "center",
                                                                        "no-gutters": ""
                                                                    }, {
                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                $setup.props.item.wp_juggler_health_data ? ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_col, {
                                                                                    key: 0,
                                                                                    class: "text-h2",
                                                                                    cols: "12"
                                                                                }, {
                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                            (0, _vue.createTextVNode)((0, _vue.toDisplayString)($setup.props.item.wp_juggler_health_data.critical), 1 /* TEXT */ )
                                                                                        ]),
                                                                                    _: 1 /* STABLE */ 
                                                                                })) : ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_col, {
                                                                                    key: 1,
                                                                                    class: "text-h2",
                                                                                    cols: "12"
                                                                                }, {
                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                            (0, _vue.createTextVNode)(" ? ")
                                                                                        ]),
                                                                                    _: 1 /* STABLE */ 
                                                                                }))
                                                                            ]),
                                                                        _: 1 /* STABLE */ 
                                                                    })
                                                                ]),
                                                                (0, _vue.createElementVNode)("div", null, [
                                                                    _hoisted_8,
                                                                    (0, _vue.createVNode)(_component_v_row, {
                                                                        align: "center",
                                                                        "no-gutters": ""
                                                                    }, {
                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                $setup.props.item.wp_juggler_health_data ? ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_col, {
                                                                                    key: 0,
                                                                                    class: "text-h2",
                                                                                    cols: "12"
                                                                                }, {
                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                            (0, _vue.createTextVNode)((0, _vue.toDisplayString)($setup.props.item.wp_juggler_health_data.recommended), 1 /* TEXT */ )
                                                                                        ]),
                                                                                    _: 1 /* STABLE */ 
                                                                                })) : ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_col, {
                                                                                    key: 1,
                                                                                    class: "text-h2",
                                                                                    cols: "12"
                                                                                }, {
                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                            (0, _vue.createTextVNode)(" ? ")
                                                                                        ]),
                                                                                    _: 1 /* STABLE */ 
                                                                                }))
                                                                            ]),
                                                                        _: 1 /* STABLE */ 
                                                                    })
                                                                ])
                                                            ]),
                                                            (0, _vue.createElementVNode)("div", _hoisted_9, [
                                                                $setup.props.item.wp_juggler_wordpress_version ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_10, "WordPress version: " + (0, _vue.toDisplayString)($setup.props.item.wp_juggler_wordpress_version), 1 /* TEXT */ )) : ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_11, "WordPress version: ?")),
                                                                $setup.props.item.wp_juggler_core_checksum ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_12, [
                                                                    (0, _vue.createTextVNode)(" Checksum "),
                                                                    !$setup.props.item.wp_juggler_core_checksum.errors ? ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_icon, {
                                                                        key: 0,
                                                                        color: "success",
                                                                        icon: "mdi-check-bold",
                                                                        size: "large",
                                                                        class: "rm-4"
                                                                    })) : ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_icon, {
                                                                        key: 1,
                                                                        color: "error",
                                                                        icon: "mdi-alert-outline",
                                                                        size: "large",
                                                                        class: "rm-4"
                                                                    })),
                                                                    (0, _vue.createTextVNode)(" " + (0, _vue.toDisplayString)($setup.props.item.wp_juggler_core_checksum_timestamp), 1 /* TEXT */ )
                                                                ])) : (0, _vue.createCommentVNode)("v-if", true)
                                                            ])
                                                        ]),
                                                    _: 1 /* STABLE */ 
                                                }),
                                                (0, _vue.createVNode)(_component_v_divider),
                                                (0, _vue.createVNode)(_component_v_btn, {
                                                    text: "Full Report",
                                                    "append-icon": "mdi-chevron-right",
                                                    class: "mb-5 ml-5 mt-4 text-none text-caption",
                                                    onClick: _cache[0] || (_cache[0] = ($event)=>$setup.openHealth($setup.props.item))
                                                })
                                            ]),
                                        _: 1 /* STABLE */ 
                                    })
                                ]),
                            _: 1 /* STABLE */ 
                        }),
                        (0, _vue.createVNode)(_component_v_col, {
                            cols: "12",
                            md: "3"
                        }, {
                            default: (0, _vue.withCtx)(()=>[
                                    (0, _vue.createVNode)(_component_v_card, null, {
                                        default: (0, _vue.withCtx)(()=>[
                                                (0, _vue.createElementVNode)("div", _hoisted_13, [
                                                    (0, _vue.createVNode)(_component_v_card_item, {
                                                        title: "Uptime Cron"
                                                    }),
                                                    (0, _vue.createElementVNode)("div", _hoisted_14, [
                                                        (0, _vue.createVNode)(_component_v_menu, {
                                                            "open-on-hover": ""
                                                        }, {
                                                            activator: (0, _vue.withCtx)(({ props })=>[
                                                                    (0, _vue.createVNode)(_component_v_btn, (0, _vue.mergeProps)(props, {
                                                                        class: "text-none text-caption"
                                                                    }), {
                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                (0, _vue.createTextVNode)((0, _vue.toDisplayString)($setup.uptimePeriods[$setup.selectedUptimePeriod].title), 1 /* TEXT */ )
                                                                            ]),
                                                                        _: 2 /* DYNAMIC */ 
                                                                    }, 1040 /* FULL_PROPS, DYNAMIC_SLOTS */ )
                                                                ]),
                                                            default: (0, _vue.withCtx)(()=>[
                                                                    (0, _vue.createVNode)(_component_v_list, null, {
                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                ((0, _vue.openBlock)(), (0, _vue.createElementBlock)((0, _vue.Fragment), null, (0, _vue.renderList)($setup.uptimePeriods, (item, index)=>{
                                                                                    return (0, _vue.createVNode)(_component_v_list_item, {
                                                                                        key: index,
                                                                                        onClick: ($event)=>$setup.selectUptimePeriod(index)
                                                                                    }, {
                                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                                (0, _vue.createVNode)(_component_v_list_item_title, null, {
                                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                                            (0, _vue.createTextVNode)((0, _vue.toDisplayString)(item.title), 1 /* TEXT */ )
                                                                                                        ]),
                                                                                                    _: 2 /* DYNAMIC */ 
                                                                                                }, 1024 /* DYNAMIC_SLOTS */ )
                                                                                            ]),
                                                                                        _: 2 /* DYNAMIC */ 
                                                                                    }, 1032 /* PROPS, DYNAMIC_SLOTS */ , [
                                                                                        "onClick"
                                                                                    ]);
                                                                                }), 64 /* STABLE_FRAGMENT */ ))
                                                                            ]),
                                                                        _: 1 /* STABLE */ 
                                                                    })
                                                                ]),
                                                            _: 1 /* STABLE */ 
                                                        })
                                                    ])
                                                ]),
                                                (0, _vue.createVNode)(_component_v_card_text, {
                                                    class: "text-medium-emphasis pt-0 mb-4"
                                                }, {
                                                    default: (0, _vue.withCtx)(()=>[
                                                            (0, _vue.createElementVNode)("div", _hoisted_15, [
                                                                (0, _vue.createElementVNode)("div", null, [
                                                                    _hoisted_16,
                                                                    (0, _vue.createVNode)(_component_v_row, {
                                                                        align: "center",
                                                                        "no-gutters": ""
                                                                    }, {
                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                (0, _vue.createVNode)(_component_v_col, {
                                                                                    class: "text-h2",
                                                                                    cols: "12"
                                                                                }, {
                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                            (0, _vue.createTextVNode)((0, _vue.toDisplayString)($props.item.wp_juggler_uptime_stats.summary[$setup.selectedUptimePeriod].front), 1 /* TEXT */ )
                                                                                        ]),
                                                                                    _: 1 /* STABLE */ 
                                                                                })
                                                                            ]),
                                                                        _: 1 /* STABLE */ 
                                                                    })
                                                                ]),
                                                                (0, _vue.createElementVNode)("div", null, [
                                                                    _hoisted_17,
                                                                    (0, _vue.createVNode)(_component_v_row, {
                                                                        align: "center",
                                                                        "no-gutters": ""
                                                                    }, {
                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                (0, _vue.createVNode)(_component_v_col, {
                                                                                    class: "text-h2",
                                                                                    cols: "12"
                                                                                }, {
                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                            (0, _vue.createTextVNode)((0, _vue.toDisplayString)($props.item.wp_juggler_uptime_stats.summary[$setup.selectedUptimePeriod].api), 1 /* TEXT */ )
                                                                                        ]),
                                                                                    _: 1 /* STABLE */ 
                                                                                })
                                                                            ]),
                                                                        _: 1 /* STABLE */ 
                                                                    })
                                                                ])
                                                            ]),
                                                            (0, _vue.createElementVNode)("div", null, "Total failed checks: " + (0, _vue.toDisplayString)(parseInt($props.item.wp_juggler_uptime_stats.summary[$setup.selectedUptimePeriod].front) + parseInt($props.item.wp_juggler_uptime_stats.summary[$setup.selectedUptimePeriod].api)), 1 /* TEXT */ )
                                                        ]),
                                                    _: 1 /* STABLE */ 
                                                }),
                                                (0, _vue.createVNode)(_component_v_divider),
                                                (0, _vue.createVNode)(_component_v_btn, {
                                                    text: "Full Report",
                                                    "append-icon": "mdi-chevron-right",
                                                    class: "mb-5 ml-5 mt-4 text-none text-caption",
                                                    onClick: _cache[1] || (_cache[1] = ($event)=>$setup.openUptime($setup.props.item))
                                                })
                                            ]),
                                        _: 1 /* STABLE */ 
                                    })
                                ]),
                            _: 1 /* STABLE */ 
                        }),
                        (0, _vue.createVNode)(_component_v_col, {
                            cols: "12",
                            md: "3"
                        }, {
                            default: (0, _vue.withCtx)(()=>[
                                    (0, _vue.createVNode)(_component_v_card, null, {
                                        default: (0, _vue.withCtx)(()=>[
                                                (0, _vue.createVNode)(_component_v_card_item, {
                                                    title: "Themes & Plugins"
                                                }, {
                                                    subtitle: (0, _vue.withCtx)(()=>[
                                                            $setup.props.item.wp_juggler_plugins_summary_timestamp ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_18, [
                                                                (0, _vue.createVNode)(_component_v_icon, {
                                                                    class: "me-1 pb-1",
                                                                    icon: "mdi-refresh",
                                                                    size: "18"
                                                                }),
                                                                (0, _vue.createTextVNode)(" " + (0, _vue.toDisplayString)($setup.props.item.wp_juggler_plugins_summary_timestamp), 1 /* TEXT */ )
                                                            ])) : ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_19, [
                                                                (0, _vue.createVNode)(_component_v_icon, {
                                                                    class: "me-1 pb-1",
                                                                    icon: "mdi-refresh",
                                                                    size: "18"
                                                                }),
                                                                (0, _vue.createTextVNode)(" Never ")
                                                            ]))
                                                        ]),
                                                    _: 1 /* STABLE */ 
                                                }),
                                                (0, _vue.createVNode)(_component_v_card_text, {
                                                    class: "text-medium-emphasis"
                                                }, {
                                                    default: (0, _vue.withCtx)(()=>[
                                                            (0, _vue.createElementVNode)("div", _hoisted_20, [
                                                                (0, _vue.createElementVNode)("div", null, [
                                                                    _hoisted_21,
                                                                    (0, _vue.createVNode)(_component_v_row, {
                                                                        align: "center",
                                                                        "no-gutters": ""
                                                                    }, {
                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                $setup.props.item?.wp_juggler_themes_summary ? ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_col, {
                                                                                    key: 0,
                                                                                    class: "text-h2",
                                                                                    cols: "12"
                                                                                }, {
                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                            (0, _vue.createTextVNode)((0, _vue.toDisplayString)($setup.props.item.wp_juggler_themes_summary.updates_num), 1 /* TEXT */ )
                                                                                        ]),
                                                                                    _: 1 /* STABLE */ 
                                                                                })) : ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_col, {
                                                                                    key: 1,
                                                                                    class: "text-h2",
                                                                                    cols: "12"
                                                                                }, {
                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                            (0, _vue.createTextVNode)(" ? ")
                                                                                        ]),
                                                                                    _: 1 /* STABLE */ 
                                                                                }))
                                                                            ]),
                                                                        _: 1 /* STABLE */ 
                                                                    })
                                                                ]),
                                                                (0, _vue.createElementVNode)("div", null, [
                                                                    _hoisted_22,
                                                                    (0, _vue.createVNode)(_component_v_row, {
                                                                        align: "center",
                                                                        "no-gutters": ""
                                                                    }, {
                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                $setup.props.item?.wp_juggler_plugins_summary ? ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_col, {
                                                                                    key: 0,
                                                                                    class: "text-h2",
                                                                                    cols: "12"
                                                                                }, {
                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                            (0, _vue.createTextVNode)((0, _vue.toDisplayString)($setup.props.item.wp_juggler_plugins_summary.updates_num), 1 /* TEXT */ )
                                                                                        ]),
                                                                                    _: 1 /* STABLE */ 
                                                                                })) : ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_col, {
                                                                                    key: 1,
                                                                                    class: "text-h2",
                                                                                    cols: "12"
                                                                                }, {
                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                            (0, _vue.createTextVNode)(" ? ")
                                                                                        ]),
                                                                                    _: 1 /* STABLE */ 
                                                                                }))
                                                                            ]),
                                                                        _: 1 /* STABLE */ 
                                                                    })
                                                                ])
                                                            ]),
                                                            (0, _vue.createElementVNode)("div", _hoisted_23, [
                                                                $setup.props.item?.wp_juggler_plugins_summary ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_24, "Recorded vulnerabilities: " + (0, _vue.toDisplayString)($setup.props.item.wp_juggler_plugins_summary.vulnerabilities_num), 1 /* TEXT */ )) : ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_25, "Recorded vulnerabilities: ?")),
                                                                $setup.props.item.wp_juggler_plugins_checksum ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_26, [
                                                                    (0, _vue.createTextVNode)(" Checksum "),
                                                                    $setup.props.item.wp_juggler_plugins_checksum.failures == 0 ? ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_icon, {
                                                                        key: 0,
                                                                        color: "success",
                                                                        icon: "mdi-check-bold",
                                                                        size: "large",
                                                                        class: "rm-4"
                                                                    })) : ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_icon, {
                                                                        key: 1,
                                                                        color: "error",
                                                                        icon: "mdi-alert-outline",
                                                                        size: "large",
                                                                        class: "rm-4"
                                                                    })),
                                                                    (0, _vue.createTextVNode)(" " + (0, _vue.toDisplayString)($setup.props.item.wp_juggler_plugins_checksum_timestamp), 1 /* TEXT */ )
                                                                ])) : (0, _vue.createCommentVNode)("v-if", true)
                                                            ])
                                                        ]),
                                                    _: 1 /* STABLE */ 
                                                }),
                                                (0, _vue.createVNode)(_component_v_divider),
                                                (0, _vue.createVNode)(_component_v_btn, {
                                                    text: "Manage Themes & Plugins",
                                                    "append-icon": "mdi-chevron-right",
                                                    class: "mb-5 ml-5 mt-4 text-none text-caption",
                                                    onClick: _cache[2] || (_cache[2] = ($event)=>$setup.openThemesPlugins($setup.props.item)),
                                                    ref: "themesButton"
                                                }, null, 512 /* NEED_PATCH */ )
                                            ]),
                                        _: 1 /* STABLE */ 
                                    })
                                ]),
                            _: 1 /* STABLE */ 
                        }),
                        (0, _vue.createVNode)(_component_v_col, {
                            cols: "12",
                            md: "3"
                        }, {
                            default: (0, _vue.withCtx)(()=>[
                                    (0, _vue.createVNode)(_component_v_card, null, {
                                        default: (0, _vue.withCtx)(()=>[
                                                (0, _vue.createVNode)(_component_v_card_item, {
                                                    title: "Notices"
                                                }, {
                                                    subtitle: (0, _vue.withCtx)(()=>[
                                                            $setup.props.item.wp_juggler_plugins_summary_timestamp ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_27, [
                                                                (0, _vue.createVNode)(_component_v_icon, {
                                                                    class: "me-1 pb-1",
                                                                    icon: "mdi-refresh",
                                                                    size: "18"
                                                                }),
                                                                (0, _vue.createTextVNode)(" " + (0, _vue.toDisplayString)($setup.props.item.wp_juggler_plugins_summary_timestamp), 1 /* TEXT */ )
                                                            ])) : ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_28, [
                                                                (0, _vue.createVNode)(_component_v_icon, {
                                                                    class: "me-1 pb-1",
                                                                    icon: "mdi-refresh",
                                                                    size: "18"
                                                                }),
                                                                (0, _vue.createTextVNode)(" Never ")
                                                            ]))
                                                        ]),
                                                    _: 1 /* STABLE */ 
                                                }),
                                                (0, _vue.createVNode)(_component_v_card_text, {
                                                    class: "text-medium-emphasis"
                                                }, {
                                                    default: (0, _vue.withCtx)(()=>[
                                                            (0, _vue.createElementVNode)("div", _hoisted_29, [
                                                                (0, _vue.createElementVNode)("div", null, [
                                                                    _hoisted_30,
                                                                    (0, _vue.createVNode)(_component_v_row, {
                                                                        align: "center",
                                                                        "no-gutters": ""
                                                                    }, {
                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                $setup.props.item?.wp_juggler_themes_summary ? ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_col, {
                                                                                    key: 0,
                                                                                    class: "text-h2",
                                                                                    cols: "12"
                                                                                }, {
                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                            (0, _vue.createTextVNode)((0, _vue.toDisplayString)($setup.props.item.wp_juggler_themes_summary.updates_num), 1 /* TEXT */ )
                                                                                        ]),
                                                                                    _: 1 /* STABLE */ 
                                                                                })) : ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_col, {
                                                                                    key: 1,
                                                                                    class: "text-h2",
                                                                                    cols: "12"
                                                                                }, {
                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                            (0, _vue.createTextVNode)(" ? ")
                                                                                        ]),
                                                                                    _: 1 /* STABLE */ 
                                                                                }))
                                                                            ]),
                                                                        _: 1 /* STABLE */ 
                                                                    })
                                                                ])
                                                            ]),
                                                            _hoisted_31
                                                        ]),
                                                    _: 1 /* STABLE */ 
                                                }),
                                                (0, _vue.createVNode)(_component_v_divider),
                                                (0, _vue.createVNode)(_component_v_btn, {
                                                    text: "All notices",
                                                    "append-icon": "mdi-chevron-right",
                                                    class: "mb-5 ml-5 mt-4 text-none text-caption",
                                                    onClick: _cache[3] || (_cache[3] = ($event)=>$setup.openNotices($setup.props.item)),
                                                    ref: "noticesButton"
                                                }, null, 512 /* NEED_PATCH */ )
                                            ]),
                                        _: 1 /* STABLE */ 
                                    })
                                ]),
                            _: 1 /* STABLE */ 
                        })
                    ]),
                _: 1 /* STABLE */ 
            })
        ], 8 /* PROPS */ , _hoisted_1)
    ]);
}
if (module.hot) module.hot.accept(()=>{
    __VUE_HMR_RUNTIME__.rerender("ab35b9-hmr", render);
});

},{"vue":"gCTam","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"dFAqL":[function() {},{}],"9akjZ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
let NOOP = ()=>{};
exports.default = (script)=>{};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"9DdWS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
let script;
let initialize = ()=>{
    script = require("e2cee6db6576530e");
    if (script.__esModule) script = script.default;
    script.render = require("14fb851e6d9f8c39").render;
    require("81e5f303e5990112").default(script);
    script.__scopeId = "data-v-a14a40";
    script.__file = "/Users/rm/Local Sites/wp-juggler-server/app/public/wp-content/plugins/wp-juggler-server/src/control-panel/vue/ThemesPluginsPanel.vue";
};
initialize();
if (module.hot) {
    script.__hmrId = "a14a40-hmr";
    module.hot.accept(()=>{
        setTimeout(()=>{
            initialize();
            if (!__VUE_HMR_RUNTIME__.createRecord("a14a40-hmr", script)) __VUE_HMR_RUNTIME__.reload("a14a40-hmr", script);
        }, 0);
    });
}
exports.default = script;

},{"e2cee6db6576530e":"i8MiM","14fb851e6d9f8c39":"1QZ4k","81e5f303e5990112":"kAFhE","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"i8MiM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _storeJs = require("./store.js");
var _vue = require("vue");
var _vueQuery = require("@tanstack/vue-query");
exports.default = {
    __name: "ThemesPluginsPanel",
    setup (__props, { expose: __expose }) {
        __expose();
        const store = (0, _storeJs.useWpjsStore)();
        const search = (0, _vue.ref)("");
        const dialogInner = (0, _vue.ref)(false);
        const vulnerabilitiesItem = (0, _vue.ref)(null);
        const plugins_data = [
            {
                "File": "example-notice/example-notice.php",
                "Checksum": true,
                "Wporg": false,
                "WpJuggler": true,
                "Name": "Example Notice",
                "Slug": "example-notice",
                "Title": "Example Notice",
                "Active": true,
                "Author": "BoldThemes",
                "Update": false,
                "Network": false,
                "Version": "1.0",
                "AuthorURI": "https://profiles.wordpress.org/boldthemes/",
                "PluginURI": "https://www.bold-themes.com",
                "UpdateURI": "",
                "AuthorName": "BoldThemes",
                "DomainPath": "",
                "RequiresWP": "",
                "TextDomain": "example-notice",
                "Description": "Displays a sample admin notice once for admins. (Requires PHP 5.3+.)",
                "RequiresPHP": "",
                "UpdateVersion": "",
                "RequiresPlugins": "",
                "Vulnerabilities": []
            },
            {
                "File": "contact-form-7/wp-contact-form-7.php",
                "Checksum": false,
                "Wporg": true,
                "WpJuggler": false,
                "Name": "Contact Form 7",
                "Slug": "contact-form-7",
                "Title": "Contact Form 7",
                "Active": false,
                "Author": "Takayuki Miyoshi",
                "Update": true,
                "Network": true,
                "Version": "4.0.0",
                "AuthorURI": "https://ideasilo.wordpress.com/",
                "PluginURI": "https://contactform7.com/",
                "UpdateURI": "",
                "AuthorName": "Takayuki Miyoshi",
                "DomainPath": "",
                "RequiresWP": "6.3",
                "TextDomain": "contact-form-7",
                "Description": "Just another contact form plugin. Simple but flexible.",
                "RequiresPHP": "7.4",
                "UpdateVersion": "5.9.8",
                "RequiresPlugins": "",
                "Vulnerabilities": [
                    {
                        "name": "Contact Form 7 [contact-form-7] < 5.3.2",
                        "uuid": "69f4e580612c835bfea455eb87c0aa010b02c26489b2edccc6a5d9b1154113dc",
                        "impact": {
                            "cwe": [
                                {
                                    "cwe": "CWE-434",
                                    "name": "Unrestricted Upload of File with Dangerous Type",
                                    "description": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment."
                                }
                            ]
                        },
                        "source": [
                            {
                                "id": "CVE-2020-35489",
                                "date": "2020-12-17",
                                "link": "https://www.cve.org/CVERecord?id=CVE-2020-35489",
                                "name": "CVE-2020-35489",
                                "description": "[en] The contact-form-7 (aka Contact Form 7) plugin before 5.3.2 for WordPress allows Unrestricted File Upload and remote code execution because a filename may contain special characters."
                            },
                            {
                                "id": "7391118e-eef5-4ff8-a8ea-f6b65f442c63",
                                "date": null,
                                "link": "https://wpscan.com/vulnerability/7391118e-eef5-4ff8-a8ea-f6b65f442c63",
                                "name": "Contact Form 7 &lt; 5.3.2 - Unrestricted File Upload",
                                "description": "The popular WordPress plugin, Contact Form 7 was found to be vulnerable to Unrestricted File Upload."
                            },
                            {
                                "id": "c4eafdf392908e880ec6b4c91d37e8413a7510d8",
                                "date": "2020-12-17",
                                "link": "https://www.wordfence.com/threat-intel/vulnerabilities/wordpress-plugins/contact-form-7/contact-form-7-531-arbitrary-file-upload-via-bypass",
                                "name": "Contact Form 7 <= 5.3.1 - Arbitrary File Upload via Bypass",
                                "description": "The Contact Form 7 plugin for WordPress is vulnerable to arbitrary file uploads in versions up to 5.3.2. This is due to the fact that the plugin allows filenames to contain special characters which may make extension filter evasion possible on certain configurations. Our team was not able to reproduce this issue which leads us to believe there is a high attack complexity or special configuration requirement."
                            }
                        ],
                        "operator": {
                            "closed": "0",
                            "unfixed": "0",
                            "max_version": "5.3.2",
                            "min_version": null,
                            "max_operator": "lt",
                            "min_operator": null
                        },
                        "description": null
                    },
                    {
                        "name": "Contact Form 7 [contact-form-7] < 5.0.4",
                        "uuid": "bf43a61e8ad7b51c20303b493f392c94d4556dceedb663862e26bc996b3caaab",
                        "impact": [],
                        "source": [
                            {
                                "id": "CVE-2018-20979",
                                "date": "2019-08-22",
                                "link": "https://www.cve.org/CVERecord?id=CVE-2018-20979",
                                "name": "CVE-2018-20979",
                                "description": "[en] The contact-form-7 plugin before 5.0.4 for WordPress has privilege escalation because of capability_type mishandling in register_post_type."
                            },
                            {
                                "id": "af945f64-9ce2-485c-bf36-c2ff59dc10d5",
                                "date": null,
                                "link": "https://wpscan.com/vulnerability/af945f64-9ce2-485c-bf36-c2ff59dc10d5",
                                "name": "Contact Form 7 &lt;= 5.0.3 - register_post_type() Privilege Escalation",
                                "description": "According to the official release:\r\n\r\n&quot;A privilege escalation vulnerability has been found in Contact Form 7 5.0.3 and older versions. Utilizing this vulnerability, a logged-in user in the Contributor role can potentially edit contact forms, which only Administrator and Editor-role users are allowed to access by default. This issue has been reported by Simon Scannell from RIPS Technologies.\r\n\r\nTo minimize damage from possible attacks utilizing those vulnerabilities, Contact Form 7 5.0.4 and higher will restrict the local file attachment feature. More particularly, you will no longer be able to specify an absolute file path that refers to a file placed outside the wp-content directory. You can still specify files inside the wp-content directory with relative or absolute file paths, so all you need to change is the location of the attachment files.&quot;\r\n\r\nAccording to the changelog:\r\n\r\n&quot;Specifies the capability_type argument explicitly in the register_post_type() call to fix the privilege escalation vulnerability issue.&quot;"
                            },
                            {
                                "id": "0013c8267f3da7ebe3f28e9a851deee6765d231d",
                                "date": "2018-09-04",
                                "link": "https://www.wordfence.com/threat-intel/vulnerabilities/wordpress-plugins/contact-form-7/contact-form-7-503-authorization-bypass",
                                "name": "Contact Form 7 <= 5.0.3 - Authorization Bypass",
                                "description": "The Contact Form 7 plugin for WordPress is vulnerable to authorization bypass due to capability_type mishandling in register_post_type in versions up to, and including, 5.0.3. This makes it possible for authenticated attackers with contributor level privileges and above to modify contact forms and potential supply paths to sensitive files that make sensitive information disclosure possible."
                            }
                        ],
                        "operator": {
                            "closed": "0",
                            "unfixed": "0",
                            "max_version": "5.0.4",
                            "min_version": null,
                            "max_operator": "lt",
                            "min_operator": null
                        },
                        "description": null
                    },
                    {
                        "name": "Contact Form 7 [contact-form-7] < 5.3.2",
                        "uuid": "a26423547b6bf8c59ad7d7259609e22c14f3bea37232df4091c06e8be64583df",
                        "impact": [],
                        "source": [
                            {
                                "id": "d6b8d2f948bb107e118f3cee56cc9df0dc13e184",
                                "date": "2020-12-17",
                                "link": "https://patchstack.com/database/vulnerability/contact-form-7/wordpress-contact-form-7-plugin-5-3-1-unrestricted-file-upload-vulnerability",
                                "name": "WordPress Contact Form 7 plugin <= 5.3.1 - Unrestricted File Upload vulnerability",
                                "description": "Unrestricted File Upload vulnerability found by Jinson Varghese Behanan in WordPress Contact Form 7 plugin (versions <= 5.3.1)."
                            }
                        ],
                        "operator": {
                            "closed": "0",
                            "unfixed": "0",
                            "max_version": "5.3.2",
                            "min_version": null,
                            "max_operator": "lt",
                            "min_operator": null
                        },
                        "description": null
                    },
                    {
                        "name": "Contact Form 7 [contact-form-7] < 5.0.4",
                        "uuid": "46ad0a1e402e2b7fd43755090d353ebeeef7500e6ea531a129546012fed0ba84",
                        "impact": [],
                        "source": [
                            {
                                "id": "2838338b96418a4eda0472f209005117c380f4d5",
                                "date": "2018-09-13",
                                "link": "https://patchstack.com/database/vulnerability/contact-form-7/wordpress-contact-form-7-plugin-5-0-3-privilege-escalation-vulnerability",
                                "name": "WordPress Contact Form 7 plugin <= 5.0.3 - Privilege Escalation vulnerability",
                                "description": "Privilege Escalation vulnerability found by Simon Scannell in WordPress Contact Form 7 plugin (versions <= 5.0.3)."
                            }
                        ],
                        "operator": {
                            "closed": "0",
                            "unfixed": "0",
                            "max_version": "5.0.4",
                            "min_version": null,
                            "max_operator": "lt",
                            "min_operator": null
                        },
                        "description": null
                    },
                    {
                        "name": "Contact Form 7 [contact-form-7] < 5.8.4",
                        "uuid": "3f3e7cdb5d815edb66f209dbb269f42df26ad83d9d3a69c7c3c4da5fce561d6d",
                        "impact": {
                            "cwe": [
                                {
                                    "cwe": "CWE-434",
                                    "name": "Unrestricted Upload of File with Dangerous Type",
                                    "description": "The product allows the upload or transfer of dangerous file types that are automatically processed within its environment."
                                }
                            ],
                            "cvss": {
                                "a": "h",
                                "c": "h",
                                "i": "h",
                                "s": "u",
                                "ac": "h",
                                "av": "n",
                                "pr": "h",
                                "ui": "n",
                                "score": "6.6",
                                "impact": "0.0",
                                "vector": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H",
                                "version": "3.1",
                                "severity": "m",
                                "exploitable": "0.0"
                            }
                        },
                        "source": [
                            {
                                "id": "CVE-2023-6449",
                                "date": "2023-12-01",
                                "link": "https://www.cve.org/CVERecord?id=CVE-2023-6449",
                                "name": "CVE-2023-6449",
                                "description": "[en] The Contact Form 7 plugin for WordPress is vulnerable to arbitrary file uploads due to insufficient file type validation in the 'validate' function and insufficient blocklisting on the 'wpcf7_antiscript_file_name' function in versions up to, and including, 5.8.3. This makes it possible for authenticated attackers with editor-level capabilities or above to upload arbitrary files on the affected site's server, but due to the htaccess configuration, remote code cannot be executed in most cases. By default, the file will be deleted from the server immediately. However, in some cases, other plugins may make it possible for the file to live on the server longer. This can make remote code execution possible when combined with another vulnerability, such as local file inclusion."
                            },
                            {
                                "id": "24f57396df52355e47d4e49ae3c67ee7c109d4ff",
                                "date": "2023-11-30",
                                "link": "https://www.wordfence.com/threat-intel/vulnerabilities/wordpress-plugins/contact-form-7/contact-form-7-583-authenticated-editor-arbitrary-file-upload",
                                "name": "Contact Form 7 <= 5.8.3 - Authenticated (Editor+) Arbitrary File Upload",
                                "description": "The Contact Form 7 plugin for WordPress is vulnerable to arbitrary file uploads due to insufficient file type validation in the 'validate' function and insufficient blocklisting on the 'wpcf7_antiscript_file_name' function in versions up to, and including, 5.8.3. This makes it possible for authenticated attackers with editor-level capabilities or above to upload arbitrary files on the affected site's server, but due to the htaccess configuration, remote code cannot be executed in most cases. By default, the file will be deleted from the server immediately. However, in some cases, other plugins may make it possible for the file to live on the server longer. This can make remote code execution possible when combined with another vulnerability, such as local file inclusion."
                            },
                            {
                                "id": "e15c192035155221d4e0b807d25248131600495e",
                                "date": "2023-12-01",
                                "link": "https://patchstack.com/database/vulnerability/contact-form-7/wordpress-contact-form-7-plugin-5-8-3-authenticated-editor-arbitrary-file-upload-vulnerability",
                                "name": "WordPress  Contact Form 7 Plugin  <= 5.8.3 is vulnerable to Arbitrary File Upload",
                                "description": "Update the WordPress Add-on SweetAlert Contact Form 7 plugin to the latest available version (at least 5.8.4).\nIstv\xe1n M\xe1rton discovered and reported this Arbitrary File Upload vulnerability in WordPress Contact Form 7 Plugin. This could allow a malicious actor to upload any type of file to your website. This can include backdoors which are then executed to gain further access to your website. This vulnerability has been fixed in version 5.8.4."
                            },
                            {
                                "id": "70e21d9a-b1e6-4083-bcd3-7c1c13fd5382",
                                "date": null,
                                "link": "https://wpscan.com/vulnerability/70e21d9a-b1e6-4083-bcd3-7c1c13fd5382",
                                "name": "Contact Form 7 &lt; 5.8.4 - Authenticated (Editor+) Arbitrary File Upload",
                                "description": "The Contact Form 7 plugin for WordPress is vulnerable to arbitrary file uploads due to insufficient file type validation in the &#039;validate&#039; function and insufficient blocklisting on the &#039;wpcf7_antiscript_file_name&#039; function in versions up to, and including, 5.8.3. This makes it possible for authenticated attackers with editor-level capabilities or above to upload arbitrary files on the affected site&#039;s server, but due to the htaccess configuration, remote code cannot be executed in most cases. By default, the file will be deleted from the server immediately. However, in some cases, other plugins may make it possible for the file to live on the server longer. This can make remote code execution possible when combined with another vulnerability, such as local file inclusion."
                            }
                        ],
                        "operator": {
                            "closed": "0",
                            "unfixed": "0",
                            "max_version": "5.8.4",
                            "min_version": null,
                            "max_operator": "lt",
                            "min_operator": null
                        },
                        "description": null
                    },
                    {
                        "name": "Contact Form 7 [contact-form-7] < 5.9.2",
                        "uuid": "f2293632631341a14596411858137750d6f77619f8f2bfdab04b9f95536a26e5",
                        "impact": {
                            "cwe": [
                                {
                                    "cwe": "CWE-79",
                                    "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                                    "description": "The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users."
                                }
                            ],
                            "cvss": {
                                "a": "n",
                                "c": "l",
                                "i": "l",
                                "s": "c",
                                "ac": "l",
                                "av": "n",
                                "pr": "n",
                                "ui": "r",
                                "score": "6.1",
                                "impact": "0.0",
                                "vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
                                "version": "3.1",
                                "severity": "m",
                                "exploitable": "0.0"
                            }
                        },
                        "source": [
                            {
                                "id": "CVE-2024-2242",
                                "date": "2024-03-13",
                                "link": "https://www.cve.org/CVERecord?id=CVE-2024-2242",
                                "name": "CVE-2024-2242",
                                "description": "[en] The Contact Form 7 plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the \u2018active-tab\u2019 parameter in all versions up to, and including, 5.9 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link."
                            },
                            {
                                "id": "a4133485452498aa7c096da4d284b3d6869ebf4b",
                                "date": "2024-03-13",
                                "link": "https://www.wordfence.com/threat-intel/vulnerabilities/wordpress-plugins/contact-form-7/contact-form-7-59-reflected-cross-site-scripting",
                                "name": "Contact Form 7 <= 5.9 - Reflected Cross-Site Scripting",
                                "description": "The Contact Form 7 plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the \u2018active-tab\u2019 parameter in all versions up to, and including, 5.9 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link."
                            },
                            {
                                "id": "e2dfb032e1438ea61faec1dccb16dfde131ec8b5",
                                "date": null,
                                "link": "https://patchstack.com/database/vulnerability/contact-form-7/wordpress-contact-form-7-plugin-5-9-reflected-cross-site-scripting-vulnerability",
                                "name": "WordPress  Contact Form 7 Plugin    <= 5.9 is vulnerable to Cross Site Scripting (XSS)",
                                "description": "Update the WordPress Contact Form 7 plugin to the latest available version (at least 5.9.2).\nAsaf Mozes discovered and reported this Cross Site Scripting (XSS) vulnerability in WordPress Contact Form 7 Plugin. This could allow a malicious actor to inject malicious scripts, such as redirects, advertisements, and other HTML payloads into your website which will be executed when guests visit your site.  This vulnerability has been fixed in version 5.9.2.\nHave additional information or questions about this entry? Get in touch."
                            },
                            {
                                "id": "1c070a2c-2ab0-43bf-b10b-6575709918bc",
                                "date": null,
                                "link": "https://wpscan.com/vulnerability/1c070a2c-2ab0-43bf-b10b-6575709918bc",
                                "name": "Contact Form 7 &lt; 5.9.2 - Reflected Cross-Site Scripting",
                                "description": "The plugin does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against administrators."
                            }
                        ],
                        "operator": {
                            "closed": "0",
                            "unfixed": "0",
                            "max_version": "5.9.2",
                            "min_version": null,
                            "max_operator": "lt",
                            "min_operator": null
                        },
                        "description": null
                    },
                    {
                        "name": "Contact Form 7 [contact-form-7] < 5.9.5",
                        "uuid": "11deabaaffc704bdad7665508e0dd88de89a9b330115fdb1718a72104c302b1d",
                        "impact": {
                            "cwe": [
                                {
                                    "cwe": "CWE-601",
                                    "name": "URL Redirection to Untrusted Site ('Open Redirect')",
                                    "description": "A web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a Redirect. This simplifies phishing attacks."
                                }
                            ]
                        },
                        "source": [
                            {
                                "id": "CVE-2024-4704",
                                "date": "2024-06-27",
                                "link": "https://www.cve.org/CVERecord?id=CVE-2024-4704",
                                "name": "CVE-2024-4704",
                                "description": "[en] The Contact Form 7 WordPress plugin before 5.9.5 has an open redirect that allows an attacker to utilize a false URL and redirect to the URL of their choosing."
                            },
                            {
                                "id": "9d7789cdb626ed7fcc9916f072bc7538770c205c",
                                "date": "2024-06-27",
                                "link": "https://patchstack.com/database/vulnerability/contact-form-7/wordpress-contact-form-7-plugin-5-9-5-unauthenticated-open-redirect-vulnerability",
                                "name": "WordPress Contact Form 7 Plugin < 5.9.5 is vulnerable to Open Redirection",
                                "description": "<p>WordPress Contact Form 7 Plugin < 5.9.5 is vulnerable to Open Redirection</p><p>Software: Contact Form 7</p><p>Link: https://wordpress.org/plugins/contact-form-7/#developers</p><p>Affected Version < 5.9.5</p><p>Fixed in version 5.9.5 </p>"
                            },
                            {
                                "id": "1eb2c1adb2ea5a6fea057ea1092e7be5e98b776d",
                                "date": "2024-06-05",
                                "link": "https://www.wordfence.com/threat-intel/vulnerabilities/wordpress-plugins/contact-form-7/contact-form-7-594-unauthenticated-open-redirect",
                                "name": "Contact Form 7 <= 5.9.4 - Unauthenticated Open Redirect",
                                "description": "The Contact Form 7 plugin for WordPress is vulnerable to Open Redirect in all versions up to, and including, 5.9.4. This is due to insufficient validation on the redirect url supplied via accessing the contact form with a spoofed page. This makes it possible for unauthenticated attackers to redirect site users to potentially malicious sites if they can successfully trick them into performing an action."
                            }
                        ],
                        "operator": {
                            "closed": "0",
                            "unfixed": "0",
                            "max_version": "5.9.5",
                            "min_version": null,
                            "max_operator": "lt",
                            "min_operator": null
                        },
                        "description": null
                    }
                ]
            },
            {
                "File": "wp-juggler-client/wp-juggler-client.php",
                "Checksum": true,
                "Wporg": false,
                "WpJuggler": false,
                "Name": "WP Juggler Client",
                "Slug": "wp-juggler-client",
                "Title": "WP Juggler Client",
                "Active": true,
                "Author": "BoldThemes",
                "Update": false,
                "Network": true,
                "Version": "1.0.0",
                "AuthorURI": "https://wpjuggler.com",
                "PluginURI": "https://wpjuggler.com",
                "UpdateURI": "",
                "AuthorName": "BoldThemes",
                "DomainPath": "/languages",
                "RequiresWP": "",
                "TextDomain": "wp-juggler-client",
                "Description": "WP Juggler Client",
                "RequiresPHP": "",
                "UpdateVersion": "",
                "RequiresPlugins": "",
                "Vulnerabilities": []
            }
        ];
        const themes_data = [
            {
                "Active": true,
                "Network": false,
                "Name": "Twenty Twenty-Four",
                "Author": "the WordPress team",
                "Update": false,
                "Version": "1.2",
                "ThemeObject": {
                    "update": false
                },
                "IsChildTheme": false,
                "UpdateVersion": ""
            },
            {
                "Active": false,
                "Network": false,
                "Name": "Twenty Twenty-Two",
                "Author": "the WordPress team",
                "Update": true,
                "Version": "1.8",
                "ThemeObject": {
                    "update": false
                },
                "IsChildTheme": false,
                "UpdateVersion": "2.3"
            },
            {
                "Active": false,
                "Network": false,
                "Name": "Twenty Twenty-Three",
                "Author": "the WordPress team",
                "Update": false,
                "Version": "1.5",
                "ThemeObject": {
                    "update": false
                },
                "IsChildTheme": true,
                "UpdateVersion": ""
            }
        ];
        const plugin_headers = [
            {
                title: "Name",
                value: "Name",
                align: "start",
                sortable: true
            },
            {
                title: "Active",
                key: "active",
                align: "center",
                sortable: false
            },
            {
                title: "Version",
                value: "Version",
                align: "center",
                sortable: true
            },
            {
                title: "Update",
                key: "update",
                align: "center",
                sortable: false
            },
            {
                title: "Vulnerabilities",
                key: "vulnerabilities",
                align: "center",
                sortable: true
            },
            {
                title: "Cheksum",
                key: "checksum",
                align: "start",
                sortable: true
            },
            {
                title: "Source",
                key: "source",
                align: "start",
                sortable: true
            },
            {
                title: "Actions",
                key: "actions",
                align: "start",
                sortable: true
            }
        ];
        const theme_headers = [
            {
                title: "Name",
                value: "Name",
                align: "start",
                sortable: true
            },
            {
                title: "Author",
                value: "Author",
                align: "left",
                sortable: true
            },
            {
                title: "Active",
                key: "active",
                align: "center",
                sortable: false
            },
            {
                title: "Version",
                value: "Version",
                align: "center",
                sortable: true
            },
            {
                title: "Child Theme",
                key: "child",
                align: "center",
                sortable: false
            },
            {
                title: "Update",
                key: "update",
                align: "center",
                sortable: false
            }
        ];
        const expanded = (0, _vue.ref)([]);
        const dialog = (0, _vue.ref)(false);
        const tab = (0, _vue.ref)(0);
        function openVulnerabilities(item) {
            vulnerabilitiesItem.value = item;
            dialogInner.value = true;
        }
        const __returned__ = {
            store,
            search,
            dialogInner,
            vulnerabilitiesItem,
            plugins_data,
            themes_data,
            plugin_headers,
            theme_headers,
            expanded,
            dialog,
            tab,
            openVulnerabilities,
            get useWpjsStore () {
                return 0, _storeJs.useWpjsStore;
            },
            onMounted: (0, _vue.onMounted),
            computed: (0, _vue.computed),
            ref: (0, _vue.ref),
            get useQueryClient () {
                return 0, _vueQuery.useQueryClient;
            },
            get useQuery () {
                return 0, _vueQuery.useQuery;
            },
            get useMutation () {
                return 0, _vueQuery.useMutation;
            }
        };
        Object.defineProperty(__returned__, "__isScriptSetup", {
            enumerable: false,
            value: true
        });
        return __returned__;
    }
};

},{"./store.js":"7kZ8m","vue":"gCTam","@tanstack/vue-query":"aI0Kc","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"1QZ4k":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "render", ()=>render);
var _vue = require("vue");
const _hoisted_1 = {
    class: "text-center pa-4"
};
const _hoisted_2 = {
    key: 0
};
const _hoisted_3 = {
    key: 1
};
const _hoisted_4 = {
    key: 0
};
const _hoisted_5 = {
    key: 1
};
const _hoisted_6 = {
    key: 0
};
const _hoisted_7 = {
    key: 0
};
const _hoisted_8 = {
    key: 1
};
const _hoisted_9 = {
    key: 0
};
const _hoisted_10 = {
    key: 1
};
const _hoisted_11 = {
    key: 0
};
const _hoisted_12 = {
    key: 1
};
const _hoisted_13 = {
    key: 2
};
const _hoisted_14 = {
    key: 0
};
const _hoisted_15 = {
    key: 1
};
const _hoisted_16 = {
    key: 0
};
const _hoisted_17 = {
    key: 1
};
const _hoisted_18 = {
    key: 0
};
const _hoisted_19 = {
    key: 0
};
const _hoisted_20 = {
    key: 0,
    class: "ml-6 mt-2"
};
const _hoisted_21 = /*#__PURE__*/ (0, _vue.createElementVNode)("div", {
    class: "mt-4 ml-6"
}, [
    /*#__PURE__*/ (0, _vue.createElementVNode)("strong", null, "Sources:")
], -1 /* HOISTED */ );
const _hoisted_22 = {
    class: "mt-2 ml-6"
};
const _hoisted_23 = {
    class: "ml-4"
};
const _hoisted_24 = [
    "href"
];
const _hoisted_25 = {
    class: "ml-4"
};
function render(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_v_btn = (0, _vue.resolveComponent)("v-btn");
    const _component_v_toolbar_title = (0, _vue.resolveComponent)("v-toolbar-title");
    const _component_v_spacer = (0, _vue.resolveComponent)("v-spacer");
    const _component_v_toolbar_items = (0, _vue.resolveComponent)("v-toolbar-items");
    const _component_v_toolbar = (0, _vue.resolveComponent)("v-toolbar");
    const _component_v_tab = (0, _vue.resolveComponent)("v-tab");
    const _component_v_tabs = (0, _vue.resolveComponent)("v-tabs");
    const _component_v_icon = (0, _vue.resolveComponent)("v-icon");
    const _component_v_sheet = (0, _vue.resolveComponent)("v-sheet");
    const _component_v_divider = (0, _vue.resolveComponent)("v-divider");
    const _component_v_text_field = (0, _vue.resolveComponent)("v-text-field");
    const _component_v_data_table = (0, _vue.resolveComponent)("v-data-table");
    const _component_v_tabs_window_item = (0, _vue.resolveComponent)("v-tabs-window-item");
    const _component_v_tabs_window = (0, _vue.resolveComponent)("v-tabs-window");
    const _component_v_card_text = (0, _vue.resolveComponent)("v-card-text");
    const _component_v_card = (0, _vue.resolveComponent)("v-card");
    const _component_v_dialog = (0, _vue.resolveComponent)("v-dialog");
    return (0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_1, [
        (0, _vue.createVNode)(_component_v_dialog, {
            modelValue: $setup.store.activatedThemes,
            "onUpdate:modelValue": _cache[7] || (_cache[7] = ($event)=>$setup.store.activatedThemes = $event),
            transition: "dialog-bottom-transition",
            fullscreen: ""
        }, {
            default: (0, _vue.withCtx)(()=>[
                    (0, _vue.createVNode)(_component_v_card, null, {
                        default: (0, _vue.withCtx)(()=>[
                                (0, _vue.createVNode)(_component_v_toolbar, null, {
                                    default: (0, _vue.withCtx)(()=>[
                                            (0, _vue.createVNode)(_component_v_btn, {
                                                icon: "mdi-close",
                                                onClick: _cache[0] || (_cache[0] = ($event)=>$setup.store.activatedThemes = false)
                                            }),
                                            (0, _vue.createVNode)(_component_v_toolbar_title, null, {
                                                default: (0, _vue.withCtx)(()=>[
                                                        (0, _vue.createTextVNode)((0, _vue.toDisplayString)($setup.store.activatedSite.title), 1 /* TEXT */ )
                                                    ]),
                                                _: 1 /* STABLE */ 
                                            }),
                                            (0, _vue.createVNode)(_component_v_spacer),
                                            (0, _vue.createVNode)(_component_v_toolbar_items)
                                        ]),
                                    _: 1 /* STABLE */ 
                                }),
                                (0, _vue.createVNode)(_component_v_card_text, null, {
                                    default: (0, _vue.withCtx)(()=>[
                                            (0, _vue.createVNode)(_component_v_card, null, {
                                                default: (0, _vue.withCtx)(()=>[
                                                        (0, _vue.createVNode)(_component_v_tabs, {
                                                            modelValue: $setup.tab,
                                                            "onUpdate:modelValue": _cache[1] || (_cache[1] = ($event)=>$setup.tab = $event),
                                                            "bg-color": "surface"
                                                        }, {
                                                            default: (0, _vue.withCtx)(()=>[
                                                                    (0, _vue.createVNode)(_component_v_tab, {
                                                                        value: "plugins"
                                                                    }, {
                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                (0, _vue.createTextVNode)("Plugins")
                                                                            ]),
                                                                        _: 1 /* STABLE */ 
                                                                    }),
                                                                    (0, _vue.createVNode)(_component_v_tab, {
                                                                        value: "themes"
                                                                    }, {
                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                (0, _vue.createTextVNode)("Themes")
                                                                            ]),
                                                                        _: 1 /* STABLE */ 
                                                                    })
                                                                ]),
                                                            _: 1 /* STABLE */ 
                                                        }, 8 /* PROPS */ , [
                                                            "modelValue"
                                                        ]),
                                                        (0, _vue.createVNode)(_component_v_card_text, null, {
                                                            default: (0, _vue.withCtx)(()=>[
                                                                    (0, _vue.createVNode)(_component_v_tabs_window, {
                                                                        modelValue: $setup.tab,
                                                                        "onUpdate:modelValue": _cache[6] || (_cache[6] = ($event)=>$setup.tab = $event)
                                                                    }, {
                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                (0, _vue.createVNode)(_component_v_tabs_window_item, {
                                                                                    value: "plugins",
                                                                                    transition: "false",
                                                                                    "reverse-transition": "false"
                                                                                }, {
                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                            (0, _vue.createVNode)(_component_v_sheet, {
                                                                                                class: "pa-4 text-right mx-auto",
                                                                                                elevation: "0",
                                                                                                width: "100%",
                                                                                                rounded: "lg"
                                                                                            }, {
                                                                                                default: (0, _vue.withCtx)(()=>[
                                                                                                        $setup.store.activatedSite.wp_juggler_plugins_summary_timestamp ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_2, [
                                                                                                            (0, _vue.createVNode)(_component_v_icon, {
                                                                                                                class: "me-1 pb-1",
                                                                                                                icon: "mdi-refresh",
                                                                                                                size: "18"
                                                                                                            }),
                                                                                                            (0, _vue.createTextVNode)(" " + (0, _vue.toDisplayString)($setup.store.activatedSite.wp_juggler_plugins_summary_timestamp) + " ", 1 /* TEXT */ ),
                                                                                                            (0, _vue.createVNode)(_component_v_btn, {
                                                                                                                class: "ml-3 text-none text-caption"
                                                                                                            }, {
                                                                                                                default: (0, _vue.withCtx)(()=>[
                                                                                                                        (0, _vue.createTextVNode)("Refresh ")
                                                                                                                    ]),
                                                                                                                _: 1 /* STABLE */ 
                                                                                                            })
                                                                                                        ])) : ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_3, [
                                                                                                            (0, _vue.createVNode)(_component_v_icon, {
                                                                                                                class: "me-1 pb-1",
                                                                                                                icon: "mdi-refresh",
                                                                                                                size: "18"
                                                                                                            }),
                                                                                                            (0, _vue.createTextVNode)(" Never "),
                                                                                                            (0, _vue.createVNode)(_component_v_btn, {
                                                                                                                class: "ml-3 text-none text-caption"
                                                                                                            }, {
                                                                                                                default: (0, _vue.withCtx)(()=>[
                                                                                                                        (0, _vue.createTextVNode)("Refresh ")
                                                                                                                    ]),
                                                                                                                _: 1 /* STABLE */ 
                                                                                                            })
                                                                                                        ]))
                                                                                                    ]),
                                                                                                _: 1 /* STABLE */ 
                                                                                            }),
                                                                                            (0, _vue.createVNode)(_component_v_divider),
                                                                                            (0, _vue.createVNode)(_component_v_sheet, null, {
                                                                                                default: (0, _vue.withCtx)(()=>[
                                                                                                        (0, _vue.createVNode)(_component_v_spacer),
                                                                                                        (0, _vue.createVNode)(_component_v_text_field, {
                                                                                                            modelValue: $setup.search,
                                                                                                            "onUpdate:modelValue": _cache[2] || (_cache[2] = ($event)=>$setup.search = $event),
                                                                                                            density: "compact",
                                                                                                            label: "Search",
                                                                                                            "prepend-inner-icon": "mdi-magnify",
                                                                                                            variant: "solo-filled",
                                                                                                            flat: "",
                                                                                                            "hide-details": "",
                                                                                                            "single-line": ""
                                                                                                        }, null, 8 /* PROPS */ , [
                                                                                                            "modelValue"
                                                                                                        ]),
                                                                                                        (0, _vue.createVNode)(_component_v_data_table, {
                                                                                                            search: $setup.search,
                                                                                                            "onUpdate:search": _cache[3] || (_cache[3] = ($event)=>$setup.search = $event),
                                                                                                            items: $setup.plugins_data,
                                                                                                            headers: $setup.plugin_headers,
                                                                                                            "item-key": "id"
                                                                                                        }, {
                                                                                                            "item.active": (0, _vue.withCtx)(({ item })=>[
                                                                                                                    item.Active && !item.Network ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_4, [
                                                                                                                        (0, _vue.createVNode)(_component_v_icon, {
                                                                                                                            color: "success",
                                                                                                                            icon: "mdi-check-bold",
                                                                                                                            size: "large",
                                                                                                                            class: "rm-4"
                                                                                                                        })
                                                                                                                    ])) : (0, _vue.createCommentVNode)("v-if", true),
                                                                                                                    item.Active && item.Network ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_5, [
                                                                                                                        (0, _vue.createVNode)(_component_v_icon, {
                                                                                                                            color: "success",
                                                                                                                            icon: "mdi-check-network-outline",
                                                                                                                            size: "large",
                                                                                                                            class: "rm-4"
                                                                                                                        })
                                                                                                                    ])) : (0, _vue.createCommentVNode)("v-if", true)
                                                                                                                ]),
                                                                                                            "item.update": (0, _vue.withCtx)(({ item })=>[
                                                                                                                    item.Update ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_6, [
                                                                                                                        (0, _vue.createVNode)(_component_v_icon, {
                                                                                                                            color: "success",
                                                                                                                            icon: "mdi-check-bold",
                                                                                                                            size: "large",
                                                                                                                            class: "rm-4"
                                                                                                                        }),
                                                                                                                        (0, _vue.createTextVNode)(" " + (0, _vue.toDisplayString)(item.UpdateVersion), 1 /* TEXT */ )
                                                                                                                    ])) : (0, _vue.createCommentVNode)("v-if", true)
                                                                                                                ]),
                                                                                                            "item.vulnerabilities": (0, _vue.withCtx)(({ item })=>[
                                                                                                                    item.Vulnerabilities.length > 0 && item.Wporg ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_7, [
                                                                                                                        (0, _vue.createVNode)(_component_v_icon, {
                                                                                                                            color: "error",
                                                                                                                            icon: "mdi-bug-check-outline",
                                                                                                                            size: "large",
                                                                                                                            class: "mr-1"
                                                                                                                        }),
                                                                                                                        (0, _vue.createTextVNode)(" " + (0, _vue.toDisplayString)(item.Vulnerabilities.length) + " ", 1 /* TEXT */ ),
                                                                                                                        (0, _vue.createVNode)(_component_v_btn, {
                                                                                                                            class: "ml-3 text-none text-caption",
                                                                                                                            onClick: ($event)=>$setup.openVulnerabilities(item)
                                                                                                                        }, {
                                                                                                                            default: (0, _vue.withCtx)(()=>[
                                                                                                                                    (0, _vue.createTextVNode)("Details ")
                                                                                                                                ]),
                                                                                                                            _: 2 /* DYNAMIC */ 
                                                                                                                        }, 1032 /* PROPS, DYNAMIC_SLOTS */ , [
                                                                                                                            "onClick"
                                                                                                                        ])
                                                                                                                    ])) : !item.Wporg ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_8, [
                                                                                                                        (0, _vue.createVNode)(_component_v_icon, {
                                                                                                                            color: "blue-lighten-5",
                                                                                                                            icon: "mdi-help",
                                                                                                                            size: "large",
                                                                                                                            class: "rm-4"
                                                                                                                        })
                                                                                                                    ])) : (0, _vue.createCommentVNode)("v-if", true)
                                                                                                                ]),
                                                                                                            "item.checksum": (0, _vue.withCtx)(({ item })=>[
                                                                                                                    !item.Vulnerabilities.Checksum && item.Wporg ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_9, [
                                                                                                                        (0, _vue.createVNode)(_component_v_icon, {
                                                                                                                            color: "error",
                                                                                                                            icon: "mdi-alert-outline",
                                                                                                                            size: "large",
                                                                                                                            class: "mr-1"
                                                                                                                        })
                                                                                                                    ])) : !item.Wporg ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_10, [
                                                                                                                        (0, _vue.createVNode)(_component_v_icon, {
                                                                                                                            color: "blue-lighten-5",
                                                                                                                            icon: "mdi-help",
                                                                                                                            size: "large",
                                                                                                                            class: "rm-4"
                                                                                                                        })
                                                                                                                    ])) : (0, _vue.createCommentVNode)("v-if", true)
                                                                                                                ]),
                                                                                                            "item.source": (0, _vue.withCtx)(({ item })=>[
                                                                                                                    item.Wporg && !item.WpJuggler ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_11, [
                                                                                                                        (0, _vue.createVNode)(_component_v_icon, {
                                                                                                                            color: "grey-lighten-1",
                                                                                                                            icon: "mdi-wordpress",
                                                                                                                            size: "large",
                                                                                                                            class: "mr-1"
                                                                                                                        })
                                                                                                                    ])) : !item.Wporg && item.WpJuggler ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_12, [
                                                                                                                        (0, _vue.createVNode)(_component_v_icon, {
                                                                                                                            color: "grey-lighten-1",
                                                                                                                            icon: "mdi-lan",
                                                                                                                            size: "large",
                                                                                                                            class: "rm-4"
                                                                                                                        })
                                                                                                                    ])) : ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_13, [
                                                                                                                        (0, _vue.createVNode)(_component_v_icon, {
                                                                                                                            color: "blue-lighten-5",
                                                                                                                            icon: "mdi-help",
                                                                                                                            size: "large",
                                                                                                                            class: "rm-4"
                                                                                                                        })
                                                                                                                    ]))
                                                                                                                ]),
                                                                                                            "item.actions": (0, _vue.withCtx)(({ item })=>[
                                                                                                                    item.Active ? ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_btn, {
                                                                                                                        key: 0,
                                                                                                                        class: "ml-3 text-none text-caption"
                                                                                                                    }, {
                                                                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                                                                (0, _vue.createTextVNode)("Deactivate ")
                                                                                                                            ]),
                                                                                                                        _: 1 /* STABLE */ 
                                                                                                                    })) : (0, _vue.createCommentVNode)("v-if", true),
                                                                                                                    !item.Active ? ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_btn, {
                                                                                                                        key: 1,
                                                                                                                        class: "ml-3 text-none text-caption"
                                                                                                                    }, {
                                                                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                                                                (0, _vue.createTextVNode)("Activate ")
                                                                                                                            ]),
                                                                                                                        _: 1 /* STABLE */ 
                                                                                                                    })) : (0, _vue.createCommentVNode)("v-if", true),
                                                                                                                    !item.Active && item.Network ? ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_btn, {
                                                                                                                        key: 2,
                                                                                                                        class: "ml-3 text-none text-caption"
                                                                                                                    }, {
                                                                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                                                                (0, _vue.createTextVNode)("Network Activate ")
                                                                                                                            ]),
                                                                                                                        _: 1 /* STABLE */ 
                                                                                                                    })) : (0, _vue.createCommentVNode)("v-if", true),
                                                                                                                    item.Update ? ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_btn, {
                                                                                                                        key: 3,
                                                                                                                        color: "#2196f3",
                                                                                                                        variant: "elevated",
                                                                                                                        class: "text-none text-caption ml-3"
                                                                                                                    }, {
                                                                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                                                                (0, _vue.createTextVNode)("Update ")
                                                                                                                            ]),
                                                                                                                        _: 1 /* STABLE */ 
                                                                                                                    })) : (0, _vue.createCommentVNode)("v-if", true)
                                                                                                                ]),
                                                                                                            _: 1 /* STABLE */ 
                                                                                                        }, 8 /* PROPS */ , [
                                                                                                            "search"
                                                                                                        ])
                                                                                                    ]),
                                                                                                _: 1 /* STABLE */ 
                                                                                            })
                                                                                        ]),
                                                                                    _: 1 /* STABLE */ 
                                                                                }),
                                                                                (0, _vue.createVNode)(_component_v_tabs_window_item, {
                                                                                    value: "themes",
                                                                                    transition: "false",
                                                                                    "reverse-transition": "false"
                                                                                }, {
                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                            (0, _vue.createVNode)(_component_v_sheet, {
                                                                                                class: "pa-4 text-right mx-auto",
                                                                                                elevation: "0",
                                                                                                width: "100%",
                                                                                                rounded: "lg"
                                                                                            }, {
                                                                                                default: (0, _vue.withCtx)(()=>[
                                                                                                        $setup.store.activatedSite.wp_juggler_themes_summary_timestamp ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_14, [
                                                                                                            (0, _vue.createVNode)(_component_v_icon, {
                                                                                                                class: "me-1 pb-1",
                                                                                                                icon: "mdi-refresh",
                                                                                                                size: "18"
                                                                                                            }),
                                                                                                            (0, _vue.createTextVNode)(" " + (0, _vue.toDisplayString)($setup.store.activatedSite.wp_juggler_themes_summary_timestamp) + " ", 1 /* TEXT */ ),
                                                                                                            (0, _vue.createVNode)(_component_v_btn, {
                                                                                                                class: "ml-3 text-none text-caption"
                                                                                                            }, {
                                                                                                                default: (0, _vue.withCtx)(()=>[
                                                                                                                        (0, _vue.createTextVNode)("Refresh ")
                                                                                                                    ]),
                                                                                                                _: 1 /* STABLE */ 
                                                                                                            })
                                                                                                        ])) : ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_15, [
                                                                                                            (0, _vue.createVNode)(_component_v_icon, {
                                                                                                                class: "me-1 pb-1",
                                                                                                                icon: "mdi-refresh",
                                                                                                                size: "18"
                                                                                                            }),
                                                                                                            (0, _vue.createTextVNode)(" Never "),
                                                                                                            (0, _vue.createVNode)(_component_v_btn, {
                                                                                                                class: "ml-3 text-none text-caption"
                                                                                                            }, {
                                                                                                                default: (0, _vue.withCtx)(()=>[
                                                                                                                        (0, _vue.createTextVNode)("Refresh ")
                                                                                                                    ]),
                                                                                                                _: 1 /* STABLE */ 
                                                                                                            })
                                                                                                        ]))
                                                                                                    ]),
                                                                                                _: 1 /* STABLE */ 
                                                                                            }),
                                                                                            (0, _vue.createVNode)(_component_v_divider),
                                                                                            (0, _vue.createVNode)(_component_v_sheet, null, {
                                                                                                default: (0, _vue.withCtx)(()=>[
                                                                                                        (0, _vue.createVNode)(_component_v_spacer),
                                                                                                        (0, _vue.createVNode)(_component_v_text_field, {
                                                                                                            modelValue: $setup.search,
                                                                                                            "onUpdate:modelValue": _cache[4] || (_cache[4] = ($event)=>$setup.search = $event),
                                                                                                            density: "compact",
                                                                                                            label: "Search",
                                                                                                            "prepend-inner-icon": "mdi-magnify",
                                                                                                            variant: "solo-filled",
                                                                                                            flat: "",
                                                                                                            "hide-details": "",
                                                                                                            "single-line": ""
                                                                                                        }, null, 8 /* PROPS */ , [
                                                                                                            "modelValue"
                                                                                                        ]),
                                                                                                        (0, _vue.createVNode)(_component_v_data_table, {
                                                                                                            search: $setup.search,
                                                                                                            "onUpdate:search": _cache[5] || (_cache[5] = ($event)=>$setup.search = $event),
                                                                                                            items: $setup.themes_data,
                                                                                                            headers: $setup.theme_headers,
                                                                                                            "item-key": "id"
                                                                                                        }, {
                                                                                                            "item.active": (0, _vue.withCtx)(({ item })=>[
                                                                                                                    item.Active && !item.Network ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_16, [
                                                                                                                        (0, _vue.createVNode)(_component_v_icon, {
                                                                                                                            color: "success",
                                                                                                                            icon: "mdi-check-bold",
                                                                                                                            size: "large",
                                                                                                                            class: "rm-4"
                                                                                                                        })
                                                                                                                    ])) : (0, _vue.createCommentVNode)("v-if", true),
                                                                                                                    item.Active && item.Network ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_17, [
                                                                                                                        (0, _vue.createVNode)(_component_v_icon, {
                                                                                                                            color: "success",
                                                                                                                            icon: "mdi-check-network-outline",
                                                                                                                            size: "large",
                                                                                                                            class: "rm-4"
                                                                                                                        })
                                                                                                                    ])) : (0, _vue.createCommentVNode)("v-if", true)
                                                                                                                ]),
                                                                                                            "item.child": (0, _vue.withCtx)(({ item })=>[
                                                                                                                    item.IsChildTheme ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_18, [
                                                                                                                        (0, _vue.createVNode)(_component_v_icon, {
                                                                                                                            color: "success",
                                                                                                                            icon: "mdi-check-bold",
                                                                                                                            size: "large",
                                                                                                                            class: "rm-4"
                                                                                                                        })
                                                                                                                    ])) : (0, _vue.createCommentVNode)("v-if", true)
                                                                                                                ]),
                                                                                                            "item.update": (0, _vue.withCtx)(({ item })=>[
                                                                                                                    item.Update ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_19, [
                                                                                                                        (0, _vue.createVNode)(_component_v_icon, {
                                                                                                                            color: "success",
                                                                                                                            icon: "mdi-check-bold",
                                                                                                                            size: "large",
                                                                                                                            class: "rm-4"
                                                                                                                        }),
                                                                                                                        (0, _vue.createTextVNode)(" " + (0, _vue.toDisplayString)(item.UpdateVersion), 1 /* TEXT */ )
                                                                                                                    ])) : (0, _vue.createCommentVNode)("v-if", true)
                                                                                                                ]),
                                                                                                            _: 1 /* STABLE */ 
                                                                                                        }, 8 /* PROPS */ , [
                                                                                                            "search"
                                                                                                        ])
                                                                                                    ]),
                                                                                                _: 1 /* STABLE */ 
                                                                                            })
                                                                                        ]),
                                                                                    _: 1 /* STABLE */ 
                                                                                })
                                                                            ]),
                                                                        _: 1 /* STABLE */ 
                                                                    }, 8 /* PROPS */ , [
                                                                        "modelValue"
                                                                    ])
                                                                ]),
                                                            _: 1 /* STABLE */ 
                                                        })
                                                    ]),
                                                _: 1 /* STABLE */ 
                                            })
                                        ]),
                                    _: 1 /* STABLE */ 
                                })
                            ]),
                        _: 1 /* STABLE */ 
                    })
                ]),
            _: 1 /* STABLE */ 
        }, 8 /* PROPS */ , [
            "modelValue"
        ]),
        (0, _vue.createVNode)(_component_v_dialog, {
            modelValue: $setup.dialogInner,
            "onUpdate:modelValue": _cache[9] || (_cache[9] = ($event)=>$setup.dialogInner = $event),
            "min-width": "600"
        }, {
            default: (0, _vue.withCtx)(()=>[
                    (0, _vue.createVNode)(_component_v_card, null, {
                        default: (0, _vue.withCtx)(()=>[
                                (0, _vue.createVNode)(_component_v_toolbar, null, {
                                    default: (0, _vue.withCtx)(()=>[
                                            (0, _vue.createVNode)(_component_v_btn, {
                                                icon: "mdi-close",
                                                onClick: _cache[8] || (_cache[8] = ($event)=>$setup.dialogInner = false)
                                            }),
                                            (0, _vue.createVNode)(_component_v_toolbar_title, null, {
                                                default: (0, _vue.withCtx)(()=>[
                                                        (0, _vue.createTextVNode)("List of vulnerabilities ")
                                                    ]),
                                                _: 1 /* STABLE */ 
                                            })
                                        ]),
                                    _: 1 /* STABLE */ 
                                }),
                                (0, _vue.createVNode)(_component_v_card_text, null, {
                                    default: (0, _vue.withCtx)(()=>[
                                            ((0, _vue.openBlock)(true), (0, _vue.createElementBlock)((0, _vue.Fragment), null, (0, _vue.renderList)($setup.vulnerabilitiesItem.Vulnerabilities, (vul)=>{
                                                return (0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_sheet, null, {
                                                    default: (0, _vue.withCtx)(()=>[
                                                            (0, _vue.createElementVNode)("div", null, [
                                                                (0, _vue.createElementVNode)("strong", null, (0, _vue.toDisplayString)(vul.name), 1 /* TEXT */ )
                                                            ]),
                                                            "cwe" in vul.impact ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_20, [
                                                                (0, _vue.createElementVNode)("div", null, (0, _vue.toDisplayString)(vul.impact.cwe[0].name), 1 /* TEXT */ ),
                                                                (0, _vue.createElementVNode)("div", null, (0, _vue.toDisplayString)(vul.impact.cwe[0].description), 1 /* TEXT */ )
                                                            ])) : (0, _vue.createCommentVNode)("v-if", true),
                                                            _hoisted_21,
                                                            ((0, _vue.openBlock)(true), (0, _vue.createElementBlock)((0, _vue.Fragment), null, (0, _vue.renderList)(vul.source, (src)=>{
                                                                return (0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_22, [
                                                                    (0, _vue.createElementVNode)("div", _hoisted_23, [
                                                                        (0, _vue.createTextVNode)((0, _vue.toDisplayString)(src.date) + " - ", 1 /* TEXT */ ),
                                                                        (0, _vue.createElementVNode)("a", {
                                                                            href: src.link,
                                                                            target: "_blank"
                                                                        }, (0, _vue.toDisplayString)(src.name), 9 /* TEXT, PROPS */ , _hoisted_24)
                                                                    ]),
                                                                    (0, _vue.createElementVNode)("div", _hoisted_25, (0, _vue.toDisplayString)(src.description), 1 /* TEXT */ )
                                                                ]);
                                                            }), 256 /* UNKEYED_FRAGMENT */ )),
                                                            (0, _vue.createVNode)(_component_v_divider, {
                                                                class: "mt-4 mb-4"
                                                            })
                                                        ]),
                                                    _: 2 /* DYNAMIC */ 
                                                }, 1024 /* DYNAMIC_SLOTS */ );
                                            }), 256 /* UNKEYED_FRAGMENT */ ))
                                        ]),
                                    _: 1 /* STABLE */ 
                                })
                            ]),
                        _: 1 /* STABLE */ 
                    })
                ]),
            _: 1 /* STABLE */ 
        }, 8 /* PROPS */ , [
            "modelValue"
        ])
    ]);
}
if (module.hot) module.hot.accept(()=>{
    __VUE_HMR_RUNTIME__.rerender("a14a40-hmr", render);
});

},{"vue":"gCTam","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"kAFhE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
let NOOP = ()=>{};
exports.default = (script)=>{};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"jr9wA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
let script;
let initialize = ()=>{
    script = require("4737468c599e922c");
    if (script.__esModule) script = script.default;
    script.render = require("9c6064eb1efa18b3").render;
    script.__cssModules = require("9134724363018d1f").default;
    require("9c3c92c247ac048a").default(script);
    script.__scopeId = "data-v-03ce50";
    script.__file = "/Users/rm/Local Sites/wp-juggler-server/app/public/wp-content/plugins/wp-juggler-server/src/control-panel/vue/HealthPanel.vue";
};
initialize();
if (module.hot) {
    script.__hmrId = "03ce50-hmr";
    module.hot.accept(()=>{
        setTimeout(()=>{
            initialize();
            if (!__VUE_HMR_RUNTIME__.createRecord("03ce50-hmr", script)) __VUE_HMR_RUNTIME__.reload("03ce50-hmr", script);
        }, 0);
    });
}
exports.default = script;

},{"4737468c599e922c":"b3MHY","9c6064eb1efa18b3":"iRXvH","9134724363018d1f":"bpKOx","9c3c92c247ac048a":"b2Rnh","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"b3MHY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _storeJs = require("./store.js");
var _vue = require("vue");
var _vueQuery = require("@tanstack/vue-query");
exports.default = {
    __name: "HealthPanel",
    setup (__props, { expose: __expose }) {
        __expose();
        const store = (0, _storeJs.useWpjsStore)();
        const passedOpen = (0, _vue.ref)(false);
        const search = (0, _vue.ref)("");
        const dialogInner = (0, _vue.ref)(false);
        const vulnerabilitiesItem = (0, _vue.ref)(null);
        const tab = (0, _vue.ref)(0);
        const { isLoading, isError, isFetching, data, error, refetch } = (0, _vueQuery.useQuery)({
            queryKey: [
                "wpjs-health-panel",
                store.activatedSite.id
            ],
            queryFn: getHealthPanel
        });
        async function getHealthPanel() {
            let ret = {};
            const response = await doAjax({
                action: "wpjs-get-health-panel",
                siteId: store.activatedSite.id
            });
            ret = response.data[0];
            return ret;
        }
        async function doAjax(args) {
            let result;
            try {
                const response = await fetch(store.ajaxUrl, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/x-www-form-urlencoded"
                    },
                    body: new URLSearchParams(args)
                });
                const result = await response.json();
                return result;
            } catch (error) {
                throw error;
            }
        }
        const recommendations = (0, _vue.computed)(()=>{
            return data.value.wp_juggler_health_data_status.filter((item)=>item.status === "recommended" && item.test !== "rest_availability");
        });
        const goods = (0, _vue.computed)(()=>{
            return data.value.wp_juggler_health_data_status.filter((item)=>item.status === "good" && item.test !== "rest_availability");
        });
        const openIcon = (0, _vue.computed)(()=>{
            return passedOpen.value ? "mdi-chevron-up" : "mdi-chevron-down";
        });
        function debugFields(fieldArray) {
            return fieldArray.filter((item)=>item.debug !== "loading...");
        }
        const __returned__ = {
            store,
            passedOpen,
            search,
            dialogInner,
            vulnerabilitiesItem,
            tab,
            isLoading,
            isError,
            isFetching,
            data,
            error,
            refetch,
            getHealthPanel,
            doAjax,
            recommendations,
            goods,
            openIcon,
            debugFields,
            get useWpjsStore () {
                return 0, _storeJs.useWpjsStore;
            },
            onMounted: (0, _vue.onMounted),
            computed: (0, _vue.computed),
            ref: (0, _vue.ref),
            get useQueryClient () {
                return 0, _vueQuery.useQueryClient;
            },
            get useQuery () {
                return 0, _vueQuery.useQuery;
            },
            get useMutation () {
                return 0, _vueQuery.useMutation;
            }
        };
        Object.defineProperty(__returned__, "__isScriptSetup", {
            enumerable: false,
            value: true
        });
        return __returned__;
    }
};

},{"./store.js":"7kZ8m","vue":"gCTam","@tanstack/vue-query":"aI0Kc","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"iRXvH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "render", ()=>render);
var _vue = require("vue");
const _hoisted_1 = {
    class: "text-center pa-4"
};
const _hoisted_2 = {
    key: 0
};
const _hoisted_3 = {
    key: 1
};
const _hoisted_4 = /*#__PURE__*/ (0, _vue.createElementVNode)("div", {
    class: "text-h6"
}, "Site Health Status", -1 /* HOISTED */ );
const _hoisted_5 = /*#__PURE__*/ (0, _vue.createElementVNode)("div", {
    class: "mt-3 mb-4"
}, "The site health check shows information about your WordPress configuration and items that may need your attention.", -1 /* HOISTED */ );
const _hoisted_6 = {
    class: "text-h6"
};
const _hoisted_7 = /*#__PURE__*/ (0, _vue.createElementVNode)("div", {
    class: "mt-3 mb-4"
}, "Recommended items are considered beneficial to your site, although not as important to prioritize as a critical issue, they may include improvements to things such as; Performance, user experience, and more.", -1 /* HOISTED */ );
const _hoisted_8 = [
    "innerHTML"
];
const _hoisted_9 = [
    "innerHTML"
];
const _hoisted_10 = {
    class: "text-h6"
};
const _hoisted_11 = [
    "innerHTML"
];
const _hoisted_12 = /*#__PURE__*/ (0, _vue.createElementVNode)("div", {
    class: "text-h6"
}, "Site Health Info", -1 /* HOISTED */ );
const _hoisted_13 = {
    class: "wpjs-debug-table-row"
};
function render(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_v_btn = (0, _vue.resolveComponent)("v-btn");
    const _component_v_toolbar_title = (0, _vue.resolveComponent)("v-toolbar-title");
    const _component_v_spacer = (0, _vue.resolveComponent)("v-spacer");
    const _component_v_toolbar_items = (0, _vue.resolveComponent)("v-toolbar-items");
    const _component_v_toolbar = (0, _vue.resolveComponent)("v-toolbar");
    const _component_v_icon = (0, _vue.resolveComponent)("v-icon");
    const _component_v_sheet = (0, _vue.resolveComponent)("v-sheet");
    const _component_v_tab = (0, _vue.resolveComponent)("v-tab");
    const _component_v_tabs = (0, _vue.resolveComponent)("v-tabs");
    const _component_v_expansion_panel_title = (0, _vue.resolveComponent)("v-expansion-panel-title");
    const _component_v_expansion_panel_text = (0, _vue.resolveComponent)("v-expansion-panel-text");
    const _component_v_expansion_panel = (0, _vue.resolveComponent)("v-expansion-panel");
    const _component_v_expansion_panels = (0, _vue.resolveComponent)("v-expansion-panels");
    const _component_v_tabs_window_item = (0, _vue.resolveComponent)("v-tabs-window-item");
    const _component_v_table = (0, _vue.resolveComponent)("v-table");
    const _component_v_tabs_window = (0, _vue.resolveComponent)("v-tabs-window");
    const _component_v_card_text = (0, _vue.resolveComponent)("v-card-text");
    const _component_v_card = (0, _vue.resolveComponent)("v-card");
    const _component_v_dialog = (0, _vue.resolveComponent)("v-dialog");
    return (0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_1, [
        (0, _vue.createVNode)(_component_v_dialog, {
            modelValue: $setup.store.activatedHealth,
            "onUpdate:modelValue": _cache[4] || (_cache[4] = ($event)=>$setup.store.activatedHealth = $event),
            transition: "dialog-bottom-transition",
            fullscreen: ""
        }, {
            default: (0, _vue.withCtx)(()=>[
                    (0, _vue.createVNode)(_component_v_card, null, {
                        default: (0, _vue.withCtx)(()=>[
                                (0, _vue.createVNode)(_component_v_toolbar, null, {
                                    default: (0, _vue.withCtx)(()=>[
                                            (0, _vue.createVNode)(_component_v_btn, {
                                                icon: "mdi-close",
                                                onClick: _cache[0] || (_cache[0] = ($event)=>$setup.store.activatedHealth = false)
                                            }),
                                            (0, _vue.createVNode)(_component_v_toolbar_title, null, {
                                                default: (0, _vue.withCtx)(()=>[
                                                        (0, _vue.createTextVNode)((0, _vue.toDisplayString)($setup.store.activatedSite.title), 1 /* TEXT */ )
                                                    ]),
                                                _: 1 /* STABLE */ 
                                            }),
                                            (0, _vue.createVNode)(_component_v_spacer),
                                            (0, _vue.createVNode)(_component_v_toolbar_items)
                                        ]),
                                    _: 1 /* STABLE */ 
                                }),
                                (0, _vue.createVNode)(_component_v_card_text, null, {
                                    default: (0, _vue.withCtx)(()=>[
                                            (0, _vue.createVNode)(_component_v_sheet, {
                                                class: "pa-4 text-right mx-auto",
                                                elevation: "0",
                                                width: "100%",
                                                rounded: "lg"
                                            }, {
                                                default: (0, _vue.withCtx)(()=>[
                                                        $setup.data ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_2, [
                                                            (0, _vue.createVNode)(_component_v_icon, {
                                                                class: "me-1 pb-1",
                                                                icon: "mdi-refresh",
                                                                size: "18"
                                                            }),
                                                            (0, _vue.createTextVNode)(" " + (0, _vue.toDisplayString)($setup.data.wp_juggler_health_data_timestamp) + " ", 1 /* TEXT */ ),
                                                            (0, _vue.createVNode)(_component_v_btn, {
                                                                class: "ml-3 text-none text-caption"
                                                            }, {
                                                                default: (0, _vue.withCtx)(()=>[
                                                                        (0, _vue.createTextVNode)("Refresh ")
                                                                    ]),
                                                                _: 1 /* STABLE */ 
                                                            })
                                                        ])) : ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_3, [
                                                            (0, _vue.createVNode)(_component_v_icon, {
                                                                class: "me-1 pb-1",
                                                                icon: "mdi-refresh",
                                                                size: "18"
                                                            }),
                                                            (0, _vue.createTextVNode)(" Never "),
                                                            (0, _vue.createVNode)(_component_v_btn, {
                                                                class: "ml-3 text-none text-caption"
                                                            }, {
                                                                default: (0, _vue.withCtx)(()=>[
                                                                        (0, _vue.createTextVNode)("Refresh ")
                                                                    ]),
                                                                _: 1 /* STABLE */ 
                                                            })
                                                        ]))
                                                    ]),
                                                _: 1 /* STABLE */ 
                                            }),
                                            $setup.data ? ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_card, {
                                                key: 0
                                            }, {
                                                default: (0, _vue.withCtx)(()=>[
                                                        (0, _vue.createVNode)(_component_v_tabs, {
                                                            modelValue: $setup.tab,
                                                            "onUpdate:modelValue": _cache[1] || (_cache[1] = ($event)=>$setup.tab = $event),
                                                            "bg-color": "surface"
                                                        }, {
                                                            default: (0, _vue.withCtx)(()=>[
                                                                    (0, _vue.createVNode)(_component_v_tab, {
                                                                        value: "status"
                                                                    }, {
                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                (0, _vue.createTextVNode)("Status")
                                                                            ]),
                                                                        _: 1 /* STABLE */ 
                                                                    }),
                                                                    (0, _vue.createVNode)(_component_v_tab, {
                                                                        value: "info"
                                                                    }, {
                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                (0, _vue.createTextVNode)("Info")
                                                                            ]),
                                                                        _: 1 /* STABLE */ 
                                                                    })
                                                                ]),
                                                            _: 1 /* STABLE */ 
                                                        }, 8 /* PROPS */ , [
                                                            "modelValue"
                                                        ]),
                                                        (0, _vue.createVNode)(_component_v_card_text, {
                                                            class: "mt-10"
                                                        }, {
                                                            default: (0, _vue.withCtx)(()=>[
                                                                    (0, _vue.createVNode)(_component_v_tabs_window, {
                                                                        modelValue: $setup.tab,
                                                                        "onUpdate:modelValue": _cache[3] || (_cache[3] = ($event)=>$setup.tab = $event)
                                                                    }, {
                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                (0, _vue.createVNode)(_component_v_tabs_window_item, {
                                                                                    value: "status",
                                                                                    transition: "false",
                                                                                    "reverse-transition": "false"
                                                                                }, {
                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                            (0, _vue.createVNode)(_component_v_sheet, {
                                                                                                "max-width": "1200",
                                                                                                class: "align-center justify-center text-center mx-auto px-4 pb-4"
                                                                                            }, {
                                                                                                default: (0, _vue.withCtx)(()=>[
                                                                                                        (0, _vue.createVNode)(_component_v_sheet, {
                                                                                                            class: "align-left justify-left text-left mb-10"
                                                                                                        }, {
                                                                                                            default: (0, _vue.withCtx)(()=>[
                                                                                                                    _hoisted_4,
                                                                                                                    _hoisted_5,
                                                                                                                    (0, _vue.createElementVNode)("div", _hoisted_6, (0, _vue.toDisplayString)($setup.recommendations.length) + " recommended improvements", 1 /* TEXT */ ),
                                                                                                                    _hoisted_7,
                                                                                                                    (0, _vue.createVNode)(_component_v_expansion_panels, {
                                                                                                                        class: "mt-8",
                                                                                                                        variant: "accordion"
                                                                                                                    }, {
                                                                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                                                                ((0, _vue.openBlock)(true), (0, _vue.createElementBlock)((0, _vue.Fragment), null, (0, _vue.renderList)($setup.recommendations, (recommendation)=>{
                                                                                                                                    return (0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_expansion_panel, null, {
                                                                                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                                                                                (0, _vue.createVNode)(_component_v_expansion_panel_title, null, {
                                                                                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                                                                                            (0, _vue.createTextVNode)((0, _vue.toDisplayString)(recommendation.label) + " ", 1 /* TEXT */ ),
                                                                                                                                                            (0, _vue.createVNode)(_component_v_spacer),
                                                                                                                                                            (0, _vue.createElementVNode)("div", {
                                                                                                                                                                class: (0, _vue.normalizeClass)([
                                                                                                                                                                    "mr-3 pa-2 wpjs-health-badge-label",
                                                                                                                                                                    recommendation.badge.color
                                                                                                                                                                ])
                                                                                                                                                            }, (0, _vue.toDisplayString)(recommendation.badge.label), 3 /* TEXT, CLASS */ )
                                                                                                                                                        ]),
                                                                                                                                                    _: 2 /* DYNAMIC */ 
                                                                                                                                                }, 1024 /* DYNAMIC_SLOTS */ ),
                                                                                                                                                (0, _vue.createVNode)(_component_v_expansion_panel_text, null, {
                                                                                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                                                                                            (0, _vue.createElementVNode)("div", {
                                                                                                                                                                class: "wpjs-health-panel-description",
                                                                                                                                                                innerHTML: recommendation.description
                                                                                                                                                            }, null, 8 /* PROPS */ , _hoisted_8),
                                                                                                                                                            (0, _vue.createElementVNode)("div", {
                                                                                                                                                                class: "wpjs-health-panel-actions",
                                                                                                                                                                innerHTML: recommendation.actions
                                                                                                                                                            }, null, 8 /* PROPS */ , _hoisted_9)
                                                                                                                                                        ]),
                                                                                                                                                    _: 2 /* DYNAMIC */ 
                                                                                                                                                }, 1024 /* DYNAMIC_SLOTS */ )
                                                                                                                                            ]),
                                                                                                                                        _: 2 /* DYNAMIC */ 
                                                                                                                                    }, 1024 /* DYNAMIC_SLOTS */ );
                                                                                                                                }), 256 /* UNKEYED_FRAGMENT */ ))
                                                                                                                            ]),
                                                                                                                        _: 1 /* STABLE */ 
                                                                                                                    })
                                                                                                                ]),
                                                                                                            _: 1 /* STABLE */ 
                                                                                                        }),
                                                                                                        (0, _vue.createVNode)(_component_v_btn, {
                                                                                                            class: "ml-3 text-none text-caption",
                                                                                                            "append-icon": $setup.openIcon,
                                                                                                            onClick: _cache[2] || (_cache[2] = ($event)=>$setup.passedOpen = !$setup.passedOpen)
                                                                                                        }, {
                                                                                                            default: (0, _vue.withCtx)(()=>[
                                                                                                                    (0, _vue.createTextVNode)("Passed tests")
                                                                                                                ]),
                                                                                                            _: 1 /* STABLE */ 
                                                                                                        }, 8 /* PROPS */ , [
                                                                                                            "append-icon"
                                                                                                        ]),
                                                                                                        $setup.passedOpen ? ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_sheet, {
                                                                                                            key: 0,
                                                                                                            class: "align-left justify-left text-left my-10"
                                                                                                        }, {
                                                                                                            default: (0, _vue.withCtx)(()=>[
                                                                                                                    (0, _vue.createElementVNode)("div", _hoisted_10, (0, _vue.toDisplayString)($setup.goods.length) + " items with no issues detected", 1 /* TEXT */ ),
                                                                                                                    (0, _vue.createVNode)(_component_v_expansion_panels, {
                                                                                                                        class: "mt-8",
                                                                                                                        variant: "accordion"
                                                                                                                    }, {
                                                                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                                                                ((0, _vue.openBlock)(true), (0, _vue.createElementBlock)((0, _vue.Fragment), null, (0, _vue.renderList)($setup.goods, (good)=>{
                                                                                                                                    return (0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_expansion_panel, null, {
                                                                                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                                                                                (0, _vue.createVNode)(_component_v_expansion_panel_title, null, {
                                                                                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                                                                                            (0, _vue.createTextVNode)((0, _vue.toDisplayString)(good.label) + " ", 1 /* TEXT */ ),
                                                                                                                                                            (0, _vue.createVNode)(_component_v_spacer),
                                                                                                                                                            (0, _vue.createElementVNode)("div", {
                                                                                                                                                                class: (0, _vue.normalizeClass)([
                                                                                                                                                                    "mr-3 pa-2 wpjs-health-badge-label",
                                                                                                                                                                    good.badge.color
                                                                                                                                                                ])
                                                                                                                                                            }, (0, _vue.toDisplayString)(good.badge.label), 3 /* TEXT, CLASS */ )
                                                                                                                                                        ]),
                                                                                                                                                    _: 2 /* DYNAMIC */ 
                                                                                                                                                }, 1024 /* DYNAMIC_SLOTS */ ),
                                                                                                                                                (0, _vue.createVNode)(_component_v_expansion_panel_text, null, {
                                                                                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                                                                                            (0, _vue.createElementVNode)("div", {
                                                                                                                                                                class: "wpjs-health-panel-description",
                                                                                                                                                                innerHTML: good.description
                                                                                                                                                            }, null, 8 /* PROPS */ , _hoisted_11)
                                                                                                                                                        ]),
                                                                                                                                                    _: 2 /* DYNAMIC */ 
                                                                                                                                                }, 1024 /* DYNAMIC_SLOTS */ )
                                                                                                                                            ]),
                                                                                                                                        _: 2 /* DYNAMIC */ 
                                                                                                                                    }, 1024 /* DYNAMIC_SLOTS */ );
                                                                                                                                }), 256 /* UNKEYED_FRAGMENT */ ))
                                                                                                                            ]),
                                                                                                                        _: 1 /* STABLE */ 
                                                                                                                    })
                                                                                                                ]),
                                                                                                            _: 1 /* STABLE */ 
                                                                                                        })) : (0, _vue.createCommentVNode)("v-if", true)
                                                                                                    ]),
                                                                                                _: 1 /* STABLE */ 
                                                                                            })
                                                                                        ]),
                                                                                    _: 1 /* STABLE */ 
                                                                                }),
                                                                                (0, _vue.createVNode)(_component_v_tabs_window_item, {
                                                                                    value: "info",
                                                                                    transition: "false",
                                                                                    "reverse-transition": "false"
                                                                                }, {
                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                            (0, _vue.createVNode)(_component_v_sheet, {
                                                                                                "max-width": "1200",
                                                                                                class: "align-center justify-center text-center mx-auto px-4"
                                                                                            }, {
                                                                                                default: (0, _vue.withCtx)(()=>[
                                                                                                        (0, _vue.createVNode)(_component_v_sheet, {
                                                                                                            class: "align-left justify-left text-left mb-10"
                                                                                                        }, {
                                                                                                            default: (0, _vue.withCtx)(()=>[
                                                                                                                    _hoisted_12,
                                                                                                                    (0, _vue.createVNode)(_component_v_expansion_panels, {
                                                                                                                        class: "mt-8",
                                                                                                                        variant: "accordion"
                                                                                                                    }, {
                                                                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                                                                ((0, _vue.openBlock)(true), (0, _vue.createElementBlock)((0, _vue.Fragment), null, (0, _vue.renderList)($setup.data.wp_juggler_health_data_info, (debug)=>{
                                                                                                                                    return (0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_expansion_panel, null, {
                                                                                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                                                                                debug.fields.length > 0 && debug.show_count ? ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_expansion_panel_title, {
                                                                                                                                                    key: 0
                                                                                                                                                }, {
                                                                                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                                                                                            (0, _vue.createTextVNode)((0, _vue.toDisplayString)(debug.label) + " (" + (0, _vue.toDisplayString)(debug.fields.length) + ") ", 1 /* TEXT */ )
                                                                                                                                                        ]),
                                                                                                                                                    _: 2 /* DYNAMIC */ 
                                                                                                                                                }, 1024 /* DYNAMIC_SLOTS */ )) : debug.fields.length > 0 ? ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_expansion_panel_title, {
                                                                                                                                                    key: 1
                                                                                                                                                }, {
                                                                                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                                                                                            (0, _vue.createTextVNode)((0, _vue.toDisplayString)(debug.label), 1 /* TEXT */ )
                                                                                                                                                        ]),
                                                                                                                                                    _: 2 /* DYNAMIC */ 
                                                                                                                                                }, 1024 /* DYNAMIC_SLOTS */ )) : (0, _vue.createCommentVNode)("v-if", true),
                                                                                                                                                (0, _vue.createVNode)(_component_v_expansion_panel_text, null, {
                                                                                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                                                                                            (0, _vue.createVNode)(_component_v_table, {
                                                                                                                                                                density: "compact"
                                                                                                                                                            }, {
                                                                                                                                                                default: (0, _vue.withCtx)(()=>[
                                                                                                                                                                        (0, _vue.createElementVNode)("tbody", null, [
                                                                                                                                                                            ((0, _vue.openBlock)(true), (0, _vue.createElementBlock)((0, _vue.Fragment), null, (0, _vue.renderList)($setup.debugFields(debug.fields), (field)=>{
                                                                                                                                                                                return (0, _vue.openBlock)(), (0, _vue.createElementBlock)("tr", _hoisted_13, [
                                                                                                                                                                                    (0, _vue.createElementVNode)("td", null, (0, _vue.toDisplayString)(field.label), 1 /* TEXT */ ),
                                                                                                                                                                                    (0, _vue.createElementVNode)("td", null, (0, _vue.toDisplayString)(field.value), 1 /* TEXT */ )
                                                                                                                                                                                ]);
                                                                                                                                                                            }), 256 /* UNKEYED_FRAGMENT */ ))
                                                                                                                                                                        ])
                                                                                                                                                                    ]),
                                                                                                                                                                _: 2 /* DYNAMIC */ 
                                                                                                                                                            }, 1024 /* DYNAMIC_SLOTS */ )
                                                                                                                                                        ]),
                                                                                                                                                    _: 2 /* DYNAMIC */ 
                                                                                                                                                }, 1024 /* DYNAMIC_SLOTS */ )
                                                                                                                                            ]),
                                                                                                                                        _: 2 /* DYNAMIC */ 
                                                                                                                                    }, 1024 /* DYNAMIC_SLOTS */ );
                                                                                                                                }), 256 /* UNKEYED_FRAGMENT */ ))
                                                                                                                            ]),
                                                                                                                        _: 1 /* STABLE */ 
                                                                                                                    })
                                                                                                                ]),
                                                                                                            _: 1 /* STABLE */ 
                                                                                                        })
                                                                                                    ]),
                                                                                                _: 1 /* STABLE */ 
                                                                                            })
                                                                                        ]),
                                                                                    _: 1 /* STABLE */ 
                                                                                })
                                                                            ]),
                                                                        _: 1 /* STABLE */ 
                                                                    }, 8 /* PROPS */ , [
                                                                        "modelValue"
                                                                    ])
                                                                ]),
                                                            _: 1 /* STABLE */ 
                                                        })
                                                    ]),
                                                _: 1 /* STABLE */ 
                                            })) : (0, _vue.createCommentVNode)("v-if", true)
                                        ]),
                                    _: 1 /* STABLE */ 
                                })
                            ]),
                        _: 1 /* STABLE */ 
                    })
                ]),
            _: 1 /* STABLE */ 
        }, 8 /* PROPS */ , [
            "modelValue"
        ])
    ]);
}
if (module.hot) module.hot.accept(()=>{
    __VUE_HMR_RUNTIME__.rerender("03ce50-hmr", render);
});

},{"vue":"gCTam","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"bpKOx":[function() {},{}],"b2Rnh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
let NOOP = ()=>{};
exports.default = (script)=>{};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"hwbx4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
let script;
let initialize = ()=>{
    script = require("a1f05650abaec17a");
    if (script.__esModule) script = script.default;
    script.render = require("e48904655aba27e4").render;
    script.__cssModules = require("cd6135384bed4502").default;
    require("33adb7bb0be0a46d").default(script);
    script.__scopeId = "data-v-51cfb5";
    script.__file = "/Users/rm/Local Sites/wp-juggler-server/app/public/wp-content/plugins/wp-juggler-server/src/control-panel/vue/UptimePanel.vue";
};
initialize();
if (module.hot) {
    script.__hmrId = "51cfb5-hmr";
    module.hot.accept(()=>{
        setTimeout(()=>{
            initialize();
            if (!__VUE_HMR_RUNTIME__.createRecord("51cfb5-hmr", script)) __VUE_HMR_RUNTIME__.reload("51cfb5-hmr", script);
        }, 0);
    });
}
exports.default = script;

},{"a1f05650abaec17a":"lz6Pg","e48904655aba27e4":"djPmG","cd6135384bed4502":"aRmPX","33adb7bb0be0a46d":"acLJl","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"lz6Pg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _storeJs = require("./store.js");
var _vue = require("vue");
var _vueQuery = require("@tanstack/vue-query");
exports.default = {
    __name: "UptimePanel",
    setup (__props, { expose: __expose }) {
        __expose();
        const store = (0, _storeJs.useWpjsStore)();
        const passedOpen = (0, _vue.ref)(false);
        const search = (0, _vue.ref)("");
        const dialogInner = (0, _vue.ref)(false);
        const vulnerabilitiesItem = (0, _vue.ref)(null);
        const tab = (0, _vue.ref)(0);
        const { isLoading, isError, isFetching, data, error, refetch } = (0, _vueQuery.useQuery)({
            queryKey: [
                "wpjs-health-panel",
                store.activatedSite.id
            ],
            queryFn: getHealthPanel
        });
        async function getHealthPanel() {
            let ret = {};
            const response = await doAjax({
                action: "wpjs-get-health-panel",
                siteId: store.activatedSite.id
            });
            ret = response.data[0];
            return ret;
        }
        async function doAjax(args) {
            let result;
            try {
                const response = await fetch(store.ajaxUrl, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/x-www-form-urlencoded"
                    },
                    body: new URLSearchParams(args)
                });
                const result = await response.json();
                return result;
            } catch (error) {
                throw error;
            }
        }
        const recommendations = (0, _vue.computed)(()=>{
            return data.value.wp_juggler_health_data_status.filter((item)=>item.status === "recommended" && item.test !== "rest_availability");
        });
        const goods = (0, _vue.computed)(()=>{
            return data.value.wp_juggler_health_data_status.filter((item)=>item.status === "good" && item.test !== "rest_availability");
        });
        const openIcon = (0, _vue.computed)(()=>{
            return passedOpen.value ? "mdi-chevron-up" : "mdi-chevron-down";
        });
        function debugFields(fieldArray) {
            return fieldArray.filter((item)=>item.debug !== "loading...");
        }
        const __returned__ = {
            store,
            passedOpen,
            search,
            dialogInner,
            vulnerabilitiesItem,
            tab,
            isLoading,
            isError,
            isFetching,
            data,
            error,
            refetch,
            getHealthPanel,
            doAjax,
            recommendations,
            goods,
            openIcon,
            debugFields,
            get useWpjsStore () {
                return 0, _storeJs.useWpjsStore;
            },
            onMounted: (0, _vue.onMounted),
            computed: (0, _vue.computed),
            ref: (0, _vue.ref),
            get useQueryClient () {
                return 0, _vueQuery.useQueryClient;
            },
            get useQuery () {
                return 0, _vueQuery.useQuery;
            },
            get useMutation () {
                return 0, _vueQuery.useMutation;
            }
        };
        Object.defineProperty(__returned__, "__isScriptSetup", {
            enumerable: false,
            value: true
        });
        return __returned__;
    }
};

},{"./store.js":"7kZ8m","vue":"gCTam","@tanstack/vue-query":"aI0Kc","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"djPmG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "render", ()=>render);
var _vue = require("vue");
const _hoisted_1 = {
    class: "text-center pa-4"
};
const _hoisted_2 = /*#__PURE__*/ (0, _vue.createElementVNode)("div", {
    class: "text-h6"
}, "Incidents over the past 90 days", -1 /* HOISTED */ );
const _hoisted_3 = /*#__PURE__*/ (0, _vue.createElementVNode)("div", {
    class: "text-h6"
}, "API", -1 /* HOISTED */ );
const _hoisted_4 = /*#__PURE__*/ (0, _vue.createElementVNode)("svg", {
    class: "availability-time-line-graphic mx-auto",
    id: "uptime-component-qgf0gk4xsbmd",
    preserveAspectRatio: "none",
    height: "34",
    viewBox: "0 0 448 34"
}, [
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "0",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-0",
        "data-html": "true",
        tabindex: "0",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "5",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-1",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "10",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-2",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "15",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-3",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "20",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-4",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "25",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-5",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "30",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-6",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "35",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-7",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "40",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-8",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "45",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-9",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "50",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-10",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "55",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-11",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "60",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-12",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "65",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-13",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "70",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-14",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "75",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-15",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "80",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-16",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "85",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-17",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "90",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-18",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "95",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-19",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "100",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-20",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "105",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-21",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "110",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-22",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "115",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-23",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "120",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-24",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "125",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-25",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "130",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-26",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "135",
        y: "0",
        fill: "#97b43d",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-27",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "140",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-28",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "145",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-29",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "150",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-30",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "155",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-31",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "160",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-32",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "165",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-33",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "170",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-34",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "175",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-35",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "180",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-36",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "185",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-37",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "190",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-38",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "195",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-39",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "200",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-40",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "205",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-41",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "210",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-42",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "215",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-43",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "220",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-44",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "225",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-45",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "230",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-46",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "235",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-47",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "240",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-48",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "245",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-49",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "250",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-50",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "255",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-51",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "260",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-52",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "265",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-53",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "270",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-54",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "275",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-55",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "280",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-56",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "285",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-57",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "290",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-58",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "295",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-59",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "300",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-60",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "305",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-61",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "310",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-62",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "315",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-63",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "320",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-64",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "325",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-65",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "330",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-66",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "335",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-67",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "340",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-68",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "345",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-69",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "350",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-70",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "355",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-71",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "360",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-72",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "365",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-73",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "370",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-74",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "375",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-75",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "380",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-76",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "385",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-77",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "390",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-78",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "395",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-79",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "400",
        y: "0",
        fill: "#e3b411",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-80",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "405",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-81",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "410",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-82",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "415",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-83",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "420",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-84",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "425",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-85",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "430",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-86",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "435",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-87",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "440",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-88",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "445",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-89",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    })
], -1 /* HOISTED */ );
const _hoisted_5 = /*#__PURE__*/ (0, _vue.createElementVNode)("div", {
    class: "text-h6"
}, "Front-End", -1 /* HOISTED */ );
const _hoisted_6 = /*#__PURE__*/ (0, _vue.createElementVNode)("svg", {
    class: "availability-time-line-graphic mx-auto",
    id: "uptime-component-qgf0gk4xsbmd",
    preserveAspectRatio: "none",
    height: "34",
    viewBox: "0 0 448 34"
}, [
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "0",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-0",
        "data-html": "true",
        tabindex: "0",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "5",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-1",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "10",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-2",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "15",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-3",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "20",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-4",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "25",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-5",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "30",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-6",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "35",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-7",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "40",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-8",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "45",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-9",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "50",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-10",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "55",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-11",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "60",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-12",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "65",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-13",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "70",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-14",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "75",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-15",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "80",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-16",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "85",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-17",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "90",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-18",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "95",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-19",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "100",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-20",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "105",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-21",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "110",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-22",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "115",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-23",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "120",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-24",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "125",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-25",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "130",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-26",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "135",
        y: "0",
        fill: "#97b43d",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-27",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "140",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-28",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "145",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-29",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "150",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-30",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "155",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-31",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "160",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-32",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "165",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-33",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "170",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-34",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "175",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-35",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "180",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-36",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "185",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-37",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "190",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-38",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "195",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-39",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "200",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-40",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "205",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-41",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "210",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-42",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "215",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-43",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "220",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-44",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "225",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-45",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "230",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-46",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "235",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-47",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "240",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-48",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "245",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-49",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "250",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-50",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "255",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-51",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "260",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-52",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "265",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-53",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "270",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-54",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "275",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-55",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "280",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-56",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "285",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-57",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "290",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-58",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "295",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-59",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "300",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-60",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "305",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-61",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "310",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-62",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "315",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-63",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "320",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-64",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "325",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-65",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "330",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-66",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "335",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-67",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "340",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-68",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "345",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-69",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "350",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-70",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "355",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-71",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "360",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-72",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "365",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-73",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "370",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-74",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "375",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-75",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "380",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-76",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "385",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-77",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "390",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-78",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "395",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-79",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "400",
        y: "0",
        fill: "#e3b411",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-80",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "405",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-81",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "410",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-82",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "415",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-83",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "420",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-84",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "425",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-85",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "430",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-86",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "435",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-87",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "440",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-88",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    }),
    /*#__PURE__*/ (0, _vue.createElementVNode)("rect", {
        height: "34",
        width: "3",
        x: "445",
        y: "0",
        fill: "#26b47f",
        role: "tab",
        class: "uptime-day component-qgf0gk4xsbmd day-89",
        "data-html": "true",
        tabindex: "-1",
        "aria-describedby": "uptime-tooltip"
    })
], -1 /* HOISTED */ );
const _hoisted_7 = /*#__PURE__*/ (0, _vue.createElementVNode)("div", {
    class: "text-h6 mt-15"
}, "Incident History", -1 /* HOISTED */ );
const _hoisted_8 = /*#__PURE__*/ (0, _vue.createElementVNode)("div", {
    class: "text-h6 mt-10"
}, "Sep 2024", -1 /* HOISTED */ );
const _hoisted_9 = /*#__PURE__*/ (0, _vue.createElementVNode)("div", {
    class: "text-h6 mt-10"
}, "Aug 2024", -1 /* HOISTED */ );
const _hoisted_10 = /*#__PURE__*/ (0, _vue.createElementVNode)("div", {
    class: "text-h6 mt-10"
}, "Aug 2024", -1 /* HOISTED */ );
function render(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_v_btn = (0, _vue.resolveComponent)("v-btn");
    const _component_v_toolbar_title = (0, _vue.resolveComponent)("v-toolbar-title");
    const _component_v_spacer = (0, _vue.resolveComponent)("v-spacer");
    const _component_v_toolbar_items = (0, _vue.resolveComponent)("v-toolbar-items");
    const _component_v_toolbar = (0, _vue.resolveComponent)("v-toolbar");
    const _component_v_col = (0, _vue.resolveComponent)("v-col");
    const _component_v_row = (0, _vue.resolveComponent)("v-row");
    const _component_v_sheet = (0, _vue.resolveComponent)("v-sheet");
    const _component_v_divider = (0, _vue.resolveComponent)("v-divider");
    const _component_v_card_text = (0, _vue.resolveComponent)("v-card-text");
    const _component_v_card = (0, _vue.resolveComponent)("v-card");
    const _component_v_dialog = (0, _vue.resolveComponent)("v-dialog");
    return (0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_1, [
        (0, _vue.createVNode)(_component_v_dialog, {
            modelValue: $setup.store.activatedUptime,
            "onUpdate:modelValue": _cache[1] || (_cache[1] = ($event)=>$setup.store.activatedUptime = $event),
            transition: "dialog-bottom-transition",
            fullscreen: ""
        }, {
            default: (0, _vue.withCtx)(()=>[
                    (0, _vue.createVNode)(_component_v_card, null, {
                        default: (0, _vue.withCtx)(()=>[
                                (0, _vue.createVNode)(_component_v_toolbar, null, {
                                    default: (0, _vue.withCtx)(()=>[
                                            (0, _vue.createVNode)(_component_v_btn, {
                                                icon: "mdi-close",
                                                onClick: _cache[0] || (_cache[0] = ($event)=>$setup.store.activatedUptime = false)
                                            }),
                                            (0, _vue.createVNode)(_component_v_toolbar_title, null, {
                                                default: (0, _vue.withCtx)(()=>[
                                                        (0, _vue.createTextVNode)((0, _vue.toDisplayString)($setup.store.activatedSite.title), 1 /* TEXT */ )
                                                    ]),
                                                _: 1 /* STABLE */ 
                                            }),
                                            (0, _vue.createVNode)(_component_v_spacer),
                                            (0, _vue.createVNode)(_component_v_toolbar_items)
                                        ]),
                                    _: 1 /* STABLE */ 
                                }),
                                (0, _vue.createVNode)(_component_v_card_text, null, {
                                    default: (0, _vue.withCtx)(()=>[
                                            $setup.data ? ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_card, {
                                                key: 0,
                                                class: "mt-10"
                                            }, {
                                                default: (0, _vue.withCtx)(()=>[
                                                        (0, _vue.createVNode)(_component_v_card_text, null, {
                                                            default: (0, _vue.withCtx)(()=>[
                                                                    (0, _vue.createVNode)(_component_v_sheet, {
                                                                        "max-width": "1200",
                                                                        class: "align-center justify-center text-center mx-auto px-4 pb-4 mb-10"
                                                                    }, {
                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                _hoisted_2,
                                                                                (0, _vue.createVNode)(_component_v_sheet, {
                                                                                    class: "align-center justify-center text-center mb-15 mt-10 mx-auto"
                                                                                }, {
                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                            (0, _vue.createVNode)(_component_v_row, null, {
                                                                                                default: (0, _vue.withCtx)(()=>[
                                                                                                        (0, _vue.createVNode)(_component_v_col, null, {
                                                                                                            default: (0, _vue.withCtx)(()=>[
                                                                                                                    (0, _vue.createVNode)(_component_v_row, {
                                                                                                                        class: "py-0"
                                                                                                                    }, {
                                                                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                                                                (0, _vue.createVNode)(_component_v_col, {
                                                                                                                                    class: "text-left pl-15 py-4"
                                                                                                                                }, {
                                                                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                                                                            _hoisted_3
                                                                                                                                        ]),
                                                                                                                                    _: 1 /* STABLE */ 
                                                                                                                                })
                                                                                                                            ]),
                                                                                                                        _: 1 /* STABLE */ 
                                                                                                                    }),
                                                                                                                    (0, _vue.createVNode)(_component_v_row, null, {
                                                                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                                                                (0, _vue.createVNode)(_component_v_col, {
                                                                                                                                    class: "align-center justify-center text-center py-0"
                                                                                                                                }, {
                                                                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                                                                            _hoisted_4
                                                                                                                                        ]),
                                                                                                                                    _: 1 /* STABLE */ 
                                                                                                                                })
                                                                                                                            ]),
                                                                                                                        _: 1 /* STABLE */ 
                                                                                                                    }),
                                                                                                                    (0, _vue.createVNode)(_component_v_row, {
                                                                                                                        class: "py-0"
                                                                                                                    }, {
                                                                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                                                                (0, _vue.createVNode)(_component_v_col, {
                                                                                                                                    class: "text-left pl-15 py-0"
                                                                                                                                }, {
                                                                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                                                                            (0, _vue.createTextVNode)(" 90 days ago ")
                                                                                                                                        ]),
                                                                                                                                    _: 1 /* STABLE */ 
                                                                                                                                }),
                                                                                                                                (0, _vue.createVNode)(_component_v_col, {
                                                                                                                                    class: "text-right pr-15 py-0"
                                                                                                                                }, {
                                                                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                                                                            (0, _vue.createTextVNode)(" Today ")
                                                                                                                                        ]),
                                                                                                                                    _: 1 /* STABLE */ 
                                                                                                                                })
                                                                                                                            ]),
                                                                                                                        _: 1 /* STABLE */ 
                                                                                                                    })
                                                                                                                ]),
                                                                                                            _: 1 /* STABLE */ 
                                                                                                        }),
                                                                                                        (0, _vue.createVNode)(_component_v_col, null, {
                                                                                                            default: (0, _vue.withCtx)(()=>[
                                                                                                                    (0, _vue.createVNode)(_component_v_row, {
                                                                                                                        class: "py-0"
                                                                                                                    }, {
                                                                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                                                                (0, _vue.createVNode)(_component_v_col, {
                                                                                                                                    class: "text-left pl-15 py-4"
                                                                                                                                }, {
                                                                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                                                                            _hoisted_5
                                                                                                                                        ]),
                                                                                                                                    _: 1 /* STABLE */ 
                                                                                                                                })
                                                                                                                            ]),
                                                                                                                        _: 1 /* STABLE */ 
                                                                                                                    }),
                                                                                                                    (0, _vue.createVNode)(_component_v_row, null, {
                                                                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                                                                (0, _vue.createVNode)(_component_v_col, {
                                                                                                                                    class: "align-center justify-center text-center py-0"
                                                                                                                                }, {
                                                                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                                                                            _hoisted_6
                                                                                                                                        ]),
                                                                                                                                    _: 1 /* STABLE */ 
                                                                                                                                })
                                                                                                                            ]),
                                                                                                                        _: 1 /* STABLE */ 
                                                                                                                    }),
                                                                                                                    (0, _vue.createVNode)(_component_v_row, null, {
                                                                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                                                                (0, _vue.createVNode)(_component_v_col, {
                                                                                                                                    class: "text-left pl-15 py-0"
                                                                                                                                }, {
                                                                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                                                                            (0, _vue.createTextVNode)(" 90 days ago ")
                                                                                                                                        ]),
                                                                                                                                    _: 1 /* STABLE */ 
                                                                                                                                }),
                                                                                                                                (0, _vue.createVNode)(_component_v_col, {
                                                                                                                                    class: "text-right pr-15 py-0"
                                                                                                                                }, {
                                                                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                                                                            (0, _vue.createTextVNode)(" Today ")
                                                                                                                                        ]),
                                                                                                                                    _: 1 /* STABLE */ 
                                                                                                                                })
                                                                                                                            ]),
                                                                                                                        _: 1 /* STABLE */ 
                                                                                                                    })
                                                                                                                ]),
                                                                                                            _: 1 /* STABLE */ 
                                                                                                        })
                                                                                                    ]),
                                                                                                _: 1 /* STABLE */ 
                                                                                            })
                                                                                        ]),
                                                                                    _: 1 /* STABLE */ 
                                                                                }),
                                                                                _hoisted_7,
                                                                                (0, _vue.createVNode)(_component_v_sheet, {
                                                                                    class: "align-left justify-left text-left mb-15 mt-10"
                                                                                }, {
                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                            _hoisted_8,
                                                                                            (0, _vue.createVNode)(_component_v_divider, {
                                                                                                class: "mb-4"
                                                                                            }),
                                                                                            (0, _vue.createTextVNode)(" No incidents reported "),
                                                                                            _hoisted_9,
                                                                                            (0, _vue.createVNode)(_component_v_divider, {
                                                                                                class: "mb-4"
                                                                                            }),
                                                                                            (0, _vue.createTextVNode)(" No incidents reported "),
                                                                                            _hoisted_10,
                                                                                            (0, _vue.createVNode)(_component_v_divider, {
                                                                                                class: "mb-4"
                                                                                            }),
                                                                                            (0, _vue.createVNode)(_component_v_sheet, null, {
                                                                                                default: (0, _vue.withCtx)(()=>[
                                                                                                        (0, _vue.createVNode)(_component_v_row, {
                                                                                                            class: "wpjs-debug-table-row"
                                                                                                        }, {
                                                                                                            default: (0, _vue.withCtx)(()=>[
                                                                                                                    (0, _vue.createVNode)(_component_v_col, {
                                                                                                                        class: "text-left"
                                                                                                                    }, {
                                                                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                                                                (0, _vue.createTextVNode)(" Aug 24, 2024 - 13:24:01 ")
                                                                                                                            ]),
                                                                                                                        _: 1 /* STABLE */ 
                                                                                                                    }),
                                                                                                                    (0, _vue.createVNode)(_component_v_col, {
                                                                                                                        class: "text-left"
                                                                                                                    }, {
                                                                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                                                                (0, _vue.createTextVNode)(" Front-End ")
                                                                                                                            ]),
                                                                                                                        _: 1 /* STABLE */ 
                                                                                                                    }),
                                                                                                                    (0, _vue.createVNode)(_component_v_col, {
                                                                                                                        class: "text-left",
                                                                                                                        cols: "6"
                                                                                                                    }, {
                                                                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                                                                (0, _vue.createTextVNode)(" No route was found matching the URL and request method ")
                                                                                                                            ]),
                                                                                                                        _: 1 /* STABLE */ 
                                                                                                                    })
                                                                                                                ]),
                                                                                                            _: 1 /* STABLE */ 
                                                                                                        }),
                                                                                                        (0, _vue.createVNode)(_component_v_row, {
                                                                                                            class: "wpjs-debug-table-row"
                                                                                                        }, {
                                                                                                            default: (0, _vue.withCtx)(()=>[
                                                                                                                    (0, _vue.createVNode)(_component_v_col, {
                                                                                                                        class: "text-left"
                                                                                                                    }, {
                                                                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                                                                (0, _vue.createTextVNode)(" Aug 24, 2024 - 13:24:01 ")
                                                                                                                            ]),
                                                                                                                        _: 1 /* STABLE */ 
                                                                                                                    }),
                                                                                                                    (0, _vue.createVNode)(_component_v_col, {
                                                                                                                        class: "text-left"
                                                                                                                    }, {
                                                                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                                                                (0, _vue.createTextVNode)(" Front-End ")
                                                                                                                            ]),
                                                                                                                        _: 1 /* STABLE */ 
                                                                                                                    }),
                                                                                                                    (0, _vue.createVNode)(_component_v_col, {
                                                                                                                        class: "text-left",
                                                                                                                        cols: "6"
                                                                                                                    }, {
                                                                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                                                                (0, _vue.createTextVNode)(" No route was found matching the URL and request method ")
                                                                                                                            ]),
                                                                                                                        _: 1 /* STABLE */ 
                                                                                                                    })
                                                                                                                ]),
                                                                                                            _: 1 /* STABLE */ 
                                                                                                        })
                                                                                                    ]),
                                                                                                _: 1 /* STABLE */ 
                                                                                            })
                                                                                        ]),
                                                                                    _: 1 /* STABLE */ 
                                                                                })
                                                                            ]),
                                                                        _: 1 /* STABLE */ 
                                                                    })
                                                                ]),
                                                            _: 1 /* STABLE */ 
                                                        })
                                                    ]),
                                                _: 1 /* STABLE */ 
                                            })) : (0, _vue.createCommentVNode)("v-if", true)
                                        ]),
                                    _: 1 /* STABLE */ 
                                })
                            ]),
                        _: 1 /* STABLE */ 
                    })
                ]),
            _: 1 /* STABLE */ 
        }, 8 /* PROPS */ , [
            "modelValue"
        ])
    ]);
}
if (module.hot) module.hot.accept(()=>{
    __VUE_HMR_RUNTIME__.rerender("51cfb5-hmr", render);
});

},{"vue":"gCTam","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"aRmPX":[function() {},{}],"acLJl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
let NOOP = ()=>{};
exports.default = (script)=>{};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"3sk65":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
let script;
let initialize = ()=>{
    script = require("3b43eea281a67ef2");
    if (script.__esModule) script = script.default;
    script.render = require("dcc5366acec989c0").render;
    script.__cssModules = require("2b858a785811796d").default;
    require("a976c808d589edd4").default(script);
    script.__scopeId = "data-v-ce6e11";
    script.__file = "/Users/rm/Local Sites/wp-juggler-server/app/public/wp-content/plugins/wp-juggler-server/src/control-panel/vue/NoticesPanel.vue";
};
initialize();
if (module.hot) {
    script.__hmrId = "ce6e11-hmr";
    module.hot.accept(()=>{
        setTimeout(()=>{
            initialize();
            if (!__VUE_HMR_RUNTIME__.createRecord("ce6e11-hmr", script)) __VUE_HMR_RUNTIME__.reload("ce6e11-hmr", script);
        }, 0);
    });
}
exports.default = script;

},{"3b43eea281a67ef2":"a5ID5","dcc5366acec989c0":"hUnyL","2b858a785811796d":"jDFGq","a976c808d589edd4":"4H9hc","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"a5ID5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _storeJs = require("./store.js");
var _vue = require("vue");
var _vueQuery = require("@tanstack/vue-query");
exports.default = {
    __name: "NoticesPanel",
    setup (__props, { expose: __expose }) {
        __expose();
        const store = (0, _storeJs.useWpjsStore)();
        const passedOpen = (0, _vue.ref)(false);
        const search = (0, _vue.ref)("");
        const dialogInner = (0, _vue.ref)(false);
        const vulnerabilitiesItem = (0, _vue.ref)(null);
        const tab = (0, _vue.ref)(0);
        const noticeHistoryItems = (0, _vue.ref)([]);
        const noticePage = (0, _vue.ref)(0);
        const { isLoading, isError, isFetching, data, error, refetch } = (0, _vueQuery.useQuery)({
            queryKey: [
                "wpjs-notices-panel",
                store.activatedSite.id
            ],
            queryFn: getNoticesPanel
        });
        async function getNoticesPanel() {
            let ret = {};
            const response = await doAjax({
                action: "wpjs-get-notices-panel",
                siteId: store.activatedSite.id
            });
            ret = response.data[0];
            return ret;
        }
        async function getNoticeHistory() {
            let ret = {};
            const response = await doAjax({
                action: "wpjs-get-notices-history",
                siteId: store.activatedSite.id,
                page: noticePage.value
            });
            ret = response.data;
            return ret;
        }
        async function doAjax(args) {
            let result;
            try {
                const response = await fetch(store.ajaxUrl, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/x-www-form-urlencoded"
                    },
                    body: new URLSearchParams(args)
                });
                const result = await response.json();
                return result;
            } catch (error) {
                throw error;
            }
        }
        async function loadNoticeHistory({ done }) {
            // Perform API call
            const res = await getNoticeHistory();
            if (res.length == 0) done("empty");
            else {
                noticeHistoryItems.value.push(...res);
                noticePage.value = noticeHistoryItems.value[noticeHistoryItems.value.length - 1].ID;
                done("ok");
            }
        }
        const orgnizeByMonth = (0, _vue.computed)(()=>{
            const months = [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Oct",
                "Nov",
                "Dec"
            ];
            const groupedLogs = {};
            noticeHistoryItems.value.forEach((log)=>{
                const date = new Date(log.log_timestamp * 1000);
                const monthYear = `${months[date.getMonth()]} ${date.getFullYear()}`;
                if (!groupedLogs[monthYear]) groupedLogs[monthYear] = [];
                log.notices = JSON.parse(log.log_data);
                groupedLogs[monthYear].push(log);
            });
            const sortedMonths = Object.keys(groupedLogs).sort((a, b)=>new Date(b + " 1") - new Date(a + " 1"));
            const result = {};
            sortedMonths.forEach((monthYear)=>{
                result[monthYear] = groupedLogs[monthYear];
            });
            console.log(result);
            return result;
        });
        const __returned__ = {
            store,
            passedOpen,
            search,
            dialogInner,
            vulnerabilitiesItem,
            tab,
            noticeHistoryItems,
            noticePage,
            isLoading,
            isError,
            isFetching,
            data,
            error,
            refetch,
            getNoticesPanel,
            getNoticeHistory,
            doAjax,
            loadNoticeHistory,
            orgnizeByMonth,
            get useWpjsStore () {
                return 0, _storeJs.useWpjsStore;
            },
            onMounted: (0, _vue.onMounted),
            computed: (0, _vue.computed),
            ref: (0, _vue.ref),
            get useQueryClient () {
                return 0, _vueQuery.useQueryClient;
            },
            get useQuery () {
                return 0, _vueQuery.useQuery;
            },
            get useMutation () {
                return 0, _vueQuery.useMutation;
            }
        };
        Object.defineProperty(__returned__, "__isScriptSetup", {
            enumerable: false,
            value: true
        });
        return __returned__;
    }
};

},{"./store.js":"7kZ8m","vue":"gCTam","@tanstack/vue-query":"aI0Kc","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"hUnyL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "render", ()=>render);
var _vue = require("vue");
const _hoisted_1 = {
    class: "text-center pa-4"
};
const _hoisted_2 = {
    key: 0
};
const _hoisted_3 = {
    key: 1
};
const _hoisted_4 = /*#__PURE__*/ (0, _vue.createElementVNode)("div", {
    class: "text-h6"
}, "Currently active Notices:", -1 /* HOISTED */ );
const _hoisted_5 = /*#__PURE__*/ (0, _vue.createElementVNode)("div", {
    class: "text-h6 mt-15"
}, "Notices History:", -1 /* HOISTED */ );
const _hoisted_6 = {
    key: 0,
    class: "mt-10"
};
const _hoisted_7 = {
    class: "text-h6"
};
const _hoisted_8 = {
    key: 1,
    class: "mt-10"
};
const _hoisted_9 = {
    class: "text-h6"
};
function render(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_v_btn = (0, _vue.resolveComponent)("v-btn");
    const _component_v_toolbar_title = (0, _vue.resolveComponent)("v-toolbar-title");
    const _component_v_spacer = (0, _vue.resolveComponent)("v-spacer");
    const _component_v_toolbar_items = (0, _vue.resolveComponent)("v-toolbar-items");
    const _component_v_toolbar = (0, _vue.resolveComponent)("v-toolbar");
    const _component_v_icon = (0, _vue.resolveComponent)("v-icon");
    const _component_v_sheet = (0, _vue.resolveComponent)("v-sheet");
    const _component_v_divider = (0, _vue.resolveComponent)("v-divider");
    const _component_v_col = (0, _vue.resolveComponent)("v-col");
    const _component_v_row = (0, _vue.resolveComponent)("v-row");
    const _component_v_expansion_panel_title = (0, _vue.resolveComponent)("v-expansion-panel-title");
    const _component_v_expansion_panel_text = (0, _vue.resolveComponent)("v-expansion-panel-text");
    const _component_v_expansion_panel = (0, _vue.resolveComponent)("v-expansion-panel");
    const _component_v_expansion_panels = (0, _vue.resolveComponent)("v-expansion-panels");
    const _component_v_infinite_scroll = (0, _vue.resolveComponent)("v-infinite-scroll");
    const _component_v_card_text = (0, _vue.resolveComponent)("v-card-text");
    const _component_v_card = (0, _vue.resolveComponent)("v-card");
    const _component_v_dialog = (0, _vue.resolveComponent)("v-dialog");
    return (0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_1, [
        (0, _vue.createVNode)(_component_v_dialog, {
            modelValue: $setup.store.activatedNotices,
            "onUpdate:modelValue": _cache[1] || (_cache[1] = ($event)=>$setup.store.activatedNotices = $event),
            transition: "dialog-bottom-transition",
            fullscreen: ""
        }, {
            default: (0, _vue.withCtx)(()=>[
                    (0, _vue.createVNode)(_component_v_card, null, {
                        default: (0, _vue.withCtx)(()=>[
                                (0, _vue.createVNode)(_component_v_toolbar, null, {
                                    default: (0, _vue.withCtx)(()=>[
                                            (0, _vue.createVNode)(_component_v_btn, {
                                                icon: "mdi-close",
                                                onClick: _cache[0] || (_cache[0] = ($event)=>$setup.store.activatedNotices = false)
                                            }),
                                            (0, _vue.createVNode)(_component_v_toolbar_title, null, {
                                                default: (0, _vue.withCtx)(()=>[
                                                        (0, _vue.createTextVNode)((0, _vue.toDisplayString)($setup.store.activatedSite.title), 1 /* TEXT */ )
                                                    ]),
                                                _: 1 /* STABLE */ 
                                            }),
                                            (0, _vue.createVNode)(_component_v_spacer),
                                            (0, _vue.createVNode)(_component_v_toolbar_items)
                                        ]),
                                    _: 1 /* STABLE */ 
                                }),
                                (0, _vue.createVNode)(_component_v_card_text, null, {
                                    default: (0, _vue.withCtx)(()=>[
                                            $setup.data ? ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_card, {
                                                key: 0
                                            }, {
                                                default: (0, _vue.withCtx)(()=>[
                                                        (0, _vue.createVNode)(_component_v_card_text, null, {
                                                            default: (0, _vue.withCtx)(()=>[
                                                                    (0, _vue.createVNode)(_component_v_sheet, {
                                                                        class: "pa-4 text-right mx-auto",
                                                                        elevation: "0",
                                                                        width: "100%",
                                                                        rounded: "lg"
                                                                    }, {
                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                $setup.data ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_2, [
                                                                                    (0, _vue.createVNode)(_component_v_icon, {
                                                                                        class: "me-1 pb-1",
                                                                                        icon: "mdi-refresh",
                                                                                        size: "18"
                                                                                    }),
                                                                                    (0, _vue.createTextVNode)(" " + (0, _vue.toDisplayString)($setup.data.wp_juggler_notices_timestamp) + " ", 1 /* TEXT */ ),
                                                                                    (0, _vue.createVNode)(_component_v_btn, {
                                                                                        class: "ml-3 text-none text-caption"
                                                                                    }, {
                                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                                (0, _vue.createTextVNode)("Refresh ")
                                                                                            ]),
                                                                                        _: 1 /* STABLE */ 
                                                                                    })
                                                                                ])) : ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_3, [
                                                                                    (0, _vue.createVNode)(_component_v_icon, {
                                                                                        class: "me-1 pb-1",
                                                                                        icon: "mdi-refresh",
                                                                                        size: "18"
                                                                                    }),
                                                                                    (0, _vue.createTextVNode)(" Never "),
                                                                                    (0, _vue.createVNode)(_component_v_btn, {
                                                                                        class: "ml-3 text-none text-caption"
                                                                                    }, {
                                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                                (0, _vue.createTextVNode)("Refresh ")
                                                                                            ]),
                                                                                        _: 1 /* STABLE */ 
                                                                                    })
                                                                                ]))
                                                                            ]),
                                                                        _: 1 /* STABLE */ 
                                                                    }),
                                                                    (0, _vue.createVNode)(_component_v_sheet, {
                                                                        "max-width": "1200",
                                                                        class: "align-left justify-left text-left mx-auto px-4 pb-4 mb-10"
                                                                    }, {
                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                _hoisted_4,
                                                                                (0, _vue.createVNode)(_component_v_divider, {
                                                                                    class: "mb-10"
                                                                                }),
                                                                                $setup.data.wp_juggler_notices.length > 0 ? ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_sheet, {
                                                                                    key: 0
                                                                                }, {
                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                            ((0, _vue.openBlock)(true), (0, _vue.createElementBlock)((0, _vue.Fragment), null, (0, _vue.renderList)($setup.data.wp_juggler_notices, (notice)=>{
                                                                                                return (0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_row, {
                                                                                                    class: "wpjs-debug-table-row"
                                                                                                }, {
                                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                                            (0, _vue.createVNode)(_component_v_col, {
                                                                                                                class: "text-left",
                                                                                                                innerHTML: notice.NoticeHTML
                                                                                                            }, null, 8 /* PROPS */ , [
                                                                                                                "innerHTML"
                                                                                                            ])
                                                                                                        ]),
                                                                                                    _: 2 /* DYNAMIC */ 
                                                                                                }, 1024 /* DYNAMIC_SLOTS */ );
                                                                                            }), 256 /* UNKEYED_FRAGMENT */ ))
                                                                                        ]),
                                                                                    _: 1 /* STABLE */ 
                                                                                })) : ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_sheet, {
                                                                                    key: 1
                                                                                }, {
                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                            (0, _vue.createVNode)(_component_v_row, {
                                                                                                class: "wpjs-debug-table-row"
                                                                                            }, {
                                                                                                default: (0, _vue.withCtx)(()=>[
                                                                                                        (0, _vue.createVNode)(_component_v_col, {
                                                                                                            class: "text-left"
                                                                                                        }, {
                                                                                                            default: (0, _vue.withCtx)(()=>[
                                                                                                                    (0, _vue.createTextVNode)(" No active notices ")
                                                                                                                ]),
                                                                                                            _: 1 /* STABLE */ 
                                                                                                        })
                                                                                                    ]),
                                                                                                _: 1 /* STABLE */ 
                                                                                            })
                                                                                        ]),
                                                                                    _: 1 /* STABLE */ 
                                                                                })),
                                                                                _hoisted_5,
                                                                                (0, _vue.createVNode)(_component_v_sheet, {
                                                                                    class: "align-left justify-left text-left px-5 mb-15"
                                                                                }, {
                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                            (0, _vue.createVNode)(_component_v_infinite_scroll, {
                                                                                                height: 600,
                                                                                                items: $setup.noticeHistoryItems,
                                                                                                onLoad: $setup.loadNoticeHistory
                                                                                            }, {
                                                                                                default: (0, _vue.withCtx)(()=>[
                                                                                                        ((0, _vue.openBlock)(true), (0, _vue.createElementBlock)((0, _vue.Fragment), null, (0, _vue.renderList)($setup.orgnizeByMonth, (item, name)=>{
                                                                                                            return (0, _vue.openBlock)(), (0, _vue.createElementBlock)((0, _vue.Fragment), {
                                                                                                                key: item.ID
                                                                                                            }, [
                                                                                                                item.length == 0 ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_6, [
                                                                                                                    (0, _vue.createElementVNode)("div", _hoisted_7, (0, _vue.toDisplayString)(name), 1 /* TEXT */ ),
                                                                                                                    (0, _vue.createVNode)(_component_v_divider, {
                                                                                                                        class: "mb-4"
                                                                                                                    }),
                                                                                                                    (0, _vue.createTextVNode)(" No incidents reported ")
                                                                                                                ])) : ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_8, [
                                                                                                                    (0, _vue.createElementVNode)("div", _hoisted_9, (0, _vue.toDisplayString)(name), 1 /* TEXT */ ),
                                                                                                                    (0, _vue.createVNode)(_component_v_divider, {
                                                                                                                        class: "mb-4"
                                                                                                                    }),
                                                                                                                    (0, _vue.createVNode)(_component_v_expansion_panels, {
                                                                                                                        class: "mt-8",
                                                                                                                        variant: "accordion"
                                                                                                                    }, {
                                                                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                                                                ((0, _vue.openBlock)(true), (0, _vue.createElementBlock)((0, _vue.Fragment), null, (0, _vue.renderList)(item, (notice)=>{
                                                                                                                                    return (0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_expansion_panel, null, {
                                                                                                                                        default: (0, _vue.withCtx)(()=>[
                                                                                                                                                (0, _vue.createVNode)(_component_v_expansion_panel_title, null, {
                                                                                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                                                                                            (0, _vue.createTextVNode)((0, _vue.toDisplayString)(notice.log_time) + " ", 1 /* TEXT */ ),
                                                                                                                                                            (0, _vue.createVNode)(_component_v_spacer),
                                                                                                                                                            (0, _vue.createElementVNode)("div", null, (0, _vue.toDisplayString)(notice.notices.length) + " Notices", 1 /* TEXT */ )
                                                                                                                                                        ]),
                                                                                                                                                    _: 2 /* DYNAMIC */ 
                                                                                                                                                }, 1024 /* DYNAMIC_SLOTS */ ),
                                                                                                                                                (0, _vue.createVNode)(_component_v_expansion_panel_text, null, {
                                                                                                                                                    default: (0, _vue.withCtx)(()=>[
                                                                                                                                                            (0, _vue.createVNode)(_component_v_sheet, {
                                                                                                                                                                class: "mt-1"
                                                                                                                                                            }, {
                                                                                                                                                                default: (0, _vue.withCtx)(()=>[
                                                                                                                                                                        ((0, _vue.openBlock)(true), (0, _vue.createElementBlock)((0, _vue.Fragment), null, (0, _vue.renderList)(notice.notices, (single_item)=>{
                                                                                                                                                                            return (0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_row, {
                                                                                                                                                                                class: "wpjs-debug-table-row"
                                                                                                                                                                            }, {
                                                                                                                                                                                default: (0, _vue.withCtx)(()=>[
                                                                                                                                                                                        (0, _vue.createVNode)(_component_v_col, {
                                                                                                                                                                                            class: "text-left px-5",
                                                                                                                                                                                            innerHTML: single_item.NoticeHTML
                                                                                                                                                                                        }, null, 8 /* PROPS */ , [
                                                                                                                                                                                            "innerHTML"
                                                                                                                                                                                        ])
                                                                                                                                                                                    ]),
                                                                                                                                                                                _: 2 /* DYNAMIC */ 
                                                                                                                                                                            }, 1024 /* DYNAMIC_SLOTS */ );
                                                                                                                                                                        }), 256 /* UNKEYED_FRAGMENT */ ))
                                                                                                                                                                    ]),
                                                                                                                                                                _: 2 /* DYNAMIC */ 
                                                                                                                                                            }, 1024 /* DYNAMIC_SLOTS */ )
                                                                                                                                                        ]),
                                                                                                                                                    _: 2 /* DYNAMIC */ 
                                                                                                                                                }, 1024 /* DYNAMIC_SLOTS */ )
                                                                                                                                            ]),
                                                                                                                                        _: 2 /* DYNAMIC */ 
                                                                                                                                    }, 1024 /* DYNAMIC_SLOTS */ );
                                                                                                                                }), 256 /* UNKEYED_FRAGMENT */ ))
                                                                                                                            ]),
                                                                                                                        _: 2 /* DYNAMIC */ 
                                                                                                                    }, 1024 /* DYNAMIC_SLOTS */ )
                                                                                                                ]))
                                                                                                            ], 64 /* STABLE_FRAGMENT */ );
                                                                                                        }), 128 /* KEYED_FRAGMENT */ ))
                                                                                                    ]),
                                                                                                _: 1 /* STABLE */ 
                                                                                            }, 8 /* PROPS */ , [
                                                                                                "items"
                                                                                            ])
                                                                                        ]),
                                                                                    _: 1 /* STABLE */ 
                                                                                })
                                                                            ]),
                                                                        _: 1 /* STABLE */ 
                                                                    })
                                                                ]),
                                                            _: 1 /* STABLE */ 
                                                        })
                                                    ]),
                                                _: 1 /* STABLE */ 
                                            })) : (0, _vue.createCommentVNode)("v-if", true)
                                        ]),
                                    _: 1 /* STABLE */ 
                                })
                            ]),
                        _: 1 /* STABLE */ 
                    })
                ]),
            _: 1 /* STABLE */ 
        }, 8 /* PROPS */ , [
            "modelValue"
        ])
    ]);
}
if (module.hot) module.hot.accept(()=>{
    __VUE_HMR_RUNTIME__.rerender("ce6e11-hmr", render);
});

},{"vue":"gCTam","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"jDFGq":[function() {},{}],"4H9hc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
let NOOP = ()=>{};
exports.default = (script)=>{};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"e7mfF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "render", ()=>render);
var _vue = require("vue");
const _hoisted_1 = {
    class: "mt-4 ml-4 mb-4"
};
const _hoisted_2 = {
    key: 0
};
const _hoisted_3 = {
    key: 0
};
const _hoisted_4 = {
    key: 0
};
const _hoisted_5 = {
    key: 1
};
const _hoisted_6 = {
    key: 0
};
const _hoisted_7 = {
    key: 0
};
const _hoisted_8 = {
    key: 1
};
const _hoisted_9 = {
    key: 1
};
const _hoisted_10 = {
    key: 0
};
const _hoisted_11 = {
    key: 0
};
const _hoisted_12 = {
    key: 1
};
const _hoisted_13 = {
    key: 1
};
const _hoisted_14 = {
    key: 0
};
const _hoisted_15 = {
    key: 1
};
const _hoisted_16 = {
    key: 0
};
const _hoisted_17 = {
    key: 1
};
const _hoisted_18 = {
    key: 2
};
function render(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_v_btn = (0, _vue.resolveComponent)("v-btn");
    const _component_v_spacer = (0, _vue.resolveComponent)("v-spacer");
    const _component_v_icon = (0, _vue.resolveComponent)("v-icon");
    const _component_v_text_field = (0, _vue.resolveComponent)("v-text-field");
    const _component_v_card_title = (0, _vue.resolveComponent)("v-card-title");
    const _component_v_divider = (0, _vue.resolveComponent)("v-divider");
    const _component_v_data_table = (0, _vue.resolveComponent)("v-data-table");
    const _component_v_card = (0, _vue.resolveComponent)("v-card");
    return (0, _vue.openBlock)(), (0, _vue.createElementBlock)((0, _vue.Fragment), null, [
        (0, _vue.createElementVNode)("div", _hoisted_1, [
            (0, _vue.createVNode)(_component_v_btn, {
                color: "#2196f3",
                variant: "flat",
                class: "text-none text-caption",
                onClick: $setup.backToDashboard
            }, {
                default: (0, _vue.withCtx)(()=>[
                        (0, _vue.createTextVNode)("Back to Dashboard")
                    ]),
                _: 1 /* STABLE */ 
            }),
            (0, _vue.createVNode)(_component_v_spacer),
            (0, _vue.createVNode)(_component_v_card, {
                class: "pa-4 mr-4 mt-5 mb-5"
            }, {
                default: (0, _vue.withCtx)(()=>[
                        (0, _vue.createVNode)(_component_v_card, {
                            flat: ""
                        }, {
                            default: (0, _vue.withCtx)(()=>[
                                    (0, _vue.createVNode)(_component_v_card_title, {
                                        class: "d-flex align-center pe-2 mb-6"
                                    }, {
                                        default: (0, _vue.withCtx)(()=>[
                                                (0, _vue.createVNode)(_component_v_icon, {
                                                    icon: "mdi-video-input-component"
                                                }),
                                                (0, _vue.createTextVNode)(" \xa0 WP Juggler Control Panel "),
                                                (0, _vue.createVNode)(_component_v_spacer),
                                                (0, _vue.createVNode)(_component_v_text_field, {
                                                    modelValue: $setup.search,
                                                    "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event)=>$setup.search = $event),
                                                    density: "compact",
                                                    label: "Search",
                                                    "prepend-inner-icon": "mdi-magnify",
                                                    variant: "solo-filled",
                                                    flat: "",
                                                    "hide-details": "",
                                                    "single-line": ""
                                                }, null, 8 /* PROPS */ , [
                                                    "modelValue"
                                                ])
                                            ]),
                                        _: 1 /* STABLE */ 
                                    }),
                                    (0, _vue.createVNode)(_component_v_divider),
                                    (0, _vue.createVNode)(_component_v_data_table, {
                                        search: $setup.search,
                                        "onUpdate:search": _cache[1] || (_cache[1] = ($event)=>$setup.search = $event),
                                        items: $setup.data,
                                        headers: $setup.headers,
                                        "item-key": "id",
                                        expanded: $setup.expanded,
                                        "onUpdate:expanded": _cache[2] || (_cache[2] = ($event)=>$setup.expanded = $event),
                                        "show-expand": ""
                                    }, {
                                        "item.network": (0, _vue.withCtx)(({ item })=>[
                                                item.wp_juggler_multisite ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_2, [
                                                    (0, _vue.createVNode)(_component_v_icon, {
                                                        color: "#2196f3",
                                                        icon: "mdi-checkbox-multiple-blank-outline",
                                                        size: "large",
                                                        class: "rm-4"
                                                    })
                                                ])) : (0, _vue.createCommentVNode)("v-if", true)
                                            ]),
                                        "item.events": (0, _vue.withCtx)(({ item })=>[
                                                item.wp_juggler_automatic_login ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_3, [
                                                    (0, _vue.createVNode)(_component_v_icon, {
                                                        color: "#2196f3",
                                                        icon: "mdi-email-alert-outline",
                                                        size: "large",
                                                        class: "rm-4"
                                                    })
                                                ])) : (0, _vue.createCommentVNode)("v-if", true)
                                            ]),
                                        "item.uptime": (0, _vue.withCtx)(({ item })=>[
                                                item.wp_juggler_site_activation ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_4, [
                                                    ((0, _vue.openBlock)(true), (0, _vue.createElementBlock)((0, _vue.Fragment), null, (0, _vue.renderList)(item.wp_juggler_uptime_stats.uptime_timeline, (day)=>{
                                                        return (0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_icon, {
                                                            color: $setup.calculateColor(day),
                                                            icon: "mdi-square",
                                                            size: "large",
                                                            class: "rm-4"
                                                        }, null, 8 /* PROPS */ , [
                                                            "color"
                                                        ]);
                                                    }), 256 /* UNKEYED_FRAGMENT */ ))
                                                ])) : (0, _vue.createCommentVNode)("v-if", true),
                                                !item.wp_juggler_site_activation ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_5, "Inactive")) : (0, _vue.createCommentVNode)("v-if", true)
                                            ]),
                                        "item.updates": (0, _vue.withCtx)(({ item })=>[
                                                item.wp_juggler_site_activation ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_6, [
                                                    item.wp_juggler_plugins_summary ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_7, [
                                                        item.wp_juggler_plugins_summary.vulnerabilities_num > 0 ? ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_icon, {
                                                            key: 0,
                                                            color: "error",
                                                            icon: "mdi-bug-check-outline",
                                                            size: "large",
                                                            class: "rm-4"
                                                        })) : item.wp_juggler_plugins_summary.updates_num > 0 || item.wp_juggler_themes_summary.updates_num > 0 ? ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_icon, {
                                                            key: 1,
                                                            color: "error",
                                                            icon: "mdi-check-bold",
                                                            size: "large",
                                                            class: "rm-4"
                                                        })) : (0, _vue.createCommentVNode)("v-if", true)
                                                    ])) : ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_8, [
                                                        (0, _vue.createVNode)(_component_v_icon, {
                                                            color: "blue-lighten-5",
                                                            icon: "mdi-help",
                                                            size: "large",
                                                            class: "rm-4"
                                                        })
                                                    ]))
                                                ])) : (0, _vue.createCommentVNode)("v-if", true),
                                                !item.wp_juggler_site_activation ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_9, "Inactive")) : (0, _vue.createCommentVNode)("v-if", true)
                                            ]),
                                        "item.checksum": (0, _vue.withCtx)(({ item })=>[
                                                item.wp_juggler_site_activation ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_10, [
                                                    item.wp_juggler_plugins_checksum && item.wp_juggler_core_checksum ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_11, [
                                                        item.wp_juggler_plugins_checksum.failures > 0 || item.wp_juggler_core_checksum.errors ? ((0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_icon, {
                                                            key: 0,
                                                            color: "error",
                                                            icon: "mdi-alert-outline",
                                                            size: "large",
                                                            class: "rm-4"
                                                        })) : (0, _vue.createCommentVNode)("v-if", true)
                                                    ])) : ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_12, [
                                                        (0, _vue.createVNode)(_component_v_icon, {
                                                            color: "blue-lighten-5",
                                                            icon: "mdi-help",
                                                            size: "large",
                                                            class: "rm-4"
                                                        })
                                                    ]))
                                                ])) : (0, _vue.createCommentVNode)("v-if", true),
                                                !item.wp_juggler_site_activation ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_13, "Inactive")) : (0, _vue.createCommentVNode)("v-if", true)
                                            ]),
                                        "item.links": (0, _vue.withCtx)(({ item })=>[
                                                item.wp_juggler_site_activation ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_14, [
                                                    ((0, _vue.openBlock)(true), (0, _vue.createElementBlock)((0, _vue.Fragment), null, (0, _vue.renderList)(item.wp_juggler_login_tools, (button)=>{
                                                        return (0, _vue.openBlock)(), (0, _vue.createBlock)(_component_v_btn, {
                                                            variant: "elevated",
                                                            onClick: ($event)=>$setup.gotoUrl(button.wp_juggler_tool_url),
                                                            class: "text-none text-caption mr-1 ml-1"
                                                        }, {
                                                            default: (0, _vue.withCtx)(()=>[
                                                                    (0, _vue.createTextVNode)((0, _vue.toDisplayString)(button.wp_juggler_tool_label), 1 /* TEXT */ )
                                                                ]),
                                                            _: 2 /* DYNAMIC */ 
                                                        }, 1032 /* PROPS, DYNAMIC_SLOTS */ , [
                                                            "onClick"
                                                        ]);
                                                    }), 256 /* UNKEYED_FRAGMENT */ ))
                                                ])) : (0, _vue.createCommentVNode)("v-if", true),
                                                !item.wp_juggler_site_activation ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_15, "Inactive")) : (0, _vue.createCommentVNode)("v-if", true)
                                            ]),
                                        "item.wp_admin": (0, _vue.withCtx)(({ item })=>[
                                                item.wp_juggler_site_activation && item.wp_juggler_automatic_login ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_16, [
                                                    (0, _vue.createVNode)(_component_v_btn, {
                                                        color: "#2196f3",
                                                        variant: "elevated",
                                                        class: "text-none text-caption",
                                                        "prepend-icon": "mdi-login",
                                                        onClick: ($event)=>$setup.gotoUrl(item.wp_juggler_login_url)
                                                    }, {
                                                        default: (0, _vue.withCtx)(()=>[
                                                                (0, _vue.createTextVNode)("Login")
                                                            ]),
                                                        _: 2 /* DYNAMIC */ 
                                                    }, 1032 /* PROPS, DYNAMIC_SLOTS */ , [
                                                        "onClick"
                                                    ])
                                                ])) : (0, _vue.createCommentVNode)("v-if", true),
                                                item.wp_juggler_site_activation && !item.wp_juggler_automatic_login ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_17, [
                                                    (0, _vue.createVNode)(_component_v_btn, {
                                                        color: "#2196f3",
                                                        variant: "elevated",
                                                        class: "text-none text-caption",
                                                        "prepend-icon": "mdi-account-remove",
                                                        onClick: ($event)=>$setup.gotoUrl(item.wp_juggler_login_url)
                                                    }, {
                                                        default: (0, _vue.withCtx)(()=>[
                                                                (0, _vue.createTextVNode)("Login")
                                                            ]),
                                                        _: 2 /* DYNAMIC */ 
                                                    }, 1032 /* PROPS, DYNAMIC_SLOTS */ , [
                                                        "onClick"
                                                    ])
                                                ])) : (0, _vue.createCommentVNode)("v-if", true),
                                                !item.wp_juggler_site_activation ? ((0, _vue.openBlock)(), (0, _vue.createElementBlock)("div", _hoisted_18, "Inactive")) : (0, _vue.createCommentVNode)("v-if", true)
                                            ]),
                                        "expanded-row": (0, _vue.withCtx)(({ columns, item })=>[
                                                (0, _vue.createVNode)($setup["ExpandedRow"], {
                                                    columns: columns,
                                                    item: item
                                                }, null, 8 /* PROPS */ , [
                                                    "columns",
                                                    "item"
                                                ])
                                            ]),
                                        _: 1 /* STABLE */ 
                                    }, 8 /* PROPS */ , [
                                        "search",
                                        "items",
                                        "expanded"
                                    ])
                                ]),
                            _: 1 /* STABLE */ 
                        })
                    ]),
                _: 1 /* STABLE */ 
            }),
            (0, _vue.createVNode)(_component_v_btn, {
                color: "#2196f3",
                variant: "flat",
                class: "text-none text-caption",
                onClick: $setup.backToDashboard
            }, {
                default: (0, _vue.withCtx)(()=>[
                        (0, _vue.createTextVNode)("Back to Dashboard")
                    ]),
                _: 1 /* STABLE */ 
            })
        ]),
        $setup.store.activatedThemes ? ((0, _vue.openBlock)(), (0, _vue.createBlock)($setup["ThemesPluginsPanel"], {
            key: 0
        })) : (0, _vue.createCommentVNode)("v-if", true),
        $setup.store.activatedHealth ? ((0, _vue.openBlock)(), (0, _vue.createBlock)($setup["HealthPanel"], {
            key: 1
        })) : (0, _vue.createCommentVNode)("v-if", true),
        $setup.store.activatedUptime ? ((0, _vue.openBlock)(), (0, _vue.createBlock)($setup["UptimePanel"], {
            key: 2
        })) : (0, _vue.createCommentVNode)("v-if", true),
        $setup.store.activatedNotices ? ((0, _vue.openBlock)(), (0, _vue.createBlock)($setup["NoticesPanel"], {
            key: 3
        })) : (0, _vue.createCommentVNode)("v-if", true)
    ], 64 /* STABLE_FRAGMENT */ );
}
if (module.hot) module.hot.accept(()=>{
    __VUE_HMR_RUNTIME__.rerender("edd33f-hmr", render);
});

},{"vue":"gCTam","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"jvxye":[function() {},{}],"cwDHb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
let NOOP = ()=>{};
exports.default = (script)=>{};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"gcA1H":[function(require,module,exports) {
// Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createVuetify", ()=>createVuetify);
parcelHelpers.export(exports, "version", ()=>version);
var _dateMjs = require("./composables/date/date.mjs");
var _defaultsMjs = require("./composables/defaults.mjs");
var _displayMjs = require("./composables/display.mjs");
var _gotoMjs = require("./composables/goto.mjs");
var _iconsMjs = require("./composables/icons.mjs");
var _localeMjs = require("./composables/locale.mjs");
var _themeMjs = require("./composables/theme.mjs"); // Utilities
var _vue = require("vue");
var _indexMjs = require("./util/index.mjs"); // Types
var _indexMjs1 = require("./composables/index.mjs");
parcelHelpers.exportAll(_indexMjs1, exports);
function createVuetify() {
    let vuetify = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    const { blueprint, ...rest } = vuetify;
    const options = (0, _indexMjs.mergeDeep)(blueprint, rest);
    const { aliases = {}, components = {}, directives = {} } = options;
    const defaults = (0, _defaultsMjs.createDefaults)(options.defaults);
    const display = (0, _displayMjs.createDisplay)(options.display, options.ssr);
    const theme = (0, _themeMjs.createTheme)(options.theme);
    const icons = (0, _iconsMjs.createIcons)(options.icons);
    const locale = (0, _localeMjs.createLocale)(options.locale);
    const date = (0, _dateMjs.createDate)(options.date, locale);
    const goTo = (0, _gotoMjs.createGoTo)(options.goTo, locale);
    const install = (app)=>{
        for(const key in directives)app.directive(key, directives[key]);
        for(const key in components)app.component(key, components[key]);
        for(const key in aliases)app.component(key, (0, _indexMjs.defineComponent)({
            ...aliases[key],
            name: key,
            aliasName: aliases[key].name
        }));
        theme.install(app);
        app.provide((0, _defaultsMjs.DefaultsSymbol), defaults);
        app.provide((0, _displayMjs.DisplaySymbol), display);
        app.provide((0, _themeMjs.ThemeSymbol), theme);
        app.provide((0, _iconsMjs.IconSymbol), icons);
        app.provide((0, _localeMjs.LocaleSymbol), locale);
        app.provide((0, _dateMjs.DateOptionsSymbol), date.options);
        app.provide((0, _dateMjs.DateAdapterSymbol), date.instance);
        app.provide((0, _gotoMjs.GoToSymbol), goTo);
        if ((0, _indexMjs.IN_BROWSER) && options.ssr) {
            if (app.$nuxt) app.$nuxt.hook("app:suspense:resolve", ()=>{
                display.update();
            });
            else {
                const { mount } = app;
                app.mount = function() {
                    const vm = mount(...arguments);
                    (0, _vue.nextTick)(()=>display.update());
                    app.mount = mount;
                    return vm;
                };
            }
        }
        (0, _indexMjs.getUid).reset();
        if (typeof __VUE_OPTIONS_API__ !== "boolean" || __VUE_OPTIONS_API__) app.mixin({
            computed: {
                $vuetify () {
                    return (0, _vue.reactive)({
                        defaults: inject.call(this, (0, _defaultsMjs.DefaultsSymbol)),
                        display: inject.call(this, (0, _displayMjs.DisplaySymbol)),
                        theme: inject.call(this, (0, _themeMjs.ThemeSymbol)),
                        icons: inject.call(this, (0, _iconsMjs.IconSymbol)),
                        locale: inject.call(this, (0, _localeMjs.LocaleSymbol)),
                        date: inject.call(this, (0, _dateMjs.DateAdapterSymbol))
                    });
                }
            }
        });
    };
    return {
        install,
        defaults,
        display,
        theme,
        icons,
        locale,
        date,
        goTo
    };
}
const version = "3.7.0";
createVuetify.version = version;
// Vue's inject() can only be used in setup
function inject(key) {
    const vm = this.$;
    const provides = vm.parent?.provides ?? vm.vnode.appContext?.provides;
    if (provides && key in provides) return provides[key];
}

},{"./composables/date/date.mjs":"diSpK","./composables/defaults.mjs":"29Im0","./composables/display.mjs":"bcRjl","./composables/goto.mjs":"gI0Ln","./composables/icons.mjs":"g4kLv","./composables/locale.mjs":"9rJP0","./composables/theme.mjs":"c9HGg","vue":"gCTam","./util/index.mjs":"ivUh8","./composables/index.mjs":false,"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"diSpK":[function(require,module,exports) {
// Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DateModule", ()=>DateModule);
parcelHelpers.export(exports, "DateOptionsSymbol", ()=>DateOptionsSymbol);
parcelHelpers.export(exports, "DateAdapterSymbol", ()=>DateAdapterSymbol);
parcelHelpers.export(exports, "createDate", ()=>createDate);
parcelHelpers.export(exports, "useDate", ()=>useDate);
// https://stackoverflow.com/questions/274861/how-do-i-calculate-the-week-number-given-a-date/275024#275024
parcelHelpers.export(exports, "getWeek", ()=>getWeek);
var _localeMjs = require("../locale.mjs"); // Utilities
var _vue = require("vue");
var _indexMjs = require("../../util/index.mjs"); // Types
// Adapters
var _vuetifyMjs = require("./adapters/vuetify.mjs");
let DateModule;
const DateOptionsSymbol = Symbol.for("vuetify:date-options");
const DateAdapterSymbol = Symbol.for("vuetify:date-adapter");
function createDate(options, locale) {
    const _options = (0, _indexMjs.mergeDeep)({
        adapter: (0, _vuetifyMjs.VuetifyDateAdapter),
        locale: {
            af: "af-ZA",
            // ar: '', # not the same value for all variants
            bg: "bg-BG",
            ca: "ca-ES",
            ckb: "",
            cs: "cs-CZ",
            de: "de-DE",
            el: "el-GR",
            en: "en-US",
            // es: '', # not the same value for all variants
            et: "et-EE",
            fa: "fa-IR",
            fi: "fi-FI",
            // fr: '', #not the same value for all variants
            hr: "hr-HR",
            hu: "hu-HU",
            he: "he-IL",
            id: "id-ID",
            it: "it-IT",
            ja: "ja-JP",
            ko: "ko-KR",
            lv: "lv-LV",
            lt: "lt-LT",
            nl: "nl-NL",
            no: "no-NO",
            pl: "pl-PL",
            pt: "pt-PT",
            ro: "ro-RO",
            ru: "ru-RU",
            sk: "sk-SK",
            sl: "sl-SI",
            srCyrl: "sr-SP",
            srLatn: "sr-SP",
            sv: "sv-SE",
            th: "th-TH",
            tr: "tr-TR",
            az: "az-AZ",
            uk: "uk-UA",
            vi: "vi-VN",
            zhHans: "zh-CN",
            zhHant: "zh-TW"
        }
    }, options);
    return {
        options: _options,
        instance: createInstance(_options, locale)
    };
}
function createInstance(options, locale) {
    const instance = (0, _vue.reactive)(typeof options.adapter === "function" ? new options.adapter({
        locale: options.locale[locale.current.value] ?? locale.current.value,
        formats: options.formats
    }) : options.adapter);
    (0, _vue.watch)(locale.current, (value)=>{
        instance.locale = options.locale[value] ?? value ?? instance.locale;
    });
    return instance;
}
function useDate() {
    const options = (0, _vue.inject)(DateOptionsSymbol);
    if (!options) throw new Error("[Vuetify] Could not find injected date options");
    const locale = (0, _localeMjs.useLocale)();
    return createInstance(options, locale);
}
function getWeek(adapter, value) {
    const date = adapter.toJsDate(value);
    let year = date.getFullYear();
    let d1w1 = new Date(year, 0, 1);
    if (date < d1w1) {
        year = year - 1;
        d1w1 = new Date(year, 0, 1);
    } else {
        const tv = new Date(year + 1, 0, 1);
        if (date >= tv) {
            year = year + 1;
            d1w1 = tv;
        }
    }
    const diffTime = Math.abs(date.getTime() - d1w1.getTime());
    const diffDays = Math.ceil(diffTime / 86400000);
    return Math.floor(diffDays / 7) + 1;
}

},{"../locale.mjs":"9rJP0","vue":"gCTam","../../util/index.mjs":"ivUh8","./adapters/vuetify.mjs":"eOHVd","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"9rJP0":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "LocaleSymbol", ()=>LocaleSymbol);
parcelHelpers.export(exports, "createLocale", ()=>createLocale);
parcelHelpers.export(exports, "useLocale", ()=>useLocale);
parcelHelpers.export(exports, "provideLocale", ()=>provideLocale);
parcelHelpers.export(exports, "RtlSymbol", ()=>RtlSymbol);
parcelHelpers.export(exports, "createRtl", ()=>createRtl);
parcelHelpers.export(exports, "provideRtl", ()=>provideRtl);
parcelHelpers.export(exports, "useRtl", ()=>useRtl);
var _vue = require("vue");
var _vuetifyMjs = require("../locale/adapters/vuetify.mjs"); // Types
const LocaleSymbol = Symbol.for("vuetify:locale");
function isLocaleInstance(obj) {
    return obj.name != null;
}
function createLocale(options) {
    const i18n = options?.adapter && isLocaleInstance(options?.adapter) ? options?.adapter : (0, _vuetifyMjs.createVuetifyAdapter)(options);
    const rtl = createRtl(i18n, options);
    return {
        ...i18n,
        ...rtl
    };
}
function useLocale() {
    const locale = (0, _vue.inject)(LocaleSymbol);
    if (!locale) throw new Error("[Vuetify] Could not find injected locale instance");
    return locale;
}
function provideLocale(props) {
    const locale = (0, _vue.inject)(LocaleSymbol);
    if (!locale) throw new Error("[Vuetify] Could not find injected locale instance");
    const i18n = locale.provide(props);
    const rtl = provideRtl(i18n, locale.rtl, props);
    const data = {
        ...i18n,
        ...rtl
    };
    (0, _vue.provide)(LocaleSymbol, data);
    return data;
}
const RtlSymbol = Symbol.for("vuetify:rtl");
function genDefaults() {
    return {
        af: false,
        ar: true,
        bg: false,
        ca: false,
        ckb: false,
        cs: false,
        de: false,
        el: false,
        en: false,
        es: false,
        et: false,
        fa: true,
        fi: false,
        fr: false,
        hr: false,
        hu: false,
        he: true,
        id: false,
        it: false,
        ja: false,
        km: false,
        ko: false,
        lv: false,
        lt: false,
        nl: false,
        no: false,
        pl: false,
        pt: false,
        ro: false,
        ru: false,
        sk: false,
        sl: false,
        srCyrl: false,
        srLatn: false,
        sv: false,
        th: false,
        tr: false,
        az: false,
        uk: false,
        vi: false,
        zhHans: false,
        zhHant: false
    };
}
function createRtl(i18n, options) {
    const rtl = (0, _vue.ref)(options?.rtl ?? genDefaults());
    const isRtl = (0, _vue.computed)(()=>rtl.value[i18n.current.value] ?? false);
    return {
        isRtl,
        rtl,
        rtlClasses: (0, _vue.computed)(()=>`v-locale--is-${isRtl.value ? "rtl" : "ltr"}`)
    };
}
function provideRtl(locale, rtl, props) {
    const isRtl = (0, _vue.computed)(()=>props.rtl ?? rtl.value[locale.current.value] ?? false);
    return {
        isRtl,
        rtl,
        rtlClasses: (0, _vue.computed)(()=>`v-locale--is-${isRtl.value ? "rtl" : "ltr"}`)
    };
}
function useRtl() {
    const locale = (0, _vue.inject)(LocaleSymbol);
    if (!locale) throw new Error("[Vuetify] Could not find injected rtl instance");
    return {
        isRtl: locale.isRtl,
        rtlClasses: locale.rtlClasses
    };
}

},{"vue":"gCTam","../locale/adapters/vuetify.mjs":"dyQa7","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"dyQa7":[function(require,module,exports) {
// Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createVuetifyAdapter", ()=>createVuetifyAdapter);
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs"); // Utilities
var _vue = require("vue");
var _indexMjs = require("../../util/index.mjs"); // Locales
var _enMjs = require("../en.mjs"); // Types
var _enMjsDefault = parcelHelpers.interopDefault(_enMjs);
const LANG_PREFIX = "$vuetify.";
const replace = (str, params)=>{
    return str.replace(/\{(\d+)\}/g, (match, index)=>{
        return String(params[+index]);
    });
};
const createTranslateFunction = (current, fallback, messages)=>{
    return function(key) {
        for(var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)params[_key - 1] = arguments[_key];
        if (!key.startsWith(LANG_PREFIX)) return replace(key, params);
        const shortKey = key.replace(LANG_PREFIX, "");
        const currentLocale = current.value && messages.value[current.value];
        const fallbackLocale = fallback.value && messages.value[fallback.value];
        let str = (0, _indexMjs.getObjectValueByPath)(currentLocale, shortKey, null);
        if (!str) {
            (0, _indexMjs.consoleWarn)(`Translation key "${key}" not found in "${current.value}", trying fallback locale`);
            str = (0, _indexMjs.getObjectValueByPath)(fallbackLocale, shortKey, null);
        }
        if (!str) {
            (0, _indexMjs.consoleError)(`Translation key "${key}" not found in fallback`);
            str = key;
        }
        if (typeof str !== "string") {
            (0, _indexMjs.consoleError)(`Translation key "${key}" has a non-string value`);
            str = key;
        }
        return replace(str, params);
    };
};
function createNumberFunction(current, fallback) {
    return (value, options)=>{
        const numberFormat = new Intl.NumberFormat([
            current.value,
            fallback.value
        ], options);
        return numberFormat.format(value);
    };
}
function useProvided(props, prop, provided) {
    const internal = (0, _proxiedModelMjs.useProxiedModel)(props, prop, props[prop] ?? provided.value);
    // TODO: Remove when defaultValue works
    internal.value = props[prop] ?? provided.value;
    (0, _vue.watch)(provided, (v)=>{
        if (props[prop] == null) internal.value = provided.value;
    });
    return internal;
}
function createProvideFunction(state) {
    return (props)=>{
        const current = useProvided(props, "locale", state.current);
        const fallback = useProvided(props, "fallback", state.fallback);
        const messages = useProvided(props, "messages", state.messages);
        return {
            name: "vuetify",
            current,
            fallback,
            messages,
            t: createTranslateFunction(current, fallback, messages),
            n: createNumberFunction(current, fallback),
            provide: createProvideFunction({
                current,
                fallback,
                messages
            })
        };
    };
}
function createVuetifyAdapter(options) {
    const current = (0, _vue.shallowRef)(options?.locale ?? "en");
    const fallback = (0, _vue.shallowRef)(options?.fallback ?? "en");
    const messages = (0, _vue.ref)({
        en: (0, _enMjsDefault.default),
        ...options?.messages
    });
    return {
        name: "vuetify",
        current,
        fallback,
        messages,
        t: createTranslateFunction(current, fallback, messages),
        n: createNumberFunction(current, fallback),
        provide: createProvideFunction({
            current,
            fallback,
            messages
        })
    };
}

},{"../../composables/proxiedModel.mjs":"huwLk","vue":"gCTam","../../util/index.mjs":"ivUh8","../en.mjs":"h1Ed8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"huwLk":[function(require,module,exports) {
// Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// Composables
parcelHelpers.export(exports, "useProxiedModel", ()=>useProxiedModel);
var _toggleScopeMjs = require("./toggleScope.mjs"); // Utilities
var _vue = require("vue");
var _indexMjs = require("../util/index.mjs"); // Types
function useProxiedModel(props, prop, defaultValue) {
    let transformIn = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : (v)=>v;
    let transformOut = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : (v)=>v;
    const vm = (0, _indexMjs.getCurrentInstance)("useProxiedModel");
    const internal = (0, _vue.ref)(props[prop] !== undefined ? props[prop] : defaultValue);
    const kebabProp = (0, _indexMjs.toKebabCase)(prop);
    const checkKebab = kebabProp !== prop;
    const isControlled = checkKebab ? (0, _vue.computed)(()=>{
        props[prop];
        return !!((vm.vnode.props?.hasOwnProperty(prop) || vm.vnode.props?.hasOwnProperty(kebabProp)) && (vm.vnode.props?.hasOwnProperty(`onUpdate:${prop}`) || vm.vnode.props?.hasOwnProperty(`onUpdate:${kebabProp}`)));
    }) : (0, _vue.computed)(()=>{
        props[prop];
        return !!(vm.vnode.props?.hasOwnProperty(prop) && vm.vnode.props?.hasOwnProperty(`onUpdate:${prop}`));
    });
    (0, _toggleScopeMjs.useToggleScope)(()=>!isControlled.value, ()=>{
        (0, _vue.watch)(()=>props[prop], (val)=>{
            internal.value = val;
        });
    });
    const model = (0, _vue.computed)({
        get () {
            const externalValue = props[prop];
            return transformIn(isControlled.value ? externalValue : internal.value);
        },
        set (internalValue) {
            const newValue = transformOut(internalValue);
            const value = (0, _vue.toRaw)(isControlled.value ? props[prop] : internal.value);
            if (value === newValue || transformIn(value) === internalValue) return;
            internal.value = newValue;
            vm?.emit(`update:${prop}`, newValue);
        }
    });
    Object.defineProperty(model, "externalValue", {
        get: ()=>isControlled.value ? props[prop] : internal.value
    });
    return model;
}

},{"./toggleScope.mjs":"dsKlJ","vue":"gCTam","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"dsKlJ":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// Types
parcelHelpers.export(exports, "useToggleScope", ()=>useToggleScope);
var _vue = require("vue");
function useToggleScope(source, fn) {
    let scope;
    function start() {
        scope = (0, _vue.effectScope)();
        scope.run(()=>fn.length ? fn(()=>{
                scope?.stop();
                start();
            }) : fn());
    }
    (0, _vue.watch)(source, (active)=>{
        if (active && !scope) start();
        else if (!active) {
            scope?.stop();
            scope = undefined;
        }
    }, {
        immediate: true
    });
    (0, _vue.onScopeDispose)(()=>{
        scope?.stop();
    });
}

},{"vue":"gCTam","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"ivUh8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _anchorMjs = require("./anchor.mjs");
parcelHelpers.exportAll(_anchorMjs, exports);
var _animationMjs = require("./animation.mjs");
parcelHelpers.exportAll(_animationMjs, exports);
var _bindPropsMjs = require("./bindProps.mjs");
parcelHelpers.exportAll(_bindPropsMjs, exports);
var _colorUtilsMjs = require("./colorUtils.mjs");
parcelHelpers.exportAll(_colorUtilsMjs, exports);
var _consoleMjs = require("./console.mjs");
parcelHelpers.exportAll(_consoleMjs, exports);
var _createSimpleFunctionalMjs = require("./createSimpleFunctional.mjs");
parcelHelpers.exportAll(_createSimpleFunctionalMjs, exports);
var _defineComponentMjs = require("./defineComponent.mjs");
parcelHelpers.exportAll(_defineComponentMjs, exports);
var _domMjs = require("./dom.mjs");
parcelHelpers.exportAll(_domMjs, exports);
var _easingMjs = require("./easing.mjs");
parcelHelpers.exportAll(_easingMjs, exports);
var _eventsMjs = require("./events.mjs");
parcelHelpers.exportAll(_eventsMjs, exports);
var _getCurrentInstanceMjs = require("./getCurrentInstance.mjs");
parcelHelpers.exportAll(_getCurrentInstanceMjs, exports);
var _getScrollParentMjs = require("./getScrollParent.mjs");
parcelHelpers.exportAll(_getScrollParentMjs, exports);
var _globalsMjs = require("./globals.mjs");
parcelHelpers.exportAll(_globalsMjs, exports);
var _helpersMjs = require("./helpers.mjs");
parcelHelpers.exportAll(_helpersMjs, exports);
var _injectSelfMjs = require("./injectSelf.mjs");
parcelHelpers.exportAll(_injectSelfMjs, exports);
var _isFixedPositionMjs = require("./isFixedPosition.mjs");
parcelHelpers.exportAll(_isFixedPositionMjs, exports);
var _propsFactoryMjs = require("./propsFactory.mjs");
parcelHelpers.exportAll(_propsFactoryMjs, exports);
var _useRenderMjs = require("./useRender.mjs");
parcelHelpers.exportAll(_useRenderMjs, exports);

},{"./anchor.mjs":"6X0uD","./animation.mjs":"3PPbw","./bindProps.mjs":"kADog","./colorUtils.mjs":"4aEvK","./console.mjs":"61zy0","./createSimpleFunctional.mjs":"iH9pd","./defineComponent.mjs":"i6f23","./dom.mjs":"9cAWJ","./easing.mjs":"iMmHi","./events.mjs":"gHW0N","./getCurrentInstance.mjs":"kifo9","./getScrollParent.mjs":"Lsn2Y","./globals.mjs":"6CXK1","./helpers.mjs":"lIICA","./injectSelf.mjs":false,"./isFixedPosition.mjs":"7uNq6","./propsFactory.mjs":"cLdGN","./useRender.mjs":"cLV8L","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"6X0uD":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/** Parse a raw anchor string into an object */ parcelHelpers.export(exports, "parseAnchor", ()=>parseAnchor);
parcelHelpers.export(exports, "toPhysical", ()=>toPhysical);
parcelHelpers.export(exports, "flipSide", ()=>flipSide);
parcelHelpers.export(exports, "flipAlign", ()=>flipAlign);
parcelHelpers.export(exports, "flipCorner", ()=>flipCorner);
parcelHelpers.export(exports, "getAxis", ()=>getAxis);
var _helpersMjs = require("./helpers.mjs");
const block = [
    "top",
    "bottom"
];
const inline = [
    "start",
    "end",
    "left",
    "right"
];
function parseAnchor(anchor, isRtl) {
    let [side, align] = anchor.split(" ");
    if (!align) align = (0, _helpersMjs.includes)(block, side) ? "start" : (0, _helpersMjs.includes)(inline, side) ? "top" : "center";
    return {
        side: toPhysical(side, isRtl),
        align: toPhysical(align, isRtl)
    };
}
function toPhysical(str, isRtl) {
    if (str === "start") return isRtl ? "right" : "left";
    if (str === "end") return isRtl ? "left" : "right";
    return str;
}
function flipSide(anchor) {
    return {
        side: ({
            center: "center",
            top: "bottom",
            bottom: "top",
            left: "right",
            right: "left"
        })[anchor.side],
        align: anchor.align
    };
}
function flipAlign(anchor) {
    return {
        side: anchor.side,
        align: ({
            center: "center",
            top: "bottom",
            bottom: "top",
            left: "right",
            right: "left"
        })[anchor.align]
    };
}
function flipCorner(anchor) {
    return {
        side: anchor.align,
        align: anchor.side
    };
}
function getAxis(anchor) {
    return (0, _helpersMjs.includes)(block, anchor.side) ? "y" : "x";
}

},{"./helpers.mjs":"lIICA","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"lIICA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getNestedValue", ()=>getNestedValue);
parcelHelpers.export(exports, "deepEqual", ()=>deepEqual);
parcelHelpers.export(exports, "getObjectValueByPath", ()=>getObjectValueByPath);
parcelHelpers.export(exports, "getPropertyFromItem", ()=>getPropertyFromItem);
parcelHelpers.export(exports, "createRange", ()=>createRange);
parcelHelpers.export(exports, "getZIndex", ()=>getZIndex);
parcelHelpers.export(exports, "convertToUnit", ()=>convertToUnit);
parcelHelpers.export(exports, "isObject", ()=>isObject);
parcelHelpers.export(exports, "refElement", ()=>refElement);
parcelHelpers.export(exports, "keyCodes", ()=>keyCodes);
parcelHelpers.export(exports, "keyValues", ()=>keyValues);
parcelHelpers.export(exports, "keys", ()=>keys);
parcelHelpers.export(exports, "has", ()=>has);
// Array of keys
parcelHelpers.export(exports, "pick", ()=>pick);
// Array of keys
// Array of keys or RegExp to test keys against
parcelHelpers.export(exports, "pickWithRest", ()=>pickWithRest);
parcelHelpers.export(exports, "omit", ()=>omit);
parcelHelpers.export(exports, "only", ()=>only);
parcelHelpers.export(exports, "isOn", ()=>isOn);
parcelHelpers.export(exports, "isComposingIgnoreKey", ()=>isComposingIgnoreKey);
/**
 * Filter attributes that should be applied to
 * the root element of an input component. Remaining
 * attributes should be passed to the <input> element inside.
 */ parcelHelpers.export(exports, "filterInputAttrs", ()=>filterInputAttrs);
/**
 * Returns the set difference of B and A, i.e. the set of elements in B but not in A
 */ parcelHelpers.export(exports, "arrayDiff", ()=>arrayDiff);
parcelHelpers.export(exports, "wrapInArray", ()=>wrapInArray);
parcelHelpers.export(exports, "defaultFilter", ()=>defaultFilter);
parcelHelpers.export(exports, "debounce", ()=>debounce);
parcelHelpers.export(exports, "throttle", ()=>throttle);
parcelHelpers.export(exports, "clamp", ()=>clamp);
parcelHelpers.export(exports, "getDecimals", ()=>getDecimals);
parcelHelpers.export(exports, "padEnd", ()=>padEnd);
parcelHelpers.export(exports, "padStart", ()=>padStart);
parcelHelpers.export(exports, "chunk", ()=>chunk);
parcelHelpers.export(exports, "chunkArray", ()=>chunkArray);
parcelHelpers.export(exports, "humanReadableFileSize", ()=>humanReadableFileSize);
parcelHelpers.export(exports, "mergeDeep", ()=>mergeDeep);
parcelHelpers.export(exports, "flattenFragments", ()=>flattenFragments);
parcelHelpers.export(exports, "toKebabCase", ()=>toKebabCase);
parcelHelpers.export(exports, "findChildrenWithProvide", ()=>findChildrenWithProvide);
parcelHelpers.export(exports, "CircularBuffer", ()=>CircularBuffer);
parcelHelpers.export(exports, "getEventCoordinates", ()=>getEventCoordinates);
// Only allow a single return type
/**
 * Convert a computed ref to a record of refs.
 * The getter function must always return an object with the same keys.
 */ parcelHelpers.export(exports, "destructComputed", ()=>destructComputed);
/** Array.includes but value can be any type */ parcelHelpers.export(exports, "includes", ()=>includes);
parcelHelpers.export(exports, "eventName", ()=>eventName);
parcelHelpers.export(exports, "EventProp", ()=>EventProp);
parcelHelpers.export(exports, "hasEvent", ()=>hasEvent);
parcelHelpers.export(exports, "callEvent", ()=>callEvent);
parcelHelpers.export(exports, "focusableChildren", ()=>focusableChildren);
parcelHelpers.export(exports, "getNextElement", ()=>getNextElement);
parcelHelpers.export(exports, "focusChild", ()=>focusChild);
parcelHelpers.export(exports, "isEmpty", ()=>isEmpty);
parcelHelpers.export(exports, "noop", ()=>noop);
/** Returns null if the selector is not supported or we can't check */ parcelHelpers.export(exports, "matchesSelector", ()=>matchesSelector);
parcelHelpers.export(exports, "ensureValidVNode", ()=>ensureValidVNode);
parcelHelpers.export(exports, "defer", ()=>defer);
parcelHelpers.export(exports, "eagerComputed", ()=>eagerComputed);
parcelHelpers.export(exports, "isClickInsideElement", ()=>isClickInsideElement);
parcelHelpers.export(exports, "templateRef", ()=>templateRef);
parcelHelpers.export(exports, "checkPrintable", ()=>checkPrintable);
// Utilities
var _vue = require("vue");
var _globalsMjs = require("./globals.mjs"); // Types
function _classPrivateFieldInitSpec(e, t, a) {
    _checkPrivateRedeclaration(e, t), t.set(e, a);
}
function _checkPrivateRedeclaration(e, t) {
    if (t.has(e)) throw new TypeError("Cannot initialize the same private elements twice on an object");
}
function _classPrivateFieldSet(s, a, r) {
    return s.set(_assertClassBrand(s, a), r), r;
}
function _classPrivateFieldGet(s, a) {
    return s.get(_assertClassBrand(s, a));
}
function _assertClassBrand(e, t, n) {
    if ("function" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;
    throw new TypeError("Private element is not present on this object");
}
function getNestedValue(obj, path, fallback) {
    const last = path.length - 1;
    if (last < 0) return obj === undefined ? fallback : obj;
    for(let i = 0; i < last; i++){
        if (obj == null) return fallback;
        obj = obj[path[i]];
    }
    if (obj == null) return fallback;
    return obj[path[last]] === undefined ? fallback : obj[path[last]];
}
function deepEqual(a, b) {
    if (a === b) return true;
    if (a instanceof Date && b instanceof Date && a.getTime() !== b.getTime()) // If the values are Date, compare them as timestamps
    return false;
    if (a !== Object(a) || b !== Object(b)) // If the values aren't objects, they were already checked for equality
    return false;
    const props = Object.keys(a);
    if (props.length !== Object.keys(b).length) // Different number of props, don't bother to check
    return false;
    return props.every((p)=>deepEqual(a[p], b[p]));
}
function getObjectValueByPath(obj, path, fallback) {
    // credit: http://stackoverflow.com/questions/6491463/accessing-nested-javascript-objects-with-string-key#comment55278413_6491621
    if (obj == null || !path || typeof path !== "string") return fallback;
    if (obj[path] !== undefined) return obj[path];
    path = path.replace(/\[(\w+)\]/g, ".$1"); // convert indexes to properties
    path = path.replace(/^\./, ""); // strip a leading dot
    return getNestedValue(obj, path.split("."), fallback);
}
function getPropertyFromItem(item, property, fallback) {
    if (property === true) return item === undefined ? fallback : item;
    if (property == null || typeof property === "boolean") return fallback;
    if (item !== Object(item)) {
        if (typeof property !== "function") return fallback;
        const value = property(item, fallback);
        return typeof value === "undefined" ? fallback : value;
    }
    if (typeof property === "string") return getObjectValueByPath(item, property, fallback);
    if (Array.isArray(property)) return getNestedValue(item, property, fallback);
    if (typeof property !== "function") return fallback;
    const value = property(item, fallback);
    return typeof value === "undefined" ? fallback : value;
}
function createRange(length) {
    let start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    return Array.from({
        length
    }, (v, k)=>start + k);
}
function getZIndex(el) {
    if (!el || el.nodeType !== Node.ELEMENT_NODE) return 0;
    const index = +window.getComputedStyle(el).getPropertyValue("z-index");
    if (!index) return getZIndex(el.parentNode);
    return index;
}
function convertToUnit(str) {
    let unit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "px";
    if (str == null || str === "") return undefined;
    else if (isNaN(+str)) return String(str);
    else if (!isFinite(+str)) return undefined;
    else return `${Number(str)}${unit}`;
}
function isObject(obj) {
    return obj !== null && typeof obj === "object" && !Array.isArray(obj);
}
function refElement(obj) {
    if (obj && "$el" in obj) {
        const el = obj.$el;
        if (el?.nodeType === Node.TEXT_NODE) // Multi-root component, use the first element
        return el.nextElementSibling;
        return el;
    }
    return obj;
}
const keyCodes = Object.freeze({
    enter: 13,
    tab: 9,
    delete: 46,
    esc: 27,
    space: 32,
    up: 38,
    down: 40,
    left: 37,
    right: 39,
    end: 35,
    home: 36,
    del: 46,
    backspace: 8,
    insert: 45,
    pageup: 33,
    pagedown: 34,
    shift: 16
});
const keyValues = Object.freeze({
    enter: "Enter",
    tab: "Tab",
    delete: "Delete",
    esc: "Escape",
    space: "Space",
    up: "ArrowUp",
    down: "ArrowDown",
    left: "ArrowLeft",
    right: "ArrowRight",
    end: "End",
    home: "Home",
    del: "Delete",
    backspace: "Backspace",
    insert: "Insert",
    pageup: "PageUp",
    pagedown: "PageDown",
    shift: "Shift"
});
function keys(o) {
    return Object.keys(o);
}
function has(obj, key) {
    return key.every((k)=>obj.hasOwnProperty(k));
}
function pick(obj, paths) {
    const found = {};
    const keys = new Set(Object.keys(obj));
    for (const path of paths)if (keys.has(path)) found[path] = obj[path];
    return found;
}
function pickWithRest(obj, paths, exclude) {
    const found = Object.create(null);
    const rest = Object.create(null);
    for(const key in obj)if (paths.some((path)=>path instanceof RegExp ? path.test(key) : path === key) && !exclude?.some((path)=>path === key)) found[key] = obj[key];
    else rest[key] = obj[key];
    return [
        found,
        rest
    ];
}
function omit(obj, exclude) {
    const clone = {
        ...obj
    };
    exclude.forEach((prop)=>delete clone[prop]);
    return clone;
}
function only(obj, include) {
    const clone = {};
    include.forEach((prop)=>clone[prop] = obj[prop]);
    return clone;
}
const onRE = /^on[^a-z]/;
const isOn = (key)=>onRE.test(key);
const bubblingEvents = [
    "onAfterscriptexecute",
    "onAnimationcancel",
    "onAnimationend",
    "onAnimationiteration",
    "onAnimationstart",
    "onAuxclick",
    "onBeforeinput",
    "onBeforescriptexecute",
    "onChange",
    "onClick",
    "onCompositionend",
    "onCompositionstart",
    "onCompositionupdate",
    "onContextmenu",
    "onCopy",
    "onCut",
    "onDblclick",
    "onFocusin",
    "onFocusout",
    "onFullscreenchange",
    "onFullscreenerror",
    "onGesturechange",
    "onGestureend",
    "onGesturestart",
    "onGotpointercapture",
    "onInput",
    "onKeydown",
    "onKeypress",
    "onKeyup",
    "onLostpointercapture",
    "onMousedown",
    "onMousemove",
    "onMouseout",
    "onMouseover",
    "onMouseup",
    "onMousewheel",
    "onPaste",
    "onPointercancel",
    "onPointerdown",
    "onPointerenter",
    "onPointerleave",
    "onPointermove",
    "onPointerout",
    "onPointerover",
    "onPointerup",
    "onReset",
    "onSelect",
    "onSubmit",
    "onTouchcancel",
    "onTouchend",
    "onTouchmove",
    "onTouchstart",
    "onTransitioncancel",
    "onTransitionend",
    "onTransitionrun",
    "onTransitionstart",
    "onWheel"
];
const compositionIgnoreKeys = [
    "ArrowUp",
    "ArrowDown",
    "ArrowRight",
    "ArrowLeft",
    "Enter",
    "Escape",
    "Tab",
    " "
];
function isComposingIgnoreKey(e) {
    return e.isComposing && compositionIgnoreKeys.includes(e.key);
}
function filterInputAttrs(attrs) {
    const [events, props] = pickWithRest(attrs, [
        onRE
    ]);
    const inputEvents = omit(events, bubblingEvents);
    const [rootAttrs, inputAttrs] = pickWithRest(props, [
        "class",
        "style",
        "id",
        /^data-/
    ]);
    Object.assign(rootAttrs, events);
    Object.assign(inputAttrs, inputEvents);
    return [
        rootAttrs,
        inputAttrs
    ];
}
function arrayDiff(a, b) {
    const diff = [];
    for(let i = 0; i < b.length; i++)if (!a.includes(b[i])) diff.push(b[i]);
    return diff;
}
function wrapInArray(v) {
    return v == null ? [] : Array.isArray(v) ? v : [
        v
    ];
}
function defaultFilter(value, search, item) {
    return value != null && search != null && typeof value !== "boolean" && value.toString().toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) !== -1;
}
function debounce(fn, delay) {
    let timeoutId = 0;
    const wrap = function() {
        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
        clearTimeout(timeoutId);
        timeoutId = setTimeout(()=>fn(...args), (0, _vue.unref)(delay));
    };
    wrap.clear = ()=>{
        clearTimeout(timeoutId);
    };
    wrap.immediate = fn;
    return wrap;
}
function throttle(fn, limit) {
    let throttling = false;
    return function() {
        if (!throttling) {
            throttling = true;
            setTimeout(()=>throttling = false, limit);
            return fn(...arguments);
        }
    };
}
function clamp(value) {
    let min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    let max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
    return Math.max(min, Math.min(max, value));
}
function getDecimals(value) {
    const trimmedStr = value.toString().trim();
    return trimmedStr.includes(".") ? trimmedStr.length - trimmedStr.indexOf(".") - 1 : 0;
}
function padEnd(str, length) {
    let char = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "0";
    return str + char.repeat(Math.max(0, length - str.length));
}
function padStart(str, length) {
    let char = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "0";
    return char.repeat(Math.max(0, length - str.length)) + str;
}
function chunk(str) {
    let size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
    const chunked = [];
    let index = 0;
    while(index < str.length){
        chunked.push(str.substr(index, size));
        index += size;
    }
    return chunked;
}
function chunkArray(array) {
    let size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
    return Array.from({
        length: Math.ceil(array.length / size)
    }, (v, i)=>array.slice(i * size, i * size + size));
}
function humanReadableFileSize(bytes) {
    let base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;
    if (bytes < base) return `${bytes} B`;
    const prefix = base === 1024 ? [
        "Ki",
        "Mi",
        "Gi"
    ] : [
        "k",
        "M",
        "G"
    ];
    let unit = -1;
    while(Math.abs(bytes) >= base && unit < prefix.length - 1){
        bytes /= base;
        ++unit;
    }
    return `${bytes.toFixed(1)} ${prefix[unit]}B`;
}
function mergeDeep() {
    let source = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    let target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    let arrayFn = arguments.length > 2 ? arguments[2] : undefined;
    const out = {};
    for(const key in source)out[key] = source[key];
    for(const key in target){
        const sourceProperty = source[key];
        const targetProperty = target[key];
        // Only continue deep merging if
        // both properties are objects
        if (isObject(sourceProperty) && isObject(targetProperty)) {
            out[key] = mergeDeep(sourceProperty, targetProperty, arrayFn);
            continue;
        }
        if (Array.isArray(sourceProperty) && Array.isArray(targetProperty) && arrayFn) {
            out[key] = arrayFn(sourceProperty, targetProperty);
            continue;
        }
        out[key] = targetProperty;
    }
    return out;
}
function flattenFragments(nodes) {
    return nodes.map((node)=>{
        if (node.type === (0, _vue.Fragment)) return flattenFragments(node.children);
        else return node;
    }).flat();
}
function toKebabCase() {
    let str = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
    if (toKebabCase.cache.has(str)) return toKebabCase.cache.get(str);
    const kebab = str.replace(/[^a-z]/gi, "-").replace(/\B([A-Z])/g, "-$1").toLowerCase();
    toKebabCase.cache.set(str, kebab);
    return kebab;
}
toKebabCase.cache = new Map();
function findChildrenWithProvide(key, vnode) {
    if (!vnode || typeof vnode !== "object") return [];
    if (Array.isArray(vnode)) return vnode.map((child)=>findChildrenWithProvide(key, child)).flat(1);
    else if (vnode.suspense) return findChildrenWithProvide(key, vnode.ssContent);
    else if (Array.isArray(vnode.children)) return vnode.children.map((child)=>findChildrenWithProvide(key, child)).flat(1);
    else if (vnode.component) {
        if (Object.getOwnPropertySymbols(vnode.component.provides).includes(key)) return [
            vnode.component
        ];
        else if (vnode.component.subTree) return findChildrenWithProvide(key, vnode.component.subTree).flat(1);
    }
    return [];
}
var _arr = /*#__PURE__*/ new WeakMap();
var _pointer = /*#__PURE__*/ new WeakMap();
class CircularBuffer {
    constructor(size){
        _classPrivateFieldInitSpec(this, _arr, []);
        _classPrivateFieldInitSpec(this, _pointer, 0);
        this.size = size;
    }
    push(val) {
        _classPrivateFieldGet(_arr, this)[_classPrivateFieldGet(_pointer, this)] = val;
        _classPrivateFieldSet(_pointer, this, (_classPrivateFieldGet(_pointer, this) + 1) % this.size);
    }
    values() {
        return _classPrivateFieldGet(_arr, this).slice(_classPrivateFieldGet(_pointer, this)).concat(_classPrivateFieldGet(_arr, this).slice(0, _classPrivateFieldGet(_pointer, this)));
    }
}
function getEventCoordinates(e) {
    if ("touches" in e) return {
        clientX: e.touches[0].clientX,
        clientY: e.touches[0].clientY
    };
    return {
        clientX: e.clientX,
        clientY: e.clientY
    };
}
function destructComputed(getter) {
    const refs = (0, _vue.reactive)({});
    const base = (0, _vue.computed)(getter);
    (0, _vue.watchEffect)(()=>{
        for(const key in base.value)refs[key] = base.value[key];
    }, {
        flush: "sync"
    });
    return (0, _vue.toRefs)(refs);
}
function includes(arr, val) {
    return arr.includes(val);
}
function eventName(propName) {
    return propName[2].toLowerCase() + propName.slice(3);
}
const EventProp = ()=>[
        Function,
        Array
    ];
function hasEvent(props, name) {
    name = "on" + (0, _vue.capitalize)(name);
    return !!(props[name] || props[`${name}Once`] || props[`${name}Capture`] || props[`${name}OnceCapture`] || props[`${name}CaptureOnce`]);
}
function callEvent(handler) {
    for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)args[_key2 - 1] = arguments[_key2];
    if (Array.isArray(handler)) for (const h of handler)h(...args);
    else if (typeof handler === "function") handler(...args);
}
function focusableChildren(el) {
    let filterByTabIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
    const targets = [
        "button",
        "[href]",
        'input:not([type="hidden"])',
        "select",
        "textarea",
        "[tabindex]"
    ].map((s)=>`${s}${filterByTabIndex ? ':not([tabindex="-1"])' : ""}:not([disabled])`).join(", ");
    return [
        ...el.querySelectorAll(targets)
    ];
}
function getNextElement(elements, location, condition) {
    let _el;
    let idx = elements.indexOf(document.activeElement);
    const inc = location === "next" ? 1 : -1;
    do {
        idx += inc;
        _el = elements[idx];
    }while ((!_el || _el.offsetParent == null || !(condition?.(_el) ?? true)) && idx < elements.length && idx >= 0);
    return _el;
}
function focusChild(el, location) {
    const focusable = focusableChildren(el);
    if (!location) {
        if (el === document.activeElement || !el.contains(document.activeElement)) focusable[0]?.focus();
    } else if (location === "first") focusable[0]?.focus();
    else if (location === "last") focusable.at(-1)?.focus();
    else if (typeof location === "number") focusable[location]?.focus();
    else {
        const _el = getNextElement(focusable, location);
        if (_el) _el.focus();
        else focusChild(el, location === "next" ? "first" : "last");
    }
}
function isEmpty(val) {
    return val === null || val === undefined || typeof val === "string" && val.trim() === "";
}
function noop() {}
function matchesSelector(el, selector) {
    const supportsSelector = (0, _globalsMjs.IN_BROWSER) && typeof CSS !== "undefined" && typeof CSS.supports !== "undefined" && CSS.supports(`selector(${selector})`);
    if (!supportsSelector) return null;
    try {
        return !!el && el.matches(selector);
    } catch (err) {
        return null;
    }
}
function ensureValidVNode(vnodes) {
    return vnodes.some((child)=>{
        if (!(0, _vue.isVNode)(child)) return true;
        if (child.type === (0, _vue.Comment)) return false;
        return child.type !== (0, _vue.Fragment) || ensureValidVNode(child.children);
    }) ? vnodes : null;
}
function defer(timeout, cb) {
    if (!(0, _globalsMjs.IN_BROWSER) || timeout === 0) {
        cb();
        return ()=>{};
    }
    const timeoutId = window.setTimeout(cb, timeout);
    return ()=>window.clearTimeout(timeoutId);
}
function eagerComputed(fn, options) {
    const result = (0, _vue.shallowRef)();
    (0, _vue.watchEffect)(()=>{
        result.value = fn();
    }, {
        flush: "sync",
        ...options
    });
    return (0, _vue.readonly)(result);
}
function isClickInsideElement(event, targetDiv) {
    const mouseX = event.clientX;
    const mouseY = event.clientY;
    const divRect = targetDiv.getBoundingClientRect();
    const divLeft = divRect.left;
    const divTop = divRect.top;
    const divRight = divRect.right;
    const divBottom = divRect.bottom;
    return mouseX >= divLeft && mouseX <= divRight && mouseY >= divTop && mouseY <= divBottom;
}
function templateRef() {
    const el = (0, _vue.shallowRef)();
    const fn = (target)=>{
        el.value = target;
    };
    Object.defineProperty(fn, "value", {
        enumerable: true,
        get: ()=>el.value,
        set: (val)=>el.value = val
    });
    Object.defineProperty(fn, "el", {
        enumerable: true,
        get: ()=>refElement(el.value)
    });
    return fn;
}
function checkPrintable(e) {
    const isPrintableChar = e.key.length === 1;
    const noModifier = !e.ctrlKey && !e.metaKey && !e.altKey;
    return isPrintableChar && noModifier;
}

},{"vue":"gCTam","./globals.mjs":"6CXK1","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"6CXK1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "IN_BROWSER", ()=>IN_BROWSER);
parcelHelpers.export(exports, "SUPPORTS_INTERSECTION", ()=>SUPPORTS_INTERSECTION);
parcelHelpers.export(exports, "SUPPORTS_TOUCH", ()=>SUPPORTS_TOUCH);
parcelHelpers.export(exports, "SUPPORTS_EYE_DROPPER", ()=>SUPPORTS_EYE_DROPPER);
const IN_BROWSER = typeof window !== "undefined";
const SUPPORTS_INTERSECTION = IN_BROWSER && "IntersectionObserver" in window;
const SUPPORTS_TOUCH = IN_BROWSER && ("ontouchstart" in window || window.navigator.maxTouchPoints > 0);
const SUPPORTS_EYE_DROPPER = IN_BROWSER && "EyeDropper" in window;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"3PPbw":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/** @see https://stackoverflow.com/a/57876601/2074736 */ parcelHelpers.export(exports, "nullifyTransforms", ()=>nullifyTransforms);
parcelHelpers.export(exports, "animate", ()=>animate);
var _boxMjs = require("./box.mjs");
function nullifyTransforms(el) {
    const rect = el.getBoundingClientRect();
    const style = getComputedStyle(el);
    const tx = style.transform;
    if (tx) {
        let ta, sx, sy, dx, dy;
        if (tx.startsWith("matrix3d(")) {
            ta = tx.slice(9, -1).split(/, /);
            sx = +ta[0];
            sy = +ta[5];
            dx = +ta[12];
            dy = +ta[13];
        } else if (tx.startsWith("matrix(")) {
            ta = tx.slice(7, -1).split(/, /);
            sx = +ta[0];
            sy = +ta[3];
            dx = +ta[4];
            dy = +ta[5];
        } else return new (0, _boxMjs.Box)(rect);
        const to = style.transformOrigin;
        const x = rect.x - dx - (1 - sx) * parseFloat(to);
        const y = rect.y - dy - (1 - sy) * parseFloat(to.slice(to.indexOf(" ") + 1));
        const w = sx ? rect.width / sx : el.offsetWidth + 1;
        const h = sy ? rect.height / sy : el.offsetHeight + 1;
        return new (0, _boxMjs.Box)({
            x,
            y,
            width: w,
            height: h
        });
    } else return new (0, _boxMjs.Box)(rect);
}
function animate(el, keyframes, options) {
    if (typeof el.animate === "undefined") return {
        finished: Promise.resolve()
    };
    let animation;
    try {
        animation = el.animate(keyframes, options);
    } catch (err) {
        return {
            finished: Promise.resolve()
        };
    }
    if (typeof animation.finished === "undefined") animation.finished = new Promise((resolve)=>{
        animation.onfinish = ()=>{
            resolve(animation);
        };
    });
    return animation;
}

},{"./box.mjs":"9ahRi","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"9ahRi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Box", ()=>Box);
parcelHelpers.export(exports, "getOverflow", ()=>getOverflow);
parcelHelpers.export(exports, "getTargetBox", ()=>getTargetBox);
class Box {
    constructor(_ref){
        let { x, y, width, height } = _ref;
        this.x = x;
        this.y = y;
        this.width = width;
        this.height = height;
    }
    get top() {
        return this.y;
    }
    get bottom() {
        return this.y + this.height;
    }
    get left() {
        return this.x;
    }
    get right() {
        return this.x + this.width;
    }
}
function getOverflow(a, b) {
    return {
        x: {
            before: Math.max(0, b.left - a.left),
            after: Math.max(0, a.right - b.right)
        },
        y: {
            before: Math.max(0, b.top - a.top),
            after: Math.max(0, a.bottom - b.bottom)
        }
    };
}
function getTargetBox(target) {
    if (Array.isArray(target)) return new Box({
        x: target[0],
        y: target[1],
        width: 0,
        height: 0
    });
    else return target.getBoundingClientRect();
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"kADog":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "bindProps", ()=>bindProps);
parcelHelpers.export(exports, "unbindProps", ()=>unbindProps);
var _helpersMjs = require("./helpers.mjs");
const handlers = new WeakMap();
function bindProps(el, props) {
    Object.keys(props).forEach((k)=>{
        if ((0, _helpersMjs.isOn)(k)) {
            const name = (0, _helpersMjs.eventName)(k);
            const handler = handlers.get(el);
            if (props[k] == null) handler?.forEach((v)=>{
                const [n, fn] = v;
                if (n === name) {
                    el.removeEventListener(name, fn);
                    handler.delete(v);
                }
            });
            else if (!handler || ![
                ...handler
            ]?.some((v)=>v[0] === name && v[1] === props[k])) {
                el.addEventListener(name, props[k]);
                const _handler = handler || new Set();
                _handler.add([
                    name,
                    props[k]
                ]);
                if (!handlers.has(el)) handlers.set(el, _handler);
            }
        } else if (props[k] == null) el.removeAttribute(k);
        else el.setAttribute(k, props[k]);
    });
}
function unbindProps(el, props) {
    Object.keys(props).forEach((k)=>{
        if ((0, _helpersMjs.isOn)(k)) {
            const name = (0, _helpersMjs.eventName)(k);
            const handler = handlers.get(el);
            handler?.forEach((v)=>{
                const [n, fn] = v;
                if (n === name) {
                    el.removeEventListener(name, fn);
                    handler.delete(v);
                }
            });
        } else el.removeAttribute(k);
    });
}

},{"./helpers.mjs":"lIICA","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"4aEvK":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isCssColor", ()=>isCssColor);
parcelHelpers.export(exports, "isParsableColor", ()=>isParsableColor);
parcelHelpers.export(exports, "parseColor", ()=>parseColor);
parcelHelpers.export(exports, "RGBToInt", ()=>RGBToInt);
parcelHelpers.export(exports, "classToHex", ()=>classToHex);
/** Converts HSVA to RGBA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV */ parcelHelpers.export(exports, "HSVtoRGB", ()=>HSVtoRGB);
parcelHelpers.export(exports, "HSLtoRGB", ()=>HSLtoRGB);
/** Converts RGBA to HSVA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV */ parcelHelpers.export(exports, "RGBtoHSV", ()=>RGBtoHSV);
parcelHelpers.export(exports, "HSVtoHSL", ()=>HSVtoHSL);
parcelHelpers.export(exports, "HSLtoHSV", ()=>HSLtoHSV);
parcelHelpers.export(exports, "RGBtoCSS", ()=>RGBtoCSS);
parcelHelpers.export(exports, "HSVtoCSS", ()=>HSVtoCSS);
parcelHelpers.export(exports, "RGBtoHex", ()=>RGBtoHex);
parcelHelpers.export(exports, "HexToRGB", ()=>HexToRGB);
parcelHelpers.export(exports, "HexToHSV", ()=>HexToHSV);
parcelHelpers.export(exports, "HSVtoHex", ()=>HSVtoHex);
parcelHelpers.export(exports, "parseHex", ()=>parseHex);
parcelHelpers.export(exports, "parseGradient", ()=>parseGradient);
parcelHelpers.export(exports, "lighten", ()=>lighten);
parcelHelpers.export(exports, "darken", ()=>darken);
/**
 * Calculate the relative luminance of a given color
 * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef
 */ parcelHelpers.export(exports, "getLuma", ()=>getLuma);
/**
 * Returns the contrast ratio (1-21) between two colors.
 * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef
 */ parcelHelpers.export(exports, "getContrast", ()=>getContrast);
parcelHelpers.export(exports, "getForeground", ()=>getForeground);
var _apcaMjs = require("./color/APCA.mjs");
var _consoleMjs = require("./console.mjs");
var _helpersMjs = require("./helpers.mjs");
var _transformCIELABMjs = require("./color/transformCIELAB.mjs");
var _transformSRGBMjs = require("./color/transformSRGB.mjs"); // Types
function isCssColor(color) {
    return !!color && /^(#|var\(--|(rgb|hsl)a?\()/.test(color);
}
function isParsableColor(color) {
    return isCssColor(color) && !/^((rgb|hsl)a?\()?var\(--/.test(color);
}
const cssColorRe = /^(?<fn>(?:rgb|hsl)a?)\((?<values>.+)\)/;
const mappers = {
    rgb: (r, g, b, a)=>({
            r,
            g,
            b,
            a
        }),
    rgba: (r, g, b, a)=>({
            r,
            g,
            b,
            a
        }),
    hsl: (h, s, l, a)=>HSLtoRGB({
            h,
            s,
            l,
            a
        }),
    hsla: (h, s, l, a)=>HSLtoRGB({
            h,
            s,
            l,
            a
        }),
    hsv: (h, s, v, a)=>HSVtoRGB({
            h,
            s,
            v,
            a
        }),
    hsva: (h, s, v, a)=>HSVtoRGB({
            h,
            s,
            v,
            a
        })
};
function parseColor(color) {
    if (typeof color === "number") {
        if (isNaN(color) || color < 0 || color > 0xFFFFFF) // int can't have opacity
        (0, _consoleMjs.consoleWarn)(`'${color}' is not a valid hex color`);
        return {
            r: (color & 0xFF0000) >> 16,
            g: (color & 0xFF00) >> 8,
            b: color & 0xFF
        };
    } else if (typeof color === "string" && cssColorRe.test(color)) {
        const { groups } = color.match(cssColorRe);
        const { fn, values } = groups;
        const realValues = values.split(/,\s*/).map((v)=>{
            if (v.endsWith("%") && [
                "hsl",
                "hsla",
                "hsv",
                "hsva"
            ].includes(fn)) return parseFloat(v) / 100;
            else return parseFloat(v);
        });
        return mappers[fn](...realValues);
    } else if (typeof color === "string") {
        let hex = color.startsWith("#") ? color.slice(1) : color;
        if ([
            3,
            4
        ].includes(hex.length)) hex = hex.split("").map((char)=>char + char).join("");
        else if (![
            6,
            8
        ].includes(hex.length)) (0, _consoleMjs.consoleWarn)(`'${color}' is not a valid hex(a) color`);
        const int = parseInt(hex, 16);
        if (isNaN(int) || int < 0 || int > 0xFFFFFFFF) (0, _consoleMjs.consoleWarn)(`'${color}' is not a valid hex(a) color`);
        return HexToRGB(hex);
    } else if (typeof color === "object") {
        if ((0, _helpersMjs.has)(color, [
            "r",
            "g",
            "b"
        ])) return color;
        else if ((0, _helpersMjs.has)(color, [
            "h",
            "s",
            "l"
        ])) return HSVtoRGB(HSLtoHSV(color));
        else if ((0, _helpersMjs.has)(color, [
            "h",
            "s",
            "v"
        ])) return HSVtoRGB(color);
    }
    throw new TypeError(`Invalid color: ${color == null ? color : String(color) || color.constructor.name}\nExpected #hex, #hexa, rgb(), rgba(), hsl(), hsla(), object or number`);
}
function RGBToInt(color) {
    return (color.r << 16) + (color.g << 8) + color.b;
}
function classToHex(color, colors, currentTheme) {
    const [colorName, colorModifier] = color.toString().trim().replace("-", "").split(" ", 2);
    let hexColor = "";
    if (colorName && colorName in colors) {
        if (colorModifier && colorModifier in colors[colorName]) hexColor = colors[colorName][colorModifier];
        else if ("base" in colors[colorName]) hexColor = colors[colorName].base;
    } else if (colorName && colorName in currentTheme) hexColor = currentTheme[colorName];
    return hexColor;
}
function HSVtoRGB(hsva) {
    const { h, s, v, a } = hsva;
    const f = (n)=>{
        const k = (n + h / 60) % 6;
        return v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);
    };
    const rgb = [
        f(5),
        f(3),
        f(1)
    ].map((v)=>Math.round(v * 255));
    return {
        r: rgb[0],
        g: rgb[1],
        b: rgb[2],
        a
    };
}
function HSLtoRGB(hsla) {
    return HSVtoRGB(HSLtoHSV(hsla));
}
function RGBtoHSV(rgba) {
    if (!rgba) return {
        h: 0,
        s: 1,
        v: 1,
        a: 1
    };
    const r = rgba.r / 255;
    const g = rgba.g / 255;
    const b = rgba.b / 255;
    const max = Math.max(r, g, b);
    const min = Math.min(r, g, b);
    let h = 0;
    if (max !== min) {
        if (max === r) h = 60 * (0 + (g - b) / (max - min));
        else if (max === g) h = 60 * (2 + (b - r) / (max - min));
        else if (max === b) h = 60 * (4 + (r - g) / (max - min));
    }
    if (h < 0) h = h + 360;
    const s = max === 0 ? 0 : (max - min) / max;
    const hsv = [
        h,
        s,
        max
    ];
    return {
        h: hsv[0],
        s: hsv[1],
        v: hsv[2],
        a: rgba.a
    };
}
function HSVtoHSL(hsva) {
    const { h, s, v, a } = hsva;
    const l = v - v * s / 2;
    const sprime = l === 1 || l === 0 ? 0 : (v - l) / Math.min(l, 1 - l);
    return {
        h,
        s: sprime,
        l,
        a
    };
}
function HSLtoHSV(hsl) {
    const { h, s, l, a } = hsl;
    const v = l + s * Math.min(l, 1 - l);
    const sprime = v === 0 ? 0 : 2 - 2 * l / v;
    return {
        h,
        s: sprime,
        v,
        a
    };
}
function RGBtoCSS(_ref) {
    let { r, g, b, a } = _ref;
    return a === undefined ? `rgb(${r}, ${g}, ${b})` : `rgba(${r}, ${g}, ${b}, ${a})`;
}
function HSVtoCSS(hsva) {
    return RGBtoCSS(HSVtoRGB(hsva));
}
function toHex(v) {
    const h = Math.round(v).toString(16);
    return ("00".substr(0, 2 - h.length) + h).toUpperCase();
}
function RGBtoHex(_ref2) {
    let { r, g, b, a } = _ref2;
    return `#${[
        toHex(r),
        toHex(g),
        toHex(b),
        a !== undefined ? toHex(Math.round(a * 255)) : ""
    ].join("")}`;
}
function HexToRGB(hex) {
    hex = parseHex(hex);
    let [r, g, b, a] = (0, _helpersMjs.chunk)(hex, 2).map((c)=>parseInt(c, 16));
    a = a === undefined ? a : a / 255;
    return {
        r,
        g,
        b,
        a
    };
}
function HexToHSV(hex) {
    const rgb = HexToRGB(hex);
    return RGBtoHSV(rgb);
}
function HSVtoHex(hsva) {
    return RGBtoHex(HSVtoRGB(hsva));
}
function parseHex(hex) {
    if (hex.startsWith("#")) hex = hex.slice(1);
    hex = hex.replace(/([^0-9a-f])/gi, "F");
    if (hex.length === 3 || hex.length === 4) hex = hex.split("").map((x)=>x + x).join("");
    if (hex.length !== 6) hex = (0, _helpersMjs.padEnd)((0, _helpersMjs.padEnd)(hex, 6), 8, "F");
    return hex;
}
function parseGradient(gradient, colors, currentTheme) {
    return gradient.replace(/([a-z]+(\s[a-z]+-[1-5])?)(?=$|,)/gi, (x)=>{
        return classToHex(x, colors, currentTheme) || x;
    }).replace(/(rgba\()#[0-9a-f]+(?=,)/gi, (x)=>{
        return "rgba(" + Object.values(HexToRGB(parseHex(x.replace(/rgba\(/, "")))).slice(0, 3).join(",");
    });
}
function lighten(value, amount) {
    const lab = _transformCIELABMjs.fromXYZ(_transformSRGBMjs.toXYZ(value));
    lab[0] = lab[0] + amount * 10;
    return _transformSRGBMjs.fromXYZ(_transformCIELABMjs.toXYZ(lab));
}
function darken(value, amount) {
    const lab = _transformCIELABMjs.fromXYZ(_transformSRGBMjs.toXYZ(value));
    lab[0] = lab[0] - amount * 10;
    return _transformSRGBMjs.fromXYZ(_transformCIELABMjs.toXYZ(lab));
}
function getLuma(color) {
    const rgb = parseColor(color);
    return _transformSRGBMjs.toXYZ(rgb)[1];
}
function getContrast(first, second) {
    const l1 = getLuma(first);
    const l2 = getLuma(second);
    const light = Math.max(l1, l2);
    const dark = Math.min(l1, l2);
    return (light + 0.05) / (dark + 0.05);
}
function getForeground(color) {
    const blackContrast = Math.abs((0, _apcaMjs.APCAcontrast)(parseColor(0), parseColor(color)));
    const whiteContrast = Math.abs((0, _apcaMjs.APCAcontrast)(parseColor(0xffffff), parseColor(color)));
    // TODO: warn about poor color selections
    // const contrastAsText = Math.abs(APCAcontrast(colorVal, colorToInt(theme.colors.background)))
    // const minContrast = Math.max(blackContrast, whiteContrast)
    // if (minContrast < 60) {
    //   consoleInfo(`${key} theme color ${color} has poor contrast (${minContrast.toFixed()}%)`)
    // } else if (contrastAsText < 60 && !['background', 'surface'].includes(color)) {
    //   consoleInfo(`${key} theme color ${color} has poor contrast as text (${contrastAsText.toFixed()}%)`)
    // }
    // Prefer white text if both have an acceptable contrast ratio
    return whiteContrast > Math.min(blackContrast, 50) ? "#fff" : "#000";
}

},{"./color/APCA.mjs":"dX2pm","./console.mjs":"61zy0","./helpers.mjs":"lIICA","./color/transformCIELAB.mjs":"eu72e","./color/transformSRGB.mjs":"8FPT9","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"dX2pm":[function(require,module,exports) {
/**
 * WCAG 3.0 APCA perceptual contrast algorithm from https://github.com/Myndex/SAPC-APCA
 * @licence https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document
 * @see https://www.w3.org/WAI/GL/task-forces/silver/wiki/Visual_Contrast_of_Text_Subgroup
 */ // Types
// MAGICAL NUMBERS
// sRGB Conversion to Relative Luminance (Y)
// Transfer Curve (aka "Gamma") for sRGB linearization
// Simple power curve vs piecewise described in docs
// Essentially, 2.4 best models actual display
// characteristics in combination with the total method
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "APCAcontrast", ()=>APCAcontrast);
const mainTRC = 2.4;
const Rco = 0.2126729; // sRGB Red Coefficient (from matrix)
const Gco = 0.7151522; // sRGB Green Coefficient (from matrix)
const Bco = 0.0721750; // sRGB Blue Coefficient (from matrix)
// For Finding Raw SAPC Contrast from Relative Luminance (Y)
// Constants for SAPC Power Curve Exponents
// One pair for normal text, and one for reverse
// These are the "beating heart" of SAPC
const normBG = 0.55;
const normTXT = 0.58;
const revTXT = 0.57;
const revBG = 0.62;
// For Clamping and Scaling Values
const blkThrs = 0.03; // Level that triggers the soft black clamp
const blkClmp = 1.45; // Exponent for the soft black clamp curve
const deltaYmin = 0.0005; // Lint trap
const scaleBoW = 1.25; // Scaling for dark text on light
const scaleWoB = 1.25; // Scaling for light text on dark
const loConThresh = 0.078; // Threshold for new simple offset scale
const loConFactor = 12.82051282051282; // = 1/0.078,
const loConOffset = 0.06; // The simple offset
const loClip = 0.001; // Output clip (lint trap #2)
function APCAcontrast(text, background) {
    // Linearize sRGB
    const Rtxt = (text.r / 255) ** mainTRC;
    const Gtxt = (text.g / 255) ** mainTRC;
    const Btxt = (text.b / 255) ** mainTRC;
    const Rbg = (background.r / 255) ** mainTRC;
    const Gbg = (background.g / 255) ** mainTRC;
    const Bbg = (background.b / 255) ** mainTRC;
    // Apply the standard coefficients and sum to Y
    let Ytxt = Rtxt * Rco + Gtxt * Gco + Btxt * Bco;
    let Ybg = Rbg * Rco + Gbg * Gco + Bbg * Bco;
    // Soft clamp Y when near black.
    // Now clamping all colors to prevent crossover errors
    if (Ytxt <= blkThrs) Ytxt += (blkThrs - Ytxt) ** blkClmp;
    if (Ybg <= blkThrs) Ybg += (blkThrs - Ybg) ** blkClmp;
    // Return 0 Early for extremely low ∆Y (lint trap #1)
    if (Math.abs(Ybg - Ytxt) < deltaYmin) return 0.0;
    // SAPC CONTRAST
    let outputContrast; // For weighted final values
    if (Ybg > Ytxt) {
        // For normal polarity, black text on white
        // Calculate the SAPC contrast value and scale
        const SAPC = (Ybg ** normBG - Ytxt ** normTXT) * scaleBoW;
        // NEW! SAPC SmoothScale™
        // Low Contrast Smooth Scale Rollout to prevent polarity reversal
        // and also a low clip for very low contrasts (lint trap #2)
        // much of this is for very low contrasts, less than 10
        // therefore for most reversing needs, only loConOffset is important
        outputContrast = SAPC < loClip ? 0.0 : SAPC < loConThresh ? SAPC - SAPC * loConFactor * loConOffset : SAPC - loConOffset;
    } else {
        // For reverse polarity, light text on dark
        // WoB should always return negative value.
        const SAPC = (Ybg ** revBG - Ytxt ** revTXT) * scaleWoB;
        outputContrast = SAPC > -loClip ? 0.0 : SAPC > -loConThresh ? SAPC - SAPC * loConFactor * loConOffset : SAPC + loConOffset;
    }
    return outputContrast * 100;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"61zy0":[function(require,module,exports) {
/* eslint-disable no-console */ // Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "consoleWarn", ()=>consoleWarn);
parcelHelpers.export(exports, "consoleError", ()=>consoleError);
parcelHelpers.export(exports, "deprecate", ()=>deprecate);
parcelHelpers.export(exports, "breaking", ()=>breaking);
parcelHelpers.export(exports, "removed", ()=>removed);
var _vue = require("vue");
function consoleWarn(message) {
    (0, _vue.warn)(`Vuetify: ${message}`);
}
function consoleError(message) {
    (0, _vue.warn)(`Vuetify error: ${message}`);
}
function deprecate(original, replacement) {
    replacement = Array.isArray(replacement) ? replacement.slice(0, -1).map((s)=>`'${s}'`).join(", ") + ` or '${replacement.at(-1)}'` : `'${replacement}'`;
    (0, _vue.warn)(`[Vuetify UPGRADE] '${original}' is deprecated, use ${replacement} instead.`);
}
function breaking(original, replacement) {
// warn(`[Vuetify BREAKING] '${original}' has been removed, use '${replacement}' instead. For more information, see the upgrade guide https://github.com/vuetifyjs/vuetify/releases/tag/v2.0.0#user-content-upgrade-guide`)
}
function removed(original) {
// warn(`[Vuetify REMOVED] '${original}' has been removed. You can safely omit it.`)
}

},{"vue":"gCTam","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"eu72e":[function(require,module,exports) {
// Types
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "fromXYZ", ()=>fromXYZ);
parcelHelpers.export(exports, "toXYZ", ()=>toXYZ);
const delta = 0.20689655172413793; // 6÷29
const cielabForwardTransform = (t)=>t > delta ** 3 ? Math.cbrt(t) : t / (3 * delta ** 2) + 4 / 29;
const cielabReverseTransform = (t)=>t > delta ? t ** 3 : 3 * delta ** 2 * (t - 4 / 29);
function fromXYZ(xyz) {
    const transform = cielabForwardTransform;
    const transformedY = transform(xyz[1]);
    return [
        116 * transformedY - 16,
        500 * (transform(xyz[0] / 0.95047) - transformedY),
        200 * (transformedY - transform(xyz[2] / 1.08883))
    ];
}
function toXYZ(lab) {
    const transform = cielabReverseTransform;
    const Ln = (lab[0] + 16) / 116;
    return [
        transform(Ln + lab[1] / 500) * 0.95047,
        transform(Ln),
        transform(Ln - lab[2] / 200) * 1.08883
    ];
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"8FPT9":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "fromXYZ", ()=>fromXYZ);
parcelHelpers.export(exports, "toXYZ", ()=>toXYZ);
var _helpersMjs = require("../helpers.mjs"); // Types
// For converting XYZ to sRGB
const srgbForwardMatrix = [
    [
        3.2406,
        -1.5372,
        -0.4986
    ],
    [
        -0.9689,
        1.8758,
        0.0415
    ],
    [
        0.0557,
        -0.204,
        1.0570
    ]
];
// Forward gamma adjust
const srgbForwardTransform = (C)=>C <= 0.0031308 ? C * 12.92 : 1.055 * C ** (1 / 2.4) - 0.055;
// For converting sRGB to XYZ
const srgbReverseMatrix = [
    [
        0.4124,
        0.3576,
        0.1805
    ],
    [
        0.2126,
        0.7152,
        0.0722
    ],
    [
        0.0193,
        0.1192,
        0.9505
    ]
];
// Reverse gamma adjust
const srgbReverseTransform = (C)=>C <= 0.04045 ? C / 12.92 : ((C + 0.055) / 1.055) ** 2.4;
function fromXYZ(xyz) {
    const rgb = Array(3);
    const transform = srgbForwardTransform;
    const matrix = srgbForwardMatrix;
    // Matrix transform, then gamma adjustment
    for(let i = 0; i < 3; ++i)// Rescale back to [0, 255]
    rgb[i] = Math.round((0, _helpersMjs.clamp)(transform(matrix[i][0] * xyz[0] + matrix[i][1] * xyz[1] + matrix[i][2] * xyz[2])) * 255);
    return {
        r: rgb[0],
        g: rgb[1],
        b: rgb[2]
    };
}
function toXYZ(_ref) {
    let { r, g, b } = _ref;
    const xyz = [
        0,
        0,
        0
    ];
    const transform = srgbReverseTransform;
    const matrix = srgbReverseMatrix;
    // Rescale from [0, 255] to [0, 1] then adjust sRGB gamma to linear RGB
    r = transform(r / 255);
    g = transform(g / 255);
    b = transform(b / 255);
    // Matrix color space transform
    for(let i = 0; i < 3; ++i)xyz[i] = matrix[i][0] * r + matrix[i][1] * g + matrix[i][2] * b;
    return xyz;
}

},{"../helpers.mjs":"lIICA","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"iH9pd":[function(require,module,exports) {
// Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createSimpleFunctional", ()=>createSimpleFunctional);
var _componentMjs = require("../composables/component.mjs"); // Utilities
var _vue = require("vue");
var _defineComponentMjs = require("./defineComponent.mjs");
function createSimpleFunctional(klass) {
    let tag = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "div";
    let name = arguments.length > 2 ? arguments[2] : undefined;
    return (0, _defineComponentMjs.genericComponent)()({
        name: name ?? (0, _vue.capitalize)((0, _vue.camelize)(klass.replace(/__/g, "-"))),
        props: {
            tag: {
                type: String,
                default: tag
            },
            ...(0, _componentMjs.makeComponentProps)()
        },
        setup (props, _ref) {
            let { slots } = _ref;
            return ()=>{
                return (0, _vue.h)(props.tag, {
                    class: [
                        klass,
                        props.class
                    ],
                    style: props.style
                }, slots.default?.());
            };
        }
    });
}

},{"../composables/component.mjs":"4YAxs","vue":"gCTam","./defineComponent.mjs":"i6f23","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"4YAxs":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeComponentProps", ()=>makeComponentProps);
var _propsFactoryMjs = require("../util/propsFactory.mjs"); // Types
const makeComponentProps = (0, _propsFactoryMjs.propsFactory)({
    class: [
        String,
        Array,
        Object
    ],
    style: {
        type: [
            String,
            Array,
            Object
        ],
        default: null
    }
}, "component");

},{"../util/propsFactory.mjs":"cLdGN","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"cLdGN":[function(require,module,exports) {
// Types
// eslint-disable-line vue/prefer-import-from-vue
/**
 * Creates a factory function for props definitions.
 * This is used to define props in a composable then override
 * default values in an implementing component.
 *
 * @example Simplified signature
 * (props: Props) => (defaults?: Record<keyof props, any>) => Props
 *
 * @example Usage
 * const makeProps = propsFactory({
 *   foo: String,
 * })
 *
 * defineComponent({
 *   props: {
 *     ...makeProps({
 *       foo: 'a',
 *     }),
 *   },
 *   setup (props) {
 *     // would be "string | undefined", now "string" because a default has been provided
 *     props.foo
 *   },
 * }
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "propsFactory", ()=>propsFactory) /**
 * Like `Partial<T>` but doesn't care what the value is
 */  // Copied from Vue
;
function propsFactory(props, source) {
    return (defaults)=>{
        return Object.keys(props).reduce((obj, prop)=>{
            const isObjectDefinition = typeof props[prop] === "object" && props[prop] != null && !Array.isArray(props[prop]);
            const definition = isObjectDefinition ? props[prop] : {
                type: props[prop]
            };
            if (defaults && prop in defaults) obj[prop] = {
                ...definition,
                default: defaults[prop]
            };
            else obj[prop] = definition;
            if (source && !obj[prop].source) obj[prop].source = source;
            return obj;
        }, {});
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"i6f23":[function(require,module,exports) {
// Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// No props
// Object Props
// Implementation
parcelHelpers.export(exports, "defineComponent", ()=>defineComponent);
// No argument - simple default slot
// Generic constructor argument - generic props and slots
// Slots argument - simple slots
// Implementation
parcelHelpers.export(exports, "genericComponent", ()=>genericComponent);
parcelHelpers.export(exports, "defineFunctionalComponent", ()=>defineFunctionalComponent) // Adds a filterProps method to the component options
 // https://github.com/vuejs/core/pull/10557
 // not a vue Component
;
var _defaultsMjs = require("../composables/defaults.mjs"); // Utilities
var _vue = require("vue");
var _consoleMjs = require("./console.mjs");
var _helpersMjs = require("./helpers.mjs");
var _propsFactoryMjs = require("./propsFactory.mjs"); // Types
function defineComponent(options) {
    options._setup = options._setup ?? options.setup;
    if (!options.name) {
        (0, _consoleMjs.consoleWarn)("The component is missing an explicit name, unable to generate default prop value");
        return options;
    }
    if (options._setup) {
        options.props = (0, _propsFactoryMjs.propsFactory)(options.props ?? {}, options.name)();
        const propKeys = Object.keys(options.props).filter((key)=>key !== "class" && key !== "style");
        options.filterProps = function filterProps(props) {
            return (0, _helpersMjs.pick)(props, propKeys);
        };
        options.props._as = String;
        options.setup = function setup(props, ctx) {
            const defaults = (0, _defaultsMjs.injectDefaults)();
            // Skip props proxy if defaults are not provided
            if (!defaults.value) return options._setup(props, ctx);
            const { props: _props, provideSubDefaults } = (0, _defaultsMjs.internalUseDefaults)(props, props._as ?? options.name, defaults);
            const setupBindings = options._setup(_props, ctx);
            provideSubDefaults();
            return setupBindings;
        };
    }
    return options;
}
function genericComponent() {
    let exposeDefaults = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
    return (options)=>(exposeDefaults ? defineComponent : (0, _vue.defineComponent))(options);
}
function defineFunctionalComponent(props, render) {
    render.props = props;
    return render;
}

},{"../composables/defaults.mjs":"29Im0","vue":"gCTam","./console.mjs":"61zy0","./helpers.mjs":"lIICA","./propsFactory.mjs":"cLdGN","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"29Im0":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DefaultsSymbol", ()=>DefaultsSymbol);
parcelHelpers.export(exports, "createDefaults", ()=>createDefaults);
parcelHelpers.export(exports, "injectDefaults", ()=>injectDefaults);
parcelHelpers.export(exports, "provideDefaults", ()=>provideDefaults);
parcelHelpers.export(exports, "internalUseDefaults", ()=>internalUseDefaults);
parcelHelpers.export(exports, "useDefaults", ()=>useDefaults);
var _vue = require("vue");
var _getCurrentInstanceMjs = require("../util/getCurrentInstance.mjs");
var _helpersMjs = require("../util/helpers.mjs");
var _injectSelfMjs = require("../util/injectSelf.mjs"); // Types
const DefaultsSymbol = Symbol.for("vuetify:defaults");
function createDefaults(options) {
    return (0, _vue.ref)(options);
}
function injectDefaults() {
    const defaults = (0, _vue.inject)(DefaultsSymbol);
    if (!defaults) throw new Error("[Vuetify] Could not find defaults instance");
    return defaults;
}
function provideDefaults(defaults, options) {
    const injectedDefaults = injectDefaults();
    const providedDefaults = (0, _vue.ref)(defaults);
    const newDefaults = (0, _vue.computed)(()=>{
        const disabled = (0, _vue.unref)(options?.disabled);
        if (disabled) return injectedDefaults.value;
        const scoped = (0, _vue.unref)(options?.scoped);
        const reset = (0, _vue.unref)(options?.reset);
        const root = (0, _vue.unref)(options?.root);
        if (providedDefaults.value == null && !(scoped || reset || root)) return injectedDefaults.value;
        let properties = (0, _helpersMjs.mergeDeep)(providedDefaults.value, {
            prev: injectedDefaults.value
        });
        if (scoped) return properties;
        if (reset || root) {
            const len = Number(reset || Infinity);
            for(let i = 0; i <= len; i++){
                if (!properties || !("prev" in properties)) break;
                properties = properties.prev;
            }
            if (properties && typeof root === "string" && root in properties) properties = (0, _helpersMjs.mergeDeep)((0, _helpersMjs.mergeDeep)(properties, {
                prev: properties
            }), properties[root]);
            return properties;
        }
        return properties.prev ? (0, _helpersMjs.mergeDeep)(properties.prev, properties) : properties;
    });
    (0, _vue.provide)(DefaultsSymbol, newDefaults);
    return newDefaults;
}
function propIsDefined(vnode, prop) {
    return typeof vnode.props?.[prop] !== "undefined" || typeof vnode.props?.[(0, _helpersMjs.toKebabCase)(prop)] !== "undefined";
}
function internalUseDefaults() {
    let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    let name = arguments.length > 1 ? arguments[1] : undefined;
    let defaults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : injectDefaults();
    const vm = (0, _getCurrentInstanceMjs.getCurrentInstance)("useDefaults");
    name = name ?? vm.type.name ?? vm.type.__name;
    if (!name) throw new Error("[Vuetify] Could not determine component name");
    const componentDefaults = (0, _vue.computed)(()=>defaults.value?.[props._as ?? name]);
    const _props = new Proxy(props, {
        get (target, prop) {
            const propValue = Reflect.get(target, prop);
            if (prop === "class" || prop === "style") return [
                componentDefaults.value?.[prop],
                propValue
            ].filter((v)=>v != null);
            else if (typeof prop === "string" && !propIsDefined(vm.vnode, prop)) return componentDefaults.value?.[prop] !== undefined ? componentDefaults.value?.[prop] : defaults.value?.global?.[prop] !== undefined ? defaults.value?.global?.[prop] : propValue;
            return propValue;
        }
    });
    const _subcomponentDefaults = (0, _vue.shallowRef)();
    (0, _vue.watchEffect)(()=>{
        if (componentDefaults.value) {
            const subComponents = Object.entries(componentDefaults.value).filter((_ref)=>{
                let [key] = _ref;
                return key.startsWith(key[0].toUpperCase());
            });
            _subcomponentDefaults.value = subComponents.length ? Object.fromEntries(subComponents) : undefined;
        } else _subcomponentDefaults.value = undefined;
    });
    function provideSubDefaults() {
        const injected = (0, _injectSelfMjs.injectSelf)(DefaultsSymbol, vm);
        (0, _vue.provide)(DefaultsSymbol, (0, _vue.computed)(()=>{
            return _subcomponentDefaults.value ? (0, _helpersMjs.mergeDeep)(injected?.value ?? {}, _subcomponentDefaults.value) : injected?.value;
        }));
    }
    return {
        props: _props,
        provideSubDefaults
    };
}
function useDefaults() {
    let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    let name = arguments.length > 1 ? arguments[1] : undefined;
    const { props: _props, provideSubDefaults } = internalUseDefaults(props, name);
    provideSubDefaults();
    return _props;
}

},{"vue":"gCTam","../util/getCurrentInstance.mjs":"kifo9","../util/helpers.mjs":"lIICA","../util/injectSelf.mjs":"idgnR","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"kifo9":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getCurrentInstance", ()=>getCurrentInstance);
parcelHelpers.export(exports, "getCurrentInstanceName", ()=>getCurrentInstanceName);
parcelHelpers.export(exports, "getUid", ()=>getUid);
var _vue = require("vue");
var _helpersMjs = require("./helpers.mjs"); // Types
function getCurrentInstance(name, message) {
    const vm = (0, _vue.getCurrentInstance)();
    if (!vm) throw new Error(`[Vuetify] ${name} ${message || "must be called from inside a setup function"}`);
    return vm;
}
function getCurrentInstanceName() {
    let name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "composables";
    const vm = getCurrentInstance(name).type;
    return (0, _helpersMjs.toKebabCase)(vm?.aliasName || vm?.name);
}
let _uid = 0;
let _map = new WeakMap();
function getUid() {
    const vm = getCurrentInstance("getUid");
    if (_map.has(vm)) return _map.get(vm);
    else {
        const uid = _uid++;
        _map.set(vm, uid);
        return uid;
    }
}
getUid.reset = ()=>{
    _uid = 0;
    _map = new WeakMap();
};

},{"vue":"gCTam","./helpers.mjs":"lIICA","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"idgnR":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "injectSelf", ()=>injectSelf);
var _getCurrentInstanceMjs = require("./getCurrentInstance.mjs"); // Types
function injectSelf(key) {
    let vm = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, _getCurrentInstanceMjs.getCurrentInstance)("injectSelf");
    const { provides } = vm;
    if (provides && key in provides) // TS doesn't allow symbol as index type
    return provides[key];
    return undefined;
}

},{"./getCurrentInstance.mjs":"kifo9","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"9cAWJ":[function(require,module,exports) {
/**
 * Returns:
 *  - 'null' if the node is not attached to the DOM
 *  - the root node (HTMLDocument | ShadowRoot) otherwise
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "attachedRoot", ()=>attachedRoot);
function attachedRoot(node) {
    /* istanbul ignore next */ if (typeof node.getRootNode !== "function") {
        // Shadow DOM not supported (IE11), lets find the root of this node
        while(node.parentNode)node = node.parentNode;
        // The root parent is the document if the node is attached to the DOM
        if (node !== document) return null;
        return document;
    }
    const root = node.getRootNode();
    // The composed root node is the document if the node is attached to the DOM
    if (root !== document && root.getRootNode({
        composed: true
    }) !== document) return null;
    return root;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"iMmHi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "standardEasing", ()=>standardEasing);
parcelHelpers.export(exports, "deceleratedEasing", ()=>deceleratedEasing);
parcelHelpers.export(exports, "acceleratedEasing", ()=>acceleratedEasing);
const standardEasing = "cubic-bezier(0.4, 0, 0.2, 1)";
const deceleratedEasing = "cubic-bezier(0.0, 0, 0.2, 1)"; // Entering
const acceleratedEasing = "cubic-bezier(0.4, 0, 1, 1)"; // Leaving

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"gHW0N":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getPrefixedEventHandlers", ()=>getPrefixedEventHandlers);
var _helpersMjs = require("./helpers.mjs");
function getPrefixedEventHandlers(attrs, suffix, getData) {
    return Object.keys(attrs).filter((key)=>(0, _helpersMjs.isOn)(key) && key.endsWith(suffix)).reduce((acc, key)=>{
        acc[key.slice(0, -suffix.length)] = (event)=>attrs[key](event, getData(event));
        return acc;
    }, {});
}

},{"./helpers.mjs":"lIICA","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"Lsn2Y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "getScrollParent", ()=>getScrollParent);
parcelHelpers.export(exports, "getScrollParents", ()=>getScrollParents);
parcelHelpers.export(exports, "hasScrollbar", ()=>hasScrollbar);
function getScrollParent(el) {
    let includeHidden = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    while(el){
        if (includeHidden ? isPotentiallyScrollable(el) : hasScrollbar(el)) return el;
        el = el.parentElement;
    }
    return document.scrollingElement;
}
function getScrollParents(el, stopAt) {
    const elements = [];
    if (stopAt && el && !stopAt.contains(el)) return elements;
    while(el){
        if (hasScrollbar(el)) elements.push(el);
        if (el === stopAt) break;
        el = el.parentElement;
    }
    return elements;
}
function hasScrollbar(el) {
    if (!el || el.nodeType !== Node.ELEMENT_NODE) return false;
    const style = window.getComputedStyle(el);
    return style.overflowY === "scroll" || style.overflowY === "auto" && el.scrollHeight > el.clientHeight;
}
function isPotentiallyScrollable(el) {
    if (!el || el.nodeType !== Node.ELEMENT_NODE) return false;
    const style = window.getComputedStyle(el);
    return [
        "scroll",
        "auto"
    ].includes(style.overflowY);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"7uNq6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "isFixedPosition", ()=>isFixedPosition);
function isFixedPosition(el) {
    while(el){
        if (window.getComputedStyle(el).position === "fixed") return true;
        el = el.offsetParent;
    }
    return false;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"cLV8L":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useRender", ()=>useRender);
var _getCurrentInstanceMjs = require("./getCurrentInstance.mjs"); // Types
function useRender(render) {
    const vm = (0, _getCurrentInstanceMjs.getCurrentInstance)("useRender");
    vm.render = render;
}

},{"./getCurrentInstance.mjs":"kifo9","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"h1Ed8":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
exports.default = {
    badge: "Badge",
    open: "Open",
    close: "Close",
    dismiss: "Dismiss",
    confirmEdit: {
        ok: "OK",
        cancel: "Cancel"
    },
    dataIterator: {
        noResultsText: "No matching records found",
        loadingText: "Loading items..."
    },
    dataTable: {
        itemsPerPageText: "Rows per page:",
        ariaLabel: {
            sortDescending: "Sorted descending.",
            sortAscending: "Sorted ascending.",
            sortNone: "Not sorted.",
            activateNone: "Activate to remove sorting.",
            activateDescending: "Activate to sort descending.",
            activateAscending: "Activate to sort ascending."
        },
        sortBy: "Sort by"
    },
    dataFooter: {
        itemsPerPageText: "Items per page:",
        itemsPerPageAll: "All",
        nextPage: "Next page",
        prevPage: "Previous page",
        firstPage: "First page",
        lastPage: "Last page",
        pageText: "{0}-{1} of {2}"
    },
    dateRangeInput: {
        divider: "to"
    },
    datePicker: {
        itemsSelected: "{0} selected",
        range: {
            title: "Select dates",
            header: "Enter dates"
        },
        title: "Select date",
        header: "Enter date",
        input: {
            placeholder: "Enter date"
        }
    },
    noDataText: "No data available",
    carousel: {
        prev: "Previous visual",
        next: "Next visual",
        ariaLabel: {
            delimiter: "Carousel slide {0} of {1}"
        }
    },
    calendar: {
        moreEvents: "{0} more",
        today: "Today"
    },
    input: {
        clear: "Clear {0}",
        prependAction: "{0} prepended action",
        appendAction: "{0} appended action",
        otp: "Please enter OTP character {0}"
    },
    fileInput: {
        counter: "{0} files",
        counterSize: "{0} files ({1} in total)"
    },
    timePicker: {
        am: "AM",
        pm: "PM",
        title: "Select Time"
    },
    pagination: {
        ariaLabel: {
            root: "Pagination Navigation",
            next: "Next page",
            previous: "Previous page",
            page: "Go to page {0}",
            currentPage: "Page {0}, Current page",
            first: "First page",
            last: "Last page"
        }
    },
    stepper: {
        next: "Next",
        prev: "Previous"
    },
    rating: {
        ariaLabel: {
            item: "Rating {0} of {1}"
        }
    },
    loading: "Loading...",
    infiniteScroll: {
        loadMore: "Load more",
        empty: "No more"
    }
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"eOHVd":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VuetifyDateAdapter", ()=>VuetifyDateAdapter);
var _indexMjs = require("../../../util/index.mjs"); // Types
const firstDay = {
    "001": 1,
    AD: 1,
    AE: 6,
    AF: 6,
    AG: 0,
    AI: 1,
    AL: 1,
    AM: 1,
    AN: 1,
    AR: 1,
    AS: 0,
    AT: 1,
    AU: 1,
    AX: 1,
    AZ: 1,
    BA: 1,
    BD: 0,
    BE: 1,
    BG: 1,
    BH: 6,
    BM: 1,
    BN: 1,
    BR: 0,
    BS: 0,
    BT: 0,
    BW: 0,
    BY: 1,
    BZ: 0,
    CA: 0,
    CH: 1,
    CL: 1,
    CM: 1,
    CN: 1,
    CO: 0,
    CR: 1,
    CY: 1,
    CZ: 1,
    DE: 1,
    DJ: 6,
    DK: 1,
    DM: 0,
    DO: 0,
    DZ: 6,
    EC: 1,
    EE: 1,
    EG: 6,
    ES: 1,
    ET: 0,
    FI: 1,
    FJ: 1,
    FO: 1,
    FR: 1,
    GB: 1,
    "GB-alt-variant": 0,
    GE: 1,
    GF: 1,
    GP: 1,
    GR: 1,
    GT: 0,
    GU: 0,
    HK: 0,
    HN: 0,
    HR: 1,
    HU: 1,
    ID: 0,
    IE: 1,
    IL: 0,
    IN: 0,
    IQ: 6,
    IR: 6,
    IS: 1,
    IT: 1,
    JM: 0,
    JO: 6,
    JP: 0,
    KE: 0,
    KG: 1,
    KH: 0,
    KR: 0,
    KW: 6,
    KZ: 1,
    LA: 0,
    LB: 1,
    LI: 1,
    LK: 1,
    LT: 1,
    LU: 1,
    LV: 1,
    LY: 6,
    MC: 1,
    MD: 1,
    ME: 1,
    MH: 0,
    MK: 1,
    MM: 0,
    MN: 1,
    MO: 0,
    MQ: 1,
    MT: 0,
    MV: 5,
    MX: 0,
    MY: 1,
    MZ: 0,
    NI: 0,
    NL: 1,
    NO: 1,
    NP: 0,
    NZ: 1,
    OM: 6,
    PA: 0,
    PE: 0,
    PH: 0,
    PK: 0,
    PL: 1,
    PR: 0,
    PT: 0,
    PY: 0,
    QA: 6,
    RE: 1,
    RO: 1,
    RS: 1,
    RU: 1,
    SA: 0,
    SD: 6,
    SE: 1,
    SG: 0,
    SI: 1,
    SK: 1,
    SM: 1,
    SV: 0,
    SY: 6,
    TH: 0,
    TJ: 1,
    TM: 1,
    TR: 1,
    TT: 0,
    TW: 0,
    UA: 1,
    UM: 0,
    US: 0,
    UY: 1,
    UZ: 1,
    VA: 1,
    VE: 0,
    VI: 0,
    VN: 1,
    WS: 0,
    XK: 1,
    YE: 0,
    ZA: 0,
    ZW: 0
};
function getWeekArray(date, locale, firstDayOfWeek) {
    const weeks = [];
    let currentWeek = [];
    const firstDayOfMonth = startOfMonth(date);
    const lastDayOfMonth = endOfMonth(date);
    const first = firstDayOfWeek ?? firstDay[locale.slice(-2).toUpperCase()] ?? 0;
    const firstDayWeekIndex = (firstDayOfMonth.getDay() - first + 7) % 7;
    const lastDayWeekIndex = (lastDayOfMonth.getDay() - first + 7) % 7;
    for(let i = 0; i < firstDayWeekIndex; i++){
        const adjacentDay = new Date(firstDayOfMonth);
        adjacentDay.setDate(adjacentDay.getDate() - (firstDayWeekIndex - i));
        currentWeek.push(adjacentDay);
    }
    for(let i = 1; i <= lastDayOfMonth.getDate(); i++){
        const day = new Date(date.getFullYear(), date.getMonth(), i);
        // Add the day to the current week
        currentWeek.push(day);
        // If the current week has 7 days, add it to the weeks array and start a new week
        if (currentWeek.length === 7) {
            weeks.push(currentWeek);
            currentWeek = [];
        }
    }
    for(let i = 1; i < 7 - lastDayWeekIndex; i++){
        const adjacentDay = new Date(lastDayOfMonth);
        adjacentDay.setDate(adjacentDay.getDate() + i);
        currentWeek.push(adjacentDay);
    }
    if (currentWeek.length > 0) weeks.push(currentWeek);
    return weeks;
}
function startOfWeek(date, locale, firstDayOfWeek) {
    const day = firstDayOfWeek ?? firstDay[locale.slice(-2).toUpperCase()] ?? 0;
    const d = new Date(date);
    while(d.getDay() !== day)d.setDate(d.getDate() - 1);
    return d;
}
function endOfWeek(date, locale) {
    const d = new Date(date);
    const lastDay = ((firstDay[locale.slice(-2).toUpperCase()] ?? 0) + 6) % 7;
    while(d.getDay() !== lastDay)d.setDate(d.getDate() + 1);
    return d;
}
function startOfMonth(date) {
    return new Date(date.getFullYear(), date.getMonth(), 1);
}
function endOfMonth(date) {
    return new Date(date.getFullYear(), date.getMonth() + 1, 0);
}
function parseLocalDate(value) {
    const parts = value.split("-").map(Number);
    // new Date() uses local time zone when passing individual date component values
    return new Date(parts[0], parts[1] - 1, parts[2]);
}
const _YYYMMDD = /^([12]\d{3}-([1-9]|0[1-9]|1[0-2])-([1-9]|0[1-9]|[12]\d|3[01]))$/;
function date(value) {
    if (value == null) return new Date();
    if (value instanceof Date) return value;
    if (typeof value === "string") {
        let parsed;
        if (_YYYMMDD.test(value)) return parseLocalDate(value);
        else parsed = Date.parse(value);
        if (!isNaN(parsed)) return new Date(parsed);
    }
    return null;
}
const sundayJanuarySecond2000 = new Date(2000, 0, 2);
function getWeekdays(locale, firstDayOfWeek) {
    const daysFromSunday = firstDayOfWeek ?? firstDay[locale.slice(-2).toUpperCase()] ?? 0;
    return (0, _indexMjs.createRange)(7).map((i)=>{
        const weekday = new Date(sundayJanuarySecond2000);
        weekday.setDate(sundayJanuarySecond2000.getDate() + daysFromSunday + i);
        return new Intl.DateTimeFormat(locale, {
            weekday: "narrow"
        }).format(weekday);
    });
}
function format(value, formatString, locale, formats) {
    const newDate = date(value) ?? new Date();
    const customFormat = formats?.[formatString];
    if (typeof customFormat === "function") return customFormat(newDate, formatString, locale);
    let options = {};
    switch(formatString){
        case "fullDate":
            options = {
                year: "numeric",
                month: "long",
                day: "numeric"
            };
            break;
        case "fullDateWithWeekday":
            options = {
                weekday: "long",
                year: "numeric",
                month: "long",
                day: "numeric"
            };
            break;
        case "normalDate":
            const day = newDate.getDate();
            const month = new Intl.DateTimeFormat(locale, {
                month: "long"
            }).format(newDate);
            return `${day} ${month}`;
        case "normalDateWithWeekday":
            options = {
                weekday: "short",
                day: "numeric",
                month: "short"
            };
            break;
        case "shortDate":
            options = {
                month: "short",
                day: "numeric"
            };
            break;
        case "year":
            options = {
                year: "numeric"
            };
            break;
        case "month":
            options = {
                month: "long"
            };
            break;
        case "monthShort":
            options = {
                month: "short"
            };
            break;
        case "monthAndYear":
            options = {
                month: "long",
                year: "numeric"
            };
            break;
        case "monthAndDate":
            options = {
                month: "long",
                day: "numeric"
            };
            break;
        case "weekday":
            options = {
                weekday: "long"
            };
            break;
        case "weekdayShort":
            options = {
                weekday: "short"
            };
            break;
        case "dayOfMonth":
            return new Intl.NumberFormat(locale).format(newDate.getDate());
        case "hours12h":
            options = {
                hour: "numeric",
                hour12: true
            };
            break;
        case "hours24h":
            options = {
                hour: "numeric",
                hour12: false
            };
            break;
        case "minutes":
            options = {
                minute: "numeric"
            };
            break;
        case "seconds":
            options = {
                second: "numeric"
            };
            break;
        case "fullTime":
            options = {
                hour: "numeric",
                minute: "numeric",
                second: "numeric",
                hour12: true
            };
            break;
        case "fullTime12h":
            options = {
                hour: "numeric",
                minute: "numeric",
                second: "numeric",
                hour12: true
            };
            break;
        case "fullTime24h":
            options = {
                hour: "numeric",
                minute: "numeric",
                second: "numeric",
                hour12: false
            };
            break;
        case "fullDateTime":
            options = {
                year: "numeric",
                month: "long",
                day: "numeric",
                hour: "numeric",
                minute: "numeric",
                second: "numeric",
                hour12: true
            };
            break;
        case "fullDateTime12h":
            options = {
                year: "numeric",
                month: "long",
                day: "numeric",
                hour: "numeric",
                minute: "numeric",
                second: "numeric",
                hour12: true
            };
            break;
        case "fullDateTime24h":
            options = {
                year: "numeric",
                month: "long",
                day: "numeric",
                hour: "numeric",
                minute: "numeric",
                second: "numeric",
                hour12: false
            };
            break;
        case "keyboardDate":
            options = {
                year: "numeric",
                month: "2-digit",
                day: "2-digit"
            };
            break;
        case "keyboardDateTime":
            options = {
                year: "numeric",
                month: "2-digit",
                day: "2-digit",
                hour: "numeric",
                minute: "numeric",
                second: "numeric",
                hour12: false
            };
            break;
        case "keyboardDateTime12h":
            options = {
                year: "numeric",
                month: "2-digit",
                day: "2-digit",
                hour: "numeric",
                minute: "numeric",
                second: "numeric",
                hour12: true
            };
            break;
        case "keyboardDateTime24h":
            options = {
                year: "numeric",
                month: "2-digit",
                day: "2-digit",
                hour: "numeric",
                minute: "numeric",
                second: "numeric",
                hour12: false
            };
            break;
        default:
            options = customFormat ?? {
                timeZone: "UTC",
                timeZoneName: "short"
            };
    }
    return new Intl.DateTimeFormat(locale, options).format(newDate);
}
function toISO(adapter, value) {
    const date = adapter.toJsDate(value);
    const year = date.getFullYear();
    const month = (0, _indexMjs.padStart)(String(date.getMonth() + 1), 2, "0");
    const day = (0, _indexMjs.padStart)(String(date.getDate()), 2, "0");
    return `${year}-${month}-${day}`;
}
function parseISO(value) {
    const [year, month, day] = value.split("-").map(Number);
    return new Date(year, month - 1, day);
}
function addMinutes(date, amount) {
    const d = new Date(date);
    d.setMinutes(d.getMinutes() + amount);
    return d;
}
function addHours(date, amount) {
    const d = new Date(date);
    d.setHours(d.getHours() + amount);
    return d;
}
function addDays(date, amount) {
    const d = new Date(date);
    d.setDate(d.getDate() + amount);
    return d;
}
function addWeeks(date, amount) {
    const d = new Date(date);
    d.setDate(d.getDate() + amount * 7);
    return d;
}
function addMonths(date, amount) {
    const d = new Date(date);
    d.setDate(1);
    d.setMonth(d.getMonth() + amount);
    return d;
}
function getYear(date) {
    return date.getFullYear();
}
function getMonth(date) {
    return date.getMonth();
}
function getDate(date) {
    return date.getDate();
}
function getNextMonth(date) {
    return new Date(date.getFullYear(), date.getMonth() + 1, 1);
}
function getPreviousMonth(date) {
    return new Date(date.getFullYear(), date.getMonth() - 1, 1);
}
function getHours(date) {
    return date.getHours();
}
function getMinutes(date) {
    return date.getMinutes();
}
function startOfYear(date) {
    return new Date(date.getFullYear(), 0, 1);
}
function endOfYear(date) {
    return new Date(date.getFullYear(), 11, 31);
}
function isWithinRange(date, range) {
    return isAfter(date, range[0]) && isBefore(date, range[1]);
}
function isValid(date) {
    const d = new Date(date);
    return d instanceof Date && !isNaN(d.getTime());
}
function isAfter(date, comparing) {
    return date.getTime() > comparing.getTime();
}
function isAfterDay(date, comparing) {
    return isAfter(startOfDay(date), startOfDay(comparing));
}
function isBefore(date, comparing) {
    return date.getTime() < comparing.getTime();
}
function isEqual(date, comparing) {
    return date.getTime() === comparing.getTime();
}
function isSameDay(date, comparing) {
    return date.getDate() === comparing.getDate() && date.getMonth() === comparing.getMonth() && date.getFullYear() === comparing.getFullYear();
}
function isSameMonth(date, comparing) {
    return date.getMonth() === comparing.getMonth() && date.getFullYear() === comparing.getFullYear();
}
function isSameYear(date, comparing) {
    return date.getFullYear() === comparing.getFullYear();
}
function getDiff(date, comparing, unit) {
    const d = new Date(date);
    const c = new Date(comparing);
    switch(unit){
        case "years":
            return d.getFullYear() - c.getFullYear();
        case "quarters":
            return Math.floor((d.getMonth() - c.getMonth() + (d.getFullYear() - c.getFullYear()) * 12) / 4);
        case "months":
            return d.getMonth() - c.getMonth() + (d.getFullYear() - c.getFullYear()) * 12;
        case "weeks":
            return Math.floor((d.getTime() - c.getTime()) / 604800000);
        case "days":
            return Math.floor((d.getTime() - c.getTime()) / 86400000);
        case "hours":
            return Math.floor((d.getTime() - c.getTime()) / 3600000);
        case "minutes":
            return Math.floor((d.getTime() - c.getTime()) / 60000);
        case "seconds":
            return Math.floor((d.getTime() - c.getTime()) / 1000);
        default:
            return d.getTime() - c.getTime();
    }
}
function setHours(date, count) {
    const d = new Date(date);
    d.setHours(count);
    return d;
}
function setMinutes(date, count) {
    const d = new Date(date);
    d.setMinutes(count);
    return d;
}
function setMonth(date, count) {
    const d = new Date(date);
    d.setMonth(count);
    return d;
}
function setDate(date, day) {
    const d = new Date(date);
    d.setDate(day);
    return d;
}
function setYear(date, year) {
    const d = new Date(date);
    d.setFullYear(year);
    return d;
}
function startOfDay(date) {
    return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0);
}
function endOfDay(date) {
    return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 23, 59, 59, 999);
}
class VuetifyDateAdapter {
    constructor(options){
        this.locale = options.locale;
        this.formats = options.formats;
    }
    date(value) {
        return date(value);
    }
    toJsDate(date) {
        return date;
    }
    toISO(date) {
        return toISO(this, date);
    }
    parseISO(date) {
        return parseISO(date);
    }
    addMinutes(date, amount) {
        return addMinutes(date, amount);
    }
    addHours(date, amount) {
        return addHours(date, amount);
    }
    addDays(date, amount) {
        return addDays(date, amount);
    }
    addWeeks(date, amount) {
        return addWeeks(date, amount);
    }
    addMonths(date, amount) {
        return addMonths(date, amount);
    }
    getWeekArray(date, firstDayOfWeek) {
        return getWeekArray(date, this.locale, firstDayOfWeek ? Number(firstDayOfWeek) : undefined);
    }
    startOfWeek(date, firstDayOfWeek) {
        return startOfWeek(date, this.locale, firstDayOfWeek ? Number(firstDayOfWeek) : undefined);
    }
    endOfWeek(date) {
        return endOfWeek(date, this.locale);
    }
    startOfMonth(date) {
        return startOfMonth(date);
    }
    endOfMonth(date) {
        return endOfMonth(date);
    }
    format(date, formatString) {
        return format(date, formatString, this.locale, this.formats);
    }
    isEqual(date, comparing) {
        return isEqual(date, comparing);
    }
    isValid(date) {
        return isValid(date);
    }
    isWithinRange(date, range) {
        return isWithinRange(date, range);
    }
    isAfter(date, comparing) {
        return isAfter(date, comparing);
    }
    isAfterDay(date, comparing) {
        return isAfterDay(date, comparing);
    }
    isBefore(date, comparing) {
        return !isAfter(date, comparing) && !isEqual(date, comparing);
    }
    isSameDay(date, comparing) {
        return isSameDay(date, comparing);
    }
    isSameMonth(date, comparing) {
        return isSameMonth(date, comparing);
    }
    isSameYear(date, comparing) {
        return isSameYear(date, comparing);
    }
    setMinutes(date, count) {
        return setMinutes(date, count);
    }
    setHours(date, count) {
        return setHours(date, count);
    }
    setMonth(date, count) {
        return setMonth(date, count);
    }
    setDate(date, day) {
        return setDate(date, day);
    }
    setYear(date, year) {
        return setYear(date, year);
    }
    getDiff(date, comparing, unit) {
        return getDiff(date, comparing, unit);
    }
    getWeekdays(firstDayOfWeek) {
        return getWeekdays(this.locale, firstDayOfWeek ? Number(firstDayOfWeek) : undefined);
    }
    getYear(date) {
        return getYear(date);
    }
    getMonth(date) {
        return getMonth(date);
    }
    getDate(date) {
        return getDate(date);
    }
    getNextMonth(date) {
        return getNextMonth(date);
    }
    getPreviousMonth(date) {
        return getPreviousMonth(date);
    }
    getHours(date) {
        return getHours(date);
    }
    getMinutes(date) {
        return getMinutes(date);
    }
    startOfDay(date) {
        return startOfDay(date);
    }
    endOfDay(date) {
        return endOfDay(date);
    }
    startOfYear(date) {
        return startOfYear(date);
    }
    endOfYear(date) {
        return endOfYear(date);
    }
}

},{"../../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"bcRjl":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "breakpoints", ()=>breakpoints);
parcelHelpers.export(exports, "DisplaySymbol", ()=>DisplaySymbol);
parcelHelpers.export(exports, "createDisplay", ()=>createDisplay);
parcelHelpers.export(exports, "makeDisplayProps", ()=>makeDisplayProps);
parcelHelpers.export(exports, "useDisplay", ()=>useDisplay);
var _vue = require("vue");
var _indexMjs = require("../util/index.mjs");
var _globalsMjs = require("../util/globals.mjs"); // Types
const breakpoints = [
    "sm",
    "md",
    "lg",
    "xl",
    "xxl"
]; // no xs
const DisplaySymbol = Symbol.for("vuetify:display");
const defaultDisplayOptions = {
    mobileBreakpoint: "lg",
    thresholds: {
        xs: 0,
        sm: 600,
        md: 960,
        lg: 1280,
        xl: 1920,
        xxl: 2560
    }
};
const parseDisplayOptions = function() {
    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultDisplayOptions;
    return (0, _indexMjs.mergeDeep)(defaultDisplayOptions, options);
};
function getClientWidth(ssr) {
    return (0, _globalsMjs.IN_BROWSER) && !ssr ? window.innerWidth : typeof ssr === "object" && ssr.clientWidth || 0;
}
function getClientHeight(ssr) {
    return (0, _globalsMjs.IN_BROWSER) && !ssr ? window.innerHeight : typeof ssr === "object" && ssr.clientHeight || 0;
}
function getPlatform(ssr) {
    const userAgent = (0, _globalsMjs.IN_BROWSER) && !ssr ? window.navigator.userAgent : "ssr";
    function match(regexp) {
        return Boolean(userAgent.match(regexp));
    }
    const android = match(/android/i);
    const ios = match(/iphone|ipad|ipod/i);
    const cordova = match(/cordova/i);
    const electron = match(/electron/i);
    const chrome = match(/chrome/i);
    const edge = match(/edge/i);
    const firefox = match(/firefox/i);
    const opera = match(/opera/i);
    const win = match(/win/i);
    const mac = match(/mac/i);
    const linux = match(/linux/i);
    return {
        android,
        ios,
        cordova,
        electron,
        chrome,
        edge,
        firefox,
        opera,
        win,
        mac,
        linux,
        touch: (0, _globalsMjs.SUPPORTS_TOUCH),
        ssr: userAgent === "ssr"
    };
}
function createDisplay(options, ssr) {
    const { thresholds, mobileBreakpoint } = parseDisplayOptions(options);
    const height = (0, _vue.shallowRef)(getClientHeight(ssr));
    const platform = (0, _vue.shallowRef)(getPlatform(ssr));
    const state = (0, _vue.reactive)({});
    const width = (0, _vue.shallowRef)(getClientWidth(ssr));
    function updateSize() {
        height.value = getClientHeight();
        width.value = getClientWidth();
    }
    function update() {
        updateSize();
        platform.value = getPlatform();
    }
    // eslint-disable-next-line max-statements
    (0, _vue.watchEffect)(()=>{
        const xs = width.value < thresholds.sm;
        const sm = width.value < thresholds.md && !xs;
        const md = width.value < thresholds.lg && !(sm || xs);
        const lg = width.value < thresholds.xl && !(md || sm || xs);
        const xl = width.value < thresholds.xxl && !(lg || md || sm || xs);
        const xxl = width.value >= thresholds.xxl;
        const name = xs ? "xs" : sm ? "sm" : md ? "md" : lg ? "lg" : xl ? "xl" : "xxl";
        const breakpointValue = typeof mobileBreakpoint === "number" ? mobileBreakpoint : thresholds[mobileBreakpoint];
        const mobile = width.value < breakpointValue;
        state.xs = xs;
        state.sm = sm;
        state.md = md;
        state.lg = lg;
        state.xl = xl;
        state.xxl = xxl;
        state.smAndUp = !xs;
        state.mdAndUp = !(xs || sm);
        state.lgAndUp = !(xs || sm || md);
        state.xlAndUp = !(xs || sm || md || lg);
        state.smAndDown = !(md || lg || xl || xxl);
        state.mdAndDown = !(lg || xl || xxl);
        state.lgAndDown = !(xl || xxl);
        state.xlAndDown = !xxl;
        state.name = name;
        state.height = height.value;
        state.width = width.value;
        state.mobile = mobile;
        state.mobileBreakpoint = mobileBreakpoint;
        state.platform = platform.value;
        state.thresholds = thresholds;
    });
    if (0, _globalsMjs.IN_BROWSER) window.addEventListener("resize", updateSize, {
        passive: true
    });
    return {
        ...(0, _vue.toRefs)(state),
        update,
        ssr: !!ssr
    };
}
const makeDisplayProps = (0, _indexMjs.propsFactory)({
    mobile: {
        type: Boolean,
        default: false
    },
    mobileBreakpoint: [
        Number,
        String
    ]
}, "display");
function useDisplay() {
    let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, _indexMjs.getCurrentInstanceName)();
    const display = (0, _vue.inject)(DisplaySymbol);
    if (!display) throw new Error("Could not find Vuetify display injection");
    const mobile = (0, _vue.computed)(()=>{
        if (props.mobile != null) return props.mobile;
        if (!props.mobileBreakpoint) return display.mobile.value;
        const breakpointValue = typeof props.mobileBreakpoint === "number" ? props.mobileBreakpoint : display.thresholds.value[props.mobileBreakpoint];
        return display.width.value < breakpointValue;
    });
    const displayClasses = (0, _vue.computed)(()=>{
        if (!name) return {};
        return {
            [`${name}--mobile`]: mobile.value
        };
    });
    return {
        ...display,
        displayClasses,
        mobile
    };
}

},{"vue":"gCTam","../util/index.mjs":"ivUh8","../util/globals.mjs":"6CXK1","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"gI0Ln":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "GoToSymbol", ()=>GoToSymbol);
parcelHelpers.export(exports, "createGoTo", ()=>createGoTo);
parcelHelpers.export(exports, "scrollTo", ()=>scrollTo);
parcelHelpers.export(exports, "useGoTo", ()=>useGoTo);
var _vue = require("vue");
var _localeMjs = require("./locale.mjs");
var _indexMjs = require("../util/index.mjs"); // Types
const GoToSymbol = Symbol.for("vuetify:goto");
function genDefaults() {
    return {
        container: undefined,
        duration: 300,
        layout: false,
        offset: 0,
        easing: "easeInOutCubic",
        patterns: {
            linear: (t)=>t,
            easeInQuad: (t)=>t ** 2,
            easeOutQuad: (t)=>t * (2 - t),
            easeInOutQuad: (t)=>t < 0.5 ? 2 * t ** 2 : -1 + (4 - 2 * t) * t,
            easeInCubic: (t)=>t ** 3,
            easeOutCubic: (t)=>--t ** 3 + 1,
            easeInOutCubic: (t)=>t < 0.5 ? 4 * t ** 3 : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1,
            easeInQuart: (t)=>t ** 4,
            easeOutQuart: (t)=>1 - --t ** 4,
            easeInOutQuart: (t)=>t < 0.5 ? 8 * t ** 4 : 1 - 8 * --t ** 4,
            easeInQuint: (t)=>t ** 5,
            easeOutQuint: (t)=>1 + --t ** 5,
            easeInOutQuint: (t)=>t < 0.5 ? 16 * t ** 5 : 1 + 16 * --t ** 5
        }
    };
}
function getContainer(el) {
    return getTarget(el) ?? (document.scrollingElement || document.body);
}
function getTarget(el) {
    return typeof el === "string" ? document.querySelector(el) : (0, _indexMjs.refElement)(el);
}
function getOffset(target, horizontal, rtl) {
    if (typeof target === "number") return horizontal && rtl ? -target : target;
    let el = getTarget(target);
    let totalOffset = 0;
    while(el){
        totalOffset += horizontal ? el.offsetLeft : el.offsetTop;
        el = el.offsetParent;
    }
    return totalOffset;
}
function createGoTo(options, locale) {
    return {
        rtl: locale.isRtl,
        options: (0, _indexMjs.mergeDeep)(genDefaults(), options)
    };
}
async function scrollTo(_target, _options, horizontal, goTo) {
    const property = horizontal ? "scrollLeft" : "scrollTop";
    const options = (0, _indexMjs.mergeDeep)(goTo?.options ?? genDefaults(), _options);
    const rtl = goTo?.rtl.value;
    const target = (typeof _target === "number" ? _target : getTarget(_target)) ?? 0;
    const container = options.container === "parent" && target instanceof HTMLElement ? target.parentElement : getContainer(options.container);
    const ease = typeof options.easing === "function" ? options.easing : options.patterns[options.easing];
    if (!ease) throw new TypeError(`Easing function "${options.easing}" not found.`);
    let targetLocation;
    if (typeof target === "number") targetLocation = getOffset(target, horizontal, rtl);
    else {
        targetLocation = getOffset(target, horizontal, rtl) - getOffset(container, horizontal, rtl);
        if (options.layout) {
            const styles = window.getComputedStyle(target);
            const layoutOffset = styles.getPropertyValue("--v-layout-top");
            if (layoutOffset) targetLocation -= parseInt(layoutOffset, 10);
        }
    }
    targetLocation += options.offset;
    targetLocation = clampTarget(container, targetLocation, !!rtl, !!horizontal);
    const startLocation = container[property] ?? 0;
    if (targetLocation === startLocation) return Promise.resolve(targetLocation);
    const startTime = performance.now();
    return new Promise((resolve)=>requestAnimationFrame(function step(currentTime) {
            const timeElapsed = currentTime - startTime;
            const progress = timeElapsed / options.duration;
            const location = Math.floor(startLocation + (targetLocation - startLocation) * ease((0, _indexMjs.clamp)(progress, 0, 1)));
            container[property] = location;
            // Allow for some jitter if target time has elapsed
            if (progress >= 1 && Math.abs(location - container[property]) < 10) return resolve(targetLocation);
            else if (progress > 2) {
                // The target might not be reachable
                (0, _indexMjs.consoleWarn)("Scroll target is not reachable");
                return resolve(container[property]);
            }
            requestAnimationFrame(step);
        }));
}
function useGoTo() {
    let _options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    const goToInstance = (0, _vue.inject)(GoToSymbol);
    const { isRtl } = (0, _localeMjs.useRtl)();
    if (!goToInstance) throw new Error("[Vuetify] Could not find injected goto instance");
    const goTo = {
        ...goToInstance,
        // can be set via VLocaleProvider
        rtl: (0, _vue.computed)(()=>goToInstance.rtl.value || isRtl.value)
    };
    async function go(target, options) {
        return scrollTo(target, (0, _indexMjs.mergeDeep)(_options, options), false, goTo);
    }
    go.horizontal = async (target, options)=>{
        return scrollTo(target, (0, _indexMjs.mergeDeep)(_options, options), true, goTo);
    };
    return go;
}
/**
 * Clamp target value to achieve a smooth scroll animation
 * when the value goes outside the scroll container size
 */ function clampTarget(container, value, rtl, horizontal) {
    const { scrollWidth, scrollHeight } = container;
    const [containerWidth, containerHeight] = container === document.scrollingElement ? [
        window.innerWidth,
        window.innerHeight
    ] : [
        container.offsetWidth,
        container.offsetHeight
    ];
    let min;
    let max;
    if (horizontal) {
        if (rtl) {
            min = -(scrollWidth - containerWidth);
            max = 0;
        } else {
            min = 0;
            max = scrollWidth - containerWidth;
        }
    } else {
        min = 0;
        max = scrollHeight + -containerHeight;
    }
    return Math.max(Math.min(value, max), min);
}

},{"vue":"gCTam","./locale.mjs":"9rJP0","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"g4kLv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "IconValue", ()=>IconValue);
parcelHelpers.export(exports, "IconSymbol", ()=>IconSymbol);
parcelHelpers.export(exports, "makeIconProps", ()=>makeIconProps);
parcelHelpers.export(exports, "VComponentIcon", ()=>VComponentIcon);
parcelHelpers.export(exports, "VSvgIcon", ()=>VSvgIcon);
parcelHelpers.export(exports, "VLigatureIcon", ()=>VLigatureIcon);
parcelHelpers.export(exports, "VClassIcon", ()=>VClassIcon);
// Composables
parcelHelpers.export(exports, "createIcons", ()=>createIcons);
parcelHelpers.export(exports, "useIcon", ()=>useIcon);
var _vue = require("vue");
// Icons
var _mdiMjs = require("../iconsets/mdi.mjs"); // Utilities
var _indexMjs = require("../util/index.mjs"); // Types
const IconValue = [
    String,
    Function,
    Object,
    Array
];
const IconSymbol = Symbol.for("vuetify:icons");
const makeIconProps = (0, _indexMjs.propsFactory)({
    icon: {
        type: IconValue
    },
    // Could not remove this and use makeTagProps, types complained because it is not required
    tag: {
        type: String,
        required: true
    }
}, "icon");
const VComponentIcon = (0, _indexMjs.genericComponent)()({
    name: "VComponentIcon",
    props: makeIconProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        return ()=>{
            const Icon = props.icon;
            return (0, _vue.createVNode)(props.tag, null, {
                default: ()=>[
                        props.icon ? (0, _vue.createVNode)(Icon, null, null) : slots.default?.()
                    ]
            });
        };
    }
});
const VSvgIcon = (0, _indexMjs.defineComponent)({
    name: "VSvgIcon",
    inheritAttrs: false,
    props: makeIconProps(),
    setup (props, _ref2) {
        let { attrs } = _ref2;
        return ()=>{
            return (0, _vue.createVNode)(props.tag, (0, _vue.mergeProps)(attrs, {
                "style": null
            }), {
                default: ()=>[
                        (0, _vue.createVNode)("svg", {
                            "class": "v-icon__svg",
                            "xmlns": "http://www.w3.org/2000/svg",
                            "viewBox": "0 0 24 24",
                            "role": "img",
                            "aria-hidden": "true"
                        }, [
                            Array.isArray(props.icon) ? props.icon.map((path)=>Array.isArray(path) ? (0, _vue.createVNode)("path", {
                                    "d": path[0],
                                    "fill-opacity": path[1]
                                }, null) : (0, _vue.createVNode)("path", {
                                    "d": path
                                }, null)) : (0, _vue.createVNode)("path", {
                                "d": props.icon
                            }, null)
                        ])
                    ]
            });
        };
    }
});
const VLigatureIcon = (0, _indexMjs.defineComponent)({
    name: "VLigatureIcon",
    props: makeIconProps(),
    setup (props) {
        return ()=>{
            return (0, _vue.createVNode)(props.tag, null, {
                default: ()=>[
                        props.icon
                    ]
            });
        };
    }
});
const VClassIcon = (0, _indexMjs.defineComponent)({
    name: "VClassIcon",
    props: makeIconProps(),
    setup (props) {
        return ()=>{
            return (0, _vue.createVNode)(props.tag, {
                "class": props.icon
            }, null);
        };
    }
});
function genDefaults() {
    return {
        svg: {
            component: VSvgIcon
        },
        class: {
            component: VClassIcon
        }
    };
}
function createIcons(options) {
    const sets = genDefaults();
    const defaultSet = options?.defaultSet ?? "mdi";
    if (defaultSet === "mdi" && !sets.mdi) sets.mdi = (0, _mdiMjs.mdi);
    return (0, _indexMjs.mergeDeep)({
        defaultSet,
        sets,
        aliases: {
            ...(0, _mdiMjs.aliases),
            /* eslint-disable max-len */ vuetify: [
                "M8.2241 14.2009L12 21L22 3H14.4459L8.2241 14.2009Z",
                [
                    "M7.26303 12.4733L7.00113 12L2 3H12.5261C12.5261 3 12.5261 3 12.5261 3L7.26303 12.4733Z",
                    0.6
                ]
            ],
            "vuetify-outline": "svg:M7.26 12.47 12.53 3H2L7.26 12.47ZM14.45 3 8.22 14.2 12 21 22 3H14.45ZM18.6 5 12 16.88 10.51 14.2 15.62 5ZM7.26 8.35 5.4 5H9.13L7.26 8.35Z",
            "vuetify-play": [
                "m6.376 13.184-4.11-7.192C1.505 4.66 2.467 3 4.003 3h8.532l-.953 1.576-.006.01-.396.677c-.429.732-.214 1.507.194 2.015.404.503 1.092.878 1.869.806a3.72 3.72 0 0 1 1.005.022c.276.053.434.143.523.237.138.146.38.635-.25 2.09-.893 1.63-1.553 1.722-1.847 1.677-.213-.033-.468-.158-.756-.406a4.95 4.95 0 0 1-.8-.927c-.39-.564-1.04-.84-1.66-.846-.625-.006-1.316.27-1.693.921l-.478.826-.911 1.506Z",
                [
                    "M9.093 11.552c.046-.079.144-.15.32-.148a.53.53 0 0 1 .43.207c.285.414.636.847 1.046 1.2.405.35.914.662 1.516.754 1.334.205 2.502-.698 3.48-2.495l.014-.028.013-.03c.687-1.574.774-2.852-.005-3.675-.37-.391-.861-.586-1.333-.676a5.243 5.243 0 0 0-1.447-.044c-.173.016-.393-.073-.54-.257-.145-.18-.127-.316-.082-.392l.393-.672L14.287 3h5.71c1.536 0 2.499 1.659 1.737 2.992l-7.997 13.996c-.768 1.344-2.706 1.344-3.473 0l-3.037-5.314 1.377-2.278.004-.006.004-.007.481-.831Z",
                    0.6
                ]
            ]
        }
    }, options);
}
const useIcon = (props)=>{
    const icons = (0, _vue.inject)(IconSymbol);
    if (!icons) throw new Error("Missing Vuetify Icons provide!");
    const iconData = (0, _vue.computed)(()=>{
        const iconAlias = (0, _vue.unref)(props);
        if (!iconAlias) return {
            component: VComponentIcon
        };
        let icon = iconAlias;
        if (typeof icon === "string") {
            icon = icon.trim();
            if (icon.startsWith("$")) icon = icons.aliases?.[icon.slice(1)];
        }
        if (!icon) (0, _indexMjs.consoleWarn)(`Could not find aliased icon "${iconAlias}"`);
        if (Array.isArray(icon)) return {
            component: VSvgIcon,
            icon
        };
        else if (typeof icon !== "string") return {
            component: VComponentIcon,
            icon
        };
        const iconSetName = Object.keys(icons.sets).find((setName)=>typeof icon === "string" && icon.startsWith(`${setName}:`));
        const iconName = iconSetName ? icon.slice(iconSetName.length + 1) : icon;
        const iconSet = icons.sets[iconSetName ?? icons.defaultSet];
        return {
            component: iconSet.component,
            icon: iconName
        };
    });
    return {
        iconData
    };
};

},{"vue":"gCTam","../iconsets/mdi.mjs":"h9Qdh","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"h9Qdh":[function(require,module,exports) {
// Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "aliases", ()=>aliases);
parcelHelpers.export(exports, "mdi", ()=>mdi);
var _iconsMjs = require("../composables/icons.mjs"); // Utilities
var _vue = require("vue");
// Types
const aliases = {
    collapse: "mdi-chevron-up",
    complete: "mdi-check",
    cancel: "mdi-close-circle",
    close: "mdi-close",
    delete: "mdi-close-circle",
    // delete (e.g. v-chip close)
    clear: "mdi-close-circle",
    success: "mdi-check-circle",
    info: "mdi-information",
    warning: "mdi-alert-circle",
    error: "mdi-close-circle",
    prev: "mdi-chevron-left",
    next: "mdi-chevron-right",
    checkboxOn: "mdi-checkbox-marked",
    checkboxOff: "mdi-checkbox-blank-outline",
    checkboxIndeterminate: "mdi-minus-box",
    delimiter: "mdi-circle",
    // for carousel
    sortAsc: "mdi-arrow-up",
    sortDesc: "mdi-arrow-down",
    expand: "mdi-chevron-down",
    menu: "mdi-menu",
    subgroup: "mdi-menu-down",
    dropdown: "mdi-menu-down",
    radioOn: "mdi-radiobox-marked",
    radioOff: "mdi-radiobox-blank",
    edit: "mdi-pencil",
    ratingEmpty: "mdi-star-outline",
    ratingFull: "mdi-star",
    ratingHalf: "mdi-star-half-full",
    loading: "mdi-cached",
    first: "mdi-page-first",
    last: "mdi-page-last",
    unfold: "mdi-unfold-more-horizontal",
    file: "mdi-paperclip",
    plus: "mdi-plus",
    minus: "mdi-minus",
    calendar: "mdi-calendar",
    treeviewCollapse: "mdi-menu-down",
    treeviewExpand: "mdi-menu-right",
    eyeDropper: "mdi-eyedropper"
};
const mdi = {
    // Not using mergeProps here, functional components merge props by default (?)
    component: (props)=>(0, _vue.h)((0, _iconsMjs.VClassIcon), {
            ...props,
            class: "mdi"
        })
};

},{"../composables/icons.mjs":"g4kLv","vue":"gCTam","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"c9HGg":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ThemeSymbol", ()=>ThemeSymbol);
parcelHelpers.export(exports, "makeThemeProps", ()=>makeThemeProps);
// Composables
parcelHelpers.export(exports, "createTheme", ()=>createTheme);
parcelHelpers.export(exports, "provideTheme", ()=>provideTheme);
parcelHelpers.export(exports, "useTheme", ()=>useTheme);
var _vue = require("vue");
var _indexMjs = require("../util/index.mjs"); // Types
const ThemeSymbol = Symbol.for("vuetify:theme");
const makeThemeProps = (0, _indexMjs.propsFactory)({
    theme: String
}, "theme");
function genDefaults() {
    return {
        defaultTheme: "light",
        variations: {
            colors: [],
            lighten: 0,
            darken: 0
        },
        themes: {
            light: {
                dark: false,
                colors: {
                    background: "#FFFFFF",
                    surface: "#FFFFFF",
                    "surface-bright": "#FFFFFF",
                    "surface-light": "#EEEEEE",
                    "surface-variant": "#424242",
                    "on-surface-variant": "#EEEEEE",
                    primary: "#1867C0",
                    "primary-darken-1": "#1F5592",
                    secondary: "#48A9A6",
                    "secondary-darken-1": "#018786",
                    error: "#B00020",
                    info: "#2196F3",
                    success: "#4CAF50",
                    warning: "#FB8C00"
                },
                variables: {
                    "border-color": "#000000",
                    "border-opacity": 0.12,
                    "high-emphasis-opacity": 0.87,
                    "medium-emphasis-opacity": 0.60,
                    "disabled-opacity": 0.38,
                    "idle-opacity": 0.04,
                    "hover-opacity": 0.04,
                    "focus-opacity": 0.12,
                    "selected-opacity": 0.08,
                    "activated-opacity": 0.12,
                    "pressed-opacity": 0.12,
                    "dragged-opacity": 0.08,
                    "theme-kbd": "#212529",
                    "theme-on-kbd": "#FFFFFF",
                    "theme-code": "#F5F5F5",
                    "theme-on-code": "#000000"
                }
            },
            dark: {
                dark: true,
                colors: {
                    background: "#121212",
                    surface: "#212121",
                    "surface-bright": "#ccbfd6",
                    "surface-light": "#424242",
                    "surface-variant": "#a3a3a3",
                    "on-surface-variant": "#424242",
                    primary: "#2196F3",
                    "primary-darken-1": "#277CC1",
                    secondary: "#54B6B2",
                    "secondary-darken-1": "#48A9A6",
                    error: "#CF6679",
                    info: "#2196F3",
                    success: "#4CAF50",
                    warning: "#FB8C00"
                },
                variables: {
                    "border-color": "#FFFFFF",
                    "border-opacity": 0.12,
                    "high-emphasis-opacity": 1,
                    "medium-emphasis-opacity": 0.70,
                    "disabled-opacity": 0.50,
                    "idle-opacity": 0.10,
                    "hover-opacity": 0.04,
                    "focus-opacity": 0.12,
                    "selected-opacity": 0.08,
                    "activated-opacity": 0.12,
                    "pressed-opacity": 0.16,
                    "dragged-opacity": 0.08,
                    "theme-kbd": "#212529",
                    "theme-on-kbd": "#FFFFFF",
                    "theme-code": "#343434",
                    "theme-on-code": "#CCCCCC"
                }
            }
        }
    };
}
function parseThemeOptions() {
    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : genDefaults();
    const defaults = genDefaults();
    if (!options) return {
        ...defaults,
        isDisabled: true
    };
    const themes = {};
    for (const [key, theme] of Object.entries(options.themes ?? {})){
        const defaultTheme = theme.dark || key === "dark" ? defaults.themes?.dark : defaults.themes?.light;
        themes[key] = (0, _indexMjs.mergeDeep)(defaultTheme, theme);
    }
    return (0, _indexMjs.mergeDeep)(defaults, {
        ...options,
        themes
    });
}
function createTheme(options) {
    const parsedOptions = parseThemeOptions(options);
    const name = (0, _vue.ref)(parsedOptions.defaultTheme);
    const themes = (0, _vue.ref)(parsedOptions.themes);
    const computedThemes = (0, _vue.computed)(()=>{
        const acc = {};
        for (const [name, original] of Object.entries(themes.value)){
            const theme = acc[name] = {
                ...original,
                colors: {
                    ...original.colors
                }
            };
            if (parsedOptions.variations) for (const name of parsedOptions.variations.colors){
                const color = theme.colors[name];
                if (!color) continue;
                for (const variation of [
                    "lighten",
                    "darken"
                ]){
                    const fn = variation === "lighten" ? (0, _indexMjs.lighten) : (0, _indexMjs.darken);
                    for (const amount of (0, _indexMjs.createRange)(parsedOptions.variations[variation], 1))theme.colors[`${name}-${variation}-${amount}`] = (0, _indexMjs.RGBtoHex)(fn((0, _indexMjs.parseColor)(color), amount));
                }
            }
            for (const color of Object.keys(theme.colors)){
                if (/^on-[a-z]/.test(color) || theme.colors[`on-${color}`]) continue;
                const onColor = `on-${color}`;
                const colorVal = (0, _indexMjs.parseColor)(theme.colors[color]);
                theme.colors[onColor] = (0, _indexMjs.getForeground)(colorVal);
            }
        }
        return acc;
    });
    const current = (0, _vue.computed)(()=>computedThemes.value[name.value]);
    const styles = (0, _vue.computed)(()=>{
        const lines = [];
        if (current.value?.dark) createCssClass(lines, ":root", [
            "color-scheme: dark"
        ]);
        createCssClass(lines, ":root", genCssVariables(current.value));
        for (const [themeName, theme] of Object.entries(computedThemes.value))createCssClass(lines, `.v-theme--${themeName}`, [
            `color-scheme: ${theme.dark ? "dark" : "normal"}`,
            ...genCssVariables(theme)
        ]);
        const bgLines = [];
        const fgLines = [];
        const colors = new Set(Object.values(computedThemes.value).flatMap((theme)=>Object.keys(theme.colors)));
        for (const key of colors)if (/^on-[a-z]/.test(key)) createCssClass(fgLines, `.${key}`, [
            `color: rgb(var(--v-theme-${key})) !important`
        ]);
        else {
            createCssClass(bgLines, `.bg-${key}`, [
                `--v-theme-overlay-multiplier: var(--v-theme-${key}-overlay-multiplier)`,
                `background-color: rgb(var(--v-theme-${key})) !important`,
                `color: rgb(var(--v-theme-on-${key})) !important`
            ]);
            createCssClass(fgLines, `.text-${key}`, [
                `color: rgb(var(--v-theme-${key})) !important`
            ]);
            createCssClass(fgLines, `.border-${key}`, [
                `--v-border-color: var(--v-theme-${key})`
            ]);
        }
        lines.push(...bgLines, ...fgLines);
        return lines.map((str, i)=>i === 0 ? str : `    ${str}`).join("");
    });
    function getHead() {
        return {
            style: [
                {
                    children: styles.value,
                    id: "vuetify-theme-stylesheet",
                    nonce: parsedOptions.cspNonce || false
                }
            ]
        };
    }
    function install(app) {
        if (parsedOptions.isDisabled) return;
        const head = app._context.provides.usehead;
        if (head) {
            if (head.push) {
                const entry = head.push(getHead);
                if (0, _indexMjs.IN_BROWSER) (0, _vue.watch)(styles, ()=>{
                    entry.patch(getHead);
                });
            } else if (0, _indexMjs.IN_BROWSER) {
                head.addHeadObjs((0, _vue.computed)(getHead));
                (0, _vue.watchEffect)(()=>head.updateDOM());
            } else head.addHeadObjs(getHead());
        } else {
            let styleEl = (0, _indexMjs.IN_BROWSER) ? document.getElementById("vuetify-theme-stylesheet") : null;
            if (0, _indexMjs.IN_BROWSER) (0, _vue.watch)(styles, updateStyles, {
                immediate: true
            });
            else updateStyles();
            function updateStyles() {
                if (typeof document !== "undefined" && !styleEl) {
                    const el = document.createElement("style");
                    el.type = "text/css";
                    el.id = "vuetify-theme-stylesheet";
                    if (parsedOptions.cspNonce) el.setAttribute("nonce", parsedOptions.cspNonce);
                    styleEl = el;
                    document.head.appendChild(styleEl);
                }
                if (styleEl) styleEl.innerHTML = styles.value;
            }
        }
    }
    const themeClasses = (0, _vue.computed)(()=>parsedOptions.isDisabled ? undefined : `v-theme--${name.value}`);
    return {
        install,
        isDisabled: parsedOptions.isDisabled,
        name,
        themes,
        current,
        computedThemes,
        themeClasses,
        styles,
        global: {
            name,
            current
        }
    };
}
function provideTheme(props) {
    (0, _indexMjs.getCurrentInstance)("provideTheme");
    const theme = (0, _vue.inject)(ThemeSymbol, null);
    if (!theme) throw new Error("Could not find Vuetify theme injection");
    const name = (0, _vue.computed)(()=>{
        return props.theme ?? theme.name.value;
    });
    const current = (0, _vue.computed)(()=>theme.themes.value[name.value]);
    const themeClasses = (0, _vue.computed)(()=>theme.isDisabled ? undefined : `v-theme--${name.value}`);
    const newTheme = {
        ...theme,
        name,
        current,
        themeClasses
    };
    (0, _vue.provide)(ThemeSymbol, newTheme);
    return newTheme;
}
function useTheme() {
    (0, _indexMjs.getCurrentInstance)("useTheme");
    const theme = (0, _vue.inject)(ThemeSymbol, null);
    if (!theme) throw new Error("Could not find Vuetify theme injection");
    return theme;
}
function createCssClass(lines, selector, content) {
    lines.push(`${selector} {\n`, ...content.map((line)=>`  ${line};\n`), "}\n");
}
function genCssVariables(theme) {
    const lightOverlay = theme.dark ? 2 : 1;
    const darkOverlay = theme.dark ? 1 : 2;
    const variables = [];
    for (const [key, value] of Object.entries(theme.colors)){
        const rgb = (0, _indexMjs.parseColor)(value);
        variables.push(`--v-theme-${key}: ${rgb.r},${rgb.g},${rgb.b}`);
        if (!key.startsWith("on-")) variables.push(`--v-theme-${key}-overlay-multiplier: ${(0, _indexMjs.getLuma)(value) > 0.18 ? lightOverlay : darkOverlay}`);
    }
    for (const [key, value] of Object.entries(theme.variables)){
        const color = typeof value === "string" && value.startsWith("#") ? (0, _indexMjs.parseColor)(value) : undefined;
        const rgb = color ? `${color.r}, ${color.g}, ${color.b}` : undefined;
        variables.push(`--v-${key}: ${rgb ?? value}`);
    }
    return variables;
}

},{"vue":"gCTam","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"fthaS":[function(require,module,exports) {
/*
 * PUBLIC INTERFACES ONLY
 * Imports in our code should be to the composable directly, not this file
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useDate", ()=>(0, _indexMjs.useDate));
parcelHelpers.export(exports, "useDefaults", ()=>(0, _defaultsMjs.useDefaults));
parcelHelpers.export(exports, "useDisplay", ()=>(0, _displayMjs.useDisplay));
parcelHelpers.export(exports, "useGoTo", ()=>(0, _gotoMjs.useGoTo));
parcelHelpers.export(exports, "useLayout", ()=>(0, _layoutMjs.useLayout));
parcelHelpers.export(exports, "useLocale", ()=>(0, _localeMjs.useLocale));
parcelHelpers.export(exports, "useRtl", ()=>(0, _localeMjs.useRtl));
parcelHelpers.export(exports, "useTheme", ()=>(0, _themeMjs.useTheme));
var _indexMjs = require("./date/index.mjs");
var _defaultsMjs = require("./defaults.mjs");
var _displayMjs = require("./display.mjs");
var _gotoMjs = require("./goto.mjs");
var _layoutMjs = require("./layout.mjs");
var _localeMjs = require("./locale.mjs");
var _themeMjs = require("./theme.mjs");

},{"./date/index.mjs":false,"./defaults.mjs":false,"./display.mjs":"bcRjl","./goto.mjs":false,"./layout.mjs":"lfigA","./locale.mjs":"9rJP0","./theme.mjs":false,"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"2d4g6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "createDate", ()=>(0, _dateMjs.createDate));
parcelHelpers.export(exports, "useDate", ()=>(0, _dateMjs.useDate));
parcelHelpers.export(exports, "DateAdapterSymbol", ()=>(0, _dateMjs.DateAdapterSymbol));
var _dateMjs = require("./date.mjs");

},{"./date.mjs":"diSpK","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"lfigA":[function(require,module,exports) {
// Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VuetifyLayoutKey", ()=>VuetifyLayoutKey);
parcelHelpers.export(exports, "VuetifyLayoutItemKey", ()=>VuetifyLayoutItemKey);
parcelHelpers.export(exports, "makeLayoutProps", ()=>makeLayoutProps);
parcelHelpers.export(exports, "makeLayoutItemProps", ()=>makeLayoutItemProps);
parcelHelpers.export(exports, "useLayout", ()=>useLayout);
parcelHelpers.export(exports, "useLayoutItem", ()=>useLayoutItem);
parcelHelpers.export(exports, "createLayout", ()=>createLayout);
var _resizeObserverMjs = require("./resizeObserver.mjs"); // Utilities
var _vue = require("vue");
var _indexMjs = require("../util/index.mjs"); // Types
const VuetifyLayoutKey = Symbol.for("vuetify:layout");
const VuetifyLayoutItemKey = Symbol.for("vuetify:layout-item");
const ROOT_ZINDEX = 1000;
const makeLayoutProps = (0, _indexMjs.propsFactory)({
    overlaps: {
        type: Array,
        default: ()=>[]
    },
    fullHeight: Boolean
}, "layout");
const makeLayoutItemProps = (0, _indexMjs.propsFactory)({
    name: {
        type: String
    },
    order: {
        type: [
            Number,
            String
        ],
        default: 0
    },
    absolute: Boolean
}, "layout-item");
function useLayout() {
    const layout = (0, _vue.inject)(VuetifyLayoutKey);
    if (!layout) throw new Error("[Vuetify] Could not find injected layout");
    return {
        getLayoutItem: layout.getLayoutItem,
        mainRect: layout.mainRect,
        mainStyles: layout.mainStyles
    };
}
function useLayoutItem(options) {
    const layout = (0, _vue.inject)(VuetifyLayoutKey);
    if (!layout) throw new Error("[Vuetify] Could not find injected layout");
    const id = options.id ?? `layout-item-${(0, _indexMjs.getUid)()}`;
    const vm = (0, _indexMjs.getCurrentInstance)("useLayoutItem");
    (0, _vue.provide)(VuetifyLayoutItemKey, {
        id
    });
    const isKeptAlive = (0, _vue.shallowRef)(false);
    (0, _vue.onDeactivated)(()=>isKeptAlive.value = true);
    (0, _vue.onActivated)(()=>isKeptAlive.value = false);
    const { layoutItemStyles, layoutItemScrimStyles } = layout.register(vm, {
        ...options,
        active: (0, _vue.computed)(()=>isKeptAlive.value ? false : options.active.value),
        id
    });
    (0, _vue.onBeforeUnmount)(()=>layout.unregister(id));
    return {
        layoutItemStyles,
        layoutRect: layout.layoutRect,
        layoutItemScrimStyles
    };
}
const generateLayers = (layout, positions, layoutSizes, activeItems)=>{
    let previousLayer = {
        top: 0,
        left: 0,
        right: 0,
        bottom: 0
    };
    const layers = [
        {
            id: "",
            layer: {
                ...previousLayer
            }
        }
    ];
    for (const id of layout){
        const position = positions.get(id);
        const amount = layoutSizes.get(id);
        const active = activeItems.get(id);
        if (!position || !amount || !active) continue;
        const layer = {
            ...previousLayer,
            [position.value]: parseInt(previousLayer[position.value], 10) + (active.value ? parseInt(amount.value, 10) : 0)
        };
        layers.push({
            id,
            layer
        });
        previousLayer = layer;
    }
    return layers;
};
function createLayout(props) {
    const parentLayout = (0, _vue.inject)(VuetifyLayoutKey, null);
    const rootZIndex = (0, _vue.computed)(()=>parentLayout ? parentLayout.rootZIndex.value - 100 : ROOT_ZINDEX);
    const registered = (0, _vue.ref)([]);
    const positions = (0, _vue.reactive)(new Map());
    const layoutSizes = (0, _vue.reactive)(new Map());
    const priorities = (0, _vue.reactive)(new Map());
    const activeItems = (0, _vue.reactive)(new Map());
    const disabledTransitions = (0, _vue.reactive)(new Map());
    const { resizeRef, contentRect: layoutRect } = (0, _resizeObserverMjs.useResizeObserver)();
    const computedOverlaps = (0, _vue.computed)(()=>{
        const map = new Map();
        const overlaps = props.overlaps ?? [];
        for (const overlap of overlaps.filter((item)=>item.includes(":"))){
            const [top, bottom] = overlap.split(":");
            if (!registered.value.includes(top) || !registered.value.includes(bottom)) continue;
            const topPosition = positions.get(top);
            const bottomPosition = positions.get(bottom);
            const topAmount = layoutSizes.get(top);
            const bottomAmount = layoutSizes.get(bottom);
            if (!topPosition || !bottomPosition || !topAmount || !bottomAmount) continue;
            map.set(bottom, {
                position: topPosition.value,
                amount: parseInt(topAmount.value, 10)
            });
            map.set(top, {
                position: bottomPosition.value,
                amount: -parseInt(bottomAmount.value, 10)
            });
        }
        return map;
    });
    const layers = (0, _vue.computed)(()=>{
        const uniquePriorities = [
            ...new Set([
                ...priorities.values()
            ].map((p)=>p.value))
        ].sort((a, b)=>a - b);
        const layout = [];
        for (const p of uniquePriorities){
            const items = registered.value.filter((id)=>priorities.get(id)?.value === p);
            layout.push(...items);
        }
        return generateLayers(layout, positions, layoutSizes, activeItems);
    });
    const transitionsEnabled = (0, _vue.computed)(()=>{
        return !Array.from(disabledTransitions.values()).some((ref)=>ref.value);
    });
    const mainRect = (0, _vue.computed)(()=>{
        return layers.value[layers.value.length - 1].layer;
    });
    const mainStyles = (0, _vue.computed)(()=>{
        return {
            "--v-layout-left": (0, _indexMjs.convertToUnit)(mainRect.value.left),
            "--v-layout-right": (0, _indexMjs.convertToUnit)(mainRect.value.right),
            "--v-layout-top": (0, _indexMjs.convertToUnit)(mainRect.value.top),
            "--v-layout-bottom": (0, _indexMjs.convertToUnit)(mainRect.value.bottom),
            ...transitionsEnabled.value ? undefined : {
                transition: "none"
            }
        };
    });
    const items = (0, _vue.computed)(()=>{
        return layers.value.slice(1).map((_ref, index)=>{
            let { id } = _ref;
            const { layer } = layers.value[index];
            const size = layoutSizes.get(id);
            const position = positions.get(id);
            return {
                id,
                ...layer,
                size: Number(size.value),
                position: position.value
            };
        });
    });
    const getLayoutItem = (id)=>{
        return items.value.find((item)=>item.id === id);
    };
    const rootVm = (0, _indexMjs.getCurrentInstance)("createLayout");
    const isMounted = (0, _vue.shallowRef)(false);
    (0, _vue.onMounted)(()=>{
        isMounted.value = true;
    });
    (0, _vue.provide)(VuetifyLayoutKey, {
        register: (vm, _ref2)=>{
            let { id, order, position, layoutSize, elementSize, active, disableTransitions, absolute } = _ref2;
            priorities.set(id, order);
            positions.set(id, position);
            layoutSizes.set(id, layoutSize);
            activeItems.set(id, active);
            disableTransitions && disabledTransitions.set(id, disableTransitions);
            const instances = (0, _indexMjs.findChildrenWithProvide)(VuetifyLayoutItemKey, rootVm?.vnode);
            const instanceIndex = instances.indexOf(vm);
            if (instanceIndex > -1) registered.value.splice(instanceIndex, 0, id);
            else registered.value.push(id);
            const index = (0, _vue.computed)(()=>items.value.findIndex((i)=>i.id === id));
            const zIndex = (0, _vue.computed)(()=>rootZIndex.value + layers.value.length * 2 - index.value * 2);
            const layoutItemStyles = (0, _vue.computed)(()=>{
                const isHorizontal = position.value === "left" || position.value === "right";
                const isOppositeHorizontal = position.value === "right";
                const isOppositeVertical = position.value === "bottom";
                const size = elementSize.value ?? layoutSize.value;
                const unit = size === 0 ? "%" : "px";
                const styles = {
                    [position.value]: 0,
                    zIndex: zIndex.value,
                    transform: `translate${isHorizontal ? "X" : "Y"}(${(active.value ? 0 : -(size === 0 ? 100 : size)) * (isOppositeHorizontal || isOppositeVertical ? -1 : 1)}${unit})`,
                    position: absolute.value || rootZIndex.value !== ROOT_ZINDEX ? "absolute" : "fixed",
                    ...transitionsEnabled.value ? undefined : {
                        transition: "none"
                    }
                };
                if (!isMounted.value) return styles;
                const item = items.value[index.value];
                if (!item) throw new Error(`[Vuetify] Could not find layout item "${id}"`);
                const overlap = computedOverlaps.value.get(id);
                if (overlap) item[overlap.position] += overlap.amount;
                return {
                    ...styles,
                    height: isHorizontal ? `calc(100% - ${item.top}px - ${item.bottom}px)` : elementSize.value ? `${elementSize.value}px` : undefined,
                    left: isOppositeHorizontal ? undefined : `${item.left}px`,
                    right: isOppositeHorizontal ? `${item.right}px` : undefined,
                    top: position.value !== "bottom" ? `${item.top}px` : undefined,
                    bottom: position.value !== "top" ? `${item.bottom}px` : undefined,
                    width: !isHorizontal ? `calc(100% - ${item.left}px - ${item.right}px)` : elementSize.value ? `${elementSize.value}px` : undefined
                };
            });
            const layoutItemScrimStyles = (0, _vue.computed)(()=>({
                    zIndex: zIndex.value - 1
                }));
            return {
                layoutItemStyles,
                layoutItemScrimStyles,
                zIndex
            };
        },
        unregister: (id)=>{
            priorities.delete(id);
            positions.delete(id);
            layoutSizes.delete(id);
            activeItems.delete(id);
            disabledTransitions.delete(id);
            registered.value = registered.value.filter((v)=>v !== id);
        },
        mainRect,
        mainStyles,
        getLayoutItem,
        items,
        layoutRect,
        rootZIndex
    });
    const layoutClasses = (0, _vue.computed)(()=>[
            "v-layout",
            {
                "v-layout--full-height": props.fullHeight
            }
        ]);
    const layoutStyles = (0, _vue.computed)(()=>({
            zIndex: parentLayout ? rootZIndex.value : undefined,
            position: parentLayout ? "relative" : undefined,
            overflow: parentLayout ? "hidden" : undefined
        }));
    return {
        layoutClasses,
        layoutStyles,
        getLayoutItem,
        items,
        layoutRect,
        layoutRef: resizeRef
    };
}

},{"./resizeObserver.mjs":"hIk8t","vue":"gCTam","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"hIk8t":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useResizeObserver", ()=>useResizeObserver);
var _vue = require("vue");
var _indexMjs = require("../util/index.mjs");
var _globalsMjs = require("../util/globals.mjs"); // Types
function useResizeObserver(callback) {
    let box = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "content";
    const resizeRef = (0, _indexMjs.templateRef)();
    const contentRect = (0, _vue.ref)();
    if (0, _globalsMjs.IN_BROWSER) {
        const observer = new ResizeObserver((entries)=>{
            callback?.(entries, observer);
            if (!entries.length) return;
            if (box === "content") contentRect.value = entries[0].contentRect;
            else contentRect.value = entries[0].target.getBoundingClientRect();
        });
        (0, _vue.onBeforeUnmount)(()=>{
            observer.disconnect();
        });
        (0, _vue.watch)(()=>resizeRef.el, (newValue, oldValue)=>{
            if (oldValue) {
                observer.unobserve(oldValue);
                contentRect.value = undefined;
            }
            if (newValue) observer.observe(newValue);
        }, {
            flush: "post"
        });
    }
    return {
        resizeRef,
        contentRect: (0, _vue.readonly)(contentRect)
    };
}

},{"vue":"gCTam","../util/index.mjs":"ivUh8","../util/globals.mjs":"6CXK1","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"8XgAC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _indexMjs = require("./VApp/index.mjs");
parcelHelpers.exportAll(_indexMjs, exports);
var _indexMjs1 = require("./VAppBar/index.mjs");
parcelHelpers.exportAll(_indexMjs1, exports);
var _indexMjs2 = require("./VAlert/index.mjs");
parcelHelpers.exportAll(_indexMjs2, exports);
var _indexMjs3 = require("./VAutocomplete/index.mjs");
parcelHelpers.exportAll(_indexMjs3, exports);
var _indexMjs4 = require("./VAvatar/index.mjs");
parcelHelpers.exportAll(_indexMjs4, exports);
var _indexMjs5 = require("./VBadge/index.mjs");
parcelHelpers.exportAll(_indexMjs5, exports);
var _indexMjs6 = require("./VBanner/index.mjs");
parcelHelpers.exportAll(_indexMjs6, exports);
var _indexMjs7 = require("./VBottomNavigation/index.mjs");
parcelHelpers.exportAll(_indexMjs7, exports);
var _indexMjs8 = require("./VBottomSheet/index.mjs");
parcelHelpers.exportAll(_indexMjs8, exports);
var _indexMjs9 = require("./VBreadcrumbs/index.mjs");
parcelHelpers.exportAll(_indexMjs9, exports);
var _indexMjs10 = require("./VBtn/index.mjs");
parcelHelpers.exportAll(_indexMjs10, exports);
var _indexMjs11 = require("./VBtnGroup/index.mjs");
parcelHelpers.exportAll(_indexMjs11, exports);
var _indexMjs12 = require("./VBtnToggle/index.mjs"); // export * from './VCalendar'
parcelHelpers.exportAll(_indexMjs12, exports);
var _indexMjs13 = require("./VCard/index.mjs");
parcelHelpers.exportAll(_indexMjs13, exports);
var _indexMjs14 = require("./VCarousel/index.mjs");
parcelHelpers.exportAll(_indexMjs14, exports);
var _indexMjs15 = require("./VCheckbox/index.mjs");
parcelHelpers.exportAll(_indexMjs15, exports);
var _indexMjs16 = require("./VChip/index.mjs");
parcelHelpers.exportAll(_indexMjs16, exports);
var _indexMjs17 = require("./VChipGroup/index.mjs");
parcelHelpers.exportAll(_indexMjs17, exports);
var _indexMjs18 = require("./VCode/index.mjs");
parcelHelpers.exportAll(_indexMjs18, exports);
var _indexMjs19 = require("./VColorPicker/index.mjs"); // export * from './VContent'
parcelHelpers.exportAll(_indexMjs19, exports);
var _indexMjs20 = require("./VCombobox/index.mjs");
parcelHelpers.exportAll(_indexMjs20, exports);
var _indexMjs21 = require("./VConfirmEdit/index.mjs");
parcelHelpers.exportAll(_indexMjs21, exports);
var _indexMjs22 = require("./VCounter/index.mjs");
parcelHelpers.exportAll(_indexMjs22, exports);
var _indexMjs23 = require("./VDataIterator/index.mjs");
parcelHelpers.exportAll(_indexMjs23, exports);
var _indexMjs24 = require("./VDataTable/index.mjs");
parcelHelpers.exportAll(_indexMjs24, exports);
var _indexMjs25 = require("./VDatePicker/index.mjs");
parcelHelpers.exportAll(_indexMjs25, exports);
var _indexMjs26 = require("./VDefaultsProvider/index.mjs");
parcelHelpers.exportAll(_indexMjs26, exports);
var _indexMjs27 = require("./VDialog/index.mjs");
parcelHelpers.exportAll(_indexMjs27, exports);
var _indexMjs28 = require("./VDivider/index.mjs");
parcelHelpers.exportAll(_indexMjs28, exports);
var _indexMjs29 = require("./VEmptyState/index.mjs");
parcelHelpers.exportAll(_indexMjs29, exports);
var _indexMjs30 = require("./VExpansionPanel/index.mjs");
parcelHelpers.exportAll(_indexMjs30, exports);
var _indexMjs31 = require("./VFab/index.mjs");
parcelHelpers.exportAll(_indexMjs31, exports);
var _indexMjs32 = require("./VField/index.mjs");
parcelHelpers.exportAll(_indexMjs32, exports);
var _indexMjs33 = require("./VFileInput/index.mjs");
parcelHelpers.exportAll(_indexMjs33, exports);
var _indexMjs34 = require("./VFooter/index.mjs");
parcelHelpers.exportAll(_indexMjs34, exports);
var _indexMjs35 = require("./VForm/index.mjs");
parcelHelpers.exportAll(_indexMjs35, exports);
var _indexMjs36 = require("./VGrid/index.mjs");
parcelHelpers.exportAll(_indexMjs36, exports);
var _indexMjs37 = require("./VHover/index.mjs");
parcelHelpers.exportAll(_indexMjs37, exports);
var _indexMjs38 = require("./VIcon/index.mjs");
parcelHelpers.exportAll(_indexMjs38, exports);
var _indexMjs39 = require("./VImg/index.mjs");
parcelHelpers.exportAll(_indexMjs39, exports);
var _indexMjs40 = require("./VInfiniteScroll/index.mjs");
parcelHelpers.exportAll(_indexMjs40, exports);
var _indexMjs41 = require("./VInput/index.mjs");
parcelHelpers.exportAll(_indexMjs41, exports);
var _indexMjs42 = require("./VItemGroup/index.mjs");
parcelHelpers.exportAll(_indexMjs42, exports);
var _indexMjs43 = require("./VKbd/index.mjs");
parcelHelpers.exportAll(_indexMjs43, exports);
var _indexMjs44 = require("./VLabel/index.mjs");
parcelHelpers.exportAll(_indexMjs44, exports);
var _indexMjs45 = require("./VLayout/index.mjs");
parcelHelpers.exportAll(_indexMjs45, exports);
var _indexMjs46 = require("./VLazy/index.mjs");
parcelHelpers.exportAll(_indexMjs46, exports);
var _indexMjs47 = require("./VList/index.mjs");
parcelHelpers.exportAll(_indexMjs47, exports);
var _indexMjs48 = require("./VLocaleProvider/index.mjs");
parcelHelpers.exportAll(_indexMjs48, exports);
var _indexMjs49 = require("./VMain/index.mjs");
parcelHelpers.exportAll(_indexMjs49, exports);
var _indexMjs50 = require("./VMenu/index.mjs");
parcelHelpers.exportAll(_indexMjs50, exports);
var _indexMjs51 = require("./VMessages/index.mjs");
parcelHelpers.exportAll(_indexMjs51, exports);
var _indexMjs52 = require("./VNavigationDrawer/index.mjs");
parcelHelpers.exportAll(_indexMjs52, exports);
var _indexMjs53 = require("./VNoSsr/index.mjs");
parcelHelpers.exportAll(_indexMjs53, exports);
var _indexMjs54 = require("./VOtpInput/index.mjs"); // export * from './VOverflowBtn'
parcelHelpers.exportAll(_indexMjs54, exports);
var _indexMjs55 = require("./VOverlay/index.mjs");
parcelHelpers.exportAll(_indexMjs55, exports);
var _indexMjs56 = require("./VPagination/index.mjs");
parcelHelpers.exportAll(_indexMjs56, exports);
var _indexMjs57 = require("./VParallax/index.mjs");
parcelHelpers.exportAll(_indexMjs57, exports);
var _indexMjs58 = require("./VProgressCircular/index.mjs");
parcelHelpers.exportAll(_indexMjs58, exports);
var _indexMjs59 = require("./VProgressLinear/index.mjs");
parcelHelpers.exportAll(_indexMjs59, exports);
var _indexMjs60 = require("./VRadio/index.mjs");
parcelHelpers.exportAll(_indexMjs60, exports);
var _indexMjs61 = require("./VRadioGroup/index.mjs");
parcelHelpers.exportAll(_indexMjs61, exports);
var _indexMjs62 = require("./VRangeSlider/index.mjs");
parcelHelpers.exportAll(_indexMjs62, exports);
var _indexMjs63 = require("./VRating/index.mjs");
parcelHelpers.exportAll(_indexMjs63, exports);
var _indexMjs64 = require("./VResponsive/index.mjs");
parcelHelpers.exportAll(_indexMjs64, exports);
var _indexMjs65 = require("./VSelect/index.mjs");
parcelHelpers.exportAll(_indexMjs65, exports);
var _indexMjs66 = require("./VSelectionControl/index.mjs");
parcelHelpers.exportAll(_indexMjs66, exports);
var _indexMjs67 = require("./VSelectionControlGroup/index.mjs");
parcelHelpers.exportAll(_indexMjs67, exports);
var _indexMjs68 = require("./VSheet/index.mjs");
parcelHelpers.exportAll(_indexMjs68, exports);
var _indexMjs69 = require("./VSkeletonLoader/index.mjs");
parcelHelpers.exportAll(_indexMjs69, exports);
var _indexMjs70 = require("./VSlideGroup/index.mjs");
parcelHelpers.exportAll(_indexMjs70, exports);
var _indexMjs71 = require("./VSlider/index.mjs");
parcelHelpers.exportAll(_indexMjs71, exports);
var _indexMjs72 = require("./VSnackbar/index.mjs");
parcelHelpers.exportAll(_indexMjs72, exports);
var _indexMjs73 = require("./VSparkline/index.mjs");
parcelHelpers.exportAll(_indexMjs73, exports);
var _indexMjs74 = require("./VSpeedDial/index.mjs");
parcelHelpers.exportAll(_indexMjs74, exports);
var _indexMjs75 = require("./VStepper/index.mjs");
parcelHelpers.exportAll(_indexMjs75, exports);
var _indexMjs76 = require("./VSwitch/index.mjs");
parcelHelpers.exportAll(_indexMjs76, exports);
var _indexMjs77 = require("./VSystemBar/index.mjs");
parcelHelpers.exportAll(_indexMjs77, exports);
var _indexMjs78 = require("./VTabs/index.mjs");
parcelHelpers.exportAll(_indexMjs78, exports);
var _indexMjs79 = require("./VTable/index.mjs");
parcelHelpers.exportAll(_indexMjs79, exports);
var _indexMjs80 = require("./VTextarea/index.mjs");
parcelHelpers.exportAll(_indexMjs80, exports);
var _indexMjs81 = require("./VTextField/index.mjs");
parcelHelpers.exportAll(_indexMjs81, exports);
var _indexMjs82 = require("./VThemeProvider/index.mjs");
parcelHelpers.exportAll(_indexMjs82, exports);
var _indexMjs83 = require("./VTimeline/index.mjs"); // export * from './VTimePicker'
parcelHelpers.exportAll(_indexMjs83, exports);
var _indexMjs84 = require("./VToolbar/index.mjs");
parcelHelpers.exportAll(_indexMjs84, exports);
var _indexMjs85 = require("./VTooltip/index.mjs"); // export * from './VTreeview'
parcelHelpers.exportAll(_indexMjs85, exports);
var _indexMjs86 = require("./VValidation/index.mjs");
parcelHelpers.exportAll(_indexMjs86, exports);
var _indexMjs87 = require("./VVirtualScroll/index.mjs");
parcelHelpers.exportAll(_indexMjs87, exports);
var _indexMjs88 = require("./VWindow/index.mjs");
parcelHelpers.exportAll(_indexMjs88, exports);
var _indexMjs89 = require("./transitions/index.mjs");
parcelHelpers.exportAll(_indexMjs89, exports);

},{"./VApp/index.mjs":"17otX","./VAppBar/index.mjs":"c2UGK","./VAlert/index.mjs":"4vhw7","./VAutocomplete/index.mjs":"02mAI","./VAvatar/index.mjs":"d9olW","./VBadge/index.mjs":"7cZ6u","./VBanner/index.mjs":"g0y4z","./VBottomNavigation/index.mjs":"jGWwf","./VBottomSheet/index.mjs":"kjAJB","./VBreadcrumbs/index.mjs":"fuBty","./VBtn/index.mjs":"g9s2K","./VBtnGroup/index.mjs":"4DX5K","./VBtnToggle/index.mjs":"eqjim","./VCard/index.mjs":"1dUj9","./VCarousel/index.mjs":"6qWQA","./VCheckbox/index.mjs":"c1Gdu","./VChip/index.mjs":"bLlpp","./VChipGroup/index.mjs":"6obMu","./VCode/index.mjs":"kwTC7","./VColorPicker/index.mjs":"1FJOL","./VCombobox/index.mjs":"aD5I5","./VConfirmEdit/index.mjs":"g0y7n","./VCounter/index.mjs":"lmomu","./VDataIterator/index.mjs":"cjPmY","./VDataTable/index.mjs":"8k1sD","./VDatePicker/index.mjs":"28gJF","./VDefaultsProvider/index.mjs":"eFFvH","./VDialog/index.mjs":"7m4co","./VDivider/index.mjs":"bj3uM","./VEmptyState/index.mjs":"d9fyg","./VExpansionPanel/index.mjs":"h2M8G","./VFab/index.mjs":"8qxjp","./VField/index.mjs":"8ajJF","./VFileInput/index.mjs":"2ojXG","./VFooter/index.mjs":"9xAt2","./VForm/index.mjs":"3tl32","./VGrid/index.mjs":"aqHSB","./VHover/index.mjs":"dSkK0","./VIcon/index.mjs":"5Yjjr","./VImg/index.mjs":"dbGJJ","./VInfiniteScroll/index.mjs":"i9C5Y","./VInput/index.mjs":"aw4BN","./VItemGroup/index.mjs":"aH0Cj","./VKbd/index.mjs":"59IIs","./VLabel/index.mjs":"2xWF9","./VLayout/index.mjs":"ba2kC","./VLazy/index.mjs":"fMoei","./VList/index.mjs":"56Mcn","./VLocaleProvider/index.mjs":"77ev1","./VMain/index.mjs":"dDhaK","./VMenu/index.mjs":"72lak","./VMessages/index.mjs":"aFYwi","./VNavigationDrawer/index.mjs":"5j2bV","./VNoSsr/index.mjs":"6fS1D","./VOtpInput/index.mjs":"dvBBN","./VOverlay/index.mjs":"seRqS","./VPagination/index.mjs":"lmGXi","./VParallax/index.mjs":"8x45m","./VProgressCircular/index.mjs":"c7ng4","./VProgressLinear/index.mjs":"5Ak1A","./VRadio/index.mjs":"beVAQ","./VRadioGroup/index.mjs":"lg1EM","./VRangeSlider/index.mjs":"bL1p6","./VRating/index.mjs":"fKzVg","./VResponsive/index.mjs":"hJYZs","./VSelect/index.mjs":"bVJdt","./VSelectionControl/index.mjs":"40anv","./VSelectionControlGroup/index.mjs":"40B1s","./VSheet/index.mjs":"3vcV9","./VSkeletonLoader/index.mjs":"e726I","./VSlideGroup/index.mjs":"3p9Be","./VSlider/index.mjs":"d2sTc","./VSnackbar/index.mjs":"aNTA7","./VSparkline/index.mjs":"hiAwM","./VSpeedDial/index.mjs":"8lB5b","./VStepper/index.mjs":"btRmO","./VSwitch/index.mjs":"kxB6j","./VSystemBar/index.mjs":"4ZqWo","./VTabs/index.mjs":"F4B5l","./VTable/index.mjs":"brBlJ","./VTextarea/index.mjs":"2t6j0","./VTextField/index.mjs":"e6Ydp","./VThemeProvider/index.mjs":"9r9uW","./VTimeline/index.mjs":"imYcS","./VToolbar/index.mjs":"6euIz","./VTooltip/index.mjs":"i6brl","./VValidation/index.mjs":"ly36V","./VVirtualScroll/index.mjs":"cUhx7","./VWindow/index.mjs":"b6TAh","./transitions/index.mjs":"3ybHr","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"17otX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VApp", ()=>(0, _vappMjs.VApp));
var _vappMjs = require("./VApp.mjs");

},{"./VApp.mjs":"gOHKd","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"gOHKd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVAppProps", ()=>makeVAppProps);
parcelHelpers.export(exports, "VApp", ()=>VApp);
var _vue = require("vue");
// Styles
var _vappCss = require("./VApp.css");
// Composables
var _componentMjs = require("../../composables/component.mjs");
var _layoutMjs = require("../../composables/layout.mjs");
var _localeMjs = require("../../composables/locale.mjs");
var _themeMjs = require("../../composables/theme.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const makeVAppProps = (0, _indexMjs.propsFactory)({
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _layoutMjs.makeLayoutProps)({
        fullHeight: true
    }),
    ...(0, _themeMjs.makeThemeProps)()
}, "VApp");
const VApp = (0, _indexMjs.genericComponent)()({
    name: "VApp",
    props: makeVAppProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const theme = (0, _themeMjs.provideTheme)(props);
        const { layoutClasses, getLayoutItem, items, layoutRef } = (0, _layoutMjs.createLayout)(props);
        const { rtlClasses } = (0, _localeMjs.useRtl)();
        (0, _indexMjs.useRender)(()=>(0, _vue.createVNode)("div", {
                "ref": layoutRef,
                "class": [
                    "v-application",
                    theme.themeClasses.value,
                    layoutClasses.value,
                    rtlClasses.value,
                    props.class
                ],
                "style": [
                    props.style
                ]
            }, [
                (0, _vue.createVNode)("div", {
                    "class": "v-application__wrap"
                }, [
                    slots.default?.()
                ])
            ]));
        return {
            getLayoutItem,
            items,
            theme
        };
    }
});

},{"vue":"gCTam","./VApp.css":"jyxIV","../../composables/component.mjs":"4YAxs","../../composables/layout.mjs":"lfigA","../../composables/locale.mjs":"9rJP0","../../composables/theme.mjs":"c9HGg","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"jyxIV":[function() {},{}],"c2UGK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VAppBar", ()=>(0, _vappBarMjs.VAppBar));
parcelHelpers.export(exports, "VAppBarNavIcon", ()=>(0, _vappBarNavIconMjs.VAppBarNavIcon));
parcelHelpers.export(exports, "VAppBarTitle", ()=>(0, _vappBarTitleMjs.VAppBarTitle));
var _vappBarMjs = require("./VAppBar.mjs");
var _vappBarNavIconMjs = require("./VAppBarNavIcon.mjs");
var _vappBarTitleMjs = require("./VAppBarTitle.mjs");

},{"./VAppBar.mjs":"5ryRH","./VAppBarNavIcon.mjs":"j2c8g","./VAppBarTitle.mjs":"l6tu3","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"5ryRH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVAppBarProps", ()=>makeVAppBarProps);
parcelHelpers.export(exports, "VAppBar", ()=>VAppBar);
var _vue = require("vue");
// Styles
var _vappBarCss = require("./VAppBar.css");
// Components
var _vtoolbarMjs = require("../VToolbar/VToolbar.mjs"); // Composables
var _layoutMjs = require("../../composables/layout.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs");
var _scrollMjs = require("../../composables/scroll.mjs");
var _ssrBootMjs = require("../../composables/ssrBoot.mjs");
var _toggleScopeMjs = require("../../composables/toggleScope.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const makeVAppBarProps = (0, _indexMjs.propsFactory)({
    scrollBehavior: String,
    modelValue: {
        type: Boolean,
        default: true
    },
    location: {
        type: String,
        default: "top",
        validator: (value)=>[
                "top",
                "bottom"
            ].includes(value)
    },
    ...(0, _vtoolbarMjs.makeVToolbarProps)(),
    ...(0, _layoutMjs.makeLayoutItemProps)(),
    ...(0, _scrollMjs.makeScrollProps)(),
    height: {
        type: [
            Number,
            String
        ],
        default: 64
    }
}, "VAppBar");
const VAppBar = (0, _indexMjs.genericComponent)()({
    name: "VAppBar",
    props: makeVAppBarProps(),
    emits: {
        "update:modelValue": (value)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const vToolbarRef = (0, _vue.ref)();
        const isActive = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
        const scrollBehavior = (0, _vue.computed)(()=>{
            const behavior = new Set(props.scrollBehavior?.split(" ") ?? []);
            return {
                hide: behavior.has("hide"),
                fullyHide: behavior.has("fully-hide"),
                inverted: behavior.has("inverted"),
                collapse: behavior.has("collapse"),
                elevate: behavior.has("elevate"),
                fadeImage: behavior.has("fade-image")
            };
        });
        const canScroll = (0, _vue.computed)(()=>{
            const behavior = scrollBehavior.value;
            return behavior.hide || behavior.fullyHide || behavior.inverted || behavior.collapse || behavior.elevate || behavior.fadeImage || // behavior.shrink ||
            !isActive.value;
        });
        const { currentScroll, scrollThreshold, isScrollingUp, scrollRatio } = (0, _scrollMjs.useScroll)(props, {
            canScroll
        });
        const canHide = (0, _vue.computed)(()=>scrollBehavior.value.hide || scrollBehavior.value.fullyHide);
        const isCollapsed = (0, _vue.computed)(()=>props.collapse || scrollBehavior.value.collapse && (scrollBehavior.value.inverted ? scrollRatio.value > 0 : scrollRatio.value === 0));
        const isFlat = (0, _vue.computed)(()=>props.flat || scrollBehavior.value.fullyHide && !isActive.value || scrollBehavior.value.elevate && (scrollBehavior.value.inverted ? currentScroll.value > 0 : currentScroll.value === 0));
        const opacity = (0, _vue.computed)(()=>scrollBehavior.value.fadeImage ? scrollBehavior.value.inverted ? 1 - scrollRatio.value : scrollRatio.value : undefined);
        const height = (0, _vue.computed)(()=>{
            if (scrollBehavior.value.hide && scrollBehavior.value.inverted) return 0;
            const height = vToolbarRef.value?.contentHeight ?? 0;
            const extensionHeight = vToolbarRef.value?.extensionHeight ?? 0;
            if (!canHide.value) return height + extensionHeight;
            return currentScroll.value < scrollThreshold.value || scrollBehavior.value.fullyHide ? height + extensionHeight : height;
        });
        (0, _toggleScopeMjs.useToggleScope)((0, _vue.computed)(()=>!!props.scrollBehavior), ()=>{
            (0, _vue.watchEffect)(()=>{
                if (canHide.value) {
                    if (scrollBehavior.value.inverted) isActive.value = currentScroll.value > scrollThreshold.value;
                    else isActive.value = isScrollingUp.value || currentScroll.value < scrollThreshold.value;
                } else isActive.value = true;
            });
        });
        const { ssrBootStyles } = (0, _ssrBootMjs.useSsrBoot)();
        const { layoutItemStyles } = (0, _layoutMjs.useLayoutItem)({
            id: props.name,
            order: (0, _vue.computed)(()=>parseInt(props.order, 10)),
            position: (0, _vue.toRef)(props, "location"),
            layoutSize: height,
            elementSize: (0, _vue.shallowRef)(undefined),
            active: isActive,
            absolute: (0, _vue.toRef)(props, "absolute")
        });
        (0, _indexMjs.useRender)(()=>{
            const toolbarProps = (0, _vtoolbarMjs.VToolbar).filterProps(props);
            return (0, _vue.createVNode)((0, _vtoolbarMjs.VToolbar), (0, _vue.mergeProps)({
                "ref": vToolbarRef,
                "class": [
                    "v-app-bar",
                    {
                        "v-app-bar--bottom": props.location === "bottom"
                    },
                    props.class
                ],
                "style": [
                    {
                        ...layoutItemStyles.value,
                        "--v-toolbar-image-opacity": opacity.value,
                        height: undefined,
                        ...ssrBootStyles.value
                    },
                    props.style
                ]
            }, toolbarProps, {
                "collapse": isCollapsed.value,
                "flat": isFlat.value
            }), slots);
        });
        return {};
    }
});

},{"vue":"gCTam","./VAppBar.css":"95EKg","../VToolbar/VToolbar.mjs":"aKd0w","../../composables/layout.mjs":"lfigA","../../composables/proxiedModel.mjs":"huwLk","../../composables/scroll.mjs":"jEsf0","../../composables/ssrBoot.mjs":"bVwDz","../../composables/toggleScope.mjs":"dsKlJ","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"95EKg":[function() {},{}],"aKd0w":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVToolbarProps", ()=>makeVToolbarProps);
parcelHelpers.export(exports, "VToolbar", ()=>VToolbar);
var _vue = require("vue");
// Styles
var _vtoolbarCss = require("./VToolbar.css");
// Components
var _vtoolbarTitleMjs = require("./VToolbarTitle.mjs");
var _indexMjs = require("../transitions/index.mjs");
var _indexMjs1 = require("../VDefaultsProvider/index.mjs");
var _indexMjs2 = require("../VImg/index.mjs"); // Composables
var _borderMjs = require("../../composables/border.mjs");
var _colorMjs = require("../../composables/color.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _defaultsMjs = require("../../composables/defaults.mjs");
var _elevationMjs = require("../../composables/elevation.mjs");
var _localeMjs = require("../../composables/locale.mjs");
var _roundedMjs = require("../../composables/rounded.mjs");
var _tagMjs = require("../../composables/tag.mjs");
var _themeMjs = require("../../composables/theme.mjs"); // Utilities
var _indexMjs3 = require("../../util/index.mjs"); // Types
const allowedDensities = [
    null,
    "prominent",
    "default",
    "comfortable",
    "compact"
];
const makeVToolbarProps = (0, _indexMjs3.propsFactory)({
    absolute: Boolean,
    collapse: Boolean,
    color: String,
    density: {
        type: String,
        default: "default",
        validator: (v)=>allowedDensities.includes(v)
    },
    extended: Boolean,
    extensionHeight: {
        type: [
            Number,
            String
        ],
        default: 48
    },
    flat: Boolean,
    floating: Boolean,
    height: {
        type: [
            Number,
            String
        ],
        default: 64
    },
    image: String,
    title: String,
    ...(0, _borderMjs.makeBorderProps)(),
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _elevationMjs.makeElevationProps)(),
    ...(0, _roundedMjs.makeRoundedProps)(),
    ...(0, _tagMjs.makeTagProps)({
        tag: "header"
    }),
    ...(0, _themeMjs.makeThemeProps)()
}, "VToolbar");
const VToolbar = (0, _indexMjs3.genericComponent)()({
    name: "VToolbar",
    props: makeVToolbarProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const { backgroundColorClasses, backgroundColorStyles } = (0, _colorMjs.useBackgroundColor)((0, _vue.toRef)(props, "color"));
        const { borderClasses } = (0, _borderMjs.useBorder)(props);
        const { elevationClasses } = (0, _elevationMjs.useElevation)(props);
        const { roundedClasses } = (0, _roundedMjs.useRounded)(props);
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const { rtlClasses } = (0, _localeMjs.useRtl)();
        const isExtended = (0, _vue.shallowRef)(!!(props.extended || slots.extension?.()));
        const contentHeight = (0, _vue.computed)(()=>parseInt(Number(props.height) + (props.density === "prominent" ? Number(props.height) : 0) - (props.density === "comfortable" ? 8 : 0) - (props.density === "compact" ? 16 : 0), 10));
        const extensionHeight = (0, _vue.computed)(()=>isExtended.value ? parseInt(Number(props.extensionHeight) + (props.density === "prominent" ? Number(props.extensionHeight) : 0) - (props.density === "comfortable" ? 4 : 0) - (props.density === "compact" ? 8 : 0), 10) : 0);
        (0, _defaultsMjs.provideDefaults)({
            VBtn: {
                variant: "text"
            }
        });
        (0, _indexMjs3.useRender)(()=>{
            const hasTitle = !!(props.title || slots.title);
            const hasImage = !!(slots.image || props.image);
            const extension = slots.extension?.();
            isExtended.value = !!(props.extended || extension);
            return (0, _vue.createVNode)(props.tag, {
                "class": [
                    "v-toolbar",
                    {
                        "v-toolbar--absolute": props.absolute,
                        "v-toolbar--collapse": props.collapse,
                        "v-toolbar--flat": props.flat,
                        "v-toolbar--floating": props.floating,
                        [`v-toolbar--density-${props.density}`]: true
                    },
                    backgroundColorClasses.value,
                    borderClasses.value,
                    elevationClasses.value,
                    roundedClasses.value,
                    themeClasses.value,
                    rtlClasses.value,
                    props.class
                ],
                "style": [
                    backgroundColorStyles.value,
                    props.style
                ]
            }, {
                default: ()=>[
                        hasImage && (0, _vue.createVNode)("div", {
                            "key": "image",
                            "class": "v-toolbar__image"
                        }, [
                            !slots.image ? (0, _vue.createVNode)((0, _indexMjs2.VImg), {
                                "key": "image-img",
                                "cover": true,
                                "src": props.image
                            }, null) : (0, _vue.createVNode)((0, _indexMjs1.VDefaultsProvider), {
                                "key": "image-defaults",
                                "disabled": !props.image,
                                "defaults": {
                                    VImg: {
                                        cover: true,
                                        src: props.image
                                    }
                                }
                            }, slots.image)
                        ]),
                        (0, _vue.createVNode)((0, _indexMjs1.VDefaultsProvider), {
                            "defaults": {
                                VTabs: {
                                    height: (0, _indexMjs3.convertToUnit)(contentHeight.value)
                                }
                            }
                        }, {
                            default: ()=>[
                                    (0, _vue.createVNode)("div", {
                                        "class": "v-toolbar__content",
                                        "style": {
                                            height: (0, _indexMjs3.convertToUnit)(contentHeight.value)
                                        }
                                    }, [
                                        slots.prepend && (0, _vue.createVNode)("div", {
                                            "class": "v-toolbar__prepend"
                                        }, [
                                            slots.prepend?.()
                                        ]),
                                        hasTitle && (0, _vue.createVNode)((0, _vtoolbarTitleMjs.VToolbarTitle), {
                                            "key": "title",
                                            "text": props.title
                                        }, {
                                            text: slots.title
                                        }),
                                        slots.default?.(),
                                        slots.append && (0, _vue.createVNode)("div", {
                                            "class": "v-toolbar__append"
                                        }, [
                                            slots.append?.()
                                        ])
                                    ])
                                ]
                        }),
                        (0, _vue.createVNode)((0, _indexMjs1.VDefaultsProvider), {
                            "defaults": {
                                VTabs: {
                                    height: (0, _indexMjs3.convertToUnit)(extensionHeight.value)
                                }
                            }
                        }, {
                            default: ()=>[
                                    (0, _vue.createVNode)((0, _indexMjs.VExpandTransition), null, {
                                        default: ()=>[
                                                isExtended.value && (0, _vue.createVNode)("div", {
                                                    "class": "v-toolbar__extension",
                                                    "style": {
                                                        height: (0, _indexMjs3.convertToUnit)(extensionHeight.value)
                                                    }
                                                }, [
                                                    extension
                                                ])
                                            ]
                                    })
                                ]
                        })
                    ]
            });
        });
        return {
            contentHeight,
            extensionHeight
        };
    }
});

},{"vue":"gCTam","./VToolbar.css":"98dZ5","./VToolbarTitle.mjs":"iwmPn","../transitions/index.mjs":"3ybHr","../VDefaultsProvider/index.mjs":"eFFvH","../VImg/index.mjs":"dbGJJ","../../composables/border.mjs":"iYaxw","../../composables/color.mjs":"6TeQR","../../composables/component.mjs":"4YAxs","../../composables/defaults.mjs":"29Im0","../../composables/elevation.mjs":"aNIiI","../../composables/locale.mjs":"9rJP0","../../composables/rounded.mjs":"1RfhA","../../composables/tag.mjs":"3LqcC","../../composables/theme.mjs":"c9HGg","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"98dZ5":[function() {},{}],"iwmPn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVToolbarTitleProps", ()=>makeVToolbarTitleProps);
parcelHelpers.export(exports, "VToolbarTitle", ()=>VToolbarTitle);
var _vue = require("vue");
// Composables
var _componentMjs = require("../../composables/component.mjs");
var _tagMjs = require("../../composables/tag.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const makeVToolbarTitleProps = (0, _indexMjs.propsFactory)({
    text: String,
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _tagMjs.makeTagProps)()
}, "VToolbarTitle");
const VToolbarTitle = (0, _indexMjs.genericComponent)()({
    name: "VToolbarTitle",
    props: makeVToolbarTitleProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        (0, _indexMjs.useRender)(()=>{
            const hasText = !!(slots.default || slots.text || props.text);
            return (0, _vue.createVNode)(props.tag, {
                "class": [
                    "v-toolbar-title",
                    props.class
                ],
                "style": props.style
            }, {
                default: ()=>[
                        hasText && (0, _vue.createVNode)("div", {
                            "class": "v-toolbar-title__placeholder"
                        }, [
                            slots.text ? slots.text() : props.text,
                            slots.default?.()
                        ])
                    ]
            });
        });
        return {};
    }
});

},{"vue":"gCTam","../../composables/component.mjs":"4YAxs","../../composables/tag.mjs":"3LqcC","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"3LqcC":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeTagProps", ()=>makeTagProps);
var _indexMjs = require("../util/index.mjs"); // Types
const makeTagProps = (0, _indexMjs.propsFactory)({
    tag: {
        type: String,
        default: "div"
    }
}, "tag");

},{"../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"3ybHr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VDialogTransition", ()=>(0, _dialogTransitionMjs.VDialogTransition));
parcelHelpers.export(exports, "VFabTransition", ()=>VFabTransition);
parcelHelpers.export(exports, "VDialogBottomTransition", ()=>VDialogBottomTransition);
parcelHelpers.export(exports, "VDialogTopTransition", ()=>VDialogTopTransition);
parcelHelpers.export(exports, "VFadeTransition", ()=>VFadeTransition);
parcelHelpers.export(exports, "VScaleTransition", ()=>VScaleTransition);
parcelHelpers.export(exports, "VScrollXTransition", ()=>VScrollXTransition);
parcelHelpers.export(exports, "VScrollXReverseTransition", ()=>VScrollXReverseTransition);
parcelHelpers.export(exports, "VScrollYTransition", ()=>VScrollYTransition);
parcelHelpers.export(exports, "VScrollYReverseTransition", ()=>VScrollYReverseTransition);
parcelHelpers.export(exports, "VSlideXTransition", ()=>VSlideXTransition);
parcelHelpers.export(exports, "VSlideXReverseTransition", ()=>VSlideXReverseTransition);
parcelHelpers.export(exports, "VSlideYTransition", ()=>VSlideYTransition);
parcelHelpers.export(exports, "VSlideYReverseTransition", ()=>VSlideYReverseTransition);
parcelHelpers.export(exports, "VExpandTransition", ()=>VExpandTransition);
parcelHelpers.export(exports, "VExpandXTransition", ()=>VExpandXTransition);
var _createTransitionMjs = require("./createTransition.mjs");
var _expandTransitionMjs = require("./expand-transition.mjs"); // Component specific transitions
var _expandTransitionMjsDefault = parcelHelpers.interopDefault(_expandTransitionMjs);
var _dialogTransitionMjs = require("./dialog-transition.mjs");
const VFabTransition = (0, _createTransitionMjs.createCssTransition)("fab-transition", "center center", "out-in");
const VDialogBottomTransition = (0, _createTransitionMjs.createCssTransition)("dialog-bottom-transition");
const VDialogTopTransition = (0, _createTransitionMjs.createCssTransition)("dialog-top-transition");
const VFadeTransition = (0, _createTransitionMjs.createCssTransition)("fade-transition");
const VScaleTransition = (0, _createTransitionMjs.createCssTransition)("scale-transition");
const VScrollXTransition = (0, _createTransitionMjs.createCssTransition)("scroll-x-transition");
const VScrollXReverseTransition = (0, _createTransitionMjs.createCssTransition)("scroll-x-reverse-transition");
const VScrollYTransition = (0, _createTransitionMjs.createCssTransition)("scroll-y-transition");
const VScrollYReverseTransition = (0, _createTransitionMjs.createCssTransition)("scroll-y-reverse-transition");
const VSlideXTransition = (0, _createTransitionMjs.createCssTransition)("slide-x-transition");
const VSlideXReverseTransition = (0, _createTransitionMjs.createCssTransition)("slide-x-reverse-transition");
const VSlideYTransition = (0, _createTransitionMjs.createCssTransition)("slide-y-transition");
const VSlideYReverseTransition = (0, _createTransitionMjs.createCssTransition)("slide-y-reverse-transition");
const VExpandTransition = (0, _createTransitionMjs.createJavascriptTransition)("expand-transition", (0, _expandTransitionMjsDefault.default)());
const VExpandXTransition = (0, _createTransitionMjs.createJavascriptTransition)("expand-x-transition", (0, _expandTransitionMjsDefault.default)("", true));

},{"./createTransition.mjs":"9yKJ3","./expand-transition.mjs":"hZcBM","./dialog-transition.mjs":"3a7nK","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"9yKJ3":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeTransitionProps", ()=>makeTransitionProps);
parcelHelpers.export(exports, "createCssTransition", ()=>createCssTransition);
parcelHelpers.export(exports, "createJavascriptTransition", ()=>createJavascriptTransition);
var _vue = require("vue");
var _indexMjs = require("../../util/index.mjs"); // Types
const makeTransitionProps = (0, _indexMjs.propsFactory)({
    disabled: Boolean,
    group: Boolean,
    hideOnLeave: Boolean,
    leaveAbsolute: Boolean,
    mode: String,
    origin: String
}, "transition");
function createCssTransition(name, origin, mode) {
    return (0, _indexMjs.genericComponent)()({
        name,
        props: makeTransitionProps({
            mode,
            origin
        }),
        setup (props, _ref) {
            let { slots } = _ref;
            const functions = {
                onBeforeEnter (el) {
                    if (props.origin) el.style.transformOrigin = props.origin;
                },
                onLeave (el) {
                    if (props.leaveAbsolute) {
                        const { offsetTop, offsetLeft, offsetWidth, offsetHeight } = el;
                        el._transitionInitialStyles = {
                            position: el.style.position,
                            top: el.style.top,
                            left: el.style.left,
                            width: el.style.width,
                            height: el.style.height
                        };
                        el.style.position = "absolute";
                        el.style.top = `${offsetTop}px`;
                        el.style.left = `${offsetLeft}px`;
                        el.style.width = `${offsetWidth}px`;
                        el.style.height = `${offsetHeight}px`;
                    }
                    if (props.hideOnLeave) el.style.setProperty("display", "none", "important");
                },
                onAfterLeave (el) {
                    if (props.leaveAbsolute && el?._transitionInitialStyles) {
                        const { position, top, left, width, height } = el._transitionInitialStyles;
                        delete el._transitionInitialStyles;
                        el.style.position = position || "";
                        el.style.top = top || "";
                        el.style.left = left || "";
                        el.style.width = width || "";
                        el.style.height = height || "";
                    }
                }
            };
            return ()=>{
                const tag = props.group ? (0, _vue.TransitionGroup) : (0, _vue.Transition);
                return (0, _vue.h)(tag, {
                    name: props.disabled ? "" : name,
                    css: !props.disabled,
                    ...props.group ? undefined : {
                        mode: props.mode
                    },
                    ...props.disabled ? {} : functions
                }, slots.default);
            };
        }
    });
}
function createJavascriptTransition(name, functions) {
    let mode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "in-out";
    return (0, _indexMjs.genericComponent)()({
        name,
        props: {
            mode: {
                type: String,
                default: mode
            },
            disabled: Boolean,
            group: Boolean
        },
        setup (props, _ref2) {
            let { slots } = _ref2;
            const tag = props.group ? (0, _vue.TransitionGroup) : (0, _vue.Transition);
            return ()=>{
                return (0, _vue.h)(tag, {
                    name: props.disabled ? "" : name,
                    css: !props.disabled,
                    // mode: props.mode, // TODO: vuejs/vue-next#3104
                    ...props.disabled ? {} : functions
                }, slots.default);
            };
        }
    });
}

},{"vue":"gCTam","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"hZcBM":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "default", ()=>function() {
        let expandedParentClass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
        let x = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
        const sizeProperty = x ? "width" : "height";
        const offsetProperty = (0, _vue.camelize)(`offset-${sizeProperty}`);
        return {
            onBeforeEnter (el) {
                el._parent = el.parentNode;
                el._initialStyle = {
                    transition: el.style.transition,
                    overflow: el.style.overflow,
                    [sizeProperty]: el.style[sizeProperty]
                };
            },
            onEnter (el) {
                const initialStyle = el._initialStyle;
                el.style.setProperty("transition", "none", "important");
                // Hide overflow to account for collapsed margins in the calculated height
                el.style.overflow = "hidden";
                const offset = `${el[offsetProperty]}px`;
                el.style[sizeProperty] = "0";
                el.offsetHeight; // force reflow
                el.style.transition = initialStyle.transition;
                if (expandedParentClass && el._parent) el._parent.classList.add(expandedParentClass);
                requestAnimationFrame(()=>{
                    el.style[sizeProperty] = offset;
                });
            },
            onAfterEnter: resetStyles,
            onEnterCancelled: resetStyles,
            onLeave (el) {
                el._initialStyle = {
                    transition: "",
                    overflow: el.style.overflow,
                    [sizeProperty]: el.style[sizeProperty]
                };
                el.style.overflow = "hidden";
                el.style[sizeProperty] = `${el[offsetProperty]}px`;
                el.offsetHeight; // force reflow
                requestAnimationFrame(()=>el.style[sizeProperty] = "0");
            },
            onAfterLeave,
            onLeaveCancelled: onAfterLeave
        };
        function onAfterLeave(el) {
            if (expandedParentClass && el._parent) el._parent.classList.remove(expandedParentClass);
            resetStyles(el);
        }
        function resetStyles(el) {
            const size = el._initialStyle[sizeProperty];
            el.style.overflow = el._initialStyle.overflow;
            if (size != null) el.style[sizeProperty] = size;
            delete el._initialStyle;
        }
    });
var _vue = require("vue");

},{"vue":"gCTam","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"3a7nK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVDialogTransitionProps", ()=>makeVDialogTransitionProps);
parcelHelpers.export(exports, "VDialogTransition", ()=>VDialogTransition);
var _vue = require("vue");
var _indexMjs = require("../../util/index.mjs");
var _boxMjs = require("../../util/box.mjs"); // Types
const makeVDialogTransitionProps = (0, _indexMjs.propsFactory)({
    target: [
        Object,
        Array
    ]
}, "v-dialog-transition");
const VDialogTransition = (0, _indexMjs.genericComponent)()({
    name: "VDialogTransition",
    props: makeVDialogTransitionProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const functions = {
            onBeforeEnter (el) {
                el.style.pointerEvents = "none";
                el.style.visibility = "hidden";
            },
            async onEnter (el, done) {
                await new Promise((resolve)=>requestAnimationFrame(resolve));
                await new Promise((resolve)=>requestAnimationFrame(resolve));
                el.style.visibility = "";
                const { x, y, sx, sy, speed } = getDimensions(props.target, el);
                const animation = (0, _indexMjs.animate)(el, [
                    {
                        transform: `translate(${x}px, ${y}px) scale(${sx}, ${sy})`,
                        opacity: 0
                    },
                    {}
                ], {
                    duration: 225 * speed,
                    easing: (0, _indexMjs.deceleratedEasing)
                });
                getChildren(el)?.forEach((el)=>{
                    (0, _indexMjs.animate)(el, [
                        {
                            opacity: 0
                        },
                        {
                            opacity: 0,
                            offset: 0.33
                        },
                        {}
                    ], {
                        duration: 225 * 2 * speed,
                        easing: (0, _indexMjs.standardEasing)
                    });
                });
                animation.finished.then(()=>done());
            },
            onAfterEnter (el) {
                el.style.removeProperty("pointer-events");
            },
            onBeforeLeave (el) {
                el.style.pointerEvents = "none";
            },
            async onLeave (el, done) {
                await new Promise((resolve)=>requestAnimationFrame(resolve));
                const { x, y, sx, sy, speed } = getDimensions(props.target, el);
                const animation = (0, _indexMjs.animate)(el, [
                    {},
                    {
                        transform: `translate(${x}px, ${y}px) scale(${sx}, ${sy})`,
                        opacity: 0
                    }
                ], {
                    duration: 125 * speed,
                    easing: (0, _indexMjs.acceleratedEasing)
                });
                animation.finished.then(()=>done());
                getChildren(el)?.forEach((el)=>{
                    (0, _indexMjs.animate)(el, [
                        {},
                        {
                            opacity: 0,
                            offset: 0.2
                        },
                        {
                            opacity: 0
                        }
                    ], {
                        duration: 125 * 2 * speed,
                        easing: (0, _indexMjs.standardEasing)
                    });
                });
            },
            onAfterLeave (el) {
                el.style.removeProperty("pointer-events");
            }
        };
        return ()=>{
            return props.target ? (0, _vue.createVNode)((0, _vue.Transition), (0, _vue.mergeProps)({
                "name": "dialog-transition"
            }, functions, {
                "css": false
            }), slots) : (0, _vue.createVNode)((0, _vue.Transition), {
                "name": "dialog-transition"
            }, slots);
        };
    }
});
/** Animatable children (card, sheet, list) */ function getChildren(el) {
    const els = el.querySelector(":scope > .v-card, :scope > .v-sheet, :scope > .v-list")?.children;
    return els && [
        ...els
    ];
}
function getDimensions(target, el) {
    const targetBox = (0, _boxMjs.getTargetBox)(target);
    const elBox = (0, _indexMjs.nullifyTransforms)(el);
    const [originX, originY] = getComputedStyle(el).transformOrigin.split(" ").map((v)=>parseFloat(v));
    const [anchorSide, anchorOffset] = getComputedStyle(el).getPropertyValue("--v-overlay-anchor-origin").split(" ");
    let offsetX = targetBox.left + targetBox.width / 2;
    if (anchorSide === "left" || anchorOffset === "left") offsetX -= targetBox.width / 2;
    else if (anchorSide === "right" || anchorOffset === "right") offsetX += targetBox.width / 2;
    let offsetY = targetBox.top + targetBox.height / 2;
    if (anchorSide === "top" || anchorOffset === "top") offsetY -= targetBox.height / 2;
    else if (anchorSide === "bottom" || anchorOffset === "bottom") offsetY += targetBox.height / 2;
    const tsx = targetBox.width / elBox.width;
    const tsy = targetBox.height / elBox.height;
    const maxs = Math.max(1, tsx, tsy);
    const sx = tsx / maxs || 0;
    const sy = tsy / maxs || 0;
    // Animate elements larger than 12% of the screen area up to 1.5x slower
    const asa = elBox.width * elBox.height / (window.innerWidth * window.innerHeight);
    const speed = asa > 0.12 ? Math.min(1.5, (asa - 0.12) * 10 + 1) : 1;
    return {
        x: offsetX - (originX + elBox.left),
        y: offsetY - (originY + elBox.top),
        sx,
        sy,
        speed
    };
}

},{"vue":"gCTam","../../util/index.mjs":"ivUh8","../../util/box.mjs":"9ahRi","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"eFFvH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VDefaultsProvider", ()=>(0, _vdefaultsProviderMjs.VDefaultsProvider));
var _vdefaultsProviderMjs = require("./VDefaultsProvider.mjs");

},{"./VDefaultsProvider.mjs":"3hOjd","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"3hOjd":[function(require,module,exports) {
// Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVDefaultsProviderProps", ()=>makeVDefaultsProviderProps);
parcelHelpers.export(exports, "VDefaultsProvider", ()=>VDefaultsProvider);
var _defaultsMjs = require("../../composables/defaults.mjs"); // Utilities
var _vue = require("vue");
var _indexMjs = require("../../util/index.mjs"); // Types
const makeVDefaultsProviderProps = (0, _indexMjs.propsFactory)({
    defaults: Object,
    disabled: Boolean,
    reset: [
        Number,
        String
    ],
    root: [
        Boolean,
        String
    ],
    scoped: Boolean
}, "VDefaultsProvider");
const VDefaultsProvider = (0, _indexMjs.genericComponent)(false)({
    name: "VDefaultsProvider",
    props: makeVDefaultsProviderProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const { defaults, disabled, reset, root, scoped } = (0, _vue.toRefs)(props);
        (0, _defaultsMjs.provideDefaults)(defaults, {
            reset,
            root,
            scoped,
            disabled
        });
        return ()=>slots.default?.();
    }
});

},{"../../composables/defaults.mjs":"29Im0","vue":"gCTam","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"dbGJJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VImg", ()=>(0, _vimgMjs.VImg));
var _vimgMjs = require("./VImg.mjs");

},{"./VImg.mjs":"cwz6F","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"cwz6F":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVImgProps", ()=>makeVImgProps);
parcelHelpers.export(exports, "VImg", ()=>VImg);
var _vue = require("vue");
// Styles
var _vimgCss = require("./VImg.css");
// Components
var _vresponsiveMjs = require("../VResponsive/VResponsive.mjs"); // Composables
var _colorMjs = require("../../composables/color.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _roundedMjs = require("../../composables/rounded.mjs");
var _transitionMjs = require("../../composables/transition.mjs"); // Directives
var _indexMjs = require("../../directives/intersect/index.mjs"); // Utilities
var _indexMjsDefault = parcelHelpers.interopDefault(_indexMjs);
var _indexMjs1 = require("../../util/index.mjs"); // Types
const makeVImgProps = (0, _indexMjs1.propsFactory)({
    absolute: Boolean,
    alt: String,
    cover: Boolean,
    color: String,
    draggable: {
        type: [
            Boolean,
            String
        ],
        default: undefined
    },
    eager: Boolean,
    gradient: String,
    lazySrc: String,
    options: {
        type: Object,
        // For more information on types, navigate to:
        // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API
        default: ()=>({
                root: undefined,
                rootMargin: undefined,
                threshold: undefined
            })
    },
    sizes: String,
    src: {
        type: [
            String,
            Object
        ],
        default: ""
    },
    crossorigin: String,
    referrerpolicy: String,
    srcset: String,
    position: String,
    ...(0, _vresponsiveMjs.makeVResponsiveProps)(),
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _roundedMjs.makeRoundedProps)(),
    ...(0, _transitionMjs.makeTransitionProps)()
}, "VImg");
const VImg = (0, _indexMjs1.genericComponent)()({
    name: "VImg",
    directives: {
        intersect: (0, _indexMjsDefault.default)
    },
    props: makeVImgProps(),
    emits: {
        loadstart: (value)=>true,
        load: (value)=>true,
        error: (value)=>true
    },
    setup (props, _ref) {
        let { emit, slots } = _ref;
        const { backgroundColorClasses, backgroundColorStyles } = (0, _colorMjs.useBackgroundColor)((0, _vue.toRef)(props, "color"));
        const { roundedClasses } = (0, _roundedMjs.useRounded)(props);
        const vm = (0, _indexMjs1.getCurrentInstance)("VImg");
        const currentSrc = (0, _vue.shallowRef)(""); // Set from srcset
        const image = (0, _vue.ref)();
        const state = (0, _vue.shallowRef)(props.eager ? "loading" : "idle");
        const naturalWidth = (0, _vue.shallowRef)();
        const naturalHeight = (0, _vue.shallowRef)();
        const normalisedSrc = (0, _vue.computed)(()=>{
            return props.src && typeof props.src === "object" ? {
                src: props.src.src,
                srcset: props.srcset || props.src.srcset,
                lazySrc: props.lazySrc || props.src.lazySrc,
                aspect: Number(props.aspectRatio || props.src.aspect || 0)
            } : {
                src: props.src,
                srcset: props.srcset,
                lazySrc: props.lazySrc,
                aspect: Number(props.aspectRatio || 0)
            };
        });
        const aspectRatio = (0, _vue.computed)(()=>{
            return normalisedSrc.value.aspect || naturalWidth.value / naturalHeight.value || 0;
        });
        (0, _vue.watch)(()=>props.src, ()=>{
            init(state.value !== "idle");
        });
        (0, _vue.watch)(aspectRatio, (val, oldVal)=>{
            if (!val && oldVal && image.value) pollForSize(image.value);
        });
        // TODO: getSrc when window width changes
        (0, _vue.onBeforeMount)(()=>init());
        function init(isIntersecting) {
            if (props.eager && isIntersecting) return;
            if ((0, _indexMjs1.SUPPORTS_INTERSECTION) && !isIntersecting && !props.eager) return;
            state.value = "loading";
            if (normalisedSrc.value.lazySrc) {
                const lazyImg = new Image();
                lazyImg.src = normalisedSrc.value.lazySrc;
                pollForSize(lazyImg, null);
            }
            if (!normalisedSrc.value.src) return;
            (0, _vue.nextTick)(()=>{
                emit("loadstart", image.value?.currentSrc || normalisedSrc.value.src);
                setTimeout(()=>{
                    if (vm.isUnmounted) return;
                    if (image.value?.complete) {
                        if (!image.value.naturalWidth) onError();
                        if (state.value === "error") return;
                        if (!aspectRatio.value) pollForSize(image.value, null);
                        if (state.value === "loading") onLoad();
                    } else {
                        if (!aspectRatio.value) pollForSize(image.value);
                        getSrc();
                    }
                });
            });
        }
        function onLoad() {
            if (vm.isUnmounted) return;
            getSrc();
            pollForSize(image.value);
            state.value = "loaded";
            emit("load", image.value?.currentSrc || normalisedSrc.value.src);
        }
        function onError() {
            if (vm.isUnmounted) return;
            state.value = "error";
            emit("error", image.value?.currentSrc || normalisedSrc.value.src);
        }
        function getSrc() {
            const img = image.value;
            if (img) currentSrc.value = img.currentSrc || img.src;
        }
        let timer = -1;
        (0, _vue.onBeforeUnmount)(()=>{
            clearTimeout(timer);
        });
        function pollForSize(img) {
            let timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;
            const poll = ()=>{
                clearTimeout(timer);
                if (vm.isUnmounted) return;
                const { naturalHeight: imgHeight, naturalWidth: imgWidth } = img;
                if (imgHeight || imgWidth) {
                    naturalWidth.value = imgWidth;
                    naturalHeight.value = imgHeight;
                } else if (!img.complete && state.value === "loading" && timeout != null) timer = window.setTimeout(poll, timeout);
                else if (img.currentSrc.endsWith(".svg") || img.currentSrc.startsWith("data:image/svg+xml")) {
                    naturalWidth.value = 1;
                    naturalHeight.value = 1;
                }
            };
            poll();
        }
        const containClasses = (0, _vue.computed)(()=>({
                "v-img__img--cover": props.cover,
                "v-img__img--contain": !props.cover
            }));
        const __image = ()=>{
            if (!normalisedSrc.value.src || state.value === "idle") return null;
            const img = (0, _vue.createVNode)("img", {
                "class": [
                    "v-img__img",
                    containClasses.value
                ],
                "style": {
                    objectPosition: props.position
                },
                "src": normalisedSrc.value.src,
                "srcset": normalisedSrc.value.srcset,
                "alt": props.alt,
                "crossorigin": props.crossorigin,
                "referrerpolicy": props.referrerpolicy,
                "draggable": props.draggable,
                "sizes": props.sizes,
                "ref": image,
                "onLoad": onLoad,
                "onError": onError
            }, null);
            const sources = slots.sources?.();
            return (0, _vue.createVNode)((0, _transitionMjs.MaybeTransition), {
                "transition": props.transition,
                "appear": true
            }, {
                default: ()=>[
                        (0, _vue.withDirectives)(sources ? (0, _vue.createVNode)("picture", {
                            "class": "v-img__picture"
                        }, [
                            sources,
                            img
                        ]) : img, [
                            [
                                (0, _vue.vShow),
                                state.value === "loaded"
                            ]
                        ])
                    ]
            });
        };
        const __preloadImage = ()=>(0, _vue.createVNode)((0, _transitionMjs.MaybeTransition), {
                "transition": props.transition
            }, {
                default: ()=>[
                        normalisedSrc.value.lazySrc && state.value !== "loaded" && (0, _vue.createVNode)("img", {
                            "class": [
                                "v-img__img",
                                "v-img__img--preload",
                                containClasses.value
                            ],
                            "style": {
                                objectPosition: props.position
                            },
                            "src": normalisedSrc.value.lazySrc,
                            "alt": props.alt,
                            "crossorigin": props.crossorigin,
                            "referrerpolicy": props.referrerpolicy,
                            "draggable": props.draggable
                        }, null)
                    ]
            });
        const __placeholder = ()=>{
            if (!slots.placeholder) return null;
            return (0, _vue.createVNode)((0, _transitionMjs.MaybeTransition), {
                "transition": props.transition,
                "appear": true
            }, {
                default: ()=>[
                        (state.value === "loading" || state.value === "error" && !slots.error) && (0, _vue.createVNode)("div", {
                            "class": "v-img__placeholder"
                        }, [
                            slots.placeholder()
                        ])
                    ]
            });
        };
        const __error = ()=>{
            if (!slots.error) return null;
            return (0, _vue.createVNode)((0, _transitionMjs.MaybeTransition), {
                "transition": props.transition,
                "appear": true
            }, {
                default: ()=>[
                        state.value === "error" && (0, _vue.createVNode)("div", {
                            "class": "v-img__error"
                        }, [
                            slots.error()
                        ])
                    ]
            });
        };
        const __gradient = ()=>{
            if (!props.gradient) return null;
            return (0, _vue.createVNode)("div", {
                "class": "v-img__gradient",
                "style": {
                    backgroundImage: `linear-gradient(${props.gradient})`
                }
            }, null);
        };
        const isBooted = (0, _vue.shallowRef)(false);
        {
            const stop = (0, _vue.watch)(aspectRatio, (val)=>{
                if (val) {
                    // Doesn't work with nextTick, idk why
                    requestAnimationFrame(()=>{
                        requestAnimationFrame(()=>{
                            isBooted.value = true;
                        });
                    });
                    stop();
                }
            });
        }
        (0, _indexMjs1.useRender)(()=>{
            const responsiveProps = (0, _vresponsiveMjs.VResponsive).filterProps(props);
            return (0, _vue.withDirectives)((0, _vue.createVNode)((0, _vresponsiveMjs.VResponsive), (0, _vue.mergeProps)({
                "class": [
                    "v-img",
                    {
                        "v-img--absolute": props.absolute,
                        "v-img--booting": !isBooted.value
                    },
                    backgroundColorClasses.value,
                    roundedClasses.value,
                    props.class
                ],
                "style": [
                    {
                        width: (0, _indexMjs1.convertToUnit)(props.width === "auto" ? naturalWidth.value : props.width)
                    },
                    backgroundColorStyles.value,
                    props.style
                ]
            }, responsiveProps, {
                "aspectRatio": aspectRatio.value,
                "aria-label": props.alt,
                "role": props.alt ? "img" : undefined
            }), {
                additional: ()=>(0, _vue.createVNode)((0, _vue.Fragment), null, [
                        (0, _vue.createVNode)(__image, null, null),
                        (0, _vue.createVNode)(__preloadImage, null, null),
                        (0, _vue.createVNode)(__gradient, null, null),
                        (0, _vue.createVNode)(__placeholder, null, null),
                        (0, _vue.createVNode)(__error, null, null)
                    ]),
                default: slots.default
            }), [
                [
                    (0, _vue.resolveDirective)("intersect"),
                    {
                        handler: init,
                        options: props.options
                    },
                    null,
                    {
                        once: true
                    }
                ]
            ]);
        });
        return {
            currentSrc,
            image,
            state,
            naturalWidth,
            naturalHeight
        };
    }
});

},{"vue":"gCTam","./VImg.css":"6XiL8","../VResponsive/VResponsive.mjs":"hkzXE","../../composables/color.mjs":"6TeQR","../../composables/component.mjs":"4YAxs","../../composables/rounded.mjs":"1RfhA","../../composables/transition.mjs":"dJyg1","../../directives/intersect/index.mjs":"iNCN8","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"6XiL8":[function() {},{}],"hkzXE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useAspectStyles", ()=>useAspectStyles);
parcelHelpers.export(exports, "makeVResponsiveProps", ()=>makeVResponsiveProps);
parcelHelpers.export(exports, "VResponsive", ()=>VResponsive);
var _vue = require("vue");
// Styles
var _vresponsiveCss = require("./VResponsive.css");
// Composables
var _componentMjs = require("../../composables/component.mjs");
var _dimensionsMjs = require("../../composables/dimensions.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
function useAspectStyles(props) {
    return {
        aspectStyles: (0, _vue.computed)(()=>{
            const ratio = Number(props.aspectRatio);
            return ratio ? {
                paddingBottom: String(1 / ratio * 100) + "%"
            } : undefined;
        })
    };
}
const makeVResponsiveProps = (0, _indexMjs.propsFactory)({
    aspectRatio: [
        String,
        Number
    ],
    contentClass: null,
    inline: Boolean,
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _dimensionsMjs.makeDimensionProps)()
}, "VResponsive");
const VResponsive = (0, _indexMjs.genericComponent)()({
    name: "VResponsive",
    props: makeVResponsiveProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const { aspectStyles } = useAspectStyles(props);
        const { dimensionStyles } = (0, _dimensionsMjs.useDimension)(props);
        (0, _indexMjs.useRender)(()=>(0, _vue.createVNode)("div", {
                "class": [
                    "v-responsive",
                    {
                        "v-responsive--inline": props.inline
                    },
                    props.class
                ],
                "style": [
                    dimensionStyles.value,
                    props.style
                ]
            }, [
                (0, _vue.createVNode)("div", {
                    "class": "v-responsive__sizer",
                    "style": aspectStyles.value
                }, null),
                slots.additional?.(),
                slots.default && (0, _vue.createVNode)("div", {
                    "class": [
                        "v-responsive__content",
                        props.contentClass
                    ]
                }, [
                    slots.default()
                ])
            ]));
        return {};
    }
});

},{"vue":"gCTam","./VResponsive.css":"iXJHR","../../composables/component.mjs":"4YAxs","../../composables/dimensions.mjs":"daVmy","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"iXJHR":[function() {},{}],"daVmy":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeDimensionProps", ()=>makeDimensionProps);
parcelHelpers.export(exports, "useDimension", ()=>useDimension);
var _vue = require("vue");
var _indexMjs = require("../util/index.mjs"); // Types
const makeDimensionProps = (0, _indexMjs.propsFactory)({
    height: [
        Number,
        String
    ],
    maxHeight: [
        Number,
        String
    ],
    maxWidth: [
        Number,
        String
    ],
    minHeight: [
        Number,
        String
    ],
    minWidth: [
        Number,
        String
    ],
    width: [
        Number,
        String
    ]
}, "dimension");
function useDimension(props) {
    const dimensionStyles = (0, _vue.computed)(()=>{
        const styles = {};
        const height = (0, _indexMjs.convertToUnit)(props.height);
        const maxHeight = (0, _indexMjs.convertToUnit)(props.maxHeight);
        const maxWidth = (0, _indexMjs.convertToUnit)(props.maxWidth);
        const minHeight = (0, _indexMjs.convertToUnit)(props.minHeight);
        const minWidth = (0, _indexMjs.convertToUnit)(props.minWidth);
        const width = (0, _indexMjs.convertToUnit)(props.width);
        if (height != null) styles.height = height;
        if (maxHeight != null) styles.maxHeight = maxHeight;
        if (maxWidth != null) styles.maxWidth = maxWidth;
        if (minHeight != null) styles.minHeight = minHeight;
        if (minWidth != null) styles.minWidth = minWidth;
        if (width != null) styles.width = width;
        return styles;
    });
    return {
        dimensionStyles
    };
}

},{"vue":"gCTam","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"6TeQR":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// Composables
parcelHelpers.export(exports, "useColor", ()=>useColor);
parcelHelpers.export(exports, "useTextColor", ()=>useTextColor);
parcelHelpers.export(exports, "useBackgroundColor", ()=>useBackgroundColor);
var _vue = require("vue");
var _indexMjs = require("../util/index.mjs"); // Types
function useColor(colors) {
    return (0, _indexMjs.destructComputed)(()=>{
        const classes = [];
        const styles = {};
        if (colors.value.background) {
            if ((0, _indexMjs.isCssColor)(colors.value.background)) {
                styles.backgroundColor = colors.value.background;
                if (!colors.value.text && (0, _indexMjs.isParsableColor)(colors.value.background)) {
                    const backgroundColor = (0, _indexMjs.parseColor)(colors.value.background);
                    if (backgroundColor.a == null || backgroundColor.a === 1) {
                        const textColor = (0, _indexMjs.getForeground)(backgroundColor);
                        styles.color = textColor;
                        styles.caretColor = textColor;
                    }
                }
            } else classes.push(`bg-${colors.value.background}`);
        }
        if (colors.value.text) {
            if ((0, _indexMjs.isCssColor)(colors.value.text)) {
                styles.color = colors.value.text;
                styles.caretColor = colors.value.text;
            } else classes.push(`text-${colors.value.text}`);
        }
        return {
            colorClasses: classes,
            colorStyles: styles
        };
    });
}
function useTextColor(props, name) {
    const colors = (0, _vue.computed)(()=>({
            text: (0, _vue.isRef)(props) ? props.value : name ? props[name] : null
        }));
    const { colorClasses: textColorClasses, colorStyles: textColorStyles } = useColor(colors);
    return {
        textColorClasses,
        textColorStyles
    };
}
function useBackgroundColor(props, name) {
    const colors = (0, _vue.computed)(()=>({
            background: (0, _vue.isRef)(props) ? props.value : name ? props[name] : null
        }));
    const { colorClasses: backgroundColorClasses, colorStyles: backgroundColorStyles } = useColor(colors);
    return {
        backgroundColorClasses,
        backgroundColorStyles
    };
}

},{"vue":"gCTam","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"1RfhA":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeRoundedProps", ()=>makeRoundedProps);
parcelHelpers.export(exports, "useRounded", ()=>useRounded);
var _vue = require("vue");
var _indexMjs = require("../util/index.mjs"); // Types
const makeRoundedProps = (0, _indexMjs.propsFactory)({
    rounded: {
        type: [
            Boolean,
            Number,
            String
        ],
        default: undefined
    },
    tile: Boolean
}, "rounded");
function useRounded(props) {
    let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, _indexMjs.getCurrentInstanceName)();
    const roundedClasses = (0, _vue.computed)(()=>{
        const rounded = (0, _vue.isRef)(props) ? props.value : props.rounded;
        const tile = (0, _vue.isRef)(props) ? props.value : props.tile;
        const classes = [];
        if (rounded === true || rounded === "") classes.push(`${name}--rounded`);
        else if (typeof rounded === "string" || rounded === 0) for (const value of String(rounded).split(" "))classes.push(`rounded-${value}`);
        else if (tile || rounded === false) classes.push("rounded-0");
        return classes;
    });
    return {
        roundedClasses
    };
}

},{"vue":"gCTam","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"dJyg1":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeTransitionProps", ()=>makeTransitionProps);
parcelHelpers.export(exports, "MaybeTransition", ()=>MaybeTransition);
var _vue = require("vue");
var _indexMjs = require("../util/index.mjs"); // Types
const makeTransitionProps = (0, _indexMjs.propsFactory)({
    transition: {
        type: [
            Boolean,
            String,
            Object
        ],
        default: "fade-transition",
        validator: (val)=>val !== true
    }
}, "transition");
const MaybeTransition = (props, _ref)=>{
    let { slots } = _ref;
    const { transition, disabled, group, ...rest } = props;
    const { component = group ? (0, _vue.TransitionGroup) : (0, _vue.Transition), ...customProps } = typeof transition === "object" ? transition : {};
    return (0, _vue.h)(component, (0, _vue.mergeProps)(typeof transition === "string" ? {
        name: disabled ? "" : transition
    } : customProps, typeof transition === "string" ? {} : Object.fromEntries(Object.entries({
        disabled,
        group
    }).filter((_ref2)=>{
        let [_, v] = _ref2;
        return v !== undefined;
    })), rest), slots);
};

},{"vue":"gCTam","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"iNCN8":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Intersect", ()=>Intersect);
var _indexMjs = require("../../util/index.mjs"); // Types
function mounted(el, binding) {
    if (!(0, _indexMjs.SUPPORTS_INTERSECTION)) return;
    const modifiers = binding.modifiers || {};
    const value = binding.value;
    const { handler, options } = typeof value === "object" ? value : {
        handler: value,
        options: {}
    };
    const observer = new IntersectionObserver(function() {
        let entries = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        let observer = arguments.length > 1 ? arguments[1] : undefined;
        const _observe = el._observe?.[binding.instance.$.uid];
        if (!_observe) return; // Just in case, should never fire
        const isIntersecting = entries.some((entry)=>entry.isIntersecting);
        // If is not quiet or has already been
        // initted, invoke the user callback
        if (handler && (!modifiers.quiet || _observe.init) && (!modifiers.once || isIntersecting || _observe.init)) handler(isIntersecting, entries, observer);
        if (isIntersecting && modifiers.once) unmounted(el, binding);
        else _observe.init = true;
    }, options);
    el._observe = Object(el._observe);
    el._observe[binding.instance.$.uid] = {
        init: false,
        observer
    };
    observer.observe(el);
}
function unmounted(el, binding) {
    const observe = el._observe?.[binding.instance.$.uid];
    if (!observe) return;
    observe.observer.unobserve(el);
    delete el._observe[binding.instance.$.uid];
}
const Intersect = {
    mounted,
    unmounted
};
exports.default = Intersect;

},{"../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"iYaxw":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeBorderProps", ()=>makeBorderProps);
parcelHelpers.export(exports, "useBorder", ()=>useBorder);
var _vue = require("vue");
var _indexMjs = require("../util/index.mjs"); // Types
const makeBorderProps = (0, _indexMjs.propsFactory)({
    border: [
        Boolean,
        Number,
        String
    ]
}, "border");
function useBorder(props) {
    let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, _indexMjs.getCurrentInstanceName)();
    const borderClasses = (0, _vue.computed)(()=>{
        const border = (0, _vue.isRef)(props) ? props.value : props.border;
        const classes = [];
        if (border === true || border === "") classes.push(`${name}--border`);
        else if (typeof border === "string" || border === 0) for (const value of String(border).split(" "))classes.push(`border-${value}`);
        return classes;
    });
    return {
        borderClasses
    };
}

},{"vue":"gCTam","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"aNIiI":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeElevationProps", ()=>makeElevationProps);
parcelHelpers.export(exports, "useElevation", ()=>useElevation);
var _vue = require("vue");
var _indexMjs = require("../util/index.mjs"); // Types
const makeElevationProps = (0, _indexMjs.propsFactory)({
    elevation: {
        type: [
            Number,
            String
        ],
        validator (v) {
            const value = parseInt(v);
            return !isNaN(value) && value >= 0 && // Material Design has a maximum elevation of 24
            // https://material.io/design/environment/elevation.html#default-elevations
            value <= 24;
        }
    }
}, "elevation");
function useElevation(props) {
    const elevationClasses = (0, _vue.computed)(()=>{
        const elevation = (0, _vue.isRef)(props) ? props.value : props.elevation;
        const classes = [];
        if (elevation == null) return classes;
        classes.push(`elevation-${elevation}`);
        return classes;
    });
    return {
        elevationClasses
    };
}

},{"vue":"gCTam","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"jEsf0":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeScrollProps", ()=>makeScrollProps);
parcelHelpers.export(exports, "useScroll", ()=>useScroll);
var _vue = require("vue");
var _indexMjs = require("../util/index.mjs"); // Types
const makeScrollProps = (0, _indexMjs.propsFactory)({
    scrollTarget: {
        type: String
    },
    scrollThreshold: {
        type: [
            String,
            Number
        ],
        default: 300
    }
}, "scroll");
function useScroll(props) {
    let args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    const { canScroll } = args;
    let previousScroll = 0;
    let previousScrollHeight = 0;
    const target = (0, _vue.ref)(null);
    const currentScroll = (0, _vue.shallowRef)(0);
    const savedScroll = (0, _vue.shallowRef)(0);
    const currentThreshold = (0, _vue.shallowRef)(0);
    const isScrollActive = (0, _vue.shallowRef)(false);
    const isScrollingUp = (0, _vue.shallowRef)(false);
    const scrollThreshold = (0, _vue.computed)(()=>{
        return Number(props.scrollThreshold);
    });
    /**
   * 1: at top
   * 0: at threshold
   */ const scrollRatio = (0, _vue.computed)(()=>{
        return (0, _indexMjs.clamp)((scrollThreshold.value - currentScroll.value) / scrollThreshold.value || 0);
    });
    const onScroll = ()=>{
        const targetEl = target.value;
        if (!targetEl || canScroll && !canScroll.value) return;
        previousScroll = currentScroll.value;
        currentScroll.value = "window" in targetEl ? targetEl.pageYOffset : targetEl.scrollTop;
        const currentScrollHeight = targetEl instanceof Window ? document.documentElement.scrollHeight : targetEl.scrollHeight;
        if (previousScrollHeight !== currentScrollHeight) {
            previousScrollHeight = currentScrollHeight;
            return;
        }
        isScrollingUp.value = currentScroll.value < previousScroll;
        currentThreshold.value = Math.abs(currentScroll.value - scrollThreshold.value);
    };
    (0, _vue.watch)(isScrollingUp, ()=>{
        savedScroll.value = savedScroll.value || currentScroll.value;
    });
    (0, _vue.watch)(isScrollActive, ()=>{
        savedScroll.value = 0;
    });
    (0, _vue.onMounted)(()=>{
        (0, _vue.watch)(()=>props.scrollTarget, (scrollTarget)=>{
            const newTarget = scrollTarget ? document.querySelector(scrollTarget) : window;
            if (!newTarget) {
                (0, _indexMjs.consoleWarn)(`Unable to locate element with identifier ${scrollTarget}`);
                return;
            }
            if (newTarget === target.value) return;
            target.value?.removeEventListener("scroll", onScroll);
            target.value = newTarget;
            target.value.addEventListener("scroll", onScroll, {
                passive: true
            });
        }, {
            immediate: true
        });
    });
    (0, _vue.onBeforeUnmount)(()=>{
        target.value?.removeEventListener("scroll", onScroll);
    });
    // Do we need this? If yes - seems that
    // there's no need to expose onScroll
    canScroll && (0, _vue.watch)(canScroll, onScroll, {
        immediate: true
    });
    return {
        scrollThreshold,
        currentScroll,
        currentThreshold,
        isScrollActive,
        scrollRatio,
        // required only for testing
        // probably can be removed
        // later (2 chars chlng)
        isScrollingUp,
        savedScroll
    };
}

},{"vue":"gCTam","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"bVwDz":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// Composables
parcelHelpers.export(exports, "useSsrBoot", ()=>useSsrBoot);
var _vue = require("vue");
function useSsrBoot() {
    const isBooted = (0, _vue.shallowRef)(false);
    (0, _vue.onMounted)(()=>{
        window.requestAnimationFrame(()=>{
            isBooted.value = true;
        });
    });
    const ssrBootStyles = (0, _vue.computed)(()=>!isBooted.value ? {
            transition: "none !important"
        } : undefined);
    return {
        ssrBootStyles,
        isBooted: (0, _vue.readonly)(isBooted)
    };
}

},{"vue":"gCTam","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"j2c8g":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVAppBarNavIconProps", ()=>makeVAppBarNavIconProps);
parcelHelpers.export(exports, "VAppBarNavIcon", ()=>VAppBarNavIcon);
var _vue = require("vue");
// Components
var _vbtnMjs = require("../VBtn/VBtn.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const makeVAppBarNavIconProps = (0, _indexMjs.propsFactory)({
    ...(0, _vbtnMjs.makeVBtnProps)({
        icon: "$menu",
        variant: "text"
    })
}, "VAppBarNavIcon");
const VAppBarNavIcon = (0, _indexMjs.genericComponent)()({
    name: "VAppBarNavIcon",
    props: makeVAppBarNavIconProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        (0, _indexMjs.useRender)(()=>(0, _vue.createVNode)((0, _vbtnMjs.VBtn), (0, _vue.mergeProps)(props, {
                "class": [
                    "v-app-bar-nav-icon"
                ]
            }), slots));
        return {};
    }
});

},{"vue":"gCTam","../VBtn/VBtn.mjs":"2fut1","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"2fut1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVBtnProps", ()=>makeVBtnProps);
parcelHelpers.export(exports, "VBtn", ()=>VBtn);
var _vue = require("vue");
// Styles
var _vbtnCss = require("./VBtn.css");
// Components
var _vbtnToggleMjs = require("../VBtnToggle/VBtnToggle.mjs");
var _indexMjs = require("../VDefaultsProvider/index.mjs");
var _indexMjs1 = require("../VIcon/index.mjs");
var _indexMjs2 = require("../VProgressCircular/index.mjs"); // Composables
var _borderMjs = require("../../composables/border.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _densityMjs = require("../../composables/density.mjs");
var _dimensionsMjs = require("../../composables/dimensions.mjs");
var _elevationMjs = require("../../composables/elevation.mjs");
var _groupMjs = require("../../composables/group.mjs");
var _iconsMjs = require("../../composables/icons.mjs");
var _loaderMjs = require("../../composables/loader.mjs");
var _locationMjs = require("../../composables/location.mjs");
var _positionMjs = require("../../composables/position.mjs");
var _roundedMjs = require("../../composables/rounded.mjs");
var _routerMjs = require("../../composables/router.mjs");
var _selectLinkMjs = require("../../composables/selectLink.mjs");
var _sizeMjs = require("../../composables/size.mjs");
var _tagMjs = require("../../composables/tag.mjs");
var _themeMjs = require("../../composables/theme.mjs");
var _variantMjs = require("../../composables/variant.mjs"); // Directives
var _indexMjs3 = require("../../directives/ripple/index.mjs"); // Utilities
var _indexMjs4 = require("../../util/index.mjs"); // Types
const makeVBtnProps = (0, _indexMjs4.propsFactory)({
    active: {
        type: Boolean,
        default: undefined
    },
    activeColor: String,
    baseColor: String,
    symbol: {
        type: null,
        default: (0, _vbtnToggleMjs.VBtnToggleSymbol)
    },
    flat: Boolean,
    icon: [
        Boolean,
        String,
        Function,
        Object
    ],
    prependIcon: (0, _iconsMjs.IconValue),
    appendIcon: (0, _iconsMjs.IconValue),
    block: Boolean,
    readonly: Boolean,
    slim: Boolean,
    stacked: Boolean,
    ripple: {
        type: [
            Boolean,
            Object
        ],
        default: true
    },
    text: String,
    ...(0, _borderMjs.makeBorderProps)(),
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _densityMjs.makeDensityProps)(),
    ...(0, _dimensionsMjs.makeDimensionProps)(),
    ...(0, _elevationMjs.makeElevationProps)(),
    ...(0, _groupMjs.makeGroupItemProps)(),
    ...(0, _loaderMjs.makeLoaderProps)(),
    ...(0, _locationMjs.makeLocationProps)(),
    ...(0, _positionMjs.makePositionProps)(),
    ...(0, _roundedMjs.makeRoundedProps)(),
    ...(0, _routerMjs.makeRouterProps)(),
    ...(0, _sizeMjs.makeSizeProps)(),
    ...(0, _tagMjs.makeTagProps)({
        tag: "button"
    }),
    ...(0, _themeMjs.makeThemeProps)(),
    ...(0, _variantMjs.makeVariantProps)({
        variant: "elevated"
    })
}, "VBtn");
const VBtn = (0, _indexMjs4.genericComponent)()({
    name: "VBtn",
    props: makeVBtnProps(),
    emits: {
        "group:selected": (val)=>true
    },
    setup (props, _ref) {
        let { attrs, slots } = _ref;
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const { borderClasses } = (0, _borderMjs.useBorder)(props);
        const { densityClasses } = (0, _densityMjs.useDensity)(props);
        const { dimensionStyles } = (0, _dimensionsMjs.useDimension)(props);
        const { elevationClasses } = (0, _elevationMjs.useElevation)(props);
        const { loaderClasses } = (0, _loaderMjs.useLoader)(props);
        const { locationStyles } = (0, _locationMjs.useLocation)(props);
        const { positionClasses } = (0, _positionMjs.usePosition)(props);
        const { roundedClasses } = (0, _roundedMjs.useRounded)(props);
        const { sizeClasses, sizeStyles } = (0, _sizeMjs.useSize)(props);
        const group = (0, _groupMjs.useGroupItem)(props, props.symbol, false);
        const link = (0, _routerMjs.useLink)(props, attrs);
        const isActive = (0, _vue.computed)(()=>{
            if (props.active !== undefined) return props.active;
            if (link.isLink.value) return link.isActive?.value;
            return group?.isSelected.value;
        });
        const color = (0, _vue.computed)(()=>isActive.value ? props.activeColor ?? props.color : props.color);
        const variantProps = (0, _vue.computed)(()=>{
            const showColor = group?.isSelected.value && (!link.isLink.value || link.isActive?.value) || !group || link.isActive?.value;
            return {
                color: showColor ? color.value ?? props.baseColor : props.baseColor,
                variant: props.variant
            };
        });
        const { colorClasses, colorStyles, variantClasses } = (0, _variantMjs.useVariant)(variantProps);
        const isDisabled = (0, _vue.computed)(()=>group?.disabled.value || props.disabled);
        const isElevated = (0, _vue.computed)(()=>{
            return props.variant === "elevated" && !(props.disabled || props.flat || props.border);
        });
        const valueAttr = (0, _vue.computed)(()=>{
            if (props.value === undefined || typeof props.value === "symbol") return undefined;
            return Object(props.value) === props.value ? JSON.stringify(props.value, null, 0) : props.value;
        });
        function onClick(e) {
            if (isDisabled.value || link.isLink.value && (e.metaKey || e.ctrlKey || e.shiftKey || e.button !== 0 || attrs.target === "_blank")) return;
            link.navigate?.(e);
            group?.toggle();
        }
        (0, _selectLinkMjs.useSelectLink)(link, group?.select);
        (0, _indexMjs4.useRender)(()=>{
            const Tag = link.isLink.value ? "a" : props.tag;
            const hasPrepend = !!(props.prependIcon || slots.prepend);
            const hasAppend = !!(props.appendIcon || slots.append);
            const hasIcon = !!(props.icon && props.icon !== true);
            return (0, _vue.withDirectives)((0, _vue.createVNode)(Tag, {
                "type": Tag === "a" ? undefined : "button",
                "class": [
                    "v-btn",
                    group?.selectedClass.value,
                    {
                        "v-btn--active": isActive.value,
                        "v-btn--block": props.block,
                        "v-btn--disabled": isDisabled.value,
                        "v-btn--elevated": isElevated.value,
                        "v-btn--flat": props.flat,
                        "v-btn--icon": !!props.icon,
                        "v-btn--loading": props.loading,
                        "v-btn--readonly": props.readonly,
                        "v-btn--slim": props.slim,
                        "v-btn--stacked": props.stacked
                    },
                    themeClasses.value,
                    borderClasses.value,
                    colorClasses.value,
                    densityClasses.value,
                    elevationClasses.value,
                    loaderClasses.value,
                    positionClasses.value,
                    roundedClasses.value,
                    sizeClasses.value,
                    variantClasses.value,
                    props.class
                ],
                "style": [
                    colorStyles.value,
                    dimensionStyles.value,
                    locationStyles.value,
                    sizeStyles.value,
                    props.style
                ],
                "aria-busy": props.loading ? true : undefined,
                "disabled": isDisabled.value || undefined,
                "href": link.href.value,
                "tabindex": props.loading || props.readonly ? -1 : undefined,
                "onClick": onClick,
                "value": valueAttr.value
            }, {
                default: ()=>[
                        (0, _variantMjs.genOverlays)(true, "v-btn"),
                        !props.icon && hasPrepend && (0, _vue.createVNode)("span", {
                            "key": "prepend",
                            "class": "v-btn__prepend"
                        }, [
                            !slots.prepend ? (0, _vue.createVNode)((0, _indexMjs1.VIcon), {
                                "key": "prepend-icon",
                                "icon": props.prependIcon
                            }, null) : (0, _vue.createVNode)((0, _indexMjs.VDefaultsProvider), {
                                "key": "prepend-defaults",
                                "disabled": !props.prependIcon,
                                "defaults": {
                                    VIcon: {
                                        icon: props.prependIcon
                                    }
                                }
                            }, slots.prepend)
                        ]),
                        (0, _vue.createVNode)("span", {
                            "class": "v-btn__content",
                            "data-no-activator": ""
                        }, [
                            !slots.default && hasIcon ? (0, _vue.createVNode)((0, _indexMjs1.VIcon), {
                                "key": "content-icon",
                                "icon": props.icon
                            }, null) : (0, _vue.createVNode)((0, _indexMjs.VDefaultsProvider), {
                                "key": "content-defaults",
                                "disabled": !hasIcon,
                                "defaults": {
                                    VIcon: {
                                        icon: props.icon
                                    }
                                }
                            }, {
                                default: ()=>[
                                        slots.default?.() ?? props.text
                                    ]
                            })
                        ]),
                        !props.icon && hasAppend && (0, _vue.createVNode)("span", {
                            "key": "append",
                            "class": "v-btn__append"
                        }, [
                            !slots.append ? (0, _vue.createVNode)((0, _indexMjs1.VIcon), {
                                "key": "append-icon",
                                "icon": props.appendIcon
                            }, null) : (0, _vue.createVNode)((0, _indexMjs.VDefaultsProvider), {
                                "key": "append-defaults",
                                "disabled": !props.appendIcon,
                                "defaults": {
                                    VIcon: {
                                        icon: props.appendIcon
                                    }
                                }
                            }, slots.append)
                        ]),
                        !!props.loading && (0, _vue.createVNode)("span", {
                            "key": "loader",
                            "class": "v-btn__loader"
                        }, [
                            slots.loader?.() ?? (0, _vue.createVNode)((0, _indexMjs2.VProgressCircular), {
                                "color": typeof props.loading === "boolean" ? undefined : props.loading,
                                "indeterminate": true,
                                "width": "2"
                            }, null)
                        ])
                    ]
            }), [
                [
                    (0, _indexMjs3.Ripple),
                    !isDisabled.value && props.ripple,
                    "",
                    {
                        center: !!props.icon
                    }
                ]
            ]);
        });
        return {
            group
        };
    }
});

},{"vue":"gCTam","./VBtn.css":"f2Zi6","../VBtnToggle/VBtnToggle.mjs":"gWoIS","../VDefaultsProvider/index.mjs":"eFFvH","../VIcon/index.mjs":"5Yjjr","../VProgressCircular/index.mjs":"c7ng4","../../composables/border.mjs":"iYaxw","../../composables/component.mjs":"4YAxs","../../composables/density.mjs":"kOsEB","../../composables/dimensions.mjs":"daVmy","../../composables/elevation.mjs":"aNIiI","../../composables/group.mjs":"hPbgr","../../composables/icons.mjs":"g4kLv","../../composables/loader.mjs":"6m53O","../../composables/location.mjs":"cIK4d","../../composables/position.mjs":"8GbJq","../../composables/rounded.mjs":"1RfhA","../../composables/router.mjs":"8IJEw","../../composables/selectLink.mjs":"ezIxH","../../composables/size.mjs":"2PnSq","../../composables/tag.mjs":"3LqcC","../../composables/theme.mjs":"c9HGg","../../composables/variant.mjs":"ivQo4","../../directives/ripple/index.mjs":"41ncU","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"f2Zi6":[function() {},{}],"gWoIS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VBtnToggleSymbol", ()=>VBtnToggleSymbol);
parcelHelpers.export(exports, "makeVBtnToggleProps", ()=>makeVBtnToggleProps);
parcelHelpers.export(exports, "VBtnToggle", ()=>VBtnToggle);
var _vue = require("vue");
// Styles
var _vbtnToggleCss = require("./VBtnToggle.css");
// Components
var _vbtnGroupMjs = require("../VBtnGroup/VBtnGroup.mjs"); // Composables
var _groupMjs = require("../../composables/group.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const VBtnToggleSymbol = Symbol.for("vuetify:v-btn-toggle");
const makeVBtnToggleProps = (0, _indexMjs.propsFactory)({
    ...(0, _vbtnGroupMjs.makeVBtnGroupProps)(),
    ...(0, _groupMjs.makeGroupProps)()
}, "VBtnToggle");
const VBtnToggle = (0, _indexMjs.genericComponent)()({
    name: "VBtnToggle",
    props: makeVBtnToggleProps(),
    emits: {
        "update:modelValue": (value)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const { isSelected, next, prev, select, selected } = (0, _groupMjs.useGroup)(props, VBtnToggleSymbol);
        (0, _indexMjs.useRender)(()=>{
            const btnGroupProps = (0, _vbtnGroupMjs.VBtnGroup).filterProps(props);
            return (0, _vue.createVNode)((0, _vbtnGroupMjs.VBtnGroup), (0, _vue.mergeProps)({
                "class": [
                    "v-btn-toggle",
                    props.class
                ]
            }, btnGroupProps, {
                "style": props.style
            }), {
                default: ()=>[
                        slots.default?.({
                            isSelected,
                            next,
                            prev,
                            select,
                            selected
                        })
                    ]
            });
        });
        return {
            next,
            prev,
            select
        };
    }
});

},{"vue":"gCTam","./VBtnToggle.css":"k4TG8","../VBtnGroup/VBtnGroup.mjs":"9ys7b","../../composables/group.mjs":"hPbgr","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"k4TG8":[function() {},{}],"9ys7b":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVBtnGroupProps", ()=>makeVBtnGroupProps);
parcelHelpers.export(exports, "VBtnGroup", ()=>VBtnGroup);
var _vue = require("vue");
// Styles
var _vbtnGroupCss = require("./VBtnGroup.css");
// Composables
var _borderMjs = require("../../composables/border.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _defaultsMjs = require("../../composables/defaults.mjs");
var _densityMjs = require("../../composables/density.mjs");
var _elevationMjs = require("../../composables/elevation.mjs");
var _roundedMjs = require("../../composables/rounded.mjs");
var _tagMjs = require("../../composables/tag.mjs");
var _themeMjs = require("../../composables/theme.mjs");
var _variantMjs = require("../../composables/variant.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const makeVBtnGroupProps = (0, _indexMjs.propsFactory)({
    baseColor: String,
    divided: Boolean,
    ...(0, _borderMjs.makeBorderProps)(),
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _densityMjs.makeDensityProps)(),
    ...(0, _elevationMjs.makeElevationProps)(),
    ...(0, _roundedMjs.makeRoundedProps)(),
    ...(0, _tagMjs.makeTagProps)(),
    ...(0, _themeMjs.makeThemeProps)(),
    ...(0, _variantMjs.makeVariantProps)()
}, "VBtnGroup");
const VBtnGroup = (0, _indexMjs.genericComponent)()({
    name: "VBtnGroup",
    props: makeVBtnGroupProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const { densityClasses } = (0, _densityMjs.useDensity)(props);
        const { borderClasses } = (0, _borderMjs.useBorder)(props);
        const { elevationClasses } = (0, _elevationMjs.useElevation)(props);
        const { roundedClasses } = (0, _roundedMjs.useRounded)(props);
        (0, _defaultsMjs.provideDefaults)({
            VBtn: {
                height: "auto",
                baseColor: (0, _vue.toRef)(props, "baseColor"),
                color: (0, _vue.toRef)(props, "color"),
                density: (0, _vue.toRef)(props, "density"),
                flat: true,
                variant: (0, _vue.toRef)(props, "variant")
            }
        });
        (0, _indexMjs.useRender)(()=>{
            return (0, _vue.createVNode)(props.tag, {
                "class": [
                    "v-btn-group",
                    {
                        "v-btn-group--divided": props.divided
                    },
                    themeClasses.value,
                    borderClasses.value,
                    densityClasses.value,
                    elevationClasses.value,
                    roundedClasses.value,
                    props.class
                ],
                "style": props.style
            }, slots);
        });
    }
});

},{"vue":"gCTam","./VBtnGroup.css":"hHRhR","../../composables/border.mjs":"iYaxw","../../composables/component.mjs":"4YAxs","../../composables/defaults.mjs":"29Im0","../../composables/density.mjs":"kOsEB","../../composables/elevation.mjs":"aNIiI","../../composables/rounded.mjs":"1RfhA","../../composables/tag.mjs":"3LqcC","../../composables/theme.mjs":"c9HGg","../../composables/variant.mjs":"ivQo4","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"hHRhR":[function() {},{}],"kOsEB":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeDensityProps", ()=>makeDensityProps);
parcelHelpers.export(exports, "useDensity", ()=>useDensity);
var _vue = require("vue");
var _indexMjs = require("../util/index.mjs"); // Types
const allowedDensities = [
    null,
    "default",
    "comfortable",
    "compact"
];
const makeDensityProps = (0, _indexMjs.propsFactory)({
    density: {
        type: String,
        default: "default",
        validator: (v)=>allowedDensities.includes(v)
    }
}, "density");
function useDensity(props) {
    let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, _indexMjs.getCurrentInstanceName)();
    const densityClasses = (0, _vue.computed)(()=>{
        return `${name}--density-${props.density}`;
    });
    return {
        densityClasses
    };
}

},{"vue":"gCTam","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"ivQo4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "allowedVariants", ()=>allowedVariants);
parcelHelpers.export(exports, "genOverlays", ()=>genOverlays);
parcelHelpers.export(exports, "makeVariantProps", ()=>makeVariantProps);
parcelHelpers.export(exports, "useVariant", ()=>useVariant);
var _vue = require("vue");
// Composables
var _colorMjs = require("./color.mjs"); // Utilities
var _indexMjs = require("../util/index.mjs"); // Types
const allowedVariants = [
    "elevated",
    "flat",
    "tonal",
    "outlined",
    "text",
    "plain"
];
function genOverlays(isClickable, name) {
    return (0, _vue.createVNode)((0, _vue.Fragment), null, [
        isClickable && (0, _vue.createVNode)("span", {
            "key": "overlay",
            "class": `${name}__overlay`
        }, null),
        (0, _vue.createVNode)("span", {
            "key": "underlay",
            "class": `${name}__underlay`
        }, null)
    ]);
}
const makeVariantProps = (0, _indexMjs.propsFactory)({
    color: String,
    variant: {
        type: String,
        default: "elevated",
        validator: (v)=>allowedVariants.includes(v)
    }
}, "variant");
function useVariant(props) {
    let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, _indexMjs.getCurrentInstanceName)();
    const variantClasses = (0, _vue.computed)(()=>{
        const { variant } = (0, _vue.unref)(props);
        return `${name}--variant-${variant}`;
    });
    const { colorClasses, colorStyles } = (0, _colorMjs.useColor)((0, _vue.computed)(()=>{
        const { variant, color } = (0, _vue.unref)(props);
        return {
            [[
                "elevated",
                "flat"
            ].includes(variant) ? "background" : "text"]: color
        };
    }));
    return {
        colorClasses,
        colorStyles,
        variantClasses
    };
}

},{"vue":"gCTam","./color.mjs":"6TeQR","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"hPbgr":[function(require,module,exports) {
// Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeGroupProps", ()=>makeGroupProps);
parcelHelpers.export(exports, "makeGroupItemProps", ()=>makeGroupItemProps);
// Composables
parcelHelpers.export(exports, "useGroupItem", ()=>useGroupItem);
parcelHelpers.export(exports, "useGroup", ()=>useGroup);
var _proxiedModelMjs = require("./proxiedModel.mjs"); // Utilities
var _vue = require("vue");
var _indexMjs = require("../util/index.mjs"); // Types
const makeGroupProps = (0, _indexMjs.propsFactory)({
    modelValue: {
        type: null,
        default: undefined
    },
    multiple: Boolean,
    mandatory: [
        Boolean,
        String
    ],
    max: Number,
    selectedClass: String,
    disabled: Boolean
}, "group");
const makeGroupItemProps = (0, _indexMjs.propsFactory)({
    value: null,
    disabled: Boolean,
    selectedClass: String
}, "group-item");
function useGroupItem(props, injectKey) {
    let required = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
    const vm = (0, _indexMjs.getCurrentInstance)("useGroupItem");
    if (!vm) throw new Error("[Vuetify] useGroupItem composable must be used inside a component setup function");
    const id = (0, _indexMjs.getUid)();
    (0, _vue.provide)(Symbol.for(`${injectKey.description}:id`), id);
    const group = (0, _vue.inject)(injectKey, null);
    if (!group) {
        if (!required) return group;
        throw new Error(`[Vuetify] Could not find useGroup injection with symbol ${injectKey.description}`);
    }
    const value = (0, _vue.toRef)(props, "value");
    const disabled = (0, _vue.computed)(()=>!!(group.disabled.value || props.disabled));
    group.register({
        id,
        value,
        disabled
    }, vm);
    (0, _vue.onBeforeUnmount)(()=>{
        group.unregister(id);
    });
    const isSelected = (0, _vue.computed)(()=>{
        return group.isSelected(id);
    });
    const isFirst = (0, _vue.computed)(()=>{
        return group.items.value[0].id === id;
    });
    const isLast = (0, _vue.computed)(()=>{
        return group.items.value[group.items.value.length - 1].id === id;
    });
    const selectedClass = (0, _vue.computed)(()=>isSelected.value && [
            group.selectedClass.value,
            props.selectedClass
        ]);
    (0, _vue.watch)(isSelected, (value)=>{
        vm.emit("group:selected", {
            value
        });
    }, {
        flush: "sync"
    });
    return {
        id,
        isSelected,
        isFirst,
        isLast,
        toggle: ()=>group.select(id, !isSelected.value),
        select: (value)=>group.select(id, value),
        selectedClass,
        value,
        disabled,
        group
    };
}
function useGroup(props, injectKey) {
    let isUnmounted = false;
    const items = (0, _vue.reactive)([]);
    const selected = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue", [], (v)=>{
        if (v == null) return [];
        return getIds(items, (0, _indexMjs.wrapInArray)(v));
    }, (v)=>{
        const arr = getValues(items, v);
        return props.multiple ? arr : arr[0];
    });
    const groupVm = (0, _indexMjs.getCurrentInstance)("useGroup");
    function register(item, vm) {
        // Is there a better way to fix this typing?
        const unwrapped = item;
        const key = Symbol.for(`${injectKey.description}:id`);
        const children = (0, _indexMjs.findChildrenWithProvide)(key, groupVm?.vnode);
        const index = children.indexOf(vm);
        if ((0, _vue.unref)(unwrapped.value) == null) {
            unwrapped.value = index;
            unwrapped.useIndexAsValue = true;
        }
        if (index > -1) items.splice(index, 0, unwrapped);
        else items.push(unwrapped);
    }
    function unregister(id) {
        if (isUnmounted) return;
        // TODO: re-evaluate this line's importance in the future
        // should we only modify the model if mandatory is set.
        // selected.value = selected.value.filter(v => v !== id)
        forceMandatoryValue();
        const index = items.findIndex((item)=>item.id === id);
        items.splice(index, 1);
    }
    // If mandatory and nothing is selected, then select first non-disabled item
    function forceMandatoryValue() {
        const item = items.find((item)=>!item.disabled);
        if (item && props.mandatory === "force" && !selected.value.length) selected.value = [
            item.id
        ];
    }
    (0, _vue.onMounted)(()=>{
        forceMandatoryValue();
    });
    (0, _vue.onBeforeUnmount)(()=>{
        isUnmounted = true;
    });
    (0, _vue.onUpdated)(()=>{
        // #19655 update the items that use the index as the value.
        for(let i = 0; i < items.length; i++)if (items[i].useIndexAsValue) items[i].value = i;
    });
    function select(id, value) {
        const item = items.find((item)=>item.id === id);
        if (value && item?.disabled) return;
        if (props.multiple) {
            const internalValue = selected.value.slice();
            const index = internalValue.findIndex((v)=>v === id);
            const isSelected = ~index;
            value = value ?? !isSelected;
            // We can't remove value if group is
            // mandatory, value already exists,
            // and it is the only value
            if (isSelected && props.mandatory && internalValue.length <= 1) return;
            // We can't add value if it would
            // cause max limit to be exceeded
            if (!isSelected && props.max != null && internalValue.length + 1 > props.max) return;
            if (index < 0 && value) internalValue.push(id);
            else if (index >= 0 && !value) internalValue.splice(index, 1);
            selected.value = internalValue;
        } else {
            const isSelected = selected.value.includes(id);
            if (props.mandatory && isSelected) return;
            selected.value = value ?? !isSelected ? [
                id
            ] : [];
        }
    }
    function step(offset) {
        // getting an offset from selected value obviously won't work with multiple values
        if (props.multiple) (0, _indexMjs.consoleWarn)('This method is not supported when using "multiple" prop');
        if (!selected.value.length) {
            const item = items.find((item)=>!item.disabled);
            item && (selected.value = [
                item.id
            ]);
        } else {
            const currentId = selected.value[0];
            const currentIndex = items.findIndex((i)=>i.id === currentId);
            let newIndex = (currentIndex + offset) % items.length;
            let newItem = items[newIndex];
            while(newItem.disabled && newIndex !== currentIndex){
                newIndex = (newIndex + offset) % items.length;
                newItem = items[newIndex];
            }
            if (newItem.disabled) return;
            selected.value = [
                items[newIndex].id
            ];
        }
    }
    const state = {
        register,
        unregister,
        selected,
        select,
        disabled: (0, _vue.toRef)(props, "disabled"),
        prev: ()=>step(items.length - 1),
        next: ()=>step(1),
        isSelected: (id)=>selected.value.includes(id),
        selectedClass: (0, _vue.computed)(()=>props.selectedClass),
        items: (0, _vue.computed)(()=>items),
        getItemIndex: (value)=>getItemIndex(items, value)
    };
    (0, _vue.provide)(injectKey, state);
    return state;
}
function getItemIndex(items, value) {
    const ids = getIds(items, [
        value
    ]);
    if (!ids.length) return -1;
    return items.findIndex((item)=>item.id === ids[0]);
}
function getIds(items, modelValue) {
    const ids = [];
    modelValue.forEach((value)=>{
        const item = items.find((item)=>(0, _indexMjs.deepEqual)(value, item.value));
        const itemByIndex = items[value];
        if (item?.value != null) ids.push(item.id);
        else if (itemByIndex != null) ids.push(itemByIndex.id);
    });
    return ids;
}
function getValues(items, ids) {
    const values = [];
    ids.forEach((id)=>{
        const itemIndex = items.findIndex((item)=>item.id === id);
        if (~itemIndex) {
            const item = items[itemIndex];
            values.push(item.value != null ? item.value : itemIndex);
        }
    });
    return values;
}

},{"./proxiedModel.mjs":"huwLk","vue":"gCTam","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"5Yjjr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VIcon", ()=>(0, _viconMjs.VIcon));
parcelHelpers.export(exports, "VComponentIcon", ()=>(0, _iconsMjs.VComponentIcon));
parcelHelpers.export(exports, "VSvgIcon", ()=>(0, _iconsMjs.VSvgIcon));
parcelHelpers.export(exports, "VLigatureIcon", ()=>(0, _iconsMjs.VLigatureIcon));
parcelHelpers.export(exports, "VClassIcon", ()=>(0, _iconsMjs.VClassIcon));
var _viconMjs = require("./VIcon.mjs");
var _iconsMjs = require("../../composables/icons.mjs");

},{"./VIcon.mjs":"2DTOv","../../composables/icons.mjs":"g4kLv","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"2DTOv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVIconProps", ()=>makeVIconProps);
parcelHelpers.export(exports, "VIcon", ()=>VIcon);
var _vue = require("vue");
// Styles
var _viconCss = require("./VIcon.css");
// Composables
var _colorMjs = require("../../composables/color.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _iconsMjs = require("../../composables/icons.mjs");
var _sizeMjs = require("../../composables/size.mjs");
var _tagMjs = require("../../composables/tag.mjs");
var _themeMjs = require("../../composables/theme.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const makeVIconProps = (0, _indexMjs.propsFactory)({
    color: String,
    disabled: Boolean,
    start: Boolean,
    end: Boolean,
    icon: (0, _iconsMjs.IconValue),
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _sizeMjs.makeSizeProps)(),
    ...(0, _tagMjs.makeTagProps)({
        tag: "i"
    }),
    ...(0, _themeMjs.makeThemeProps)()
}, "VIcon");
const VIcon = (0, _indexMjs.genericComponent)()({
    name: "VIcon",
    props: makeVIconProps(),
    setup (props, _ref) {
        let { attrs, slots } = _ref;
        const slotIcon = (0, _vue.ref)();
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const { iconData } = (0, _iconsMjs.useIcon)((0, _vue.computed)(()=>slotIcon.value || props.icon));
        const { sizeClasses } = (0, _sizeMjs.useSize)(props);
        const { textColorClasses, textColorStyles } = (0, _colorMjs.useTextColor)((0, _vue.toRef)(props, "color"));
        (0, _indexMjs.useRender)(()=>{
            const slotValue = slots.default?.();
            if (slotValue) slotIcon.value = (0, _indexMjs.flattenFragments)(slotValue).filter((node)=>node.type === (0, _vue.Text) && node.children && typeof node.children === "string")[0]?.children;
            const hasClick = !!(attrs.onClick || attrs.onClickOnce);
            return (0, _vue.createVNode)(iconData.value.component, {
                "tag": props.tag,
                "icon": iconData.value.icon,
                "class": [
                    "v-icon",
                    "notranslate",
                    themeClasses.value,
                    sizeClasses.value,
                    textColorClasses.value,
                    {
                        "v-icon--clickable": hasClick,
                        "v-icon--disabled": props.disabled,
                        "v-icon--start": props.start,
                        "v-icon--end": props.end
                    },
                    props.class
                ],
                "style": [
                    !sizeClasses.value ? {
                        fontSize: (0, _indexMjs.convertToUnit)(props.size),
                        height: (0, _indexMjs.convertToUnit)(props.size),
                        width: (0, _indexMjs.convertToUnit)(props.size)
                    } : undefined,
                    textColorStyles.value,
                    props.style
                ],
                "role": hasClick ? "button" : undefined,
                "aria-hidden": !hasClick,
                "tabindex": hasClick ? props.disabled ? -1 : 0 : undefined
            }, {
                default: ()=>[
                        slotValue
                    ]
            });
        });
        return {};
    }
});

},{"vue":"gCTam","./VIcon.css":"gmbE9","../../composables/color.mjs":"6TeQR","../../composables/component.mjs":"4YAxs","../../composables/icons.mjs":"g4kLv","../../composables/size.mjs":"2PnSq","../../composables/tag.mjs":"3LqcC","../../composables/theme.mjs":"c9HGg","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"gmbE9":[function() {},{}],"2PnSq":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeSizeProps", ()=>makeSizeProps);
parcelHelpers.export(exports, "useSize", ()=>useSize);
var _indexMjs = require("../util/index.mjs"); // Types
const predefinedSizes = [
    "x-small",
    "small",
    "default",
    "large",
    "x-large"
];
const makeSizeProps = (0, _indexMjs.propsFactory)({
    size: {
        type: [
            String,
            Number
        ],
        default: "default"
    }
}, "size");
function useSize(props) {
    let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, _indexMjs.getCurrentInstanceName)();
    return (0, _indexMjs.destructComputed)(()=>{
        let sizeClasses;
        let sizeStyles;
        if ((0, _indexMjs.includes)(predefinedSizes, props.size)) sizeClasses = `${name}--size-${props.size}`;
        else if (props.size) sizeStyles = {
            width: (0, _indexMjs.convertToUnit)(props.size),
            height: (0, _indexMjs.convertToUnit)(props.size)
        };
        return {
            sizeClasses,
            sizeStyles
        };
    });
}

},{"../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"c7ng4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VProgressCircular", ()=>(0, _vprogressCircularMjs.VProgressCircular));
var _vprogressCircularMjs = require("./VProgressCircular.mjs");

},{"./VProgressCircular.mjs":"8zXNo","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"8zXNo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVProgressCircularProps", ()=>makeVProgressCircularProps);
parcelHelpers.export(exports, "VProgressCircular", ()=>VProgressCircular);
var _vue = require("vue");
// Styles
var _vprogressCircularCss = require("./VProgressCircular.css");
// Composables
var _colorMjs = require("../../composables/color.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _intersectionObserverMjs = require("../../composables/intersectionObserver.mjs");
var _resizeObserverMjs = require("../../composables/resizeObserver.mjs");
var _sizeMjs = require("../../composables/size.mjs");
var _tagMjs = require("../../composables/tag.mjs");
var _themeMjs = require("../../composables/theme.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const makeVProgressCircularProps = (0, _indexMjs.propsFactory)({
    bgColor: String,
    color: String,
    indeterminate: [
        Boolean,
        String
    ],
    modelValue: {
        type: [
            Number,
            String
        ],
        default: 0
    },
    rotate: {
        type: [
            Number,
            String
        ],
        default: 0
    },
    width: {
        type: [
            Number,
            String
        ],
        default: 4
    },
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _sizeMjs.makeSizeProps)(),
    ...(0, _tagMjs.makeTagProps)({
        tag: "div"
    }),
    ...(0, _themeMjs.makeThemeProps)()
}, "VProgressCircular");
const VProgressCircular = (0, _indexMjs.genericComponent)()({
    name: "VProgressCircular",
    props: makeVProgressCircularProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const MAGIC_RADIUS_CONSTANT = 20;
        const CIRCUMFERENCE = 2 * Math.PI * MAGIC_RADIUS_CONSTANT;
        const root = (0, _vue.ref)();
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const { sizeClasses, sizeStyles } = (0, _sizeMjs.useSize)(props);
        const { textColorClasses, textColorStyles } = (0, _colorMjs.useTextColor)((0, _vue.toRef)(props, "color"));
        const { textColorClasses: underlayColorClasses, textColorStyles: underlayColorStyles } = (0, _colorMjs.useTextColor)((0, _vue.toRef)(props, "bgColor"));
        const { intersectionRef, isIntersecting } = (0, _intersectionObserverMjs.useIntersectionObserver)();
        const { resizeRef, contentRect } = (0, _resizeObserverMjs.useResizeObserver)();
        const normalizedValue = (0, _vue.computed)(()=>Math.max(0, Math.min(100, parseFloat(props.modelValue))));
        const width = (0, _vue.computed)(()=>Number(props.width));
        const size = (0, _vue.computed)(()=>{
            // Get size from element if size prop value is small, large etc
            return sizeStyles.value ? Number(props.size) : contentRect.value ? contentRect.value.width : Math.max(width.value, 32);
        });
        const diameter = (0, _vue.computed)(()=>MAGIC_RADIUS_CONSTANT / (1 - width.value / size.value) * 2);
        const strokeWidth = (0, _vue.computed)(()=>width.value / size.value * diameter.value);
        const strokeDashOffset = (0, _vue.computed)(()=>(0, _indexMjs.convertToUnit)((100 - normalizedValue.value) / 100 * CIRCUMFERENCE));
        (0, _vue.watchEffect)(()=>{
            intersectionRef.value = root.value;
            resizeRef.value = root.value;
        });
        (0, _indexMjs.useRender)(()=>(0, _vue.createVNode)(props.tag, {
                "ref": root,
                "class": [
                    "v-progress-circular",
                    {
                        "v-progress-circular--indeterminate": !!props.indeterminate,
                        "v-progress-circular--visible": isIntersecting.value,
                        "v-progress-circular--disable-shrink": props.indeterminate === "disable-shrink"
                    },
                    themeClasses.value,
                    sizeClasses.value,
                    textColorClasses.value,
                    props.class
                ],
                "style": [
                    sizeStyles.value,
                    textColorStyles.value,
                    props.style
                ],
                "role": "progressbar",
                "aria-valuemin": "0",
                "aria-valuemax": "100",
                "aria-valuenow": props.indeterminate ? undefined : normalizedValue.value
            }, {
                default: ()=>[
                        (0, _vue.createVNode)("svg", {
                            "style": {
                                transform: `rotate(calc(-90deg + ${Number(props.rotate)}deg))`
                            },
                            "xmlns": "http://www.w3.org/2000/svg",
                            "viewBox": `0 0 ${diameter.value} ${diameter.value}`
                        }, [
                            (0, _vue.createVNode)("circle", {
                                "class": [
                                    "v-progress-circular__underlay",
                                    underlayColorClasses.value
                                ],
                                "style": underlayColorStyles.value,
                                "fill": "transparent",
                                "cx": "50%",
                                "cy": "50%",
                                "r": MAGIC_RADIUS_CONSTANT,
                                "stroke-width": strokeWidth.value,
                                "stroke-dasharray": CIRCUMFERENCE,
                                "stroke-dashoffset": 0
                            }, null),
                            (0, _vue.createVNode)("circle", {
                                "class": "v-progress-circular__overlay",
                                "fill": "transparent",
                                "cx": "50%",
                                "cy": "50%",
                                "r": MAGIC_RADIUS_CONSTANT,
                                "stroke-width": strokeWidth.value,
                                "stroke-dasharray": CIRCUMFERENCE,
                                "stroke-dashoffset": strokeDashOffset.value
                            }, null)
                        ]),
                        slots.default && (0, _vue.createVNode)("div", {
                            "class": "v-progress-circular__content"
                        }, [
                            slots.default({
                                value: normalizedValue.value
                            })
                        ])
                    ]
            }));
        return {};
    }
});

},{"vue":"gCTam","./VProgressCircular.css":"kTQDT","../../composables/color.mjs":"6TeQR","../../composables/component.mjs":"4YAxs","../../composables/intersectionObserver.mjs":"lg3v0","../../composables/resizeObserver.mjs":"hIk8t","../../composables/size.mjs":"2PnSq","../../composables/tag.mjs":"3LqcC","../../composables/theme.mjs":"c9HGg","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"kTQDT":[function() {},{}],"lg3v0":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useIntersectionObserver", ()=>useIntersectionObserver);
var _vue = require("vue");
var _indexMjs = require("../util/index.mjs");
function useIntersectionObserver(callback, options) {
    const intersectionRef = (0, _vue.ref)();
    const isIntersecting = (0, _vue.shallowRef)(false);
    if (0, _indexMjs.SUPPORTS_INTERSECTION) {
        const observer = new IntersectionObserver((entries)=>{
            callback?.(entries, observer);
            isIntersecting.value = !!entries.find((entry)=>entry.isIntersecting);
        }, options);
        (0, _vue.onBeforeUnmount)(()=>{
            observer.disconnect();
        });
        (0, _vue.watch)(intersectionRef, (newValue, oldValue)=>{
            if (oldValue) {
                observer.unobserve(oldValue);
                isIntersecting.value = false;
            }
            if (newValue) observer.observe(newValue);
        }, {
            flush: "post"
        });
    }
    return {
        intersectionRef,
        isIntersecting
    };
}

},{"vue":"gCTam","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"6m53O":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeLoaderProps", ()=>makeLoaderProps);
parcelHelpers.export(exports, "useLoader", ()=>useLoader);
parcelHelpers.export(exports, "LoaderSlot", ()=>LoaderSlot);
var _vue = require("vue");
// Components
var _indexMjs = require("../components/VProgressLinear/index.mjs"); // Utilities
var _indexMjs1 = require("../util/index.mjs"); // Types
const makeLoaderProps = (0, _indexMjs1.propsFactory)({
    loading: [
        Boolean,
        String
    ]
}, "loader");
function useLoader(props) {
    let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, _indexMjs1.getCurrentInstanceName)();
    const loaderClasses = (0, _vue.computed)(()=>({
            [`${name}--loading`]: props.loading
        }));
    return {
        loaderClasses
    };
}
function LoaderSlot(props, _ref) {
    let { slots } = _ref;
    return (0, _vue.createVNode)("div", {
        "class": `${props.name}__loader`
    }, [
        slots.default?.({
            color: props.color,
            isActive: props.active
        }) || (0, _vue.createVNode)((0, _indexMjs.VProgressLinear), {
            "absolute": props.absolute,
            "active": props.active,
            "color": props.color,
            "height": "2",
            "indeterminate": true
        }, null)
    ]);
}

},{"vue":"gCTam","../components/VProgressLinear/index.mjs":"5Ak1A","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"5Ak1A":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VProgressLinear", ()=>(0, _vprogressLinearMjs.VProgressLinear));
var _vprogressLinearMjs = require("./VProgressLinear.mjs");

},{"./VProgressLinear.mjs":"dIJMN","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"dIJMN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVProgressLinearProps", ()=>makeVProgressLinearProps);
parcelHelpers.export(exports, "VProgressLinear", ()=>VProgressLinear);
var _vue = require("vue");
// Styles
var _vprogressLinearCss = require("./VProgressLinear.css");
// Composables
var _colorMjs = require("../../composables/color.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _intersectionObserverMjs = require("../../composables/intersectionObserver.mjs");
var _localeMjs = require("../../composables/locale.mjs");
var _locationMjs = require("../../composables/location.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs");
var _roundedMjs = require("../../composables/rounded.mjs");
var _tagMjs = require("../../composables/tag.mjs");
var _themeMjs = require("../../composables/theme.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const makeVProgressLinearProps = (0, _indexMjs.propsFactory)({
    absolute: Boolean,
    active: {
        type: Boolean,
        default: true
    },
    bgColor: String,
    bgOpacity: [
        Number,
        String
    ],
    bufferValue: {
        type: [
            Number,
            String
        ],
        default: 0
    },
    bufferColor: String,
    bufferOpacity: [
        Number,
        String
    ],
    clickable: Boolean,
    color: String,
    height: {
        type: [
            Number,
            String
        ],
        default: 4
    },
    indeterminate: Boolean,
    max: {
        type: [
            Number,
            String
        ],
        default: 100
    },
    modelValue: {
        type: [
            Number,
            String
        ],
        default: 0
    },
    opacity: [
        Number,
        String
    ],
    reverse: Boolean,
    stream: Boolean,
    striped: Boolean,
    roundedBar: Boolean,
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _locationMjs.makeLocationProps)({
        location: "top"
    }),
    ...(0, _roundedMjs.makeRoundedProps)(),
    ...(0, _tagMjs.makeTagProps)(),
    ...(0, _themeMjs.makeThemeProps)()
}, "VProgressLinear");
const VProgressLinear = (0, _indexMjs.genericComponent)()({
    name: "VProgressLinear",
    props: makeVProgressLinearProps(),
    emits: {
        "update:modelValue": (value)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const progress = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
        const { isRtl, rtlClasses } = (0, _localeMjs.useRtl)();
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const { locationStyles } = (0, _locationMjs.useLocation)(props);
        const { textColorClasses, textColorStyles } = (0, _colorMjs.useTextColor)(props, "color");
        const { backgroundColorClasses, backgroundColorStyles } = (0, _colorMjs.useBackgroundColor)((0, _vue.computed)(()=>props.bgColor || props.color));
        const { backgroundColorClasses: bufferColorClasses, backgroundColorStyles: bufferColorStyles } = (0, _colorMjs.useBackgroundColor)((0, _vue.computed)(()=>props.bufferColor || props.bgColor || props.color));
        const { backgroundColorClasses: barColorClasses, backgroundColorStyles: barColorStyles } = (0, _colorMjs.useBackgroundColor)(props, "color");
        const { roundedClasses } = (0, _roundedMjs.useRounded)(props);
        const { intersectionRef, isIntersecting } = (0, _intersectionObserverMjs.useIntersectionObserver)();
        const max = (0, _vue.computed)(()=>parseFloat(props.max));
        const height = (0, _vue.computed)(()=>parseFloat(props.height));
        const normalizedBuffer = (0, _vue.computed)(()=>(0, _indexMjs.clamp)(parseFloat(props.bufferValue) / max.value * 100, 0, 100));
        const normalizedValue = (0, _vue.computed)(()=>(0, _indexMjs.clamp)(parseFloat(progress.value) / max.value * 100, 0, 100));
        const isReversed = (0, _vue.computed)(()=>isRtl.value !== props.reverse);
        const transition = (0, _vue.computed)(()=>props.indeterminate ? "fade-transition" : "slide-x-transition");
        const isForcedColorsModeActive = (0, _indexMjs.IN_BROWSER) && window.matchMedia?.("(forced-colors: active)").matches;
        function handleClick(e) {
            if (!intersectionRef.value) return;
            const { left, right, width } = intersectionRef.value.getBoundingClientRect();
            const value = isReversed.value ? width - e.clientX + (right - width) : e.clientX - left;
            progress.value = Math.round(value / width * max.value);
        }
        (0, _indexMjs.useRender)(()=>(0, _vue.createVNode)(props.tag, {
                "ref": intersectionRef,
                "class": [
                    "v-progress-linear",
                    {
                        "v-progress-linear--absolute": props.absolute,
                        "v-progress-linear--active": props.active && isIntersecting.value,
                        "v-progress-linear--reverse": isReversed.value,
                        "v-progress-linear--rounded": props.rounded,
                        "v-progress-linear--rounded-bar": props.roundedBar,
                        "v-progress-linear--striped": props.striped
                    },
                    roundedClasses.value,
                    themeClasses.value,
                    rtlClasses.value,
                    props.class
                ],
                "style": [
                    {
                        bottom: props.location === "bottom" ? 0 : undefined,
                        top: props.location === "top" ? 0 : undefined,
                        height: props.active ? (0, _indexMjs.convertToUnit)(height.value) : 0,
                        "--v-progress-linear-height": (0, _indexMjs.convertToUnit)(height.value),
                        ...props.absolute ? locationStyles.value : {}
                    },
                    props.style
                ],
                "role": "progressbar",
                "aria-hidden": props.active ? "false" : "true",
                "aria-valuemin": "0",
                "aria-valuemax": props.max,
                "aria-valuenow": props.indeterminate ? undefined : normalizedValue.value,
                "onClick": props.clickable && handleClick
            }, {
                default: ()=>[
                        props.stream && (0, _vue.createVNode)("div", {
                            "key": "stream",
                            "class": [
                                "v-progress-linear__stream",
                                textColorClasses.value
                            ],
                            "style": {
                                ...textColorStyles.value,
                                [isReversed.value ? "left" : "right"]: (0, _indexMjs.convertToUnit)(-height.value),
                                borderTop: `${(0, _indexMjs.convertToUnit)(height.value / 2)} dotted`,
                                opacity: parseFloat(props.bufferOpacity),
                                top: `calc(50% - ${(0, _indexMjs.convertToUnit)(height.value / 4)})`,
                                width: (0, _indexMjs.convertToUnit)(100 - normalizedBuffer.value, "%"),
                                "--v-progress-linear-stream-to": (0, _indexMjs.convertToUnit)(height.value * (isReversed.value ? 1 : -1))
                            }
                        }, null),
                        (0, _vue.createVNode)("div", {
                            "class": [
                                "v-progress-linear__background",
                                !isForcedColorsModeActive ? backgroundColorClasses.value : undefined
                            ],
                            "style": [
                                backgroundColorStyles.value,
                                {
                                    opacity: parseFloat(props.bgOpacity),
                                    width: props.stream ? 0 : undefined
                                }
                            ]
                        }, null),
                        (0, _vue.createVNode)("div", {
                            "class": [
                                "v-progress-linear__buffer",
                                !isForcedColorsModeActive ? bufferColorClasses.value : undefined
                            ],
                            "style": [
                                bufferColorStyles.value,
                                {
                                    opacity: parseFloat(props.bufferOpacity),
                                    width: (0, _indexMjs.convertToUnit)(normalizedBuffer.value, "%")
                                }
                            ]
                        }, null),
                        (0, _vue.createVNode)((0, _vue.Transition), {
                            "name": transition.value
                        }, {
                            default: ()=>[
                                    !props.indeterminate ? (0, _vue.createVNode)("div", {
                                        "class": [
                                            "v-progress-linear__determinate",
                                            !isForcedColorsModeActive ? barColorClasses.value : undefined
                                        ],
                                        "style": [
                                            barColorStyles.value,
                                            {
                                                width: (0, _indexMjs.convertToUnit)(normalizedValue.value, "%")
                                            }
                                        ]
                                    }, null) : (0, _vue.createVNode)("div", {
                                        "class": "v-progress-linear__indeterminate"
                                    }, [
                                        [
                                            "long",
                                            "short"
                                        ].map((bar)=>(0, _vue.createVNode)("div", {
                                                "key": bar,
                                                "class": [
                                                    "v-progress-linear__indeterminate",
                                                    bar,
                                                    !isForcedColorsModeActive ? barColorClasses.value : undefined
                                                ],
                                                "style": barColorStyles.value
                                            }, null))
                                    ])
                                ]
                        }),
                        slots.default && (0, _vue.createVNode)("div", {
                            "class": "v-progress-linear__content"
                        }, [
                            slots.default({
                                value: normalizedValue.value,
                                buffer: normalizedBuffer.value
                            })
                        ])
                    ]
            }));
        return {};
    }
});

},{"vue":"gCTam","./VProgressLinear.css":"j1Fm4","../../composables/color.mjs":"6TeQR","../../composables/component.mjs":"4YAxs","../../composables/intersectionObserver.mjs":"lg3v0","../../composables/locale.mjs":"9rJP0","../../composables/location.mjs":"cIK4d","../../composables/proxiedModel.mjs":"huwLk","../../composables/rounded.mjs":"1RfhA","../../composables/tag.mjs":"3LqcC","../../composables/theme.mjs":"c9HGg","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"j1Fm4":[function() {},{}],"cIK4d":[function(require,module,exports) {
// Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeLocationProps", ()=>makeLocationProps);
parcelHelpers.export(exports, "useLocation", ()=>useLocation);
var _localeMjs = require("./locale.mjs"); // Utilities
var _vue = require("vue");
var _indexMjs = require("../util/index.mjs"); // Types
const oppositeMap = {
    center: "center",
    top: "bottom",
    bottom: "top",
    left: "right",
    right: "left"
};
const makeLocationProps = (0, _indexMjs.propsFactory)({
    location: String
}, "location");
function useLocation(props) {
    let opposite = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    let offset = arguments.length > 2 ? arguments[2] : undefined;
    const { isRtl } = (0, _localeMjs.useRtl)();
    const locationStyles = (0, _vue.computed)(()=>{
        if (!props.location) return {};
        const { side, align } = (0, _indexMjs.parseAnchor)(props.location.split(" ").length > 1 ? props.location : `${props.location} center`, isRtl.value);
        function getOffset(side) {
            return offset ? offset(side) : 0;
        }
        const styles = {};
        if (side !== "center") {
            if (opposite) styles[oppositeMap[side]] = `calc(100% - ${getOffset(side)}px)`;
            else styles[side] = 0;
        }
        if (align !== "center") {
            if (opposite) styles[oppositeMap[align]] = `calc(100% - ${getOffset(align)}px)`;
            else styles[align] = 0;
        } else {
            if (side === "center") styles.top = styles.left = "50%";
            else styles[({
                top: "left",
                bottom: "left",
                left: "top",
                right: "top"
            })[side]] = "50%";
            styles.transform = ({
                top: "translateX(-50%)",
                bottom: "translateX(-50%)",
                left: "translateY(-50%)",
                right: "translateY(-50%)",
                center: "translate(-50%, -50%)"
            })[side];
        }
        return styles;
    });
    return {
        locationStyles
    };
}

},{"./locale.mjs":"9rJP0","vue":"gCTam","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"8GbJq":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makePositionProps", ()=>makePositionProps);
parcelHelpers.export(exports, "usePosition", ()=>usePosition);
var _vue = require("vue");
var _indexMjs = require("../util/index.mjs"); // Types
const positionValues = [
    "static",
    "relative",
    "fixed",
    "absolute",
    "sticky"
];
const makePositionProps = (0, _indexMjs.propsFactory)({
    position: {
        type: String,
        validator: /* istanbul ignore next */ (v)=>positionValues.includes(v)
    }
}, "position");
function usePosition(props) {
    let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, _indexMjs.getCurrentInstanceName)();
    const positionClasses = (0, _vue.computed)(()=>{
        return props.position ? `${name}--${props.position}` : undefined;
    });
    return {
        positionClasses
    };
}

},{"vue":"gCTam","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"8IJEw":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useRoute", ()=>useRoute);
parcelHelpers.export(exports, "useRouter", ()=>useRouter);
parcelHelpers.export(exports, "useLink", ()=>useLink);
parcelHelpers.export(exports, "makeRouterProps", ()=>makeRouterProps);
parcelHelpers.export(exports, "useBackButton", ()=>useBackButton);
var _vue = require("vue");
var _indexMjs = require("../util/index.mjs"); // Types
function useRoute() {
    const vm = (0, _indexMjs.getCurrentInstance)("useRoute");
    return (0, _vue.computed)(()=>vm?.proxy?.$route);
}
function useRouter() {
    return (0, _indexMjs.getCurrentInstance)("useRouter")?.proxy?.$router;
}
function useLink(props, attrs) {
    const RouterLink = (0, _vue.resolveDynamicComponent)("RouterLink");
    const isLink = (0, _vue.computed)(()=>!!(props.href || props.to));
    const isClickable = (0, _vue.computed)(()=>{
        return isLink?.value || (0, _indexMjs.hasEvent)(attrs, "click") || (0, _indexMjs.hasEvent)(props, "click");
    });
    if (typeof RouterLink === "string" || !("useLink" in RouterLink)) return {
        isLink,
        isClickable,
        href: (0, _vue.toRef)(props, "href")
    };
    // vue-router useLink `to` prop needs to be reactive and useLink will crash if undefined
    const linkProps = (0, _vue.computed)(()=>({
            ...props,
            to: (0, _vue.toRef)(()=>props.to || "")
        }));
    const routerLink = RouterLink.useLink(linkProps.value);
    // Actual link needs to be undefined when to prop is not used
    const link = (0, _vue.computed)(()=>props.to ? routerLink : undefined);
    const route = useRoute();
    return {
        isLink,
        isClickable,
        route: link.value?.route,
        navigate: link.value?.navigate,
        isActive: (0, _vue.computed)(()=>{
            if (!link.value) return false;
            if (!props.exact) return link.value.isActive?.value ?? false;
            if (!route.value) return link.value.isExactActive?.value ?? false;
            return link.value.isExactActive?.value && (0, _indexMjs.deepEqual)(link.value.route.value.query, route.value.query);
        }),
        href: (0, _vue.computed)(()=>props.to ? link.value?.route.value.href : props.href)
    };
}
const makeRouterProps = (0, _indexMjs.propsFactory)({
    href: String,
    replace: Boolean,
    to: [
        String,
        Object
    ],
    exact: Boolean
}, "router");
let inTransition = false;
function useBackButton(router, cb) {
    let popped = false;
    let removeBefore;
    let removeAfter;
    if (0, _indexMjs.IN_BROWSER) {
        (0, _vue.nextTick)(()=>{
            window.addEventListener("popstate", onPopstate);
            removeBefore = router?.beforeEach((to, from, next)=>{
                if (!inTransition) setTimeout(()=>popped ? cb(next) : next());
                else popped ? cb(next) : next();
                inTransition = true;
            });
            removeAfter = router?.afterEach(()=>{
                inTransition = false;
            });
        });
        (0, _vue.onScopeDispose)(()=>{
            window.removeEventListener("popstate", onPopstate);
            removeBefore?.();
            removeAfter?.();
        });
    }
    function onPopstate(e) {
        if (e.state?.replaced) return;
        popped = true;
        setTimeout(()=>popped = false);
    }
}

},{"vue":"gCTam","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"ezIxH":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// Types
parcelHelpers.export(exports, "useSelectLink", ()=>useSelectLink);
var _vue = require("vue");
function useSelectLink(link, select) {
    (0, _vue.watch)(()=>link.isActive?.value, (isActive)=>{
        if (link.isLink.value && isActive && select) (0, _vue.nextTick)(()=>{
            select(true);
        });
    }, {
        immediate: true
    });
}

},{"vue":"gCTam","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"41ncU":[function(require,module,exports) {
// Styles
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Ripple", ()=>Ripple);
var _vrippleCss = require("./VRipple.css");
// Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const stopSymbol = Symbol("rippleStop");
const DELAY_RIPPLE = 80;
function transform(el, value) {
    el.style.transform = value;
    el.style.webkitTransform = value;
}
function isTouchEvent(e) {
    return e.constructor.name === "TouchEvent";
}
function isKeyboardEvent(e) {
    return e.constructor.name === "KeyboardEvent";
}
const calculate = function(e, el) {
    let value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    let localX = 0;
    let localY = 0;
    if (!isKeyboardEvent(e)) {
        const offset = el.getBoundingClientRect();
        const target = isTouchEvent(e) ? e.touches[e.touches.length - 1] : e;
        localX = target.clientX - offset.left;
        localY = target.clientY - offset.top;
    }
    let radius = 0;
    let scale = 0.3;
    if (el._ripple?.circle) {
        scale = 0.15;
        radius = el.clientWidth / 2;
        radius = value.center ? radius : radius + Math.sqrt((localX - radius) ** 2 + (localY - radius) ** 2) / 4;
    } else radius = Math.sqrt(el.clientWidth ** 2 + el.clientHeight ** 2) / 2;
    const centerX = `${(el.clientWidth - radius * 2) / 2}px`;
    const centerY = `${(el.clientHeight - radius * 2) / 2}px`;
    const x = value.center ? centerX : `${localX - radius}px`;
    const y = value.center ? centerY : `${localY - radius}px`;
    return {
        radius,
        scale,
        x,
        y,
        centerX,
        centerY
    };
};
const ripples = {
    /* eslint-disable max-statements */ show (e, el) {
        let value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
        if (!el?._ripple?.enabled) return;
        const container = document.createElement("span");
        const animation = document.createElement("span");
        container.appendChild(animation);
        container.className = "v-ripple__container";
        if (value.class) container.className += ` ${value.class}`;
        const { radius, scale, x, y, centerX, centerY } = calculate(e, el, value);
        const size = `${radius * 2}px`;
        animation.className = "v-ripple__animation";
        animation.style.width = size;
        animation.style.height = size;
        el.appendChild(container);
        const computed = window.getComputedStyle(el);
        if (computed && computed.position === "static") {
            el.style.position = "relative";
            el.dataset.previousPosition = "static";
        }
        animation.classList.add("v-ripple__animation--enter");
        animation.classList.add("v-ripple__animation--visible");
        transform(animation, `translate(${x}, ${y}) scale3d(${scale},${scale},${scale})`);
        animation.dataset.activated = String(performance.now());
        setTimeout(()=>{
            animation.classList.remove("v-ripple__animation--enter");
            animation.classList.add("v-ripple__animation--in");
            transform(animation, `translate(${centerX}, ${centerY}) scale3d(1,1,1)`);
        }, 0);
    },
    hide (el) {
        if (!el?._ripple?.enabled) return;
        const ripples = el.getElementsByClassName("v-ripple__animation");
        if (ripples.length === 0) return;
        const animation = ripples[ripples.length - 1];
        if (animation.dataset.isHiding) return;
        else animation.dataset.isHiding = "true";
        const diff = performance.now() - Number(animation.dataset.activated);
        const delay = Math.max(250 - diff, 0);
        setTimeout(()=>{
            animation.classList.remove("v-ripple__animation--in");
            animation.classList.add("v-ripple__animation--out");
            setTimeout(()=>{
                const ripples = el.getElementsByClassName("v-ripple__animation");
                if (ripples.length === 1 && el.dataset.previousPosition) {
                    el.style.position = el.dataset.previousPosition;
                    delete el.dataset.previousPosition;
                }
                if (animation.parentNode?.parentNode === el) el.removeChild(animation.parentNode);
            }, 300);
        }, delay);
    }
};
function isRippleEnabled(value) {
    return typeof value === "undefined" || !!value;
}
function rippleShow(e) {
    const value = {};
    const element = e.currentTarget;
    if (!element?._ripple || element._ripple.touched || e[stopSymbol]) return;
    // Don't allow the event to trigger ripples on any other elements
    e[stopSymbol] = true;
    if (isTouchEvent(e)) {
        element._ripple.touched = true;
        element._ripple.isTouch = true;
    } else {
        // It's possible for touch events to fire
        // as mouse events on Android/iOS, this
        // will skip the event call if it has
        // already been registered as touch
        if (element._ripple.isTouch) return;
    }
    value.center = element._ripple.centered || isKeyboardEvent(e);
    if (element._ripple.class) value.class = element._ripple.class;
    if (isTouchEvent(e)) {
        // already queued that shows or hides the ripple
        if (element._ripple.showTimerCommit) return;
        element._ripple.showTimerCommit = ()=>{
            ripples.show(e, element, value);
        };
        element._ripple.showTimer = window.setTimeout(()=>{
            if (element?._ripple?.showTimerCommit) {
                element._ripple.showTimerCommit();
                element._ripple.showTimerCommit = null;
            }
        }, DELAY_RIPPLE);
    } else ripples.show(e, element, value);
}
function rippleStop(e) {
    e[stopSymbol] = true;
}
function rippleHide(e) {
    const element = e.currentTarget;
    if (!element?._ripple) return;
    window.clearTimeout(element._ripple.showTimer);
    // The touch interaction occurs before the show timer is triggered.
    // We still want to show ripple effect.
    if (e.type === "touchend" && element._ripple.showTimerCommit) {
        element._ripple.showTimerCommit();
        element._ripple.showTimerCommit = null;
        // re-queue ripple hiding
        element._ripple.showTimer = window.setTimeout(()=>{
            rippleHide(e);
        });
        return;
    }
    window.setTimeout(()=>{
        if (element._ripple) element._ripple.touched = false;
    });
    ripples.hide(element);
}
function rippleCancelShow(e) {
    const element = e.currentTarget;
    if (!element?._ripple) return;
    if (element._ripple.showTimerCommit) element._ripple.showTimerCommit = null;
    window.clearTimeout(element._ripple.showTimer);
}
let keyboardRipple = false;
function keyboardRippleShow(e) {
    if (!keyboardRipple && (e.keyCode === (0, _indexMjs.keyCodes).enter || e.keyCode === (0, _indexMjs.keyCodes).space)) {
        keyboardRipple = true;
        rippleShow(e);
    }
}
function keyboardRippleHide(e) {
    keyboardRipple = false;
    rippleHide(e);
}
function focusRippleHide(e) {
    if (keyboardRipple) {
        keyboardRipple = false;
        rippleHide(e);
    }
}
function updateRipple(el, binding, wasEnabled) {
    const { value, modifiers } = binding;
    const enabled = isRippleEnabled(value);
    if (!enabled) ripples.hide(el);
    el._ripple = el._ripple ?? {};
    el._ripple.enabled = enabled;
    el._ripple.centered = modifiers.center;
    el._ripple.circle = modifiers.circle;
    if ((0, _indexMjs.isObject)(value) && value.class) el._ripple.class = value.class;
    if (enabled && !wasEnabled) {
        if (modifiers.stop) {
            el.addEventListener("touchstart", rippleStop, {
                passive: true
            });
            el.addEventListener("mousedown", rippleStop);
            return;
        }
        el.addEventListener("touchstart", rippleShow, {
            passive: true
        });
        el.addEventListener("touchend", rippleHide, {
            passive: true
        });
        el.addEventListener("touchmove", rippleCancelShow, {
            passive: true
        });
        el.addEventListener("touchcancel", rippleHide);
        el.addEventListener("mousedown", rippleShow);
        el.addEventListener("mouseup", rippleHide);
        el.addEventListener("mouseleave", rippleHide);
        el.addEventListener("keydown", keyboardRippleShow);
        el.addEventListener("keyup", keyboardRippleHide);
        el.addEventListener("blur", focusRippleHide);
        // Anchor tags can be dragged, causes other hides to fail - #1537
        el.addEventListener("dragstart", rippleHide, {
            passive: true
        });
    } else if (!enabled && wasEnabled) removeListeners(el);
}
function removeListeners(el) {
    el.removeEventListener("mousedown", rippleShow);
    el.removeEventListener("touchstart", rippleShow);
    el.removeEventListener("touchend", rippleHide);
    el.removeEventListener("touchmove", rippleCancelShow);
    el.removeEventListener("touchcancel", rippleHide);
    el.removeEventListener("mouseup", rippleHide);
    el.removeEventListener("mouseleave", rippleHide);
    el.removeEventListener("keydown", keyboardRippleShow);
    el.removeEventListener("keyup", keyboardRippleHide);
    el.removeEventListener("dragstart", rippleHide);
    el.removeEventListener("blur", focusRippleHide);
}
function mounted(el, binding) {
    updateRipple(el, binding, false);
}
function unmounted(el) {
    delete el._ripple;
    removeListeners(el);
}
function updated(el, binding) {
    if (binding.value === binding.oldValue) return;
    const wasEnabled = isRippleEnabled(binding.oldValue);
    updateRipple(el, binding, wasEnabled);
}
const Ripple = {
    mounted,
    unmounted,
    updated
};
exports.default = Ripple;

},{"./VRipple.css":"fTdR1","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"fTdR1":[function() {},{}],"l6tu3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VAppBarTitle", ()=>VAppBarTitle);
var _vue = require("vue");
// Components
var _vtoolbarTitleMjs = require("../VToolbar/VToolbarTitle.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const VAppBarTitle = (0, _indexMjs.genericComponent)()({
    name: "VAppBarTitle",
    props: (0, _vtoolbarTitleMjs.makeVToolbarTitleProps)(),
    setup (props, _ref) {
        let { slots } = _ref;
        (0, _indexMjs.useRender)(()=>(0, _vue.createVNode)((0, _vtoolbarTitleMjs.VToolbarTitle), (0, _vue.mergeProps)(props, {
                "class": "v-app-bar-title"
            }), slots));
        return {};
    }
});

},{"vue":"gCTam","../VToolbar/VToolbarTitle.mjs":"iwmPn","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"4vhw7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VAlert", ()=>(0, _valertMjs.VAlert));
parcelHelpers.export(exports, "VAlertTitle", ()=>(0, _valertTitleMjs.VAlertTitle));
var _valertMjs = require("./VAlert.mjs");
var _valertTitleMjs = require("./VAlertTitle.mjs");

},{"./VAlert.mjs":"k9tKt","./VAlertTitle.mjs":"8tlkf","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"k9tKt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVAlertProps", ()=>makeVAlertProps);
parcelHelpers.export(exports, "VAlert", ()=>VAlert);
var _vue = require("vue");
// Styles
var _valertCss = require("./VAlert.css");
// Components
var _valertTitleMjs = require("./VAlertTitle.mjs");
var _indexMjs = require("../VBtn/index.mjs");
var _indexMjs1 = require("../VDefaultsProvider/index.mjs");
var _indexMjs2 = require("../VIcon/index.mjs"); // Composables
var _colorMjs = require("../../composables/color.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _densityMjs = require("../../composables/density.mjs");
var _dimensionsMjs = require("../../composables/dimensions.mjs");
var _elevationMjs = require("../../composables/elevation.mjs");
var _iconsMjs = require("../../composables/icons.mjs");
var _localeMjs = require("../../composables/locale.mjs");
var _locationMjs = require("../../composables/location.mjs");
var _positionMjs = require("../../composables/position.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs");
var _roundedMjs = require("../../composables/rounded.mjs");
var _tagMjs = require("../../composables/tag.mjs");
var _themeMjs = require("../../composables/theme.mjs");
var _variantMjs = require("../../composables/variant.mjs"); // Utilities
var _indexMjs3 = require("../../util/index.mjs"); // Types
const allowedTypes = [
    "success",
    "info",
    "warning",
    "error"
];
const makeVAlertProps = (0, _indexMjs3.propsFactory)({
    border: {
        type: [
            Boolean,
            String
        ],
        validator: (val)=>{
            return typeof val === "boolean" || [
                "top",
                "end",
                "bottom",
                "start"
            ].includes(val);
        }
    },
    borderColor: String,
    closable: Boolean,
    closeIcon: {
        type: (0, _iconsMjs.IconValue),
        default: "$close"
    },
    closeLabel: {
        type: String,
        default: "$vuetify.close"
    },
    icon: {
        type: [
            Boolean,
            String,
            Function,
            Object
        ],
        default: null
    },
    modelValue: {
        type: Boolean,
        default: true
    },
    prominent: Boolean,
    title: String,
    text: String,
    type: {
        type: String,
        validator: (val)=>allowedTypes.includes(val)
    },
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _densityMjs.makeDensityProps)(),
    ...(0, _dimensionsMjs.makeDimensionProps)(),
    ...(0, _elevationMjs.makeElevationProps)(),
    ...(0, _locationMjs.makeLocationProps)(),
    ...(0, _positionMjs.makePositionProps)(),
    ...(0, _roundedMjs.makeRoundedProps)(),
    ...(0, _tagMjs.makeTagProps)(),
    ...(0, _themeMjs.makeThemeProps)(),
    ...(0, _variantMjs.makeVariantProps)({
        variant: "flat"
    })
}, "VAlert");
const VAlert = (0, _indexMjs3.genericComponent)()({
    name: "VAlert",
    props: makeVAlertProps(),
    emits: {
        "click:close": (e)=>true,
        "update:modelValue": (value)=>true
    },
    setup (props, _ref) {
        let { emit, slots } = _ref;
        const isActive = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
        const icon = (0, _vue.computed)(()=>{
            if (props.icon === false) return undefined;
            if (!props.type) return props.icon;
            return props.icon ?? `$${props.type}`;
        });
        const variantProps = (0, _vue.computed)(()=>({
                color: props.color ?? props.type,
                variant: props.variant
            }));
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const { colorClasses, colorStyles, variantClasses } = (0, _variantMjs.useVariant)(variantProps);
        const { densityClasses } = (0, _densityMjs.useDensity)(props);
        const { dimensionStyles } = (0, _dimensionsMjs.useDimension)(props);
        const { elevationClasses } = (0, _elevationMjs.useElevation)(props);
        const { locationStyles } = (0, _locationMjs.useLocation)(props);
        const { positionClasses } = (0, _positionMjs.usePosition)(props);
        const { roundedClasses } = (0, _roundedMjs.useRounded)(props);
        const { textColorClasses, textColorStyles } = (0, _colorMjs.useTextColor)((0, _vue.toRef)(props, "borderColor"));
        const { t } = (0, _localeMjs.useLocale)();
        const closeProps = (0, _vue.computed)(()=>({
                "aria-label": t(props.closeLabel),
                onClick (e) {
                    isActive.value = false;
                    emit("click:close", e);
                }
            }));
        return ()=>{
            const hasPrepend = !!(slots.prepend || icon.value);
            const hasTitle = !!(slots.title || props.title);
            const hasClose = !!(slots.close || props.closable);
            return isActive.value && (0, _vue.createVNode)(props.tag, {
                "class": [
                    "v-alert",
                    props.border && {
                        "v-alert--border": !!props.border,
                        [`v-alert--border-${props.border === true ? "start" : props.border}`]: true
                    },
                    {
                        "v-alert--prominent": props.prominent
                    },
                    themeClasses.value,
                    colorClasses.value,
                    densityClasses.value,
                    elevationClasses.value,
                    positionClasses.value,
                    roundedClasses.value,
                    variantClasses.value,
                    props.class
                ],
                "style": [
                    colorStyles.value,
                    dimensionStyles.value,
                    locationStyles.value,
                    props.style
                ],
                "role": "alert"
            }, {
                default: ()=>[
                        (0, _variantMjs.genOverlays)(false, "v-alert"),
                        props.border && (0, _vue.createVNode)("div", {
                            "key": "border",
                            "class": [
                                "v-alert__border",
                                textColorClasses.value
                            ],
                            "style": textColorStyles.value
                        }, null),
                        hasPrepend && (0, _vue.createVNode)("div", {
                            "key": "prepend",
                            "class": "v-alert__prepend"
                        }, [
                            !slots.prepend ? (0, _vue.createVNode)((0, _indexMjs2.VIcon), {
                                "key": "prepend-icon",
                                "density": props.density,
                                "icon": icon.value,
                                "size": props.prominent ? 44 : 28
                            }, null) : (0, _vue.createVNode)((0, _indexMjs1.VDefaultsProvider), {
                                "key": "prepend-defaults",
                                "disabled": !icon.value,
                                "defaults": {
                                    VIcon: {
                                        density: props.density,
                                        icon: icon.value,
                                        size: props.prominent ? 44 : 28
                                    }
                                }
                            }, slots.prepend)
                        ]),
                        (0, _vue.createVNode)("div", {
                            "class": "v-alert__content"
                        }, [
                            hasTitle && (0, _vue.createVNode)((0, _valertTitleMjs.VAlertTitle), {
                                "key": "title"
                            }, {
                                default: ()=>[
                                        slots.title?.() ?? props.title
                                    ]
                            }),
                            slots.text?.() ?? props.text,
                            slots.default?.()
                        ]),
                        slots.append && (0, _vue.createVNode)("div", {
                            "key": "append",
                            "class": "v-alert__append"
                        }, [
                            slots.append()
                        ]),
                        hasClose && (0, _vue.createVNode)("div", {
                            "key": "close",
                            "class": "v-alert__close"
                        }, [
                            !slots.close ? (0, _vue.createVNode)((0, _indexMjs.VBtn), (0, _vue.mergeProps)({
                                "key": "close-btn",
                                "icon": props.closeIcon,
                                "size": "x-small",
                                "variant": "text"
                            }, closeProps.value), null) : (0, _vue.createVNode)((0, _indexMjs1.VDefaultsProvider), {
                                "key": "close-defaults",
                                "defaults": {
                                    VBtn: {
                                        icon: props.closeIcon,
                                        size: "x-small",
                                        variant: "text"
                                    }
                                }
                            }, {
                                default: ()=>[
                                        slots.close?.({
                                            props: closeProps.value
                                        })
                                    ]
                            })
                        ])
                    ]
            });
        };
    }
});

},{"vue":"gCTam","./VAlert.css":"dbaBD","./VAlertTitle.mjs":"8tlkf","../VBtn/index.mjs":"g9s2K","../VDefaultsProvider/index.mjs":"eFFvH","../VIcon/index.mjs":"5Yjjr","../../composables/color.mjs":"6TeQR","../../composables/component.mjs":"4YAxs","../../composables/density.mjs":"kOsEB","../../composables/dimensions.mjs":"daVmy","../../composables/elevation.mjs":"aNIiI","../../composables/icons.mjs":"g4kLv","../../composables/locale.mjs":"9rJP0","../../composables/location.mjs":"cIK4d","../../composables/position.mjs":"8GbJq","../../composables/proxiedModel.mjs":"huwLk","../../composables/rounded.mjs":"1RfhA","../../composables/tag.mjs":"3LqcC","../../composables/theme.mjs":"c9HGg","../../composables/variant.mjs":"ivQo4","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"dbaBD":[function() {},{}],"8tlkf":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VAlertTitle", ()=>VAlertTitle);
var _indexMjs = require("../../util/index.mjs");
const VAlertTitle = (0, _indexMjs.createSimpleFunctional)("v-alert-title");

},{"../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"g9s2K":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VBtn", ()=>(0, _vbtnMjs.VBtn));
var _vbtnMjs = require("./VBtn.mjs");

},{"./VBtn.mjs":"2fut1","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"02mAI":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VAutocomplete", ()=>(0, _vautocompleteMjs.VAutocomplete));
var _vautocompleteMjs = require("./VAutocomplete.mjs");

},{"./VAutocomplete.mjs":"f5h6Z","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"f5h6Z":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVAutocompleteProps", ()=>makeVAutocompleteProps);
parcelHelpers.export(exports, "VAutocomplete", ()=>VAutocomplete);
var _vue = require("vue");
// Styles
var _vautocompleteCss = require("./VAutocomplete.css");
// Components
var _indexMjs = require("../VAvatar/index.mjs");
var _indexMjs1 = require("../VCheckbox/index.mjs");
var _indexMjs2 = require("../VChip/index.mjs");
var _indexMjs3 = require("../VDefaultsProvider/index.mjs");
var _indexMjs4 = require("../VIcon/index.mjs");
var _indexMjs5 = require("../VList/index.mjs");
var _indexMjs6 = require("../VMenu/index.mjs");
var _vselectMjs = require("../VSelect/VSelect.mjs");
var _vtextFieldMjs = require("../VTextField/VTextField.mjs");
var _indexMjs7 = require("../VVirtualScroll/index.mjs"); // Composables
var _useScrollingMjs = require("../VSelect/useScrolling.mjs");
var _colorMjs = require("../../composables/color.mjs");
var _filterMjs = require("../../composables/filter.mjs");
var _formMjs = require("../../composables/form.mjs");
var _forwardRefsMjs = require("../../composables/forwardRefs.mjs");
var _listItemsMjs = require("../../composables/list-items.mjs");
var _localeMjs = require("../../composables/locale.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs");
var _transitionMjs = require("../../composables/transition.mjs"); // Utilities
var _indexMjs8 = require("../../util/index.mjs"); // Types
function highlightResult(text, matches, length) {
    if (matches == null) return text;
    if (Array.isArray(matches)) throw new Error("Multiple matches is not implemented");
    return typeof matches === "number" && ~matches ? (0, _vue.createVNode)((0, _vue.Fragment), null, [
        (0, _vue.createVNode)("span", {
            "class": "v-autocomplete__unmask"
        }, [
            text.substr(0, matches)
        ]),
        (0, _vue.createVNode)("span", {
            "class": "v-autocomplete__mask"
        }, [
            text.substr(matches, length)
        ]),
        (0, _vue.createVNode)("span", {
            "class": "v-autocomplete__unmask"
        }, [
            text.substr(matches + length)
        ])
    ]) : text;
}
const makeVAutocompleteProps = (0, _indexMjs8.propsFactory)({
    autoSelectFirst: {
        type: [
            Boolean,
            String
        ]
    },
    clearOnSelect: Boolean,
    search: String,
    ...(0, _filterMjs.makeFilterProps)({
        filterKeys: [
            "title"
        ]
    }),
    ...(0, _vselectMjs.makeSelectProps)(),
    ...(0, _indexMjs8.omit)((0, _vtextFieldMjs.makeVTextFieldProps)({
        modelValue: null,
        role: "combobox"
    }), [
        "validationValue",
        "dirty",
        "appendInnerIcon"
    ]),
    ...(0, _transitionMjs.makeTransitionProps)({
        transition: false
    })
}, "VAutocomplete");
const VAutocomplete = (0, _indexMjs8.genericComponent)()({
    name: "VAutocomplete",
    props: makeVAutocompleteProps(),
    emits: {
        "update:focused": (focused)=>true,
        "update:search": (value)=>true,
        "update:modelValue": (value)=>true,
        "update:menu": (value)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const { t } = (0, _localeMjs.useLocale)();
        const vTextFieldRef = (0, _vue.ref)();
        const isFocused = (0, _vue.shallowRef)(false);
        const isPristine = (0, _vue.shallowRef)(true);
        const listHasFocus = (0, _vue.shallowRef)(false);
        const vMenuRef = (0, _vue.ref)();
        const vVirtualScrollRef = (0, _vue.ref)();
        const _menu = (0, _proxiedModelMjs.useProxiedModel)(props, "menu");
        const menu = (0, _vue.computed)({
            get: ()=>_menu.value,
            set: (v)=>{
                if (_menu.value && !v && vMenuRef.value?.\u03A8openChildren.size) return;
                _menu.value = v;
            }
        });
        const selectionIndex = (0, _vue.shallowRef)(-1);
        const color = (0, _vue.computed)(()=>vTextFieldRef.value?.color);
        const label = (0, _vue.computed)(()=>menu.value ? props.closeText : props.openText);
        const { items, transformIn, transformOut } = (0, _listItemsMjs.useItems)(props);
        const { textColorClasses, textColorStyles } = (0, _colorMjs.useTextColor)(color);
        const search = (0, _proxiedModelMjs.useProxiedModel)(props, "search", "");
        const model = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue", [], (v)=>transformIn(v === null ? [
                null
            ] : (0, _indexMjs8.wrapInArray)(v)), (v)=>{
            const transformed = transformOut(v);
            return props.multiple ? transformed : transformed[0] ?? null;
        });
        const counterValue = (0, _vue.computed)(()=>{
            return typeof props.counterValue === "function" ? props.counterValue(model.value) : typeof props.counterValue === "number" ? props.counterValue : model.value.length;
        });
        const form = (0, _formMjs.useForm)();
        const { filteredItems, getMatches } = (0, _filterMjs.useFilter)(props, items, ()=>isPristine.value ? "" : search.value);
        const displayItems = (0, _vue.computed)(()=>{
            if (props.hideSelected) return filteredItems.value.filter((filteredItem)=>!model.value.some((s)=>s.value === filteredItem.value));
            return filteredItems.value;
        });
        const hasChips = (0, _vue.computed)(()=>!!(props.chips || slots.chip));
        const hasSelectionSlot = (0, _vue.computed)(()=>hasChips.value || !!slots.selection);
        const selectedValues = (0, _vue.computed)(()=>model.value.map((selection)=>selection.props.value));
        const highlightFirst = (0, _vue.computed)(()=>{
            const selectFirst = props.autoSelectFirst === true || props.autoSelectFirst === "exact" && search.value === displayItems.value[0]?.title;
            return selectFirst && displayItems.value.length > 0 && !isPristine.value && !listHasFocus.value;
        });
        const menuDisabled = (0, _vue.computed)(()=>props.hideNoData && !displayItems.value.length || props.readonly || form?.isReadonly.value);
        const listRef = (0, _vue.ref)();
        const listEvents = (0, _useScrollingMjs.useScrolling)(listRef, vTextFieldRef);
        function onClear(e) {
            if (props.openOnClear) menu.value = true;
            search.value = "";
        }
        function onMousedownControl() {
            if (menuDisabled.value) return;
            menu.value = true;
        }
        function onMousedownMenuIcon(e) {
            if (menuDisabled.value) return;
            if (isFocused.value) {
                e.preventDefault();
                e.stopPropagation();
            }
            menu.value = !menu.value;
        }
        function onListKeydown(e) {
            if ((0, _indexMjs8.checkPrintable)(e)) vTextFieldRef.value?.focus();
        }
        function onKeydown(e) {
            if (props.readonly || form?.isReadonly.value) return;
            const selectionStart = vTextFieldRef.value.selectionStart;
            const length = model.value.length;
            if (selectionIndex.value > -1 || [
                "Enter",
                "ArrowDown",
                "ArrowUp"
            ].includes(e.key)) e.preventDefault();
            if ([
                "Enter",
                "ArrowDown"
            ].includes(e.key)) menu.value = true;
            if ([
                "Escape"
            ].includes(e.key)) menu.value = false;
            if (highlightFirst.value && [
                "Enter",
                "Tab"
            ].includes(e.key) && !model.value.some((_ref2)=>{
                let { value } = _ref2;
                return value === displayItems.value[0].value;
            })) select(displayItems.value[0]);
            if (e.key === "ArrowDown" && highlightFirst.value) listRef.value?.focus("next");
            if ([
                "Backspace",
                "Delete"
            ].includes(e.key)) {
                if (!props.multiple && hasSelectionSlot.value && model.value.length > 0 && !search.value) return select(model.value[0], false);
                if (~selectionIndex.value) {
                    const originalSelectionIndex = selectionIndex.value;
                    select(model.value[selectionIndex.value], false);
                    selectionIndex.value = originalSelectionIndex >= length - 1 ? length - 2 : originalSelectionIndex;
                } else if (e.key === "Backspace" && !search.value) selectionIndex.value = length - 1;
            }
            if (!props.multiple) return;
            if (e.key === "ArrowLeft") {
                if (selectionIndex.value < 0 && selectionStart > 0) return;
                const prev = selectionIndex.value > -1 ? selectionIndex.value - 1 : length - 1;
                if (model.value[prev]) selectionIndex.value = prev;
                else {
                    selectionIndex.value = -1;
                    vTextFieldRef.value.setSelectionRange(search.value?.length, search.value?.length);
                }
            }
            if (e.key === "ArrowRight") {
                if (selectionIndex.value < 0) return;
                const next = selectionIndex.value + 1;
                if (model.value[next]) selectionIndex.value = next;
                else {
                    selectionIndex.value = -1;
                    vTextFieldRef.value.setSelectionRange(0, 0);
                }
            }
        }
        function onChange(e) {
            if ((0, _indexMjs8.matchesSelector)(vTextFieldRef.value, ":autofill") || (0, _indexMjs8.matchesSelector)(vTextFieldRef.value, ":-webkit-autofill")) {
                const item = items.value.find((item)=>item.title === e.target.value);
                if (item) select(item);
            }
        }
        function onAfterEnter() {
            if (props.eager) vVirtualScrollRef.value?.calculateVisibleItems();
        }
        function onAfterLeave() {
            if (isFocused.value) {
                isPristine.value = true;
                vTextFieldRef.value?.focus();
            }
        }
        function onFocusin(e) {
            isFocused.value = true;
            setTimeout(()=>{
                listHasFocus.value = true;
            });
        }
        function onFocusout(e) {
            listHasFocus.value = false;
        }
        function onUpdateModelValue(v) {
            if (v == null || v === "" && !props.multiple && !hasSelectionSlot.value) model.value = [];
        }
        const isSelecting = (0, _vue.shallowRef)(false);
        /** @param set - null means toggle */ function select(item) {
            let set = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
            if (!item || item.props.disabled) return;
            if (props.multiple) {
                const index = model.value.findIndex((selection)=>props.valueComparator(selection.value, item.value));
                const add = set == null ? !~index : set;
                if (~index) {
                    const value = add ? [
                        ...model.value,
                        item
                    ] : [
                        ...model.value
                    ];
                    value.splice(index, 1);
                    model.value = value;
                } else if (add) model.value = [
                    ...model.value,
                    item
                ];
                if (props.clearOnSelect) search.value = "";
            } else {
                const add = set !== false;
                model.value = add ? [
                    item
                ] : [];
                search.value = add && !hasSelectionSlot.value ? item.title : "";
                // watch for search watcher to trigger
                (0, _vue.nextTick)(()=>{
                    menu.value = false;
                    isPristine.value = true;
                });
            }
        }
        (0, _vue.watch)(isFocused, (val, oldVal)=>{
            if (val === oldVal) return;
            if (val) {
                isSelecting.value = true;
                search.value = props.multiple || hasSelectionSlot.value ? "" : String(model.value.at(-1)?.props.title ?? "");
                isPristine.value = true;
                (0, _vue.nextTick)(()=>isSelecting.value = false);
            } else {
                if (!props.multiple && search.value == null) model.value = [];
                menu.value = false;
                if (!model.value.some((_ref3)=>{
                    let { title } = _ref3;
                    return title === search.value;
                })) search.value = "";
                selectionIndex.value = -1;
            }
        });
        (0, _vue.watch)(search, (val)=>{
            if (!isFocused.value || isSelecting.value) return;
            if (val) menu.value = true;
            isPristine.value = !val;
        });
        (0, _vue.watch)(menu, ()=>{
            if (!props.hideSelected && menu.value && model.value.length) {
                const index = displayItems.value.findIndex((item)=>model.value.some((s)=>item.value === s.value));
                (0, _indexMjs8.IN_BROWSER) && window.requestAnimationFrame(()=>{
                    index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index);
                });
            }
        });
        (0, _vue.watch)(()=>props.items, (newVal, oldVal)=>{
            if (menu.value) return;
            if (isFocused.value && !oldVal.length && newVal.length) menu.value = true;
        });
        (0, _indexMjs8.useRender)(()=>{
            const hasList = !!(!props.hideNoData || displayItems.value.length || slots["prepend-item"] || slots["append-item"] || slots["no-data"]);
            const isDirty = model.value.length > 0;
            const textFieldProps = (0, _vtextFieldMjs.VTextField).filterProps(props);
            return (0, _vue.createVNode)((0, _vtextFieldMjs.VTextField), (0, _vue.mergeProps)({
                "ref": vTextFieldRef
            }, textFieldProps, {
                "modelValue": search.value,
                "onUpdate:modelValue": [
                    ($event)=>search.value = $event,
                    onUpdateModelValue
                ],
                "focused": isFocused.value,
                "onUpdate:focused": ($event)=>isFocused.value = $event,
                "validationValue": model.externalValue,
                "counterValue": counterValue.value,
                "dirty": isDirty,
                "onChange": onChange,
                "class": [
                    "v-autocomplete",
                    `v-autocomplete--${props.multiple ? "multiple" : "single"}`,
                    {
                        "v-autocomplete--active-menu": menu.value,
                        "v-autocomplete--chips": !!props.chips,
                        "v-autocomplete--selection-slot": !!hasSelectionSlot.value,
                        "v-autocomplete--selecting-index": selectionIndex.value > -1
                    },
                    props.class
                ],
                "style": props.style,
                "readonly": props.readonly,
                "placeholder": isDirty ? undefined : props.placeholder,
                "onClick:clear": onClear,
                "onMousedown:control": onMousedownControl,
                "onKeydown": onKeydown
            }), {
                ...slots,
                default: ()=>(0, _vue.createVNode)((0, _vue.Fragment), null, [
                        (0, _vue.createVNode)((0, _indexMjs6.VMenu), (0, _vue.mergeProps)({
                            "ref": vMenuRef,
                            "modelValue": menu.value,
                            "onUpdate:modelValue": ($event)=>menu.value = $event,
                            "activator": "parent",
                            "contentClass": "v-autocomplete__content",
                            "disabled": menuDisabled.value,
                            "eager": props.eager,
                            "maxHeight": 310,
                            "openOnClick": false,
                            "closeOnContentClick": false,
                            "transition": props.transition,
                            "onAfterEnter": onAfterEnter,
                            "onAfterLeave": onAfterLeave
                        }, props.menuProps), {
                            default: ()=>[
                                    hasList && (0, _vue.createVNode)((0, _indexMjs5.VList), (0, _vue.mergeProps)({
                                        "ref": listRef,
                                        "selected": selectedValues.value,
                                        "selectStrategy": props.multiple ? "independent" : "single-independent",
                                        "onMousedown": (e)=>e.preventDefault(),
                                        "onKeydown": onListKeydown,
                                        "onFocusin": onFocusin,
                                        "onFocusout": onFocusout,
                                        "tabindex": "-1",
                                        "aria-live": "polite",
                                        "color": props.itemColor ?? props.color
                                    }, listEvents, props.listProps), {
                                        default: ()=>[
                                                slots["prepend-item"]?.(),
                                                !displayItems.value.length && !props.hideNoData && (slots["no-data"]?.() ?? (0, _vue.createVNode)((0, _indexMjs5.VListItem), {
                                                    "title": t(props.noDataText)
                                                }, null)),
                                                (0, _vue.createVNode)((0, _indexMjs7.VVirtualScroll), {
                                                    "ref": vVirtualScrollRef,
                                                    "renderless": true,
                                                    "items": displayItems.value
                                                }, {
                                                    default: (_ref4)=>{
                                                        let { item, index, itemRef } = _ref4;
                                                        const itemProps = (0, _vue.mergeProps)(item.props, {
                                                            ref: itemRef,
                                                            key: index,
                                                            active: highlightFirst.value && index === 0 ? true : undefined,
                                                            onClick: ()=>select(item, null)
                                                        });
                                                        return slots.item?.({
                                                            item,
                                                            index,
                                                            props: itemProps
                                                        }) ?? (0, _vue.createVNode)((0, _indexMjs5.VListItem), (0, _vue.mergeProps)(itemProps, {
                                                            "role": "option"
                                                        }), {
                                                            prepend: (_ref5)=>{
                                                                let { isSelected } = _ref5;
                                                                return (0, _vue.createVNode)((0, _vue.Fragment), null, [
                                                                    props.multiple && !props.hideSelected ? (0, _vue.createVNode)((0, _indexMjs1.VCheckboxBtn), {
                                                                        "key": item.value,
                                                                        "modelValue": isSelected,
                                                                        "ripple": false,
                                                                        "tabindex": "-1"
                                                                    }, null) : undefined,
                                                                    item.props.prependAvatar && (0, _vue.createVNode)((0, _indexMjs.VAvatar), {
                                                                        "image": item.props.prependAvatar
                                                                    }, null),
                                                                    item.props.prependIcon && (0, _vue.createVNode)((0, _indexMjs4.VIcon), {
                                                                        "icon": item.props.prependIcon
                                                                    }, null)
                                                                ]);
                                                            },
                                                            title: ()=>{
                                                                return isPristine.value ? item.title : highlightResult(item.title, getMatches(item)?.title, search.value?.length ?? 0);
                                                            }
                                                        });
                                                    }
                                                }),
                                                slots["append-item"]?.()
                                            ]
                                    })
                                ]
                        }),
                        model.value.map((item, index)=>{
                            function onChipClose(e) {
                                e.stopPropagation();
                                e.preventDefault();
                                select(item, false);
                            }
                            const slotProps = {
                                "onClick:close": onChipClose,
                                onKeydown (e) {
                                    if (e.key !== "Enter" && e.key !== " ") return;
                                    e.preventDefault();
                                    e.stopPropagation();
                                    onChipClose(e);
                                },
                                onMousedown (e) {
                                    e.preventDefault();
                                    e.stopPropagation();
                                },
                                modelValue: true,
                                "onUpdate:modelValue": undefined
                            };
                            const hasSlot = hasChips.value ? !!slots.chip : !!slots.selection;
                            const slotContent = hasSlot ? (0, _indexMjs8.ensureValidVNode)(hasChips.value ? slots.chip({
                                item,
                                index,
                                props: slotProps
                            }) : slots.selection({
                                item,
                                index
                            })) : undefined;
                            if (hasSlot && !slotContent) return undefined;
                            return (0, _vue.createVNode)("div", {
                                "key": item.value,
                                "class": [
                                    "v-autocomplete__selection",
                                    index === selectionIndex.value && [
                                        "v-autocomplete__selection--selected",
                                        textColorClasses.value
                                    ]
                                ],
                                "style": index === selectionIndex.value ? textColorStyles.value : {}
                            }, [
                                hasChips.value ? !slots.chip ? (0, _vue.createVNode)((0, _indexMjs2.VChip), (0, _vue.mergeProps)({
                                    "key": "chip",
                                    "closable": props.closableChips,
                                    "size": "small",
                                    "text": item.title,
                                    "disabled": item.props.disabled
                                }, slotProps), null) : (0, _vue.createVNode)((0, _indexMjs3.VDefaultsProvider), {
                                    "key": "chip-defaults",
                                    "defaults": {
                                        VChip: {
                                            closable: props.closableChips,
                                            size: "small",
                                            text: item.title
                                        }
                                    }
                                }, {
                                    default: ()=>[
                                            slotContent
                                        ]
                                }) : slotContent ?? (0, _vue.createVNode)("span", {
                                    "class": "v-autocomplete__selection-text"
                                }, [
                                    item.title,
                                    props.multiple && index < model.value.length - 1 && (0, _vue.createVNode)("span", {
                                        "class": "v-autocomplete__selection-comma"
                                    }, [
                                        (0, _vue.createTextVNode)(",")
                                    ])
                                ])
                            ]);
                        })
                    ]),
                "append-inner": function() {
                    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
                    return (0, _vue.createVNode)((0, _vue.Fragment), null, [
                        slots["append-inner"]?.(...args),
                        props.menuIcon ? (0, _vue.createVNode)((0, _indexMjs4.VIcon), {
                            "class": "v-autocomplete__menu-icon",
                            "icon": props.menuIcon,
                            "onMousedown": onMousedownMenuIcon,
                            "onClick": (0, _indexMjs8.noop),
                            "aria-label": t(label.value),
                            "title": t(label.value),
                            "tabindex": "-1"
                        }, null) : undefined
                    ]);
                }
            });
        });
        return (0, _forwardRefsMjs.forwardRefs)({
            isFocused,
            isPristine,
            menu,
            search,
            filteredItems,
            select
        }, vTextFieldRef);
    }
});

},{"vue":"gCTam","./VAutocomplete.css":"bc1Nd","../VAvatar/index.mjs":"d9olW","../VCheckbox/index.mjs":"c1Gdu","../VChip/index.mjs":"bLlpp","../VDefaultsProvider/index.mjs":"eFFvH","../VIcon/index.mjs":"5Yjjr","../VList/index.mjs":"56Mcn","../VMenu/index.mjs":"72lak","../VSelect/VSelect.mjs":"lxk2a","../VTextField/VTextField.mjs":"kzi5r","../VVirtualScroll/index.mjs":"cUhx7","../VSelect/useScrolling.mjs":"6iRHI","../../composables/color.mjs":"6TeQR","../../composables/filter.mjs":"eW6zz","../../composables/form.mjs":"wQrA9","../../composables/forwardRefs.mjs":"2TNTP","../../composables/list-items.mjs":"9YaK8","../../composables/locale.mjs":"9rJP0","../../composables/proxiedModel.mjs":"huwLk","../../composables/transition.mjs":"dJyg1","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"bc1Nd":[function() {},{}],"d9olW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VAvatar", ()=>(0, _vavatarMjs.VAvatar));
var _vavatarMjs = require("./VAvatar.mjs");

},{"./VAvatar.mjs":"slNd4","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"slNd4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVAvatarProps", ()=>makeVAvatarProps);
parcelHelpers.export(exports, "VAvatar", ()=>VAvatar);
var _vue = require("vue");
// Styles
var _vavatarCss = require("./VAvatar.css");
// Components
var _indexMjs = require("../VDefaultsProvider/index.mjs");
var _indexMjs1 = require("../VIcon/index.mjs");
var _indexMjs2 = require("../VImg/index.mjs"); // Composables
var _borderMjs = require("../../composables/border.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _densityMjs = require("../../composables/density.mjs");
var _iconsMjs = require("../../composables/icons.mjs");
var _roundedMjs = require("../../composables/rounded.mjs");
var _sizeMjs = require("../../composables/size.mjs");
var _tagMjs = require("../../composables/tag.mjs");
var _themeMjs = require("../../composables/theme.mjs");
var _variantMjs = require("../../composables/variant.mjs"); // Utilities
var _indexMjs3 = require("../../util/index.mjs");
const makeVAvatarProps = (0, _indexMjs3.propsFactory)({
    start: Boolean,
    end: Boolean,
    icon: (0, _iconsMjs.IconValue),
    image: String,
    text: String,
    ...(0, _borderMjs.makeBorderProps)(),
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _densityMjs.makeDensityProps)(),
    ...(0, _roundedMjs.makeRoundedProps)(),
    ...(0, _sizeMjs.makeSizeProps)(),
    ...(0, _tagMjs.makeTagProps)(),
    ...(0, _themeMjs.makeThemeProps)(),
    ...(0, _variantMjs.makeVariantProps)({
        variant: "flat"
    })
}, "VAvatar");
const VAvatar = (0, _indexMjs3.genericComponent)()({
    name: "VAvatar",
    props: makeVAvatarProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const { borderClasses } = (0, _borderMjs.useBorder)(props);
        const { colorClasses, colorStyles, variantClasses } = (0, _variantMjs.useVariant)(props);
        const { densityClasses } = (0, _densityMjs.useDensity)(props);
        const { roundedClasses } = (0, _roundedMjs.useRounded)(props);
        const { sizeClasses, sizeStyles } = (0, _sizeMjs.useSize)(props);
        (0, _indexMjs3.useRender)(()=>(0, _vue.createVNode)(props.tag, {
                "class": [
                    "v-avatar",
                    {
                        "v-avatar--start": props.start,
                        "v-avatar--end": props.end
                    },
                    themeClasses.value,
                    borderClasses.value,
                    colorClasses.value,
                    densityClasses.value,
                    roundedClasses.value,
                    sizeClasses.value,
                    variantClasses.value,
                    props.class
                ],
                "style": [
                    colorStyles.value,
                    sizeStyles.value,
                    props.style
                ]
            }, {
                default: ()=>[
                        !slots.default ? props.image ? (0, _vue.createVNode)((0, _indexMjs2.VImg), {
                            "key": "image",
                            "src": props.image,
                            "alt": "",
                            "cover": true
                        }, null) : props.icon ? (0, _vue.createVNode)((0, _indexMjs1.VIcon), {
                            "key": "icon",
                            "icon": props.icon
                        }, null) : props.text : (0, _vue.createVNode)((0, _indexMjs.VDefaultsProvider), {
                            "key": "content-defaults",
                            "defaults": {
                                VImg: {
                                    cover: true,
                                    src: props.image
                                },
                                VIcon: {
                                    icon: props.icon
                                }
                            }
                        }, {
                            default: ()=>[
                                    slots.default()
                                ]
                        }),
                        (0, _variantMjs.genOverlays)(false, "v-avatar")
                    ]
            }));
        return {};
    }
});

},{"vue":"gCTam","./VAvatar.css":"kBiid","../VDefaultsProvider/index.mjs":"eFFvH","../VIcon/index.mjs":"5Yjjr","../VImg/index.mjs":"dbGJJ","../../composables/border.mjs":"iYaxw","../../composables/component.mjs":"4YAxs","../../composables/density.mjs":"kOsEB","../../composables/icons.mjs":"g4kLv","../../composables/rounded.mjs":"1RfhA","../../composables/size.mjs":"2PnSq","../../composables/tag.mjs":"3LqcC","../../composables/theme.mjs":"c9HGg","../../composables/variant.mjs":"ivQo4","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"kBiid":[function() {},{}],"c1Gdu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VCheckbox", ()=>(0, _vcheckboxMjs.VCheckbox));
parcelHelpers.export(exports, "VCheckboxBtn", ()=>(0, _vcheckboxBtnMjs.VCheckboxBtn));
var _vcheckboxMjs = require("./VCheckbox.mjs");
var _vcheckboxBtnMjs = require("./VCheckboxBtn.mjs");

},{"./VCheckbox.mjs":"afwbz","./VCheckboxBtn.mjs":"eYfra","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"afwbz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVCheckboxProps", ()=>makeVCheckboxProps);
parcelHelpers.export(exports, "VCheckbox", ()=>VCheckbox);
var _vue = require("vue");
// Styles
var _vcheckboxCss = require("./VCheckbox.css");
// Components
var _vcheckboxBtnMjs = require("./VCheckboxBtn.mjs");
var _vinputMjs = require("../VInput/VInput.mjs"); // Composables
var _focusMjs = require("../../composables/focus.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const makeVCheckboxProps = (0, _indexMjs.propsFactory)({
    ...(0, _vinputMjs.makeVInputProps)(),
    ...(0, _indexMjs.omit)((0, _vcheckboxBtnMjs.makeVCheckboxBtnProps)(), [
        "inline"
    ])
}, "VCheckbox");
const VCheckbox = (0, _indexMjs.genericComponent)()({
    name: "VCheckbox",
    inheritAttrs: false,
    props: makeVCheckboxProps(),
    emits: {
        "update:modelValue": (value)=>true,
        "update:focused": (focused)=>true
    },
    setup (props, _ref) {
        let { attrs, slots } = _ref;
        const model = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
        const { isFocused, focus, blur } = (0, _focusMjs.useFocus)(props);
        const uid = (0, _indexMjs.getUid)();
        const id = (0, _vue.computed)(()=>props.id || `checkbox-${uid}`);
        (0, _indexMjs.useRender)(()=>{
            const [rootAttrs, controlAttrs] = (0, _indexMjs.filterInputAttrs)(attrs);
            const inputProps = (0, _vinputMjs.VInput).filterProps(props);
            const checkboxProps = (0, _vcheckboxBtnMjs.VCheckboxBtn).filterProps(props);
            return (0, _vue.createVNode)((0, _vinputMjs.VInput), (0, _vue.mergeProps)({
                "class": [
                    "v-checkbox",
                    props.class
                ]
            }, rootAttrs, inputProps, {
                "modelValue": model.value,
                "onUpdate:modelValue": ($event)=>model.value = $event,
                "id": id.value,
                "focused": isFocused.value,
                "style": props.style
            }), {
                ...slots,
                default: (_ref2)=>{
                    let { id, messagesId, isDisabled, isReadonly, isValid } = _ref2;
                    return (0, _vue.createVNode)((0, _vcheckboxBtnMjs.VCheckboxBtn), (0, _vue.mergeProps)(checkboxProps, {
                        "id": id.value,
                        "aria-describedby": messagesId.value,
                        "disabled": isDisabled.value,
                        "readonly": isReadonly.value
                    }, controlAttrs, {
                        "error": isValid.value === false,
                        "modelValue": model.value,
                        "onUpdate:modelValue": ($event)=>model.value = $event,
                        "onFocus": focus,
                        "onBlur": blur
                    }), slots);
                }
            });
        });
        return {};
    }
});

},{"vue":"gCTam","./VCheckbox.css":"6qj8m","./VCheckboxBtn.mjs":"eYfra","../VInput/VInput.mjs":"fIDss","../../composables/focus.mjs":"ez9on","../../composables/proxiedModel.mjs":"huwLk","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"6qj8m":[function() {},{}],"eYfra":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVCheckboxBtnProps", ()=>makeVCheckboxBtnProps);
parcelHelpers.export(exports, "VCheckboxBtn", ()=>VCheckboxBtn);
var _vue = require("vue");
// Components
var _vselectionControlMjs = require("../VSelectionControl/VSelectionControl.mjs"); // Composables
var _iconsMjs = require("../../composables/icons.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const makeVCheckboxBtnProps = (0, _indexMjs.propsFactory)({
    indeterminate: Boolean,
    indeterminateIcon: {
        type: (0, _iconsMjs.IconValue),
        default: "$checkboxIndeterminate"
    },
    ...(0, _vselectionControlMjs.makeVSelectionControlProps)({
        falseIcon: "$checkboxOff",
        trueIcon: "$checkboxOn"
    })
}, "VCheckboxBtn");
const VCheckboxBtn = (0, _indexMjs.genericComponent)()({
    name: "VCheckboxBtn",
    props: makeVCheckboxBtnProps(),
    emits: {
        "update:modelValue": (value)=>true,
        "update:indeterminate": (value)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const indeterminate = (0, _proxiedModelMjs.useProxiedModel)(props, "indeterminate");
        const model = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
        function onChange(v) {
            if (indeterminate.value) indeterminate.value = false;
        }
        const falseIcon = (0, _vue.computed)(()=>{
            return indeterminate.value ? props.indeterminateIcon : props.falseIcon;
        });
        const trueIcon = (0, _vue.computed)(()=>{
            return indeterminate.value ? props.indeterminateIcon : props.trueIcon;
        });
        (0, _indexMjs.useRender)(()=>{
            const controlProps = (0, _indexMjs.omit)((0, _vselectionControlMjs.VSelectionControl).filterProps(props), [
                "modelValue"
            ]);
            return (0, _vue.createVNode)((0, _vselectionControlMjs.VSelectionControl), (0, _vue.mergeProps)(controlProps, {
                "modelValue": model.value,
                "onUpdate:modelValue": [
                    ($event)=>model.value = $event,
                    onChange
                ],
                "class": [
                    "v-checkbox-btn",
                    props.class
                ],
                "style": props.style,
                "type": "checkbox",
                "falseIcon": falseIcon.value,
                "trueIcon": trueIcon.value,
                "aria-checked": indeterminate.value ? "mixed" : undefined
            }), slots);
        });
        return {};
    }
});

},{"vue":"gCTam","../VSelectionControl/VSelectionControl.mjs":"2m8Co","../../composables/icons.mjs":"g4kLv","../../composables/proxiedModel.mjs":"huwLk","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"2m8Co":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVSelectionControlProps", ()=>makeVSelectionControlProps);
parcelHelpers.export(exports, "useSelectionControl", ()=>useSelectionControl);
parcelHelpers.export(exports, "VSelectionControl", ()=>VSelectionControl);
var _vue = require("vue");
// Styles
var _vselectionControlCss = require("./VSelectionControl.css");
// Components
var _indexMjs = require("../VIcon/index.mjs");
var _indexMjs1 = require("../VLabel/index.mjs");
var _vselectionControlGroupMjs = require("../VSelectionControlGroup/VSelectionControlGroup.mjs"); // Composables
var _colorMjs = require("../../composables/color.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _densityMjs = require("../../composables/density.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs"); // Directives
var _indexMjs2 = require("../../directives/ripple/index.mjs"); // Utilities
var _indexMjs3 = require("../../util/index.mjs"); // Types
const makeVSelectionControlProps = (0, _indexMjs3.propsFactory)({
    label: String,
    baseColor: String,
    trueValue: null,
    falseValue: null,
    value: null,
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _vselectionControlGroupMjs.makeSelectionControlGroupProps)()
}, "VSelectionControl");
function useSelectionControl(props) {
    const group = (0, _vue.inject)((0, _vselectionControlGroupMjs.VSelectionControlGroupSymbol), undefined);
    const { densityClasses } = (0, _densityMjs.useDensity)(props);
    const modelValue = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
    const trueValue = (0, _vue.computed)(()=>props.trueValue !== undefined ? props.trueValue : props.value !== undefined ? props.value : true);
    const falseValue = (0, _vue.computed)(()=>props.falseValue !== undefined ? props.falseValue : false);
    const isMultiple = (0, _vue.computed)(()=>!!props.multiple || props.multiple == null && Array.isArray(modelValue.value));
    const model = (0, _vue.computed)({
        get () {
            const val = group ? group.modelValue.value : modelValue.value;
            return isMultiple.value ? (0, _indexMjs3.wrapInArray)(val).some((v)=>props.valueComparator(v, trueValue.value)) : props.valueComparator(val, trueValue.value);
        },
        set (val) {
            if (props.readonly) return;
            const currentValue = val ? trueValue.value : falseValue.value;
            let newVal = currentValue;
            if (isMultiple.value) newVal = val ? [
                ...(0, _indexMjs3.wrapInArray)(modelValue.value),
                currentValue
            ] : (0, _indexMjs3.wrapInArray)(modelValue.value).filter((item)=>!props.valueComparator(item, trueValue.value));
            if (group) group.modelValue.value = newVal;
            else modelValue.value = newVal;
        }
    });
    const { textColorClasses, textColorStyles } = (0, _colorMjs.useTextColor)((0, _vue.computed)(()=>{
        if (props.error || props.disabled) return undefined;
        return model.value ? props.color : props.baseColor;
    }));
    const { backgroundColorClasses, backgroundColorStyles } = (0, _colorMjs.useBackgroundColor)((0, _vue.computed)(()=>{
        return model.value && !props.error && !props.disabled ? props.color : props.baseColor;
    }));
    const icon = (0, _vue.computed)(()=>model.value ? props.trueIcon : props.falseIcon);
    return {
        group,
        densityClasses,
        trueValue,
        falseValue,
        model,
        textColorClasses,
        textColorStyles,
        backgroundColorClasses,
        backgroundColorStyles,
        icon
    };
}
const VSelectionControl = (0, _indexMjs3.genericComponent)()({
    name: "VSelectionControl",
    directives: {
        Ripple: (0, _indexMjs2.Ripple)
    },
    inheritAttrs: false,
    props: makeVSelectionControlProps(),
    emits: {
        "update:modelValue": (value)=>true
    },
    setup (props, _ref) {
        let { attrs, slots } = _ref;
        const { group, densityClasses, icon, model, textColorClasses, textColorStyles, backgroundColorClasses, backgroundColorStyles, trueValue } = useSelectionControl(props);
        const uid = (0, _indexMjs3.getUid)();
        const isFocused = (0, _vue.shallowRef)(false);
        const isFocusVisible = (0, _vue.shallowRef)(false);
        const input = (0, _vue.ref)();
        const id = (0, _vue.computed)(()=>props.id || `input-${uid}`);
        const isInteractive = (0, _vue.computed)(()=>!props.disabled && !props.readonly);
        group?.onForceUpdate(()=>{
            if (input.value) input.value.checked = model.value;
        });
        function onFocus(e) {
            if (!isInteractive.value) return;
            isFocused.value = true;
            if ((0, _indexMjs3.matchesSelector)(e.target, ":focus-visible") !== false) isFocusVisible.value = true;
        }
        function onBlur() {
            isFocused.value = false;
            isFocusVisible.value = false;
        }
        function onClickLabel(e) {
            e.stopPropagation();
        }
        function onInput(e) {
            if (!isInteractive.value) {
                if (input.value) // model value is not updated when input is not interactive
                // but the internal checked state of the input is still updated,
                // so here it's value is restored
                input.value.checked = model.value;
                return;
            }
            if (props.readonly && group) (0, _vue.nextTick)(()=>group.forceUpdate());
            model.value = e.target.checked;
        }
        (0, _indexMjs3.useRender)(()=>{
            const label = slots.label ? slots.label({
                label: props.label,
                props: {
                    for: id.value
                }
            }) : props.label;
            const [rootAttrs, inputAttrs] = (0, _indexMjs3.filterInputAttrs)(attrs);
            const inputNode = (0, _vue.createVNode)("input", (0, _vue.mergeProps)({
                "ref": input,
                "checked": model.value,
                "disabled": !!props.disabled,
                "id": id.value,
                "onBlur": onBlur,
                "onFocus": onFocus,
                "onInput": onInput,
                "aria-disabled": !!props.disabled,
                "aria-label": props.label,
                "type": props.type,
                "value": trueValue.value,
                "name": props.name,
                "aria-checked": props.type === "checkbox" ? model.value : undefined
            }, inputAttrs), null);
            return (0, _vue.createVNode)("div", (0, _vue.mergeProps)({
                "class": [
                    "v-selection-control",
                    {
                        "v-selection-control--dirty": model.value,
                        "v-selection-control--disabled": props.disabled,
                        "v-selection-control--error": props.error,
                        "v-selection-control--focused": isFocused.value,
                        "v-selection-control--focus-visible": isFocusVisible.value,
                        "v-selection-control--inline": props.inline
                    },
                    densityClasses.value,
                    props.class
                ]
            }, rootAttrs, {
                "style": props.style
            }), [
                (0, _vue.createVNode)("div", {
                    "class": [
                        "v-selection-control__wrapper",
                        textColorClasses.value
                    ],
                    "style": textColorStyles.value
                }, [
                    slots.default?.({
                        backgroundColorClasses,
                        backgroundColorStyles
                    }),
                    (0, _vue.withDirectives)((0, _vue.createVNode)("div", {
                        "class": [
                            "v-selection-control__input"
                        ]
                    }, [
                        slots.input?.({
                            model,
                            textColorClasses,
                            textColorStyles,
                            backgroundColorClasses,
                            backgroundColorStyles,
                            inputNode,
                            icon: icon.value,
                            props: {
                                onFocus,
                                onBlur,
                                id: id.value
                            }
                        }) ?? (0, _vue.createVNode)((0, _vue.Fragment), null, [
                            icon.value && (0, _vue.createVNode)((0, _indexMjs.VIcon), {
                                "key": "icon",
                                "icon": icon.value
                            }, null),
                            inputNode
                        ])
                    ]), [
                        [
                            (0, _vue.resolveDirective)("ripple"),
                            props.ripple && [
                                !props.disabled && !props.readonly,
                                null,
                                [
                                    "center",
                                    "circle"
                                ]
                            ]
                        ]
                    ])
                ]),
                label && (0, _vue.createVNode)((0, _indexMjs1.VLabel), {
                    "for": id.value,
                    "onClick": onClickLabel
                }, {
                    default: ()=>[
                            label
                        ]
                })
            ]);
        });
        return {
            isFocused,
            input
        };
    }
});

},{"vue":"gCTam","./VSelectionControl.css":"bUZw0","../VIcon/index.mjs":"5Yjjr","../VLabel/index.mjs":"2xWF9","../VSelectionControlGroup/VSelectionControlGroup.mjs":"2TyxC","../../composables/color.mjs":"6TeQR","../../composables/component.mjs":"4YAxs","../../composables/density.mjs":"kOsEB","../../composables/proxiedModel.mjs":"huwLk","../../directives/ripple/index.mjs":"41ncU","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"bUZw0":[function() {},{}],"2xWF9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VLabel", ()=>(0, _vlabelMjs.VLabel));
var _vlabelMjs = require("./VLabel.mjs");

},{"./VLabel.mjs":"4eEjs","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"4eEjs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVLabelProps", ()=>makeVLabelProps);
parcelHelpers.export(exports, "VLabel", ()=>VLabel);
var _vue = require("vue");
// Styles
var _vlabelCss = require("./VLabel.css");
// Composables
var _componentMjs = require("../../composables/component.mjs");
var _themeMjs = require("../../composables/theme.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const makeVLabelProps = (0, _indexMjs.propsFactory)({
    text: String,
    onClick: (0, _indexMjs.EventProp)(),
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _themeMjs.makeThemeProps)()
}, "VLabel");
const VLabel = (0, _indexMjs.genericComponent)()({
    name: "VLabel",
    props: makeVLabelProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        (0, _indexMjs.useRender)(()=>(0, _vue.createVNode)("label", {
                "class": [
                    "v-label",
                    {
                        "v-label--clickable": !!props.onClick
                    },
                    props.class
                ],
                "style": props.style,
                "onClick": props.onClick
            }, [
                props.text,
                slots.default?.()
            ]));
        return {};
    }
});

},{"vue":"gCTam","./VLabel.css":"abwty","../../composables/component.mjs":"4YAxs","../../composables/theme.mjs":"c9HGg","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"abwty":[function() {},{}],"2TyxC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VSelectionControlGroupSymbol", ()=>VSelectionControlGroupSymbol);
parcelHelpers.export(exports, "makeSelectionControlGroupProps", ()=>makeSelectionControlGroupProps);
parcelHelpers.export(exports, "makeVSelectionControlGroupProps", ()=>makeVSelectionControlGroupProps);
parcelHelpers.export(exports, "VSelectionControlGroup", ()=>VSelectionControlGroup);
var _vue = require("vue");
// Styles
var _vselectionControlGroupCss = require("./VSelectionControlGroup.css");
// Composables
var _componentMjs = require("../../composables/component.mjs");
var _defaultsMjs = require("../../composables/defaults.mjs");
var _densityMjs = require("../../composables/density.mjs");
var _iconsMjs = require("../../composables/icons.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs");
var _themeMjs = require("../../composables/theme.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const VSelectionControlGroupSymbol = Symbol.for("vuetify:selection-control-group");
const makeSelectionControlGroupProps = (0, _indexMjs.propsFactory)({
    color: String,
    disabled: {
        type: Boolean,
        default: null
    },
    defaultsTarget: String,
    error: Boolean,
    id: String,
    inline: Boolean,
    falseIcon: (0, _iconsMjs.IconValue),
    trueIcon: (0, _iconsMjs.IconValue),
    ripple: {
        type: [
            Boolean,
            Object
        ],
        default: true
    },
    multiple: {
        type: Boolean,
        default: null
    },
    name: String,
    readonly: {
        type: Boolean,
        default: null
    },
    modelValue: null,
    type: String,
    valueComparator: {
        type: Function,
        default: (0, _indexMjs.deepEqual)
    },
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _densityMjs.makeDensityProps)(),
    ...(0, _themeMjs.makeThemeProps)()
}, "SelectionControlGroup");
const makeVSelectionControlGroupProps = (0, _indexMjs.propsFactory)({
    ...makeSelectionControlGroupProps({
        defaultsTarget: "VSelectionControl"
    })
}, "VSelectionControlGroup");
const VSelectionControlGroup = (0, _indexMjs.genericComponent)()({
    name: "VSelectionControlGroup",
    props: makeVSelectionControlGroupProps(),
    emits: {
        "update:modelValue": (value)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const modelValue = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
        const uid = (0, _indexMjs.getUid)();
        const id = (0, _vue.computed)(()=>props.id || `v-selection-control-group-${uid}`);
        const name = (0, _vue.computed)(()=>props.name || id.value);
        const updateHandlers = new Set();
        (0, _vue.provide)(VSelectionControlGroupSymbol, {
            modelValue,
            forceUpdate: ()=>{
                updateHandlers.forEach((fn)=>fn());
            },
            onForceUpdate: (cb)=>{
                updateHandlers.add(cb);
                (0, _vue.onScopeDispose)(()=>{
                    updateHandlers.delete(cb);
                });
            }
        });
        (0, _defaultsMjs.provideDefaults)({
            [props.defaultsTarget]: {
                color: (0, _vue.toRef)(props, "color"),
                disabled: (0, _vue.toRef)(props, "disabled"),
                density: (0, _vue.toRef)(props, "density"),
                error: (0, _vue.toRef)(props, "error"),
                inline: (0, _vue.toRef)(props, "inline"),
                modelValue,
                multiple: (0, _vue.computed)(()=>!!props.multiple || props.multiple == null && Array.isArray(modelValue.value)),
                name,
                falseIcon: (0, _vue.toRef)(props, "falseIcon"),
                trueIcon: (0, _vue.toRef)(props, "trueIcon"),
                readonly: (0, _vue.toRef)(props, "readonly"),
                ripple: (0, _vue.toRef)(props, "ripple"),
                type: (0, _vue.toRef)(props, "type"),
                valueComparator: (0, _vue.toRef)(props, "valueComparator")
            }
        });
        (0, _indexMjs.useRender)(()=>(0, _vue.createVNode)("div", {
                "class": [
                    "v-selection-control-group",
                    {
                        "v-selection-control-group--inline": props.inline
                    },
                    props.class
                ],
                "style": props.style,
                "role": props.type === "radio" ? "radiogroup" : undefined
            }, [
                slots.default?.()
            ]));
        return {};
    }
});

},{"vue":"gCTam","./VSelectionControlGroup.css":"bK2ff","../../composables/component.mjs":"4YAxs","../../composables/defaults.mjs":"29Im0","../../composables/density.mjs":"kOsEB","../../composables/icons.mjs":"g4kLv","../../composables/proxiedModel.mjs":"huwLk","../../composables/theme.mjs":"c9HGg","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"bK2ff":[function() {},{}],"fIDss":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVInputProps", ()=>makeVInputProps);
parcelHelpers.export(exports, "VInput", ()=>VInput);
var _vue = require("vue");
// Styles
var _vinputCss = require("./VInput.css");
// Components
var _inputIconMjs = require("./InputIcon.mjs");
var _vmessagesMjs = require("../VMessages/VMessages.mjs"); // Composables
var _componentMjs = require("../../composables/component.mjs");
var _densityMjs = require("../../composables/density.mjs");
var _dimensionsMjs = require("../../composables/dimensions.mjs");
var _iconsMjs = require("../../composables/icons.mjs");
var _localeMjs = require("../../composables/locale.mjs");
var _themeMjs = require("../../composables/theme.mjs");
var _validationMjs = require("../../composables/validation.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const makeVInputProps = (0, _indexMjs.propsFactory)({
    id: String,
    appendIcon: (0, _iconsMjs.IconValue),
    centerAffix: {
        type: Boolean,
        default: true
    },
    prependIcon: (0, _iconsMjs.IconValue),
    hideDetails: [
        Boolean,
        String
    ],
    hideSpinButtons: Boolean,
    hint: String,
    persistentHint: Boolean,
    messages: {
        type: [
            Array,
            String
        ],
        default: ()=>[]
    },
    direction: {
        type: String,
        default: "horizontal",
        validator: (v)=>[
                "horizontal",
                "vertical"
            ].includes(v)
    },
    "onClick:prepend": (0, _indexMjs.EventProp)(),
    "onClick:append": (0, _indexMjs.EventProp)(),
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _densityMjs.makeDensityProps)(),
    ...(0, _indexMjs.only)((0, _dimensionsMjs.makeDimensionProps)(), [
        "maxWidth",
        "minWidth",
        "width"
    ]),
    ...(0, _themeMjs.makeThemeProps)(),
    ...(0, _validationMjs.makeValidationProps)()
}, "VInput");
const VInput = (0, _indexMjs.genericComponent)()({
    name: "VInput",
    props: {
        ...makeVInputProps()
    },
    emits: {
        "update:modelValue": (value)=>true
    },
    setup (props, _ref) {
        let { attrs, slots, emit } = _ref;
        const { densityClasses } = (0, _densityMjs.useDensity)(props);
        const { dimensionStyles } = (0, _dimensionsMjs.useDimension)(props);
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const { rtlClasses } = (0, _localeMjs.useRtl)();
        const { InputIcon } = (0, _inputIconMjs.useInputIcon)(props);
        const uid = (0, _indexMjs.getUid)();
        const id = (0, _vue.computed)(()=>props.id || `input-${uid}`);
        const messagesId = (0, _vue.computed)(()=>`${id.value}-messages`);
        const { errorMessages, isDirty, isDisabled, isReadonly, isPristine, isValid, isValidating, reset, resetValidation, validate, validationClasses } = (0, _validationMjs.useValidation)(props, "v-input", id);
        const slotProps = (0, _vue.computed)(()=>({
                id,
                messagesId,
                isDirty,
                isDisabled,
                isReadonly,
                isPristine,
                isValid,
                isValidating,
                reset,
                resetValidation,
                validate
            }));
        const messages = (0, _vue.computed)(()=>{
            if (props.errorMessages?.length || !isPristine.value && errorMessages.value.length) return errorMessages.value;
            else if (props.hint && (props.persistentHint || props.focused)) return props.hint;
            else return props.messages;
        });
        (0, _indexMjs.useRender)(()=>{
            const hasPrepend = !!(slots.prepend || props.prependIcon);
            const hasAppend = !!(slots.append || props.appendIcon);
            const hasMessages = messages.value.length > 0;
            const hasDetails = !props.hideDetails || props.hideDetails === "auto" && (hasMessages || !!slots.details);
            return (0, _vue.createVNode)("div", {
                "class": [
                    "v-input",
                    `v-input--${props.direction}`,
                    {
                        "v-input--center-affix": props.centerAffix,
                        "v-input--hide-spin-buttons": props.hideSpinButtons
                    },
                    densityClasses.value,
                    themeClasses.value,
                    rtlClasses.value,
                    validationClasses.value,
                    props.class
                ],
                "style": [
                    dimensionStyles.value,
                    props.style
                ]
            }, [
                hasPrepend && (0, _vue.createVNode)("div", {
                    "key": "prepend",
                    "class": "v-input__prepend"
                }, [
                    slots.prepend?.(slotProps.value),
                    props.prependIcon && (0, _vue.createVNode)(InputIcon, {
                        "key": "prepend-icon",
                        "name": "prepend"
                    }, null)
                ]),
                slots.default && (0, _vue.createVNode)("div", {
                    "class": "v-input__control"
                }, [
                    slots.default?.(slotProps.value)
                ]),
                hasAppend && (0, _vue.createVNode)("div", {
                    "key": "append",
                    "class": "v-input__append"
                }, [
                    props.appendIcon && (0, _vue.createVNode)(InputIcon, {
                        "key": "append-icon",
                        "name": "append"
                    }, null),
                    slots.append?.(slotProps.value)
                ]),
                hasDetails && (0, _vue.createVNode)("div", {
                    "class": "v-input__details"
                }, [
                    (0, _vue.createVNode)((0, _vmessagesMjs.VMessages), {
                        "id": messagesId.value,
                        "active": hasMessages,
                        "messages": messages.value
                    }, {
                        message: slots.message
                    }),
                    slots.details?.(slotProps.value)
                ])
            ]);
        });
        return {
            reset,
            resetValidation,
            validate,
            isValid,
            errorMessages
        };
    }
});

},{"vue":"gCTam","./VInput.css":"7PQHy","./InputIcon.mjs":"i4d58","../VMessages/VMessages.mjs":"kPkd5","../../composables/component.mjs":"4YAxs","../../composables/density.mjs":"kOsEB","../../composables/dimensions.mjs":"daVmy","../../composables/icons.mjs":"g4kLv","../../composables/locale.mjs":"9rJP0","../../composables/theme.mjs":"c9HGg","../../composables/validation.mjs":"7qSOE","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"7PQHy":[function() {},{}],"i4d58":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useInputIcon", ()=>useInputIcon);
var _vue = require("vue");
// Components
var _indexMjs = require("../VIcon/index.mjs"); // Composables
var _localeMjs = require("../../composables/locale.mjs"); // Types
function useInputIcon(props) {
    const { t } = (0, _localeMjs.useLocale)();
    function InputIcon(_ref) {
        let { name } = _ref;
        const localeKey = {
            prepend: "prependAction",
            prependInner: "prependAction",
            append: "appendAction",
            appendInner: "appendAction",
            clear: "clear"
        }[name];
        const listener = props[`onClick:${name}`];
        const label = listener && localeKey ? t(`$vuetify.input.${localeKey}`, props.label ?? "") : undefined;
        return (0, _vue.createVNode)((0, _indexMjs.VIcon), {
            "icon": props[`${name}Icon`],
            "aria-label": label,
            "onClick": listener
        }, null);
    }
    return {
        InputIcon
    };
}

},{"vue":"gCTam","../VIcon/index.mjs":"5Yjjr","../../composables/locale.mjs":"9rJP0","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"kPkd5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVMessagesProps", ()=>makeVMessagesProps);
parcelHelpers.export(exports, "VMessages", ()=>VMessages);
var _vue = require("vue");
// Styles
var _vmessagesCss = require("./VMessages.css");
// Components
var _indexMjs = require("../transitions/index.mjs"); // Composables
var _colorMjs = require("../../composables/color.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _transitionMjs = require("../../composables/transition.mjs"); // Utilities
var _indexMjs1 = require("../../util/index.mjs"); // Types
const makeVMessagesProps = (0, _indexMjs1.propsFactory)({
    active: Boolean,
    color: String,
    messages: {
        type: [
            Array,
            String
        ],
        default: ()=>[]
    },
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _transitionMjs.makeTransitionProps)({
        transition: {
            component: (0, _indexMjs.VSlideYTransition),
            leaveAbsolute: true,
            group: true
        }
    })
}, "VMessages");
const VMessages = (0, _indexMjs1.genericComponent)()({
    name: "VMessages",
    props: makeVMessagesProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const messages = (0, _vue.computed)(()=>(0, _indexMjs1.wrapInArray)(props.messages));
        const { textColorClasses, textColorStyles } = (0, _colorMjs.useTextColor)((0, _vue.computed)(()=>props.color));
        (0, _indexMjs1.useRender)(()=>(0, _vue.createVNode)((0, _transitionMjs.MaybeTransition), {
                "transition": props.transition,
                "tag": "div",
                "class": [
                    "v-messages",
                    textColorClasses.value,
                    props.class
                ],
                "style": [
                    textColorStyles.value,
                    props.style
                ],
                "role": "alert",
                "aria-live": "polite"
            }, {
                default: ()=>[
                        props.active && messages.value.map((message, i)=>(0, _vue.createVNode)("div", {
                                "class": "v-messages__message",
                                "key": `${i}-${messages.value}`
                            }, [
                                slots.message ? slots.message({
                                    message
                                }) : message
                            ]))
                    ]
            }));
        return {};
    }
});

},{"vue":"gCTam","./VMessages.css":"aVwXx","../transitions/index.mjs":"3ybHr","../../composables/color.mjs":"6TeQR","../../composables/component.mjs":"4YAxs","../../composables/transition.mjs":"dJyg1","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"aVwXx":[function() {},{}],"7qSOE":[function(require,module,exports) {
// Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeValidationProps", ()=>makeValidationProps);
parcelHelpers.export(exports, "useValidation", ()=>useValidation);
var _focusMjs = require("./focus.mjs");
var _formMjs = require("./form.mjs");
var _proxiedModelMjs = require("./proxiedModel.mjs");
var _toggleScopeMjs = require("./toggleScope.mjs"); // Utilities
var _vue = require("vue");
var _indexMjs = require("../util/index.mjs"); // Types
const makeValidationProps = (0, _indexMjs.propsFactory)({
    disabled: {
        type: Boolean,
        default: null
    },
    error: Boolean,
    errorMessages: {
        type: [
            Array,
            String
        ],
        default: ()=>[]
    },
    maxErrors: {
        type: [
            Number,
            String
        ],
        default: 1
    },
    name: String,
    label: String,
    readonly: {
        type: Boolean,
        default: null
    },
    rules: {
        type: Array,
        default: ()=>[]
    },
    modelValue: null,
    validateOn: String,
    validationValue: null,
    ...(0, _focusMjs.makeFocusProps)()
}, "validation");
function useValidation(props) {
    let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, _indexMjs.getCurrentInstanceName)();
    let id = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : (0, _indexMjs.getUid)();
    const model = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
    const validationModel = (0, _vue.computed)(()=>props.validationValue === undefined ? model.value : props.validationValue);
    const form = (0, _formMjs.useForm)();
    const internalErrorMessages = (0, _vue.ref)([]);
    const isPristine = (0, _vue.shallowRef)(true);
    const isDirty = (0, _vue.computed)(()=>!!((0, _indexMjs.wrapInArray)(model.value === "" ? null : model.value).length || (0, _indexMjs.wrapInArray)(validationModel.value === "" ? null : validationModel.value).length));
    const isDisabled = (0, _vue.computed)(()=>!!(props.disabled ?? form?.isDisabled.value));
    const isReadonly = (0, _vue.computed)(()=>!!(props.readonly ?? form?.isReadonly.value));
    const errorMessages = (0, _vue.computed)(()=>{
        return props.errorMessages?.length ? (0, _indexMjs.wrapInArray)(props.errorMessages).concat(internalErrorMessages.value).slice(0, Math.max(0, +props.maxErrors)) : internalErrorMessages.value;
    });
    const validateOn = (0, _vue.computed)(()=>{
        let value = (props.validateOn ?? form?.validateOn.value) || "input";
        if (value === "lazy") value = "input lazy";
        if (value === "eager") value = "input eager";
        const set = new Set(value?.split(" ") ?? []);
        return {
            input: set.has("input"),
            blur: set.has("blur") || set.has("input") || set.has("invalid-input"),
            invalidInput: set.has("invalid-input"),
            lazy: set.has("lazy"),
            eager: set.has("eager")
        };
    });
    const isValid = (0, _vue.computed)(()=>{
        if (props.error || props.errorMessages?.length) return false;
        if (!props.rules.length) return true;
        if (isPristine.value) return internalErrorMessages.value.length || validateOn.value.lazy ? null : true;
        else return !internalErrorMessages.value.length;
    });
    const isValidating = (0, _vue.shallowRef)(false);
    const validationClasses = (0, _vue.computed)(()=>{
        return {
            [`${name}--error`]: isValid.value === false,
            [`${name}--dirty`]: isDirty.value,
            [`${name}--disabled`]: isDisabled.value,
            [`${name}--readonly`]: isReadonly.value
        };
    });
    const vm = (0, _indexMjs.getCurrentInstance)("validation");
    const uid = (0, _vue.computed)(()=>props.name ?? (0, _vue.unref)(id));
    (0, _vue.onBeforeMount)(()=>{
        form?.register({
            id: uid.value,
            vm,
            validate,
            reset,
            resetValidation
        });
    });
    (0, _vue.onBeforeUnmount)(()=>{
        form?.unregister(uid.value);
    });
    (0, _vue.onMounted)(async ()=>{
        if (!validateOn.value.lazy) await validate(!validateOn.value.eager);
        form?.update(uid.value, isValid.value, errorMessages.value);
    });
    (0, _toggleScopeMjs.useToggleScope)(()=>validateOn.value.input || validateOn.value.invalidInput && isValid.value === false, ()=>{
        (0, _vue.watch)(validationModel, ()=>{
            if (validationModel.value != null) validate();
            else if (props.focused) {
                const unwatch = (0, _vue.watch)(()=>props.focused, (val)=>{
                    if (!val) validate();
                    unwatch();
                });
            }
        });
    });
    (0, _toggleScopeMjs.useToggleScope)(()=>validateOn.value.blur, ()=>{
        (0, _vue.watch)(()=>props.focused, (val)=>{
            if (!val) validate();
        });
    });
    (0, _vue.watch)([
        isValid,
        errorMessages
    ], ()=>{
        form?.update(uid.value, isValid.value, errorMessages.value);
    });
    async function reset() {
        model.value = null;
        await (0, _vue.nextTick)();
        await resetValidation();
    }
    async function resetValidation() {
        isPristine.value = true;
        if (!validateOn.value.lazy) await validate(!validateOn.value.eager);
        else internalErrorMessages.value = [];
    }
    async function validate() {
        let silent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
        const results = [];
        isValidating.value = true;
        for (const rule of props.rules){
            if (results.length >= +(props.maxErrors ?? 1)) break;
            const handler = typeof rule === "function" ? rule : ()=>rule;
            const result = await handler(validationModel.value);
            if (result === true) continue;
            if (result !== false && typeof result !== "string") {
                // eslint-disable-next-line no-console
                console.warn(`${result} is not a valid value. Rule functions must return boolean true or a string.`);
                continue;
            }
            results.push(result || "");
        }
        internalErrorMessages.value = results;
        isValidating.value = false;
        isPristine.value = silent;
        return internalErrorMessages.value;
    }
    return {
        errorMessages,
        isDirty,
        isDisabled,
        isReadonly,
        isPristine,
        isValid,
        isValidating,
        reset,
        resetValidation,
        validate,
        validationClasses
    };
}

},{"./focus.mjs":"ez9on","./form.mjs":"wQrA9","./proxiedModel.mjs":"huwLk","./toggleScope.mjs":"dsKlJ","vue":"gCTam","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"ez9on":[function(require,module,exports) {
// Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeFocusProps", ()=>makeFocusProps);
parcelHelpers.export(exports, "useFocus", ()=>useFocus);
var _proxiedModelMjs = require("./proxiedModel.mjs"); // Utilities
var _vue = require("vue");
var _indexMjs = require("../util/index.mjs"); // Types
const makeFocusProps = (0, _indexMjs.propsFactory)({
    focused: Boolean,
    "onUpdate:focused": (0, _indexMjs.EventProp)()
}, "focus");
function useFocus(props) {
    let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, _indexMjs.getCurrentInstanceName)();
    const isFocused = (0, _proxiedModelMjs.useProxiedModel)(props, "focused");
    const focusClasses = (0, _vue.computed)(()=>{
        return {
            [`${name}--focused`]: isFocused.value
        };
    });
    function focus() {
        isFocused.value = true;
    }
    function blur() {
        isFocused.value = false;
    }
    return {
        focusClasses,
        isFocused,
        focus,
        blur
    };
}

},{"./proxiedModel.mjs":"huwLk","vue":"gCTam","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"wQrA9":[function(require,module,exports) {
// Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "FormKey", ()=>FormKey);
parcelHelpers.export(exports, "makeFormProps", ()=>makeFormProps);
parcelHelpers.export(exports, "createForm", ()=>createForm);
parcelHelpers.export(exports, "useForm", ()=>useForm);
var _proxiedModelMjs = require("./proxiedModel.mjs"); // Utilities
var _vue = require("vue");
var _indexMjs = require("../util/index.mjs"); // Types
const FormKey = Symbol.for("vuetify:form");
const makeFormProps = (0, _indexMjs.propsFactory)({
    disabled: Boolean,
    fastFail: Boolean,
    readonly: Boolean,
    modelValue: {
        type: Boolean,
        default: null
    },
    validateOn: {
        type: String,
        default: "input"
    }
}, "form");
function createForm(props) {
    const model = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
    const isDisabled = (0, _vue.computed)(()=>props.disabled);
    const isReadonly = (0, _vue.computed)(()=>props.readonly);
    const isValidating = (0, _vue.shallowRef)(false);
    const items = (0, _vue.ref)([]);
    const errors = (0, _vue.ref)([]);
    async function validate() {
        const results = [];
        let valid = true;
        errors.value = [];
        isValidating.value = true;
        for (const item of items.value){
            const itemErrorMessages = await item.validate();
            if (itemErrorMessages.length > 0) {
                valid = false;
                results.push({
                    id: item.id,
                    errorMessages: itemErrorMessages
                });
            }
            if (!valid && props.fastFail) break;
        }
        errors.value = results;
        isValidating.value = false;
        return {
            valid,
            errors: errors.value
        };
    }
    function reset() {
        items.value.forEach((item)=>item.reset());
    }
    function resetValidation() {
        items.value.forEach((item)=>item.resetValidation());
    }
    (0, _vue.watch)(items, ()=>{
        let valid = 0;
        let invalid = 0;
        const results = [];
        for (const item of items.value){
            if (item.isValid === false) {
                invalid++;
                results.push({
                    id: item.id,
                    errorMessages: item.errorMessages
                });
            } else if (item.isValid === true) valid++;
        }
        errors.value = results;
        model.value = invalid > 0 ? false : valid === items.value.length ? true : null;
    }, {
        deep: true,
        flush: "post"
    });
    (0, _vue.provide)(FormKey, {
        register: (_ref)=>{
            let { id, vm, validate, reset, resetValidation } = _ref;
            if (items.value.some((item)=>item.id === id)) (0, _indexMjs.consoleWarn)(`Duplicate input name "${id}"`);
            items.value.push({
                id,
                validate,
                reset,
                resetValidation,
                vm: (0, _vue.markRaw)(vm),
                isValid: null,
                errorMessages: []
            });
        },
        unregister: (id)=>{
            items.value = items.value.filter((item)=>{
                return item.id !== id;
            });
        },
        update: (id, isValid, errorMessages)=>{
            const found = items.value.find((item)=>item.id === id);
            if (!found) return;
            found.isValid = isValid;
            found.errorMessages = errorMessages;
        },
        isDisabled,
        isReadonly,
        isValidating,
        isValid: model,
        items,
        validateOn: (0, _vue.toRef)(props, "validateOn")
    });
    return {
        errors,
        isDisabled,
        isReadonly,
        isValidating,
        isValid: model,
        items,
        validate,
        reset,
        resetValidation
    };
}
function useForm() {
    return (0, _vue.inject)(FormKey, null);
}

},{"./proxiedModel.mjs":"huwLk","vue":"gCTam","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"bLlpp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VChip", ()=>(0, _vchipMjs.VChip));
var _vchipMjs = require("./VChip.mjs");

},{"./VChip.mjs":"jozMU","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"jozMU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVChipProps", ()=>makeVChipProps);
parcelHelpers.export(exports, "VChip", ()=>VChip);
var _vue = require("vue");
/* eslint-disable complexity */ // Styles
var _vchipCss = require("./VChip.css");
// Components
var _indexMjs = require("../transitions/index.mjs");
var _indexMjs1 = require("../VAvatar/index.mjs");
var _vchipGroupMjs = require("../VChipGroup/VChipGroup.mjs");
var _indexMjs2 = require("../VDefaultsProvider/index.mjs");
var _indexMjs3 = require("../VIcon/index.mjs"); // Composables
var _borderMjs = require("../../composables/border.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _densityMjs = require("../../composables/density.mjs");
var _elevationMjs = require("../../composables/elevation.mjs");
var _groupMjs = require("../../composables/group.mjs");
var _iconsMjs = require("../../composables/icons.mjs");
var _localeMjs = require("../../composables/locale.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs");
var _roundedMjs = require("../../composables/rounded.mjs");
var _routerMjs = require("../../composables/router.mjs");
var _sizeMjs = require("../../composables/size.mjs");
var _tagMjs = require("../../composables/tag.mjs");
var _themeMjs = require("../../composables/theme.mjs");
var _variantMjs = require("../../composables/variant.mjs"); // Directives
var _indexMjs4 = require("../../directives/ripple/index.mjs"); // Utilities
var _indexMjs5 = require("../../util/index.mjs"); // Types
const makeVChipProps = (0, _indexMjs5.propsFactory)({
    activeClass: String,
    appendAvatar: String,
    appendIcon: (0, _iconsMjs.IconValue),
    closable: Boolean,
    closeIcon: {
        type: (0, _iconsMjs.IconValue),
        default: "$delete"
    },
    closeLabel: {
        type: String,
        default: "$vuetify.close"
    },
    draggable: Boolean,
    filter: Boolean,
    filterIcon: {
        type: String,
        default: "$complete"
    },
    label: Boolean,
    link: {
        type: Boolean,
        default: undefined
    },
    pill: Boolean,
    prependAvatar: String,
    prependIcon: (0, _iconsMjs.IconValue),
    ripple: {
        type: [
            Boolean,
            Object
        ],
        default: true
    },
    text: String,
    modelValue: {
        type: Boolean,
        default: true
    },
    onClick: (0, _indexMjs5.EventProp)(),
    onClickOnce: (0, _indexMjs5.EventProp)(),
    ...(0, _borderMjs.makeBorderProps)(),
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _densityMjs.makeDensityProps)(),
    ...(0, _elevationMjs.makeElevationProps)(),
    ...(0, _groupMjs.makeGroupItemProps)(),
    ...(0, _roundedMjs.makeRoundedProps)(),
    ...(0, _routerMjs.makeRouterProps)(),
    ...(0, _sizeMjs.makeSizeProps)(),
    ...(0, _tagMjs.makeTagProps)({
        tag: "span"
    }),
    ...(0, _themeMjs.makeThemeProps)(),
    ...(0, _variantMjs.makeVariantProps)({
        variant: "tonal"
    })
}, "VChip");
const VChip = (0, _indexMjs5.genericComponent)()({
    name: "VChip",
    directives: {
        Ripple: (0, _indexMjs4.Ripple)
    },
    props: makeVChipProps(),
    emits: {
        "click:close": (e)=>true,
        "update:modelValue": (value)=>true,
        "group:selected": (val)=>true,
        click: (e)=>true
    },
    setup (props, _ref) {
        let { attrs, emit, slots } = _ref;
        const { t } = (0, _localeMjs.useLocale)();
        const { borderClasses } = (0, _borderMjs.useBorder)(props);
        const { colorClasses, colorStyles, variantClasses } = (0, _variantMjs.useVariant)(props);
        const { densityClasses } = (0, _densityMjs.useDensity)(props);
        const { elevationClasses } = (0, _elevationMjs.useElevation)(props);
        const { roundedClasses } = (0, _roundedMjs.useRounded)(props);
        const { sizeClasses } = (0, _sizeMjs.useSize)(props);
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const isActive = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
        const group = (0, _groupMjs.useGroupItem)(props, (0, _vchipGroupMjs.VChipGroupSymbol), false);
        const link = (0, _routerMjs.useLink)(props, attrs);
        const isLink = (0, _vue.computed)(()=>props.link !== false && link.isLink.value);
        const isClickable = (0, _vue.computed)(()=>!props.disabled && props.link !== false && (!!group || props.link || link.isClickable.value));
        const closeProps = (0, _vue.computed)(()=>({
                "aria-label": t(props.closeLabel),
                onClick (e) {
                    e.preventDefault();
                    e.stopPropagation();
                    isActive.value = false;
                    emit("click:close", e);
                }
            }));
        function onClick(e) {
            emit("click", e);
            if (!isClickable.value) return;
            link.navigate?.(e);
            group?.toggle();
        }
        function onKeyDown(e) {
            if (e.key === "Enter" || e.key === " ") {
                e.preventDefault();
                onClick(e);
            }
        }
        return ()=>{
            const Tag = link.isLink.value ? "a" : props.tag;
            const hasAppendMedia = !!(props.appendIcon || props.appendAvatar);
            const hasAppend = !!(hasAppendMedia || slots.append);
            const hasClose = !!(slots.close || props.closable);
            const hasFilter = !!(slots.filter || props.filter) && group;
            const hasPrependMedia = !!(props.prependIcon || props.prependAvatar);
            const hasPrepend = !!(hasPrependMedia || slots.prepend);
            const hasColor = !group || group.isSelected.value;
            return isActive.value && (0, _vue.withDirectives)((0, _vue.createVNode)(Tag, {
                "class": [
                    "v-chip",
                    {
                        "v-chip--disabled": props.disabled,
                        "v-chip--label": props.label,
                        "v-chip--link": isClickable.value,
                        "v-chip--filter": hasFilter,
                        "v-chip--pill": props.pill
                    },
                    themeClasses.value,
                    borderClasses.value,
                    hasColor ? colorClasses.value : undefined,
                    densityClasses.value,
                    elevationClasses.value,
                    roundedClasses.value,
                    sizeClasses.value,
                    variantClasses.value,
                    group?.selectedClass.value,
                    props.class
                ],
                "style": [
                    hasColor ? colorStyles.value : undefined,
                    props.style
                ],
                "disabled": props.disabled || undefined,
                "draggable": props.draggable,
                "href": link.href.value,
                "tabindex": isClickable.value ? 0 : undefined,
                "onClick": onClick,
                "onKeydown": isClickable.value && !isLink.value && onKeyDown
            }, {
                default: ()=>[
                        (0, _variantMjs.genOverlays)(isClickable.value, "v-chip"),
                        hasFilter && (0, _vue.createVNode)((0, _indexMjs.VExpandXTransition), {
                            "key": "filter"
                        }, {
                            default: ()=>[
                                    (0, _vue.withDirectives)((0, _vue.createVNode)("div", {
                                        "class": "v-chip__filter"
                                    }, [
                                        !slots.filter ? (0, _vue.createVNode)((0, _indexMjs3.VIcon), {
                                            "key": "filter-icon",
                                            "icon": props.filterIcon
                                        }, null) : (0, _vue.createVNode)((0, _indexMjs2.VDefaultsProvider), {
                                            "key": "filter-defaults",
                                            "disabled": !props.filterIcon,
                                            "defaults": {
                                                VIcon: {
                                                    icon: props.filterIcon
                                                }
                                            }
                                        }, slots.filter)
                                    ]), [
                                        [
                                            (0, _vue.vShow),
                                            group.isSelected.value
                                        ]
                                    ])
                                ]
                        }),
                        hasPrepend && (0, _vue.createVNode)("div", {
                            "key": "prepend",
                            "class": "v-chip__prepend"
                        }, [
                            !slots.prepend ? (0, _vue.createVNode)((0, _vue.Fragment), null, [
                                props.prependIcon && (0, _vue.createVNode)((0, _indexMjs3.VIcon), {
                                    "key": "prepend-icon",
                                    "icon": props.prependIcon,
                                    "start": true
                                }, null),
                                props.prependAvatar && (0, _vue.createVNode)((0, _indexMjs1.VAvatar), {
                                    "key": "prepend-avatar",
                                    "image": props.prependAvatar,
                                    "start": true
                                }, null)
                            ]) : (0, _vue.createVNode)((0, _indexMjs2.VDefaultsProvider), {
                                "key": "prepend-defaults",
                                "disabled": !hasPrependMedia,
                                "defaults": {
                                    VAvatar: {
                                        image: props.prependAvatar,
                                        start: true
                                    },
                                    VIcon: {
                                        icon: props.prependIcon,
                                        start: true
                                    }
                                }
                            }, slots.prepend)
                        ]),
                        (0, _vue.createVNode)("div", {
                            "class": "v-chip__content",
                            "data-no-activator": ""
                        }, [
                            slots.default?.({
                                isSelected: group?.isSelected.value,
                                selectedClass: group?.selectedClass.value,
                                select: group?.select,
                                toggle: group?.toggle,
                                value: group?.value.value,
                                disabled: props.disabled
                            }) ?? props.text
                        ]),
                        hasAppend && (0, _vue.createVNode)("div", {
                            "key": "append",
                            "class": "v-chip__append"
                        }, [
                            !slots.append ? (0, _vue.createVNode)((0, _vue.Fragment), null, [
                                props.appendIcon && (0, _vue.createVNode)((0, _indexMjs3.VIcon), {
                                    "key": "append-icon",
                                    "end": true,
                                    "icon": props.appendIcon
                                }, null),
                                props.appendAvatar && (0, _vue.createVNode)((0, _indexMjs1.VAvatar), {
                                    "key": "append-avatar",
                                    "end": true,
                                    "image": props.appendAvatar
                                }, null)
                            ]) : (0, _vue.createVNode)((0, _indexMjs2.VDefaultsProvider), {
                                "key": "append-defaults",
                                "disabled": !hasAppendMedia,
                                "defaults": {
                                    VAvatar: {
                                        end: true,
                                        image: props.appendAvatar
                                    },
                                    VIcon: {
                                        end: true,
                                        icon: props.appendIcon
                                    }
                                }
                            }, slots.append)
                        ]),
                        hasClose && (0, _vue.createVNode)("button", (0, _vue.mergeProps)({
                            "key": "close",
                            "class": "v-chip__close",
                            "type": "button"
                        }, closeProps.value), [
                            !slots.close ? (0, _vue.createVNode)((0, _indexMjs3.VIcon), {
                                "key": "close-icon",
                                "icon": props.closeIcon,
                                "size": "x-small"
                            }, null) : (0, _vue.createVNode)((0, _indexMjs2.VDefaultsProvider), {
                                "key": "close-defaults",
                                "defaults": {
                                    VIcon: {
                                        icon: props.closeIcon,
                                        size: "x-small"
                                    }
                                }
                            }, slots.close)
                        ])
                    ]
            }), [
                [
                    (0, _vue.resolveDirective)("ripple"),
                    isClickable.value && props.ripple,
                    null
                ]
            ]);
        };
    }
});

},{"vue":"gCTam","./VChip.css":"aNUqm","../transitions/index.mjs":"3ybHr","../VAvatar/index.mjs":"d9olW","../VChipGroup/VChipGroup.mjs":"kd0mV","../VDefaultsProvider/index.mjs":"eFFvH","../VIcon/index.mjs":"5Yjjr","../../composables/border.mjs":"iYaxw","../../composables/component.mjs":"4YAxs","../../composables/density.mjs":"kOsEB","../../composables/elevation.mjs":"aNIiI","../../composables/group.mjs":"hPbgr","../../composables/icons.mjs":"g4kLv","../../composables/locale.mjs":"9rJP0","../../composables/proxiedModel.mjs":"huwLk","../../composables/rounded.mjs":"1RfhA","../../composables/router.mjs":"8IJEw","../../composables/size.mjs":"2PnSq","../../composables/tag.mjs":"3LqcC","../../composables/theme.mjs":"c9HGg","../../composables/variant.mjs":"ivQo4","../../directives/ripple/index.mjs":"41ncU","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"aNUqm":[function() {},{}],"kd0mV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VChipGroupSymbol", ()=>VChipGroupSymbol);
parcelHelpers.export(exports, "makeVChipGroupProps", ()=>makeVChipGroupProps);
parcelHelpers.export(exports, "VChipGroup", ()=>VChipGroup);
var _vue = require("vue");
// Styles
var _vchipGroupCss = require("./VChipGroup.css");
// Components
var _vslideGroupMjs = require("../VSlideGroup/VSlideGroup.mjs"); // Composables
var _componentMjs = require("../../composables/component.mjs");
var _defaultsMjs = require("../../composables/defaults.mjs");
var _groupMjs = require("../../composables/group.mjs");
var _tagMjs = require("../../composables/tag.mjs");
var _themeMjs = require("../../composables/theme.mjs");
var _variantMjs = require("../../composables/variant.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const VChipGroupSymbol = Symbol.for("vuetify:v-chip-group");
const makeVChipGroupProps = (0, _indexMjs.propsFactory)({
    column: Boolean,
    filter: Boolean,
    valueComparator: {
        type: Function,
        default: (0, _indexMjs.deepEqual)
    },
    ...(0, _vslideGroupMjs.makeVSlideGroupProps)(),
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _groupMjs.makeGroupProps)({
        selectedClass: "v-chip--selected"
    }),
    ...(0, _tagMjs.makeTagProps)(),
    ...(0, _themeMjs.makeThemeProps)(),
    ...(0, _variantMjs.makeVariantProps)({
        variant: "tonal"
    })
}, "VChipGroup");
const VChipGroup = (0, _indexMjs.genericComponent)()({
    name: "VChipGroup",
    props: makeVChipGroupProps(),
    emits: {
        "update:modelValue": (value)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const { isSelected, select, next, prev, selected } = (0, _groupMjs.useGroup)(props, VChipGroupSymbol);
        (0, _defaultsMjs.provideDefaults)({
            VChip: {
                color: (0, _vue.toRef)(props, "color"),
                disabled: (0, _vue.toRef)(props, "disabled"),
                filter: (0, _vue.toRef)(props, "filter"),
                variant: (0, _vue.toRef)(props, "variant")
            }
        });
        (0, _indexMjs.useRender)(()=>{
            const slideGroupProps = (0, _vslideGroupMjs.VSlideGroup).filterProps(props);
            return (0, _vue.createVNode)((0, _vslideGroupMjs.VSlideGroup), (0, _vue.mergeProps)(slideGroupProps, {
                "class": [
                    "v-chip-group",
                    {
                        "v-chip-group--column": props.column
                    },
                    themeClasses.value,
                    props.class
                ],
                "style": props.style
            }), {
                default: ()=>[
                        slots.default?.({
                            isSelected,
                            select,
                            next,
                            prev,
                            selected: selected.value
                        })
                    ]
            });
        });
        return {};
    }
});

},{"vue":"gCTam","./VChipGroup.css":"gzAag","../VSlideGroup/VSlideGroup.mjs":"8ssxz","../../composables/component.mjs":"4YAxs","../../composables/defaults.mjs":"29Im0","../../composables/group.mjs":"hPbgr","../../composables/tag.mjs":"3LqcC","../../composables/theme.mjs":"c9HGg","../../composables/variant.mjs":"ivQo4","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"gzAag":[function() {},{}],"8ssxz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VSlideGroupSymbol", ()=>VSlideGroupSymbol);
parcelHelpers.export(exports, "makeVSlideGroupProps", ()=>makeVSlideGroupProps);
parcelHelpers.export(exports, "VSlideGroup", ()=>VSlideGroup);
var _vue = require("vue");
// Styles
var _vslideGroupCss = require("./VSlideGroup.css");
// Components
var _indexMjs = require("../transitions/index.mjs");
var _indexMjs1 = require("../VIcon/index.mjs"); // Composables
var _componentMjs = require("../../composables/component.mjs");
var _displayMjs = require("../../composables/display.mjs");
var _gotoMjs = require("../../composables/goto.mjs");
var _groupMjs = require("../../composables/group.mjs");
var _iconsMjs = require("../../composables/icons.mjs");
var _localeMjs = require("../../composables/locale.mjs");
var _resizeObserverMjs = require("../../composables/resizeObserver.mjs");
var _tagMjs = require("../../composables/tag.mjs"); // Utilities
var _helpersMjs = require("./helpers.mjs");
var _indexMjs2 = require("../../util/index.mjs"); // Types
const VSlideGroupSymbol = Symbol.for("vuetify:v-slide-group");
const makeVSlideGroupProps = (0, _indexMjs2.propsFactory)({
    centerActive: Boolean,
    direction: {
        type: String,
        default: "horizontal"
    },
    symbol: {
        type: null,
        default: VSlideGroupSymbol
    },
    nextIcon: {
        type: (0, _iconsMjs.IconValue),
        default: "$next"
    },
    prevIcon: {
        type: (0, _iconsMjs.IconValue),
        default: "$prev"
    },
    showArrows: {
        type: [
            Boolean,
            String
        ],
        validator: (v)=>typeof v === "boolean" || [
                "always",
                "desktop",
                "mobile"
            ].includes(v)
    },
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _displayMjs.makeDisplayProps)({
        mobile: null
    }),
    ...(0, _tagMjs.makeTagProps)(),
    ...(0, _groupMjs.makeGroupProps)({
        selectedClass: "v-slide-group-item--active"
    })
}, "VSlideGroup");
const VSlideGroup = (0, _indexMjs2.genericComponent)()({
    name: "VSlideGroup",
    props: makeVSlideGroupProps(),
    emits: {
        "update:modelValue": (value)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const { isRtl } = (0, _localeMjs.useRtl)();
        const { displayClasses, mobile } = (0, _displayMjs.useDisplay)(props);
        const group = (0, _groupMjs.useGroup)(props, props.symbol);
        const isOverflowing = (0, _vue.shallowRef)(false);
        const scrollOffset = (0, _vue.shallowRef)(0);
        const containerSize = (0, _vue.shallowRef)(0);
        const contentSize = (0, _vue.shallowRef)(0);
        const isHorizontal = (0, _vue.computed)(()=>props.direction === "horizontal");
        const { resizeRef: containerRef, contentRect: containerRect } = (0, _resizeObserverMjs.useResizeObserver)();
        const { resizeRef: contentRef, contentRect } = (0, _resizeObserverMjs.useResizeObserver)();
        const goTo = (0, _gotoMjs.useGoTo)();
        const goToOptions = (0, _vue.computed)(()=>{
            return {
                container: containerRef.el,
                duration: 200,
                easing: "easeOutQuart"
            };
        });
        const firstSelectedIndex = (0, _vue.computed)(()=>{
            if (!group.selected.value.length) return -1;
            return group.items.value.findIndex((item)=>item.id === group.selected.value[0]);
        });
        const lastSelectedIndex = (0, _vue.computed)(()=>{
            if (!group.selected.value.length) return -1;
            return group.items.value.findIndex((item)=>item.id === group.selected.value[group.selected.value.length - 1]);
        });
        if (0, _indexMjs2.IN_BROWSER) {
            let frame = -1;
            (0, _vue.watch)(()=>[
                    group.selected.value,
                    containerRect.value,
                    contentRect.value,
                    isHorizontal.value
                ], ()=>{
                cancelAnimationFrame(frame);
                frame = requestAnimationFrame(()=>{
                    if (containerRect.value && contentRect.value) {
                        const sizeProperty = isHorizontal.value ? "width" : "height";
                        containerSize.value = containerRect.value[sizeProperty];
                        contentSize.value = contentRect.value[sizeProperty];
                        isOverflowing.value = containerSize.value + 1 < contentSize.value;
                    }
                    if (firstSelectedIndex.value >= 0 && contentRef.el) {
                        // TODO: Is this too naive? Should we store element references in group composable?
                        const selectedElement = contentRef.el.children[lastSelectedIndex.value];
                        scrollToChildren(selectedElement, props.centerActive);
                    }
                });
            });
        }
        const isFocused = (0, _vue.shallowRef)(false);
        function scrollToChildren(children, center) {
            let target = 0;
            if (center) target = (0, _helpersMjs.calculateCenteredTarget)({
                containerElement: containerRef.el,
                isHorizontal: isHorizontal.value,
                selectedElement: children
            });
            else target = (0, _helpersMjs.calculateUpdatedTarget)({
                containerElement: containerRef.el,
                isHorizontal: isHorizontal.value,
                isRtl: isRtl.value,
                selectedElement: children
            });
            scrollToPosition(target);
        }
        function scrollToPosition(newPosition) {
            if (!(0, _indexMjs2.IN_BROWSER) || !containerRef.el) return;
            const offsetSize = (0, _helpersMjs.getOffsetSize)(isHorizontal.value, containerRef.el);
            const scrollPosition = (0, _helpersMjs.getScrollPosition)(isHorizontal.value, isRtl.value, containerRef.el);
            const scrollSize = (0, _helpersMjs.getScrollSize)(isHorizontal.value, containerRef.el);
            if (scrollSize <= offsetSize || // Prevent scrolling by only a couple of pixels, which doesn't look smooth
            Math.abs(newPosition - scrollPosition) < 16) return;
            if (isHorizontal.value && isRtl.value && containerRef.el) {
                const { scrollWidth, offsetWidth: containerWidth } = containerRef.el;
                newPosition = scrollWidth - containerWidth - newPosition;
            }
            if (isHorizontal.value) goTo.horizontal(newPosition, goToOptions.value);
            else goTo(newPosition, goToOptions.value);
        }
        function onScroll(e) {
            const { scrollTop, scrollLeft } = e.target;
            scrollOffset.value = isHorizontal.value ? scrollLeft : scrollTop;
        }
        function onFocusin(e) {
            isFocused.value = true;
            if (!isOverflowing.value || !contentRef.el) return;
            // Focused element is likely to be the root of an item, so a
            // breadth-first search will probably find it in the first iteration
            for (const el of e.composedPath()){
                for (const item of contentRef.el.children)if (item === el) {
                    scrollToChildren(item);
                    return;
                }
            }
        }
        function onFocusout(e) {
            isFocused.value = false;
        }
        // Affix clicks produce onFocus that we have to ignore to avoid extra scrollToChildren
        let ignoreFocusEvent = false;
        function onFocus(e) {
            if (!ignoreFocusEvent && !isFocused.value && !(e.relatedTarget && contentRef.el?.contains(e.relatedTarget))) focus();
            ignoreFocusEvent = false;
        }
        function onFocusAffixes() {
            ignoreFocusEvent = true;
        }
        function onKeydown(e) {
            if (!contentRef.el) return;
            function toFocus(location) {
                e.preventDefault();
                focus(location);
            }
            if (isHorizontal.value) {
                if (e.key === "ArrowRight") toFocus(isRtl.value ? "prev" : "next");
                else if (e.key === "ArrowLeft") toFocus(isRtl.value ? "next" : "prev");
            } else {
                if (e.key === "ArrowDown") toFocus("next");
                else if (e.key === "ArrowUp") toFocus("prev");
            }
            if (e.key === "Home") toFocus("first");
            else if (e.key === "End") toFocus("last");
        }
        function focus(location) {
            if (!contentRef.el) return;
            let el;
            if (!location) {
                const focusable = (0, _indexMjs2.focusableChildren)(contentRef.el);
                el = focusable[0];
            } else if (location === "next") {
                el = contentRef.el.querySelector(":focus")?.nextElementSibling;
                if (!el) return focus("first");
            } else if (location === "prev") {
                el = contentRef.el.querySelector(":focus")?.previousElementSibling;
                if (!el) return focus("last");
            } else if (location === "first") el = contentRef.el.firstElementChild;
            else if (location === "last") el = contentRef.el.lastElementChild;
            if (el) el.focus({
                preventScroll: true
            });
        }
        function scrollTo(location) {
            const direction = isHorizontal.value && isRtl.value ? -1 : 1;
            const offsetStep = (location === "prev" ? -direction : direction) * containerSize.value;
            let newPosition = scrollOffset.value + offsetStep;
            // TODO: improve it
            if (isHorizontal.value && isRtl.value && containerRef.el) {
                const { scrollWidth, offsetWidth: containerWidth } = containerRef.el;
                newPosition += scrollWidth - containerWidth;
            }
            scrollToPosition(newPosition);
        }
        const slotProps = (0, _vue.computed)(()=>({
                next: group.next,
                prev: group.prev,
                select: group.select,
                isSelected: group.isSelected
            }));
        const hasAffixes = (0, _vue.computed)(()=>{
            switch(props.showArrows){
                // Always show arrows on desktop & mobile
                case "always":
                    return true;
                // Always show arrows on desktop
                case "desktop":
                    return !mobile.value;
                // Show arrows on mobile when overflowing.
                // This matches the default 2.2 behavior
                case true:
                    return isOverflowing.value || Math.abs(scrollOffset.value) > 0;
                // Always show on mobile
                case "mobile":
                    return mobile.value || isOverflowing.value || Math.abs(scrollOffset.value) > 0;
                // https://material.io/components/tabs#scrollable-tabs
                // Always show arrows when
                // overflowed on desktop
                default:
                    return !mobile.value && (isOverflowing.value || Math.abs(scrollOffset.value) > 0);
            }
        });
        const hasPrev = (0, _vue.computed)(()=>{
            // 1 pixel in reserve, may be lost after rounding
            return Math.abs(scrollOffset.value) > 1;
        });
        const hasNext = (0, _vue.computed)(()=>{
            if (!containerRef.value) return false;
            const scrollSize = (0, _helpersMjs.getScrollSize)(isHorizontal.value, containerRef.el);
            const clientSize = (0, _helpersMjs.getClientSize)(isHorizontal.value, containerRef.el);
            const scrollSizeMax = scrollSize - clientSize;
            // 1 pixel in reserve, may be lost after rounding
            return scrollSizeMax - Math.abs(scrollOffset.value) > 1;
        });
        (0, _indexMjs2.useRender)(()=>(0, _vue.createVNode)(props.tag, {
                "class": [
                    "v-slide-group",
                    {
                        "v-slide-group--vertical": !isHorizontal.value,
                        "v-slide-group--has-affixes": hasAffixes.value,
                        "v-slide-group--is-overflowing": isOverflowing.value
                    },
                    displayClasses.value,
                    props.class
                ],
                "style": props.style,
                "tabindex": isFocused.value || group.selected.value.length ? -1 : 0,
                "onFocus": onFocus
            }, {
                default: ()=>[
                        hasAffixes.value && (0, _vue.createVNode)("div", {
                            "key": "prev",
                            "class": [
                                "v-slide-group__prev",
                                {
                                    "v-slide-group__prev--disabled": !hasPrev.value
                                }
                            ],
                            "onMousedown": onFocusAffixes,
                            "onClick": ()=>hasPrev.value && scrollTo("prev")
                        }, [
                            slots.prev?.(slotProps.value) ?? (0, _vue.createVNode)((0, _indexMjs.VFadeTransition), null, {
                                default: ()=>[
                                        (0, _vue.createVNode)((0, _indexMjs1.VIcon), {
                                            "icon": isRtl.value ? props.nextIcon : props.prevIcon
                                        }, null)
                                    ]
                            })
                        ]),
                        (0, _vue.createVNode)("div", {
                            "key": "container",
                            "ref": containerRef,
                            "class": "v-slide-group__container",
                            "onScroll": onScroll
                        }, [
                            (0, _vue.createVNode)("div", {
                                "ref": contentRef,
                                "class": "v-slide-group__content",
                                "onFocusin": onFocusin,
                                "onFocusout": onFocusout,
                                "onKeydown": onKeydown
                            }, [
                                slots.default?.(slotProps.value)
                            ])
                        ]),
                        hasAffixes.value && (0, _vue.createVNode)("div", {
                            "key": "next",
                            "class": [
                                "v-slide-group__next",
                                {
                                    "v-slide-group__next--disabled": !hasNext.value
                                }
                            ],
                            "onMousedown": onFocusAffixes,
                            "onClick": ()=>hasNext.value && scrollTo("next")
                        }, [
                            slots.next?.(slotProps.value) ?? (0, _vue.createVNode)((0, _indexMjs.VFadeTransition), null, {
                                default: ()=>[
                                        (0, _vue.createVNode)((0, _indexMjs1.VIcon), {
                                            "icon": isRtl.value ? props.prevIcon : props.nextIcon
                                        }, null)
                                    ]
                            })
                        ])
                    ]
            }));
        return {
            selected: group.selected,
            scrollTo,
            scrollOffset,
            focus,
            hasPrev,
            hasNext
        };
    }
});

},{"vue":"gCTam","./VSlideGroup.css":"4Vxo9","../transitions/index.mjs":"3ybHr","../VIcon/index.mjs":"5Yjjr","../../composables/component.mjs":"4YAxs","../../composables/display.mjs":"bcRjl","../../composables/goto.mjs":"gI0Ln","../../composables/group.mjs":"hPbgr","../../composables/icons.mjs":"g4kLv","../../composables/locale.mjs":"9rJP0","../../composables/resizeObserver.mjs":"hIk8t","../../composables/tag.mjs":"3LqcC","./helpers.mjs":"6gEp9","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"4Vxo9":[function() {},{}],"6gEp9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "calculateUpdatedTarget", ()=>calculateUpdatedTarget);
parcelHelpers.export(exports, "calculateCenteredTarget", ()=>calculateCenteredTarget);
parcelHelpers.export(exports, "getScrollSize", ()=>getScrollSize);
parcelHelpers.export(exports, "getClientSize", ()=>getClientSize);
parcelHelpers.export(exports, "getScrollPosition", ()=>getScrollPosition);
parcelHelpers.export(exports, "getOffsetSize", ()=>getOffsetSize);
parcelHelpers.export(exports, "getOffsetPosition", ()=>getOffsetPosition);
function calculateUpdatedTarget(_ref) {
    let { selectedElement, containerElement, isRtl, isHorizontal } = _ref;
    const containerSize = getOffsetSize(isHorizontal, containerElement);
    const scrollPosition = getScrollPosition(isHorizontal, isRtl, containerElement);
    const childrenSize = getOffsetSize(isHorizontal, selectedElement);
    const childrenStartPosition = getOffsetPosition(isHorizontal, selectedElement);
    const additionalOffset = childrenSize * 0.4;
    if (scrollPosition > childrenStartPosition) return childrenStartPosition - additionalOffset;
    else if (scrollPosition + containerSize < childrenStartPosition + childrenSize) return childrenStartPosition - containerSize + childrenSize + additionalOffset;
    return scrollPosition;
}
function calculateCenteredTarget(_ref2) {
    let { selectedElement, containerElement, isHorizontal } = _ref2;
    const containerOffsetSize = getOffsetSize(isHorizontal, containerElement);
    const childrenOffsetPosition = getOffsetPosition(isHorizontal, selectedElement);
    const childrenOffsetSize = getOffsetSize(isHorizontal, selectedElement);
    return childrenOffsetPosition - containerOffsetSize / 2 + childrenOffsetSize / 2;
}
function getScrollSize(isHorizontal, element) {
    const key = isHorizontal ? "scrollWidth" : "scrollHeight";
    return element?.[key] || 0;
}
function getClientSize(isHorizontal, element) {
    const key = isHorizontal ? "clientWidth" : "clientHeight";
    return element?.[key] || 0;
}
function getScrollPosition(isHorizontal, rtl, element) {
    if (!element) return 0;
    const { scrollLeft, offsetWidth, scrollWidth } = element;
    if (isHorizontal) return rtl ? scrollWidth - offsetWidth + scrollLeft : scrollLeft;
    return element.scrollTop;
}
function getOffsetSize(isHorizontal, element) {
    const key = isHorizontal ? "offsetWidth" : "offsetHeight";
    return element?.[key] || 0;
}
function getOffsetPosition(isHorizontal, element) {
    const key = isHorizontal ? "offsetLeft" : "offsetTop";
    return element?.[key] || 0;
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"56Mcn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VList", ()=>(0, _vlistMjs.VList));
parcelHelpers.export(exports, "VListGroup", ()=>(0, _vlistGroupMjs.VListGroup));
parcelHelpers.export(exports, "VListImg", ()=>(0, _vlistImgMjs.VListImg));
parcelHelpers.export(exports, "VListItem", ()=>(0, _vlistItemMjs.VListItem));
parcelHelpers.export(exports, "VListItemAction", ()=>(0, _vlistItemActionMjs.VListItemAction));
parcelHelpers.export(exports, "VListItemMedia", ()=>(0, _vlistItemMediaMjs.VListItemMedia));
parcelHelpers.export(exports, "VListItemSubtitle", ()=>(0, _vlistItemSubtitleMjs.VListItemSubtitle));
parcelHelpers.export(exports, "VListItemTitle", ()=>(0, _vlistItemTitleMjs.VListItemTitle));
parcelHelpers.export(exports, "VListSubheader", ()=>(0, _vlistSubheaderMjs.VListSubheader));
var _vlistMjs = require("./VList.mjs");
var _vlistGroupMjs = require("./VListGroup.mjs");
var _vlistImgMjs = require("./VListImg.mjs");
var _vlistItemMjs = require("./VListItem.mjs");
var _vlistItemActionMjs = require("./VListItemAction.mjs");
var _vlistItemMediaMjs = require("./VListItemMedia.mjs");
var _vlistItemSubtitleMjs = require("./VListItemSubtitle.mjs");
var _vlistItemTitleMjs = require("./VListItemTitle.mjs");
var _vlistSubheaderMjs = require("./VListSubheader.mjs");

},{"./VList.mjs":"49Lgz","./VListGroup.mjs":"fKhae","./VListImg.mjs":"3YNkZ","./VListItem.mjs":"jZhwb","./VListItemAction.mjs":"723Ju","./VListItemMedia.mjs":"iSmBy","./VListItemSubtitle.mjs":"8PY9u","./VListItemTitle.mjs":"7Wkkt","./VListSubheader.mjs":"52w5r","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"49Lgz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useListItems", ()=>useListItems);
parcelHelpers.export(exports, "makeVListProps", ()=>makeVListProps);
parcelHelpers.export(exports, "VList", ()=>VList);
var _vue = require("vue");
// Styles
var _vlistCss = require("./VList.css");
// Components
var _vlistChildrenMjs = require("./VListChildren.mjs"); // Composables
var _listMjs = require("./list.mjs");
var _borderMjs = require("../../composables/border.mjs");
var _colorMjs = require("../../composables/color.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _defaultsMjs = require("../../composables/defaults.mjs");
var _densityMjs = require("../../composables/density.mjs");
var _dimensionsMjs = require("../../composables/dimensions.mjs");
var _elevationMjs = require("../../composables/elevation.mjs");
var _listItemsMjs = require("../../composables/list-items.mjs");
var _nestedMjs = require("../../composables/nested/nested.mjs");
var _roundedMjs = require("../../composables/rounded.mjs");
var _tagMjs = require("../../composables/tag.mjs");
var _themeMjs = require("../../composables/theme.mjs");
var _variantMjs = require("../../composables/variant.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
function isPrimitive(value) {
    return typeof value === "string" || typeof value === "number" || typeof value === "boolean";
}
function transformItem(props, item) {
    const type = (0, _indexMjs.getPropertyFromItem)(item, props.itemType, "item");
    const title = isPrimitive(item) ? item : (0, _indexMjs.getPropertyFromItem)(item, props.itemTitle);
    const value = (0, _indexMjs.getPropertyFromItem)(item, props.itemValue, undefined);
    const children = (0, _indexMjs.getPropertyFromItem)(item, props.itemChildren);
    const itemProps = props.itemProps === true ? (0, _indexMjs.omit)(item, [
        "children"
    ]) : (0, _indexMjs.getPropertyFromItem)(item, props.itemProps);
    const _props = {
        title,
        value,
        ...itemProps
    };
    return {
        type,
        title: _props.title,
        value: _props.value,
        props: _props,
        children: type === "item" && children ? transformItems(props, children) : undefined,
        raw: item
    };
}
function transformItems(props, items) {
    const array = [];
    for (const item of items)array.push(transformItem(props, item));
    return array;
}
function useListItems(props) {
    const items = (0, _vue.computed)(()=>transformItems(props, props.items));
    return {
        items
    };
}
const makeVListProps = (0, _indexMjs.propsFactory)({
    baseColor: String,
    /* @deprecated */ activeColor: String,
    activeClass: String,
    bgColor: String,
    disabled: Boolean,
    expandIcon: String,
    collapseIcon: String,
    lines: {
        type: [
            Boolean,
            String
        ],
        default: "one"
    },
    slim: Boolean,
    nav: Boolean,
    "onClick:open": (0, _indexMjs.EventProp)(),
    "onClick:select": (0, _indexMjs.EventProp)(),
    "onUpdate:opened": (0, _indexMjs.EventProp)(),
    ...(0, _nestedMjs.makeNestedProps)({
        selectStrategy: "single-leaf",
        openStrategy: "list"
    }),
    ...(0, _borderMjs.makeBorderProps)(),
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _densityMjs.makeDensityProps)(),
    ...(0, _dimensionsMjs.makeDimensionProps)(),
    ...(0, _elevationMjs.makeElevationProps)(),
    itemType: {
        type: String,
        default: "type"
    },
    ...(0, _listItemsMjs.makeItemsProps)(),
    ...(0, _roundedMjs.makeRoundedProps)(),
    ...(0, _tagMjs.makeTagProps)(),
    ...(0, _themeMjs.makeThemeProps)(),
    ...(0, _variantMjs.makeVariantProps)({
        variant: "text"
    })
}, "VList");
const VList = (0, _indexMjs.genericComponent)()({
    name: "VList",
    props: makeVListProps(),
    emits: {
        "update:selected": (value)=>true,
        "update:activated": (value)=>true,
        "update:opened": (value)=>true,
        "click:open": (value)=>true,
        "click:activate": (value)=>true,
        "click:select": (value)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const { items } = useListItems(props);
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const { backgroundColorClasses, backgroundColorStyles } = (0, _colorMjs.useBackgroundColor)((0, _vue.toRef)(props, "bgColor"));
        const { borderClasses } = (0, _borderMjs.useBorder)(props);
        const { densityClasses } = (0, _densityMjs.useDensity)(props);
        const { dimensionStyles } = (0, _dimensionsMjs.useDimension)(props);
        const { elevationClasses } = (0, _elevationMjs.useElevation)(props);
        const { roundedClasses } = (0, _roundedMjs.useRounded)(props);
        const { children, open, parents, select } = (0, _nestedMjs.useNested)(props);
        const lineClasses = (0, _vue.computed)(()=>props.lines ? `v-list--${props.lines}-line` : undefined);
        const activeColor = (0, _vue.toRef)(props, "activeColor");
        const baseColor = (0, _vue.toRef)(props, "baseColor");
        const color = (0, _vue.toRef)(props, "color");
        (0, _listMjs.createList)();
        (0, _defaultsMjs.provideDefaults)({
            VListGroup: {
                activeColor,
                baseColor,
                color,
                expandIcon: (0, _vue.toRef)(props, "expandIcon"),
                collapseIcon: (0, _vue.toRef)(props, "collapseIcon")
            },
            VListItem: {
                activeClass: (0, _vue.toRef)(props, "activeClass"),
                activeColor,
                baseColor,
                color,
                density: (0, _vue.toRef)(props, "density"),
                disabled: (0, _vue.toRef)(props, "disabled"),
                lines: (0, _vue.toRef)(props, "lines"),
                nav: (0, _vue.toRef)(props, "nav"),
                slim: (0, _vue.toRef)(props, "slim"),
                variant: (0, _vue.toRef)(props, "variant")
            }
        });
        const isFocused = (0, _vue.shallowRef)(false);
        const contentRef = (0, _vue.ref)();
        function onFocusin(e) {
            isFocused.value = true;
        }
        function onFocusout(e) {
            isFocused.value = false;
        }
        function onFocus(e) {
            if (!isFocused.value && !(e.relatedTarget && contentRef.value?.contains(e.relatedTarget))) focus();
        }
        function onKeydown(e) {
            const target = e.target;
            if (!contentRef.value || [
                "INPUT",
                "TEXTAREA"
            ].includes(target.tagName)) return;
            if (e.key === "ArrowDown") focus("next");
            else if (e.key === "ArrowUp") focus("prev");
            else if (e.key === "Home") focus("first");
            else if (e.key === "End") focus("last");
            else return;
            e.preventDefault();
        }
        function onMousedown(e) {
            isFocused.value = true;
        }
        function focus(location) {
            if (contentRef.value) return (0, _indexMjs.focusChild)(contentRef.value, location);
        }
        (0, _indexMjs.useRender)(()=>{
            return (0, _vue.createVNode)(props.tag, {
                "ref": contentRef,
                "class": [
                    "v-list",
                    {
                        "v-list--disabled": props.disabled,
                        "v-list--nav": props.nav,
                        "v-list--slim": props.slim
                    },
                    themeClasses.value,
                    backgroundColorClasses.value,
                    borderClasses.value,
                    densityClasses.value,
                    elevationClasses.value,
                    lineClasses.value,
                    roundedClasses.value,
                    props.class
                ],
                "style": [
                    backgroundColorStyles.value,
                    dimensionStyles.value,
                    props.style
                ],
                "tabindex": props.disabled || isFocused.value ? -1 : 0,
                "role": "listbox",
                "aria-activedescendant": undefined,
                "onFocusin": onFocusin,
                "onFocusout": onFocusout,
                "onFocus": onFocus,
                "onKeydown": onKeydown,
                "onMousedown": onMousedown
            }, {
                default: ()=>[
                        (0, _vue.createVNode)((0, _vlistChildrenMjs.VListChildren), {
                            "items": items.value,
                            "returnObject": props.returnObject
                        }, slots)
                    ]
            });
        });
        return {
            open,
            select,
            focus,
            children,
            parents
        };
    }
});

},{"vue":"gCTam","./VList.css":"dYE0d","./VListChildren.mjs":"h8yiv","./list.mjs":"c1o9Q","../../composables/border.mjs":"iYaxw","../../composables/color.mjs":"6TeQR","../../composables/component.mjs":"4YAxs","../../composables/defaults.mjs":"29Im0","../../composables/density.mjs":"kOsEB","../../composables/dimensions.mjs":"daVmy","../../composables/elevation.mjs":"aNIiI","../../composables/list-items.mjs":"9YaK8","../../composables/nested/nested.mjs":"kGbBw","../../composables/rounded.mjs":"1RfhA","../../composables/tag.mjs":"3LqcC","../../composables/theme.mjs":"c9HGg","../../composables/variant.mjs":"ivQo4","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"dYE0d":[function() {},{}],"h8yiv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVListChildrenProps", ()=>makeVListChildrenProps);
parcelHelpers.export(exports, "VListChildren", ()=>VListChildren);
var _vue = require("vue");
// Components
var _vlistGroupMjs = require("./VListGroup.mjs");
var _vlistItemMjs = require("./VListItem.mjs");
var _vlistSubheaderMjs = require("./VListSubheader.mjs");
var _indexMjs = require("../VDivider/index.mjs"); // Utilities
var _listMjs = require("./list.mjs");
var _indexMjs1 = require("../../util/index.mjs"); // Types
const makeVListChildrenProps = (0, _indexMjs1.propsFactory)({
    items: Array,
    returnObject: Boolean
}, "VListChildren");
const VListChildren = (0, _indexMjs1.genericComponent)()({
    name: "VListChildren",
    props: makeVListChildrenProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        (0, _listMjs.createList)();
        return ()=>slots.default?.() ?? props.items?.map((_ref2)=>{
                let { children, props: itemProps, type, raw: item } = _ref2;
                if (type === "divider") return slots.divider?.({
                    props: itemProps
                }) ?? (0, _vue.createVNode)((0, _indexMjs.VDivider), itemProps, null);
                if (type === "subheader") return slots.subheader?.({
                    props: itemProps
                }) ?? (0, _vue.createVNode)((0, _vlistSubheaderMjs.VListSubheader), itemProps, null);
                const slotsWithItem = {
                    subtitle: slots.subtitle ? (slotProps)=>slots.subtitle?.({
                            ...slotProps,
                            item
                        }) : undefined,
                    prepend: slots.prepend ? (slotProps)=>slots.prepend?.({
                            ...slotProps,
                            item
                        }) : undefined,
                    append: slots.append ? (slotProps)=>slots.append?.({
                            ...slotProps,
                            item
                        }) : undefined,
                    title: slots.title ? (slotProps)=>slots.title?.({
                            ...slotProps,
                            item
                        }) : undefined
                };
                const listGroupProps = (0, _vlistGroupMjs.VListGroup).filterProps(itemProps);
                return children ? (0, _vue.createVNode)((0, _vlistGroupMjs.VListGroup), (0, _vue.mergeProps)({
                    "value": itemProps?.value
                }, listGroupProps), {
                    activator: (_ref3)=>{
                        let { props: activatorProps } = _ref3;
                        const listItemProps = {
                            ...itemProps,
                            ...activatorProps,
                            value: props.returnObject ? item : itemProps.value
                        };
                        return slots.header ? slots.header({
                            props: listItemProps
                        }) : (0, _vue.createVNode)((0, _vlistItemMjs.VListItem), listItemProps, slotsWithItem);
                    },
                    default: ()=>(0, _vue.createVNode)(VListChildren, {
                            "items": children,
                            "returnObject": props.returnObject
                        }, slots)
                }) : slots.item ? slots.item({
                    props: itemProps
                }) : (0, _vue.createVNode)((0, _vlistItemMjs.VListItem), (0, _vue.mergeProps)(itemProps, {
                    "value": props.returnObject ? item : itemProps.value
                }), slotsWithItem);
            });
    }
});

},{"vue":"gCTam","./VListGroup.mjs":"fKhae","./VListItem.mjs":"jZhwb","./VListSubheader.mjs":"52w5r","../VDivider/index.mjs":"bj3uM","./list.mjs":"c1o9Q","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"fKhae":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVListGroupProps", ()=>makeVListGroupProps);
parcelHelpers.export(exports, "VListGroup", ()=>VListGroup);
var _vue = require("vue");
// Components
var _indexMjs = require("../transitions/index.mjs");
var _indexMjs1 = require("../VDefaultsProvider/index.mjs"); // Composables
var _listMjs = require("./list.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _iconsMjs = require("../../composables/icons.mjs");
var _nestedMjs = require("../../composables/nested/nested.mjs");
var _ssrBootMjs = require("../../composables/ssrBoot.mjs");
var _tagMjs = require("../../composables/tag.mjs");
var _transitionMjs = require("../../composables/transition.mjs"); // Utilities
var _indexMjs2 = require("../../util/index.mjs");
const VListGroupActivator = (0, _indexMjs2.defineComponent)({
    name: "VListGroupActivator",
    setup (_, _ref) {
        let { slots } = _ref;
        (0, _nestedMjs.useNestedGroupActivator)();
        return ()=>slots.default?.();
    }
});
const makeVListGroupProps = (0, _indexMjs2.propsFactory)({
    /* @deprecated */ activeColor: String,
    baseColor: String,
    color: String,
    collapseIcon: {
        type: (0, _iconsMjs.IconValue),
        default: "$collapse"
    },
    expandIcon: {
        type: (0, _iconsMjs.IconValue),
        default: "$expand"
    },
    prependIcon: (0, _iconsMjs.IconValue),
    appendIcon: (0, _iconsMjs.IconValue),
    fluid: Boolean,
    subgroup: Boolean,
    title: String,
    value: null,
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _tagMjs.makeTagProps)()
}, "VListGroup");
const VListGroup = (0, _indexMjs2.genericComponent)()({
    name: "VListGroup",
    props: makeVListGroupProps(),
    setup (props, _ref2) {
        let { slots } = _ref2;
        const { isOpen, open, id: _id } = (0, _nestedMjs.useNestedItem)((0, _vue.toRef)(props, "value"), true);
        const id = (0, _vue.computed)(()=>`v-list-group--id-${String(_id.value)}`);
        const list = (0, _listMjs.useList)();
        const { isBooted } = (0, _ssrBootMjs.useSsrBoot)();
        function onClick(e) {
            e.stopPropagation();
            open(!isOpen.value, e);
        }
        const activatorProps = (0, _vue.computed)(()=>({
                onClick,
                class: "v-list-group__header",
                id: id.value
            }));
        const toggleIcon = (0, _vue.computed)(()=>isOpen.value ? props.collapseIcon : props.expandIcon);
        const activatorDefaults = (0, _vue.computed)(()=>({
                VListItem: {
                    active: isOpen.value,
                    activeColor: props.activeColor,
                    baseColor: props.baseColor,
                    color: props.color,
                    prependIcon: props.prependIcon || props.subgroup && toggleIcon.value,
                    appendIcon: props.appendIcon || !props.subgroup && toggleIcon.value,
                    title: props.title,
                    value: props.value
                }
            }));
        (0, _indexMjs2.useRender)(()=>(0, _vue.createVNode)(props.tag, {
                "class": [
                    "v-list-group",
                    {
                        "v-list-group--prepend": list?.hasPrepend.value,
                        "v-list-group--fluid": props.fluid,
                        "v-list-group--subgroup": props.subgroup,
                        "v-list-group--open": isOpen.value
                    },
                    props.class
                ],
                "style": props.style
            }, {
                default: ()=>[
                        slots.activator && (0, _vue.createVNode)((0, _indexMjs1.VDefaultsProvider), {
                            "defaults": activatorDefaults.value
                        }, {
                            default: ()=>[
                                    (0, _vue.createVNode)(VListGroupActivator, null, {
                                        default: ()=>[
                                                slots.activator({
                                                    props: activatorProps.value,
                                                    isOpen: isOpen.value
                                                })
                                            ]
                                    })
                                ]
                        }),
                        (0, _vue.createVNode)((0, _transitionMjs.MaybeTransition), {
                            "transition": {
                                component: (0, _indexMjs.VExpandTransition)
                            },
                            "disabled": !isBooted.value
                        }, {
                            default: ()=>[
                                    (0, _vue.withDirectives)((0, _vue.createVNode)("div", {
                                        "class": "v-list-group__items",
                                        "role": "group",
                                        "aria-labelledby": id.value
                                    }, [
                                        slots.default?.()
                                    ]), [
                                        [
                                            (0, _vue.vShow),
                                            isOpen.value
                                        ]
                                    ])
                                ]
                        })
                    ]
            }));
        return {
            isOpen
        };
    }
});

},{"vue":"gCTam","../transitions/index.mjs":"3ybHr","../VDefaultsProvider/index.mjs":"eFFvH","./list.mjs":"c1o9Q","../../composables/component.mjs":"4YAxs","../../composables/icons.mjs":"g4kLv","../../composables/nested/nested.mjs":"kGbBw","../../composables/ssrBoot.mjs":"bVwDz","../../composables/tag.mjs":"3LqcC","../../composables/transition.mjs":"dJyg1","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"c1o9Q":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "DepthKey", ()=>DepthKey);
parcelHelpers.export(exports, "useDepth", ()=>useDepth);
parcelHelpers.export(exports, "ListKey", ()=>ListKey);
parcelHelpers.export(exports, "createList", ()=>createList);
parcelHelpers.export(exports, "useList", ()=>useList);
var _vue = require("vue");
const DepthKey = Symbol.for("vuetify:depth");
function useDepth(hasPrepend) {
    const parent = (0, _vue.inject)(DepthKey, (0, _vue.shallowRef)(-1));
    const depth = (0, _vue.computed)(()=>parent.value + 1 + (hasPrepend?.value ? 1 : 0));
    (0, _vue.provide)(DepthKey, depth);
    return depth;
}
const ListKey = Symbol.for("vuetify:list");
function createList() {
    const parent = (0, _vue.inject)(ListKey, {
        hasPrepend: (0, _vue.shallowRef)(false),
        updateHasPrepend: ()=>null
    });
    const data = {
        hasPrepend: (0, _vue.shallowRef)(false),
        updateHasPrepend: (value)=>{
            if (value) data.hasPrepend.value = value;
        }
    };
    (0, _vue.provide)(ListKey, data);
    return parent;
}
function useList() {
    return (0, _vue.inject)(ListKey, null);
}

},{"vue":"gCTam","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"kGbBw":[function(require,module,exports) {
// Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VNestedSymbol", ()=>VNestedSymbol);
parcelHelpers.export(exports, "emptyNested", ()=>emptyNested);
parcelHelpers.export(exports, "makeNestedProps", ()=>makeNestedProps);
parcelHelpers.export(exports, "useNested", ()=>useNested);
parcelHelpers.export(exports, "useNestedItem", ()=>useNestedItem);
parcelHelpers.export(exports, "useNestedGroupActivator", ()=>useNestedGroupActivator);
var _proxiedModelMjs = require("../proxiedModel.mjs"); // Utilities
var _vue = require("vue");
var _activeStrategiesMjs = require("./activeStrategies.mjs");
var _openStrategiesMjs = require("./openStrategies.mjs");
var _selectStrategiesMjs = require("./selectStrategies.mjs");
var _indexMjs = require("../../util/index.mjs"); // Types
const VNestedSymbol = Symbol.for("vuetify:nested");
const emptyNested = {
    id: (0, _vue.shallowRef)(),
    root: {
        register: ()=>null,
        unregister: ()=>null,
        parents: (0, _vue.ref)(new Map()),
        children: (0, _vue.ref)(new Map()),
        open: ()=>null,
        openOnSelect: ()=>null,
        activate: ()=>null,
        select: ()=>null,
        activatable: (0, _vue.ref)(false),
        selectable: (0, _vue.ref)(false),
        opened: (0, _vue.ref)(new Set()),
        activated: (0, _vue.ref)(new Set()),
        selected: (0, _vue.ref)(new Map()),
        selectedValues: (0, _vue.ref)([])
    }
};
const makeNestedProps = (0, _indexMjs.propsFactory)({
    activatable: Boolean,
    selectable: Boolean,
    activeStrategy: [
        String,
        Function,
        Object
    ],
    selectStrategy: [
        String,
        Function,
        Object
    ],
    openStrategy: [
        String,
        Object
    ],
    opened: null,
    activated: null,
    selected: null,
    mandatory: Boolean
}, "nested");
const useNested = (props)=>{
    let isUnmounted = false;
    const children = (0, _vue.ref)(new Map());
    const parents = (0, _vue.ref)(new Map());
    const opened = (0, _proxiedModelMjs.useProxiedModel)(props, "opened", props.opened, (v)=>new Set((0, _vue.toRaw)(v)), (v)=>[
            ...v.values()
        ]);
    const activeStrategy = (0, _vue.computed)(()=>{
        if (typeof props.activeStrategy === "object") return props.activeStrategy;
        if (typeof props.activeStrategy === "function") return props.activeStrategy(props.mandatory);
        switch(props.activeStrategy){
            case "leaf":
                return (0, _activeStrategiesMjs.leafActiveStrategy)(props.mandatory);
            case "single-leaf":
                return (0, _activeStrategiesMjs.leafSingleActiveStrategy)(props.mandatory);
            case "independent":
                return (0, _activeStrategiesMjs.independentActiveStrategy)(props.mandatory);
            case "single-independent":
            default:
                return (0, _activeStrategiesMjs.independentSingleActiveStrategy)(props.mandatory);
        }
    });
    const selectStrategy = (0, _vue.computed)(()=>{
        if (typeof props.selectStrategy === "object") return props.selectStrategy;
        if (typeof props.selectStrategy === "function") return props.selectStrategy(props.mandatory);
        switch(props.selectStrategy){
            case "single-leaf":
                return (0, _selectStrategiesMjs.leafSingleSelectStrategy)(props.mandatory);
            case "leaf":
                return (0, _selectStrategiesMjs.leafSelectStrategy)(props.mandatory);
            case "independent":
                return (0, _selectStrategiesMjs.independentSelectStrategy)(props.mandatory);
            case "single-independent":
                return (0, _selectStrategiesMjs.independentSingleSelectStrategy)(props.mandatory);
            case "classic":
            default:
                return (0, _selectStrategiesMjs.classicSelectStrategy)(props.mandatory);
        }
    });
    const openStrategy = (0, _vue.computed)(()=>{
        if (typeof props.openStrategy === "object") return props.openStrategy;
        switch(props.openStrategy){
            case "list":
                return 0, _openStrategiesMjs.listOpenStrategy;
            case "single":
                return 0, _openStrategiesMjs.singleOpenStrategy;
            case "multiple":
            default:
                return 0, _openStrategiesMjs.multipleOpenStrategy;
        }
    });
    const activated = (0, _proxiedModelMjs.useProxiedModel)(props, "activated", props.activated, (v)=>activeStrategy.value.in(v, children.value, parents.value), (v)=>activeStrategy.value.out(v, children.value, parents.value));
    const selected = (0, _proxiedModelMjs.useProxiedModel)(props, "selected", props.selected, (v)=>selectStrategy.value.in(v, children.value, parents.value), (v)=>selectStrategy.value.out(v, children.value, parents.value));
    (0, _vue.onBeforeUnmount)(()=>{
        isUnmounted = true;
    });
    function getPath(id) {
        const path = [];
        let parent = id;
        while(parent != null){
            path.unshift(parent);
            parent = parents.value.get(parent);
        }
        return path;
    }
    const vm = (0, _indexMjs.getCurrentInstance)("nested");
    const nested = {
        id: (0, _vue.shallowRef)(),
        root: {
            opened,
            activatable: (0, _vue.toRef)(props, "activatable"),
            selectable: (0, _vue.toRef)(props, "selectable"),
            activated,
            selected,
            selectedValues: (0, _vue.computed)(()=>{
                const arr = [];
                for (const [key, value] of selected.value.entries())if (value === "on") arr.push(key);
                return arr;
            }),
            register: (id, parentId, isGroup)=>{
                parentId && id !== parentId && parents.value.set(id, parentId);
                isGroup && children.value.set(id, []);
                if (parentId != null) children.value.set(parentId, [
                    ...children.value.get(parentId) || [],
                    id
                ]);
            },
            unregister: (id)=>{
                if (isUnmounted) return;
                children.value.delete(id);
                const parent = parents.value.get(id);
                if (parent) {
                    const list = children.value.get(parent) ?? [];
                    children.value.set(parent, list.filter((child)=>child !== id));
                }
                parents.value.delete(id);
            },
            open: (id, value, event)=>{
                vm.emit("click:open", {
                    id,
                    value,
                    path: getPath(id),
                    event
                });
                const newOpened = openStrategy.value.open({
                    id,
                    value,
                    opened: new Set(opened.value),
                    children: children.value,
                    parents: parents.value,
                    event
                });
                newOpened && (opened.value = newOpened);
            },
            openOnSelect: (id, value, event)=>{
                const newOpened = openStrategy.value.select({
                    id,
                    value,
                    selected: new Map(selected.value),
                    opened: new Set(opened.value),
                    children: children.value,
                    parents: parents.value,
                    event
                });
                newOpened && (opened.value = newOpened);
            },
            select: (id, value, event)=>{
                vm.emit("click:select", {
                    id,
                    value,
                    path: getPath(id),
                    event
                });
                const newSelected = selectStrategy.value.select({
                    id,
                    value,
                    selected: new Map(selected.value),
                    children: children.value,
                    parents: parents.value,
                    event
                });
                newSelected && (selected.value = newSelected);
                nested.root.openOnSelect(id, value, event);
            },
            activate: (id, value, event)=>{
                if (!props.activatable) return nested.root.select(id, true, event);
                vm.emit("click:activate", {
                    id,
                    value,
                    path: getPath(id),
                    event
                });
                const newActivated = activeStrategy.value.activate({
                    id,
                    value,
                    activated: new Set(activated.value),
                    children: children.value,
                    parents: parents.value,
                    event
                });
                newActivated && (activated.value = newActivated);
            },
            children,
            parents
        }
    };
    (0, _vue.provide)(VNestedSymbol, nested);
    return nested.root;
};
const useNestedItem = (id, isGroup)=>{
    const parent = (0, _vue.inject)(VNestedSymbol, emptyNested);
    const uidSymbol = Symbol((0, _indexMjs.getUid)());
    const computedId = (0, _vue.computed)(()=>id.value !== undefined ? id.value : uidSymbol);
    const item = {
        ...parent,
        id: computedId,
        open: (open, e)=>parent.root.open((0, _vue.toRaw)(computedId.value), open, e),
        openOnSelect: (open, e)=>parent.root.openOnSelect(computedId.value, open, e),
        isOpen: (0, _vue.computed)(()=>parent.root.opened.value.has((0, _vue.toRaw)(computedId.value))),
        parent: (0, _vue.computed)(()=>parent.root.parents.value.get(computedId.value)),
        activate: (activated, e)=>parent.root.activate(computedId.value, activated, e),
        isActivated: (0, _vue.computed)(()=>parent.root.activated.value.has((0, _vue.toRaw)(computedId.value))),
        select: (selected, e)=>parent.root.select(computedId.value, selected, e),
        isSelected: (0, _vue.computed)(()=>parent.root.selected.value.get((0, _vue.toRaw)(computedId.value)) === "on"),
        isIndeterminate: (0, _vue.computed)(()=>parent.root.selected.value.get(computedId.value) === "indeterminate"),
        isLeaf: (0, _vue.computed)(()=>!parent.root.children.value.get(computedId.value)),
        isGroupActivator: parent.isGroupActivator
    };
    !parent.isGroupActivator && parent.root.register(computedId.value, parent.id.value, isGroup);
    (0, _vue.onBeforeUnmount)(()=>{
        !parent.isGroupActivator && parent.root.unregister(computedId.value);
    });
    isGroup && (0, _vue.provide)(VNestedSymbol, item);
    return item;
};
const useNestedGroupActivator = ()=>{
    const parent = (0, _vue.inject)(VNestedSymbol, emptyNested);
    (0, _vue.provide)(VNestedSymbol, {
        ...parent,
        isGroupActivator: true
    });
};

},{"../proxiedModel.mjs":"huwLk","vue":"gCTam","./activeStrategies.mjs":"bWD5n","./openStrategies.mjs":"fDDlS","./selectStrategies.mjs":"9zzs8","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"bWD5n":[function(require,module,exports) {
/* eslint-disable sonarjs/no-identical-functions */ // Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "independentActiveStrategy", ()=>independentActiveStrategy);
parcelHelpers.export(exports, "independentSingleActiveStrategy", ()=>independentSingleActiveStrategy);
parcelHelpers.export(exports, "leafActiveStrategy", ()=>leafActiveStrategy);
parcelHelpers.export(exports, "leafSingleActiveStrategy", ()=>leafSingleActiveStrategy);
var _vue = require("vue");
var _indexMjs = require("../../util/index.mjs");
const independentActiveStrategy = (mandatory)=>{
    const strategy = {
        activate: (_ref)=>{
            let { id, value, activated } = _ref;
            id = (0, _vue.toRaw)(id);
            // When mandatory and we're trying to deselect when id
            // is the only currently selected item then do nothing
            if (mandatory && !value && activated.size === 1 && activated.has(id)) return activated;
            if (value) activated.add(id);
            else activated.delete(id);
            return activated;
        },
        in: (v, children, parents)=>{
            let set = new Set();
            if (v != null) for (const id of (0, _indexMjs.wrapInArray)(v))set = strategy.activate({
                id,
                value: true,
                activated: new Set(set),
                children,
                parents
            });
            return set;
        },
        out: (v)=>{
            return Array.from(v);
        }
    };
    return strategy;
};
const independentSingleActiveStrategy = (mandatory)=>{
    const parentStrategy = independentActiveStrategy(mandatory);
    const strategy = {
        activate: (_ref2)=>{
            let { activated, id, ...rest } = _ref2;
            id = (0, _vue.toRaw)(id);
            const singleSelected = activated.has(id) ? new Set([
                id
            ]) : new Set();
            return parentStrategy.activate({
                ...rest,
                id,
                activated: singleSelected
            });
        },
        in: (v, children, parents)=>{
            let set = new Set();
            if (v != null) {
                const arr = (0, _indexMjs.wrapInArray)(v);
                if (arr.length) set = parentStrategy.in(arr.slice(0, 1), children, parents);
            }
            return set;
        },
        out: (v, children, parents)=>{
            return parentStrategy.out(v, children, parents);
        }
    };
    return strategy;
};
const leafActiveStrategy = (mandatory)=>{
    const parentStrategy = independentActiveStrategy(mandatory);
    const strategy = {
        activate: (_ref3)=>{
            let { id, activated, children, ...rest } = _ref3;
            id = (0, _vue.toRaw)(id);
            if (children.has(id)) return activated;
            return parentStrategy.activate({
                id,
                activated,
                children,
                ...rest
            });
        },
        in: parentStrategy.in,
        out: parentStrategy.out
    };
    return strategy;
};
const leafSingleActiveStrategy = (mandatory)=>{
    const parentStrategy = independentSingleActiveStrategy(mandatory);
    const strategy = {
        activate: (_ref4)=>{
            let { id, activated, children, ...rest } = _ref4;
            id = (0, _vue.toRaw)(id);
            if (children.has(id)) return activated;
            return parentStrategy.activate({
                id,
                activated,
                children,
                ...rest
            });
        },
        in: parentStrategy.in,
        out: parentStrategy.out
    };
    return strategy;
};

},{"vue":"gCTam","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"fDDlS":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "singleOpenStrategy", ()=>singleOpenStrategy);
parcelHelpers.export(exports, "multipleOpenStrategy", ()=>multipleOpenStrategy);
parcelHelpers.export(exports, "listOpenStrategy", ()=>listOpenStrategy);
var _vue = require("vue");
const singleOpenStrategy = {
    open: (_ref)=>{
        let { id, value, opened, parents } = _ref;
        if (value) {
            const newOpened = new Set();
            newOpened.add(id);
            let parent = parents.get(id);
            while(parent != null){
                newOpened.add(parent);
                parent = parents.get(parent);
            }
            return newOpened;
        } else {
            opened.delete(id);
            return opened;
        }
    },
    select: ()=>null
};
const multipleOpenStrategy = {
    open: (_ref2)=>{
        let { id, value, opened, parents } = _ref2;
        if (value) {
            let parent = (0, _vue.toRaw)(parents.get(id));
            opened.add(id);
            while(parent != null && parent !== id){
                opened.add(parent);
                parent = (0, _vue.toRaw)(parents.get(parent));
            }
            return opened;
        } else opened.delete(id);
        return opened;
    },
    select: ()=>null
};
const listOpenStrategy = {
    open: multipleOpenStrategy.open,
    select: (_ref3)=>{
        let { id, value, opened, parents } = _ref3;
        if (!value) return opened;
        const path = [];
        let parent = parents.get(id);
        while(parent != null){
            path.push(parent);
            parent = parents.get(parent);
        }
        return new Set(path);
    }
};

},{"vue":"gCTam","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"9zzs8":[function(require,module,exports) {
/* eslint-disable sonarjs/no-identical-functions */ // Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "independentSelectStrategy", ()=>independentSelectStrategy);
parcelHelpers.export(exports, "independentSingleSelectStrategy", ()=>independentSingleSelectStrategy);
parcelHelpers.export(exports, "leafSelectStrategy", ()=>leafSelectStrategy);
parcelHelpers.export(exports, "leafSingleSelectStrategy", ()=>leafSingleSelectStrategy);
parcelHelpers.export(exports, "classicSelectStrategy", ()=>classicSelectStrategy);
var _vue = require("vue");
const independentSelectStrategy = (mandatory)=>{
    const strategy = {
        select: (_ref)=>{
            let { id, value, selected } = _ref;
            id = (0, _vue.toRaw)(id);
            // When mandatory and we're trying to deselect when id
            // is the only currently selected item then do nothing
            if (mandatory && !value) {
                const on = Array.from(selected.entries()).reduce((arr, _ref2)=>{
                    let [key, value] = _ref2;
                    if (value === "on") arr.push(key);
                    return arr;
                }, []);
                if (on.length === 1 && on[0] === id) return selected;
            }
            selected.set(id, value ? "on" : "off");
            return selected;
        },
        in: (v, children, parents)=>{
            let map = new Map();
            for (const id of v || [])map = strategy.select({
                id,
                value: true,
                selected: new Map(map),
                children,
                parents
            });
            return map;
        },
        out: (v)=>{
            const arr = [];
            for (const [key, value] of v.entries())if (value === "on") arr.push(key);
            return arr;
        }
    };
    return strategy;
};
const independentSingleSelectStrategy = (mandatory)=>{
    const parentStrategy = independentSelectStrategy(mandatory);
    const strategy = {
        select: (_ref3)=>{
            let { selected, id, ...rest } = _ref3;
            id = (0, _vue.toRaw)(id);
            const singleSelected = selected.has(id) ? new Map([
                [
                    id,
                    selected.get(id)
                ]
            ]) : new Map();
            return parentStrategy.select({
                ...rest,
                id,
                selected: singleSelected
            });
        },
        in: (v, children, parents)=>{
            let map = new Map();
            if (v?.length) map = parentStrategy.in(v.slice(0, 1), children, parents);
            return map;
        },
        out: (v, children, parents)=>{
            return parentStrategy.out(v, children, parents);
        }
    };
    return strategy;
};
const leafSelectStrategy = (mandatory)=>{
    const parentStrategy = independentSelectStrategy(mandatory);
    const strategy = {
        select: (_ref4)=>{
            let { id, selected, children, ...rest } = _ref4;
            id = (0, _vue.toRaw)(id);
            if (children.has(id)) return selected;
            return parentStrategy.select({
                id,
                selected,
                children,
                ...rest
            });
        },
        in: parentStrategy.in,
        out: parentStrategy.out
    };
    return strategy;
};
const leafSingleSelectStrategy = (mandatory)=>{
    const parentStrategy = independentSingleSelectStrategy(mandatory);
    const strategy = {
        select: (_ref5)=>{
            let { id, selected, children, ...rest } = _ref5;
            id = (0, _vue.toRaw)(id);
            if (children.has(id)) return selected;
            return parentStrategy.select({
                id,
                selected,
                children,
                ...rest
            });
        },
        in: parentStrategy.in,
        out: parentStrategy.out
    };
    return strategy;
};
const classicSelectStrategy = (mandatory)=>{
    const strategy = {
        select: (_ref6)=>{
            let { id, value, selected, children, parents } = _ref6;
            id = (0, _vue.toRaw)(id);
            const original = new Map(selected);
            const items = [
                id
            ];
            while(items.length){
                const item = items.shift();
                selected.set((0, _vue.toRaw)(item), value ? "on" : "off");
                if (children.has(item)) items.push(...children.get(item));
            }
            let parent = (0, _vue.toRaw)(parents.get(id));
            while(parent){
                const childrenIds = children.get(parent);
                const everySelected = childrenIds.every((cid)=>selected.get((0, _vue.toRaw)(cid)) === "on");
                const noneSelected = childrenIds.every((cid)=>!selected.has((0, _vue.toRaw)(cid)) || selected.get((0, _vue.toRaw)(cid)) === "off");
                selected.set(parent, everySelected ? "on" : noneSelected ? "off" : "indeterminate");
                parent = (0, _vue.toRaw)(parents.get(parent));
            }
            // If mandatory and planned deselect results in no selected
            // items then we can't do it, so return original state
            if (mandatory && !value) {
                const on = Array.from(selected.entries()).reduce((arr, _ref7)=>{
                    let [key, value] = _ref7;
                    if (value === "on") arr.push(key);
                    return arr;
                }, []);
                if (on.length === 0) return original;
            }
            return selected;
        },
        in: (v, children, parents)=>{
            let map = new Map();
            for (const id of v || [])map = strategy.select({
                id,
                value: true,
                selected: new Map(map),
                children,
                parents
            });
            return map;
        },
        out: (v, children)=>{
            const arr = [];
            for (const [key, value] of v.entries())if (value === "on" && !children.has(key)) arr.push(key);
            return arr;
        }
    };
    return strategy;
};

},{"vue":"gCTam","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"jZhwb":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVListItemProps", ()=>makeVListItemProps);
parcelHelpers.export(exports, "VListItem", ()=>VListItem);
var _vue = require("vue");
// Styles
var _vlistItemCss = require("./VListItem.css");
// Components
var _vlistItemSubtitleMjs = require("./VListItemSubtitle.mjs");
var _vlistItemTitleMjs = require("./VListItemTitle.mjs");
var _indexMjs = require("../VAvatar/index.mjs");
var _indexMjs1 = require("../VDefaultsProvider/index.mjs");
var _indexMjs2 = require("../VIcon/index.mjs"); // Composables
var _listMjs = require("./list.mjs");
var _borderMjs = require("../../composables/border.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _densityMjs = require("../../composables/density.mjs");
var _dimensionsMjs = require("../../composables/dimensions.mjs");
var _elevationMjs = require("../../composables/elevation.mjs");
var _iconsMjs = require("../../composables/icons.mjs");
var _nestedMjs = require("../../composables/nested/nested.mjs");
var _roundedMjs = require("../../composables/rounded.mjs");
var _routerMjs = require("../../composables/router.mjs");
var _tagMjs = require("../../composables/tag.mjs");
var _themeMjs = require("../../composables/theme.mjs");
var _variantMjs = require("../../composables/variant.mjs"); // Directives
var _indexMjs3 = require("../../directives/ripple/index.mjs"); // Utilities
var _indexMjs4 = require("../../util/index.mjs"); // Types
const makeVListItemProps = (0, _indexMjs4.propsFactory)({
    active: {
        type: Boolean,
        default: undefined
    },
    activeClass: String,
    /* @deprecated */ activeColor: String,
    appendAvatar: String,
    appendIcon: (0, _iconsMjs.IconValue),
    baseColor: String,
    disabled: Boolean,
    lines: [
        Boolean,
        String
    ],
    link: {
        type: Boolean,
        default: undefined
    },
    nav: Boolean,
    prependAvatar: String,
    prependIcon: (0, _iconsMjs.IconValue),
    ripple: {
        type: [
            Boolean,
            Object
        ],
        default: true
    },
    slim: Boolean,
    subtitle: [
        String,
        Number
    ],
    title: [
        String,
        Number
    ],
    value: null,
    onClick: (0, _indexMjs4.EventProp)(),
    onClickOnce: (0, _indexMjs4.EventProp)(),
    ...(0, _borderMjs.makeBorderProps)(),
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _densityMjs.makeDensityProps)(),
    ...(0, _dimensionsMjs.makeDimensionProps)(),
    ...(0, _elevationMjs.makeElevationProps)(),
    ...(0, _roundedMjs.makeRoundedProps)(),
    ...(0, _routerMjs.makeRouterProps)(),
    ...(0, _tagMjs.makeTagProps)(),
    ...(0, _themeMjs.makeThemeProps)(),
    ...(0, _variantMjs.makeVariantProps)({
        variant: "text"
    })
}, "VListItem");
const VListItem = (0, _indexMjs4.genericComponent)()({
    name: "VListItem",
    directives: {
        Ripple: (0, _indexMjs3.Ripple)
    },
    props: makeVListItemProps(),
    emits: {
        click: (e)=>true
    },
    setup (props, _ref) {
        let { attrs, slots, emit } = _ref;
        const link = (0, _routerMjs.useLink)(props, attrs);
        const id = (0, _vue.computed)(()=>props.value === undefined ? link.href.value : props.value);
        const { activate, isActivated, select, isOpen, isSelected, isIndeterminate, isGroupActivator, root, parent, openOnSelect } = (0, _nestedMjs.useNestedItem)(id, false);
        const list = (0, _listMjs.useList)();
        const isActive = (0, _vue.computed)(()=>props.active !== false && (props.active || link.isActive?.value || (root.activatable.value ? isActivated.value : isSelected.value)));
        const isLink = (0, _vue.computed)(()=>props.link !== false && link.isLink.value);
        const isClickable = (0, _vue.computed)(()=>!props.disabled && props.link !== false && (props.link || link.isClickable.value || !!list && (root.selectable.value || root.activatable.value || props.value != null)));
        const roundedProps = (0, _vue.computed)(()=>props.rounded || props.nav);
        const color = (0, _vue.computed)(()=>props.color ?? props.activeColor);
        const variantProps = (0, _vue.computed)(()=>({
                color: isActive.value ? color.value ?? props.baseColor : props.baseColor,
                variant: props.variant
            }));
        (0, _vue.watch)(()=>link.isActive?.value, (val)=>{
            if (val && parent.value != null) root.open(parent.value, true);
            if (val) openOnSelect(val);
        }, {
            immediate: true
        });
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const { borderClasses } = (0, _borderMjs.useBorder)(props);
        const { colorClasses, colorStyles, variantClasses } = (0, _variantMjs.useVariant)(variantProps);
        const { densityClasses } = (0, _densityMjs.useDensity)(props);
        const { dimensionStyles } = (0, _dimensionsMjs.useDimension)(props);
        const { elevationClasses } = (0, _elevationMjs.useElevation)(props);
        const { roundedClasses } = (0, _roundedMjs.useRounded)(roundedProps);
        const lineClasses = (0, _vue.computed)(()=>props.lines ? `v-list-item--${props.lines}-line` : undefined);
        const slotProps = (0, _vue.computed)(()=>({
                isActive: isActive.value,
                select,
                isOpen: isOpen.value,
                isSelected: isSelected.value,
                isIndeterminate: isIndeterminate.value
            }));
        function onClick(e) {
            emit("click", e);
            if (!isClickable.value) return;
            link.navigate?.(e);
            if (isGroupActivator) return;
            if (root.activatable.value) activate(!isActivated.value, e);
            else if (root.selectable.value) select(!isSelected.value, e);
            else if (props.value != null) select(!isSelected.value, e);
        }
        function onKeyDown(e) {
            if (e.key === "Enter" || e.key === " ") {
                e.preventDefault();
                e.target.dispatchEvent(new MouseEvent("click", e));
            }
        }
        (0, _indexMjs4.useRender)(()=>{
            const Tag = isLink.value ? "a" : props.tag;
            const hasTitle = slots.title || props.title != null;
            const hasSubtitle = slots.subtitle || props.subtitle != null;
            const hasAppendMedia = !!(props.appendAvatar || props.appendIcon);
            const hasAppend = !!(hasAppendMedia || slots.append);
            const hasPrependMedia = !!(props.prependAvatar || props.prependIcon);
            const hasPrepend = !!(hasPrependMedia || slots.prepend);
            list?.updateHasPrepend(hasPrepend);
            if (props.activeColor) (0, _indexMjs4.deprecate)("active-color", [
                "color",
                "base-color"
            ]);
            return (0, _vue.withDirectives)((0, _vue.createVNode)(Tag, {
                "class": [
                    "v-list-item",
                    {
                        "v-list-item--active": isActive.value,
                        "v-list-item--disabled": props.disabled,
                        "v-list-item--link": isClickable.value,
                        "v-list-item--nav": props.nav,
                        "v-list-item--prepend": !hasPrepend && list?.hasPrepend.value,
                        "v-list-item--slim": props.slim,
                        [`${props.activeClass}`]: props.activeClass && isActive.value
                    },
                    themeClasses.value,
                    borderClasses.value,
                    colorClasses.value,
                    densityClasses.value,
                    elevationClasses.value,
                    lineClasses.value,
                    roundedClasses.value,
                    variantClasses.value,
                    props.class
                ],
                "style": [
                    colorStyles.value,
                    dimensionStyles.value,
                    props.style
                ],
                "href": link.href.value,
                "tabindex": isClickable.value ? list ? -2 : 0 : undefined,
                "onClick": onClick,
                "onKeydown": isClickable.value && !isLink.value && onKeyDown
            }, {
                default: ()=>[
                        (0, _variantMjs.genOverlays)(isClickable.value || isActive.value, "v-list-item"),
                        hasPrepend && (0, _vue.createVNode)("div", {
                            "key": "prepend",
                            "class": "v-list-item__prepend"
                        }, [
                            !slots.prepend ? (0, _vue.createVNode)((0, _vue.Fragment), null, [
                                props.prependAvatar && (0, _vue.createVNode)((0, _indexMjs.VAvatar), {
                                    "key": "prepend-avatar",
                                    "density": props.density,
                                    "image": props.prependAvatar
                                }, null),
                                props.prependIcon && (0, _vue.createVNode)((0, _indexMjs2.VIcon), {
                                    "key": "prepend-icon",
                                    "density": props.density,
                                    "icon": props.prependIcon
                                }, null)
                            ]) : (0, _vue.createVNode)((0, _indexMjs1.VDefaultsProvider), {
                                "key": "prepend-defaults",
                                "disabled": !hasPrependMedia,
                                "defaults": {
                                    VAvatar: {
                                        density: props.density,
                                        image: props.prependAvatar
                                    },
                                    VIcon: {
                                        density: props.density,
                                        icon: props.prependIcon
                                    },
                                    VListItemAction: {
                                        start: true
                                    }
                                }
                            }, {
                                default: ()=>[
                                        slots.prepend?.(slotProps.value)
                                    ]
                            }),
                            (0, _vue.createVNode)("div", {
                                "class": "v-list-item__spacer"
                            }, null)
                        ]),
                        (0, _vue.createVNode)("div", {
                            "class": "v-list-item__content",
                            "data-no-activator": ""
                        }, [
                            hasTitle && (0, _vue.createVNode)((0, _vlistItemTitleMjs.VListItemTitle), {
                                "key": "title"
                            }, {
                                default: ()=>[
                                        slots.title?.({
                                            title: props.title
                                        }) ?? props.title
                                    ]
                            }),
                            hasSubtitle && (0, _vue.createVNode)((0, _vlistItemSubtitleMjs.VListItemSubtitle), {
                                "key": "subtitle"
                            }, {
                                default: ()=>[
                                        slots.subtitle?.({
                                            subtitle: props.subtitle
                                        }) ?? props.subtitle
                                    ]
                            }),
                            slots.default?.(slotProps.value)
                        ]),
                        hasAppend && (0, _vue.createVNode)("div", {
                            "key": "append",
                            "class": "v-list-item__append"
                        }, [
                            !slots.append ? (0, _vue.createVNode)((0, _vue.Fragment), null, [
                                props.appendIcon && (0, _vue.createVNode)((0, _indexMjs2.VIcon), {
                                    "key": "append-icon",
                                    "density": props.density,
                                    "icon": props.appendIcon
                                }, null),
                                props.appendAvatar && (0, _vue.createVNode)((0, _indexMjs.VAvatar), {
                                    "key": "append-avatar",
                                    "density": props.density,
                                    "image": props.appendAvatar
                                }, null)
                            ]) : (0, _vue.createVNode)((0, _indexMjs1.VDefaultsProvider), {
                                "key": "append-defaults",
                                "disabled": !hasAppendMedia,
                                "defaults": {
                                    VAvatar: {
                                        density: props.density,
                                        image: props.appendAvatar
                                    },
                                    VIcon: {
                                        density: props.density,
                                        icon: props.appendIcon
                                    },
                                    VListItemAction: {
                                        end: true
                                    }
                                }
                            }, {
                                default: ()=>[
                                        slots.append?.(slotProps.value)
                                    ]
                            }),
                            (0, _vue.createVNode)("div", {
                                "class": "v-list-item__spacer"
                            }, null)
                        ])
                    ]
            }), [
                [
                    (0, _vue.resolveDirective)("ripple"),
                    isClickable.value && props.ripple
                ]
            ]);
        });
        return {
            activate,
            isActivated,
            isGroupActivator,
            isSelected,
            list,
            select
        };
    }
});

},{"vue":"gCTam","./VListItem.css":"a5hLo","./VListItemSubtitle.mjs":"8PY9u","./VListItemTitle.mjs":"7Wkkt","../VAvatar/index.mjs":"d9olW","../VDefaultsProvider/index.mjs":"eFFvH","../VIcon/index.mjs":"5Yjjr","./list.mjs":"c1o9Q","../../composables/border.mjs":"iYaxw","../../composables/component.mjs":"4YAxs","../../composables/density.mjs":"kOsEB","../../composables/dimensions.mjs":"daVmy","../../composables/elevation.mjs":"aNIiI","../../composables/icons.mjs":"g4kLv","../../composables/nested/nested.mjs":"kGbBw","../../composables/rounded.mjs":"1RfhA","../../composables/router.mjs":"8IJEw","../../composables/tag.mjs":"3LqcC","../../composables/theme.mjs":"c9HGg","../../composables/variant.mjs":"ivQo4","../../directives/ripple/index.mjs":"41ncU","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"a5hLo":[function() {},{}],"8PY9u":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVListItemSubtitleProps", ()=>makeVListItemSubtitleProps);
parcelHelpers.export(exports, "VListItemSubtitle", ()=>VListItemSubtitle);
var _vue = require("vue");
// Composables
var _componentMjs = require("../../composables/component.mjs");
var _tagMjs = require("../../composables/tag.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const makeVListItemSubtitleProps = (0, _indexMjs.propsFactory)({
    opacity: [
        Number,
        String
    ],
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _tagMjs.makeTagProps)()
}, "VListItemSubtitle");
const VListItemSubtitle = (0, _indexMjs.genericComponent)()({
    name: "VListItemSubtitle",
    props: makeVListItemSubtitleProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        (0, _indexMjs.useRender)(()=>(0, _vue.createVNode)(props.tag, {
                "class": [
                    "v-list-item-subtitle",
                    props.class
                ],
                "style": [
                    {
                        "--v-list-item-subtitle-opacity": props.opacity
                    },
                    props.style
                ]
            }, slots));
        return {};
    }
});

},{"vue":"gCTam","../../composables/component.mjs":"4YAxs","../../composables/tag.mjs":"3LqcC","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"7Wkkt":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VListItemTitle", ()=>VListItemTitle);
var _indexMjs = require("../../util/index.mjs");
const VListItemTitle = (0, _indexMjs.createSimpleFunctional)("v-list-item-title");

},{"../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"52w5r":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVListSubheaderProps", ()=>makeVListSubheaderProps);
parcelHelpers.export(exports, "VListSubheader", ()=>VListSubheader);
var _vue = require("vue");
// Composables
var _colorMjs = require("../../composables/color.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _tagMjs = require("../../composables/tag.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const makeVListSubheaderProps = (0, _indexMjs.propsFactory)({
    color: String,
    inset: Boolean,
    sticky: Boolean,
    title: String,
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _tagMjs.makeTagProps)()
}, "VListSubheader");
const VListSubheader = (0, _indexMjs.genericComponent)()({
    name: "VListSubheader",
    props: makeVListSubheaderProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const { textColorClasses, textColorStyles } = (0, _colorMjs.useTextColor)((0, _vue.toRef)(props, "color"));
        (0, _indexMjs.useRender)(()=>{
            const hasText = !!(slots.default || props.title);
            return (0, _vue.createVNode)(props.tag, {
                "class": [
                    "v-list-subheader",
                    {
                        "v-list-subheader--inset": props.inset,
                        "v-list-subheader--sticky": props.sticky
                    },
                    textColorClasses.value,
                    props.class
                ],
                "style": [
                    {
                        textColorStyles
                    },
                    props.style
                ]
            }, {
                default: ()=>[
                        hasText && (0, _vue.createVNode)("div", {
                            "class": "v-list-subheader__text"
                        }, [
                            slots.default?.() ?? props.title
                        ])
                    ]
            });
        });
        return {};
    }
});

},{"vue":"gCTam","../../composables/color.mjs":"6TeQR","../../composables/component.mjs":"4YAxs","../../composables/tag.mjs":"3LqcC","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"bj3uM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VDivider", ()=>(0, _vdividerMjs.VDivider));
var _vdividerMjs = require("./VDivider.mjs");

},{"./VDivider.mjs":"4eal4","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"4eal4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVDividerProps", ()=>makeVDividerProps);
parcelHelpers.export(exports, "VDivider", ()=>VDivider);
var _vue = require("vue");
// Styles
var _vdividerCss = require("./VDivider.css");
// Composables
var _colorMjs = require("../../composables/color.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _themeMjs = require("../../composables/theme.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const makeVDividerProps = (0, _indexMjs.propsFactory)({
    color: String,
    inset: Boolean,
    length: [
        Number,
        String
    ],
    opacity: [
        Number,
        String
    ],
    thickness: [
        Number,
        String
    ],
    vertical: Boolean,
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _themeMjs.makeThemeProps)()
}, "VDivider");
const VDivider = (0, _indexMjs.genericComponent)()({
    name: "VDivider",
    props: makeVDividerProps(),
    setup (props, _ref) {
        let { attrs, slots } = _ref;
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const { textColorClasses, textColorStyles } = (0, _colorMjs.useTextColor)((0, _vue.toRef)(props, "color"));
        const dividerStyles = (0, _vue.computed)(()=>{
            const styles = {};
            if (props.length) styles[props.vertical ? "height" : "width"] = (0, _indexMjs.convertToUnit)(props.length);
            if (props.thickness) styles[props.vertical ? "borderRightWidth" : "borderTopWidth"] = (0, _indexMjs.convertToUnit)(props.thickness);
            return styles;
        });
        (0, _indexMjs.useRender)(()=>{
            const divider = (0, _vue.createVNode)("hr", {
                "class": [
                    {
                        "v-divider": true,
                        "v-divider--inset": props.inset,
                        "v-divider--vertical": props.vertical
                    },
                    themeClasses.value,
                    textColorClasses.value,
                    props.class
                ],
                "style": [
                    dividerStyles.value,
                    textColorStyles.value,
                    {
                        "--v-border-opacity": props.opacity
                    },
                    props.style
                ],
                "aria-orientation": !attrs.role || attrs.role === "separator" ? props.vertical ? "vertical" : "horizontal" : undefined,
                "role": `${attrs.role || "separator"}`
            }, null);
            if (!slots.default) return divider;
            return (0, _vue.createVNode)("div", {
                "class": [
                    "v-divider__wrapper",
                    {
                        "v-divider__wrapper--vertical": props.vertical,
                        "v-divider__wrapper--inset": props.inset
                    }
                ]
            }, [
                divider,
                (0, _vue.createVNode)("div", {
                    "class": "v-divider__content"
                }, [
                    slots.default()
                ]),
                divider
            ]);
        });
        return {};
    }
});

},{"vue":"gCTam","./VDivider.css":"1oTIH","../../composables/color.mjs":"6TeQR","../../composables/component.mjs":"4YAxs","../../composables/theme.mjs":"c9HGg","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"1oTIH":[function() {},{}],"9YaK8":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeItemsProps", ()=>makeItemsProps);
parcelHelpers.export(exports, "transformItem", ()=>transformItem);
parcelHelpers.export(exports, "transformItems", ()=>transformItems);
parcelHelpers.export(exports, "useItems", ()=>useItems);
var _vue = require("vue");
var _indexMjs = require("../util/index.mjs"); // Types
const makeItemsProps = (0, _indexMjs.propsFactory)({
    items: {
        type: Array,
        default: ()=>[]
    },
    itemTitle: {
        type: [
            String,
            Array,
            Function
        ],
        default: "title"
    },
    itemValue: {
        type: [
            String,
            Array,
            Function
        ],
        default: "value"
    },
    itemChildren: {
        type: [
            Boolean,
            String,
            Array,
            Function
        ],
        default: "children"
    },
    itemProps: {
        type: [
            Boolean,
            String,
            Array,
            Function
        ],
        default: "props"
    },
    returnObject: Boolean,
    valueComparator: {
        type: Function,
        default: (0, _indexMjs.deepEqual)
    }
}, "list-items");
function transformItem(props, item) {
    const title = (0, _indexMjs.getPropertyFromItem)(item, props.itemTitle, item);
    const value = (0, _indexMjs.getPropertyFromItem)(item, props.itemValue, title);
    const children = (0, _indexMjs.getPropertyFromItem)(item, props.itemChildren);
    const itemProps = props.itemProps === true ? typeof item === "object" && item != null && !Array.isArray(item) ? "children" in item ? (0, _indexMjs.omit)(item, [
        "children"
    ]) : item : undefined : (0, _indexMjs.getPropertyFromItem)(item, props.itemProps);
    const _props = {
        title,
        value,
        ...itemProps
    };
    return {
        title: String(_props.title ?? ""),
        value: _props.value,
        props: _props,
        children: Array.isArray(children) ? transformItems(props, children) : undefined,
        raw: item
    };
}
function transformItems(props, items) {
    const array = [];
    for (const item of items)array.push(transformItem(props, item));
    return array;
}
function useItems(props) {
    const items = (0, _vue.computed)(()=>transformItems(props, props.items));
    const hasNullItem = (0, _vue.computed)(()=>items.value.some((item)=>item.value === null));
    function transformIn(value) {
        if (!hasNullItem.value) // When the model value is null, return an InternalItem
        // based on null only if null is one of the items
        value = value.filter((v)=>v !== null);
        return value.map((v)=>{
            if (props.returnObject && typeof v === "string") // String model value means value is a custom input value from combobox
            // Don't look up existing items if the model value is a string
            return transformItem(props, v);
            return items.value.find((item)=>props.valueComparator(v, item.value)) || transformItem(props, v);
        });
    }
    function transformOut(value) {
        return props.returnObject ? value.map((_ref)=>{
            let { raw } = _ref;
            return raw;
        }) : value.map((_ref2)=>{
            let { value } = _ref2;
            return value;
        });
    }
    return {
        items,
        transformIn,
        transformOut
    };
}

},{"vue":"gCTam","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"3YNkZ":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VListImg", ()=>VListImg);
var _indexMjs = require("../../util/index.mjs");
const VListImg = (0, _indexMjs.createSimpleFunctional)("v-list-img");

},{"../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"723Ju":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVListItemActionProps", ()=>makeVListItemActionProps);
parcelHelpers.export(exports, "VListItemAction", ()=>VListItemAction);
var _vue = require("vue");
// Composables
var _componentMjs = require("../../composables/component.mjs");
var _tagMjs = require("../../composables/tag.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const makeVListItemActionProps = (0, _indexMjs.propsFactory)({
    start: Boolean,
    end: Boolean,
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _tagMjs.makeTagProps)()
}, "VListItemAction");
const VListItemAction = (0, _indexMjs.genericComponent)()({
    name: "VListItemAction",
    props: makeVListItemActionProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        (0, _indexMjs.useRender)(()=>(0, _vue.createVNode)(props.tag, {
                "class": [
                    "v-list-item-action",
                    {
                        "v-list-item-action--start": props.start,
                        "v-list-item-action--end": props.end
                    },
                    props.class
                ],
                "style": props.style
            }, slots));
        return {};
    }
});

},{"vue":"gCTam","../../composables/component.mjs":"4YAxs","../../composables/tag.mjs":"3LqcC","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"iSmBy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVListItemMediaProps", ()=>makeVListItemMediaProps);
parcelHelpers.export(exports, "VListItemMedia", ()=>VListItemMedia);
var _vue = require("vue");
// Composables
var _componentMjs = require("../../composables/component.mjs");
var _tagMjs = require("../../composables/tag.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const makeVListItemMediaProps = (0, _indexMjs.propsFactory)({
    start: Boolean,
    end: Boolean,
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _tagMjs.makeTagProps)()
}, "VListItemMedia");
const VListItemMedia = (0, _indexMjs.genericComponent)()({
    name: "VListItemMedia",
    props: makeVListItemMediaProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        (0, _indexMjs.useRender)(()=>{
            return (0, _vue.createVNode)(props.tag, {
                "class": [
                    "v-list-item-media",
                    {
                        "v-list-item-media--start": props.start,
                        "v-list-item-media--end": props.end
                    },
                    props.class
                ],
                "style": props.style
            }, slots);
        });
        return {};
    }
});

},{"vue":"gCTam","../../composables/component.mjs":"4YAxs","../../composables/tag.mjs":"3LqcC","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"72lak":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VMenu", ()=>(0, _vmenuMjs.VMenu));
var _vmenuMjs = require("./VMenu.mjs");

},{"./VMenu.mjs":"Ekbea","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"Ekbea":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVMenuProps", ()=>makeVMenuProps);
parcelHelpers.export(exports, "VMenu", ()=>VMenu);
var _vue = require("vue");
// Styles
var _vmenuCss = require("./VMenu.css");
// Components
var _indexMjs = require("../transitions/index.mjs");
var _indexMjs1 = require("../VDefaultsProvider/index.mjs");
var _indexMjs2 = require("../VOverlay/index.mjs");
var _voverlayMjs = require("../VOverlay/VOverlay.mjs"); // Composables
var _forwardRefsMjs = require("../../composables/forwardRefs.mjs");
var _localeMjs = require("../../composables/locale.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs");
var _scopeIdMjs = require("../../composables/scopeId.mjs"); // Utilities
var _sharedMjs = require("./shared.mjs");
var _indexMjs3 = require("../../util/index.mjs"); // Types
const makeVMenuProps = (0, _indexMjs3.propsFactory)({
    // TODO
    // disableKeys: Boolean,
    id: String,
    submenu: Boolean,
    ...(0, _indexMjs3.omit)((0, _voverlayMjs.makeVOverlayProps)({
        closeDelay: 250,
        closeOnContentClick: true,
        locationStrategy: "connected",
        location: undefined,
        openDelay: 300,
        scrim: false,
        scrollStrategy: "reposition",
        transition: {
            component: (0, _indexMjs.VDialogTransition)
        }
    }), [
        "absolute"
    ])
}, "VMenu");
const VMenu = (0, _indexMjs3.genericComponent)()({
    name: "VMenu",
    props: makeVMenuProps(),
    emits: {
        "update:modelValue": (value)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const isActive = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
        const { scopeId } = (0, _scopeIdMjs.useScopeId)();
        const { isRtl } = (0, _localeMjs.useRtl)();
        const uid = (0, _indexMjs3.getUid)();
        const id = (0, _vue.computed)(()=>props.id || `v-menu-${uid}`);
        const overlay = (0, _vue.ref)();
        const parent = (0, _vue.inject)((0, _sharedMjs.VMenuSymbol), null);
        const openChildren = (0, _vue.shallowRef)(new Set());
        (0, _vue.provide)((0, _sharedMjs.VMenuSymbol), {
            register () {
                openChildren.value.add(uid);
            },
            unregister () {
                openChildren.value.delete(uid);
            },
            closeParents (e) {
                setTimeout(()=>{
                    if (!openChildren.value.size && !props.persistent && (e == null || overlay.value?.contentEl && !(0, _indexMjs3.isClickInsideElement)(e, overlay.value.contentEl))) {
                        isActive.value = false;
                        parent?.closeParents();
                    }
                }, 40);
            }
        });
        (0, _vue.onBeforeUnmount)(()=>parent?.unregister());
        (0, _vue.onDeactivated)(()=>isActive.value = false);
        async function onFocusIn(e) {
            const before = e.relatedTarget;
            const after = e.target;
            await (0, _vue.nextTick)();
            if (isActive.value && before !== after && overlay.value?.contentEl && // We're the topmost menu
            overlay.value?.globalTop && // It isn't the document or the menu body
            ![
                document,
                overlay.value.contentEl
            ].includes(after) && // It isn't inside the menu body
            !overlay.value.contentEl.contains(after)) {
                const focusable = (0, _indexMjs3.focusableChildren)(overlay.value.contentEl);
                focusable[0]?.focus();
            }
        }
        (0, _vue.watch)(isActive, (val)=>{
            if (val) {
                parent?.register();
                document.addEventListener("focusin", onFocusIn, {
                    once: true
                });
            } else {
                parent?.unregister();
                document.removeEventListener("focusin", onFocusIn);
            }
        });
        function onClickOutside(e) {
            parent?.closeParents(e);
        }
        function onKeydown(e) {
            if (props.disabled) return;
            if (e.key === "Tab" || e.key === "Enter" && !props.closeOnContentClick) {
                if (e.key === "Enter" && (e.target instanceof HTMLTextAreaElement || e.target instanceof HTMLInputElement && !!e.target.closest("form"))) return;
                if (e.key === "Enter") e.preventDefault();
                const nextElement = (0, _indexMjs3.getNextElement)((0, _indexMjs3.focusableChildren)(overlay.value?.contentEl, false), e.shiftKey ? "prev" : "next", (el)=>el.tabIndex >= 0);
                if (!nextElement) {
                    isActive.value = false;
                    overlay.value?.activatorEl?.focus();
                }
            } else if (props.submenu && e.key === (isRtl.value ? "ArrowRight" : "ArrowLeft")) {
                isActive.value = false;
                overlay.value?.activatorEl?.focus();
            }
        }
        function onActivatorKeydown(e) {
            if (props.disabled) return;
            const el = overlay.value?.contentEl;
            if (el && isActive.value) {
                if (e.key === "ArrowDown") {
                    e.preventDefault();
                    e.stopImmediatePropagation();
                    (0, _indexMjs3.focusChild)(el, "next");
                } else if (e.key === "ArrowUp") {
                    e.preventDefault();
                    e.stopImmediatePropagation();
                    (0, _indexMjs3.focusChild)(el, "prev");
                } else if (props.submenu) {
                    if (e.key === (isRtl.value ? "ArrowRight" : "ArrowLeft")) isActive.value = false;
                    else if (e.key === (isRtl.value ? "ArrowLeft" : "ArrowRight")) {
                        e.preventDefault();
                        (0, _indexMjs3.focusChild)(el, "first");
                    }
                }
            } else if (props.submenu ? e.key === (isRtl.value ? "ArrowLeft" : "ArrowRight") : [
                "ArrowDown",
                "ArrowUp"
            ].includes(e.key)) {
                isActive.value = true;
                e.preventDefault();
                setTimeout(()=>setTimeout(()=>onActivatorKeydown(e)));
            }
        }
        const activatorProps = (0, _vue.computed)(()=>(0, _vue.mergeProps)({
                "aria-haspopup": "menu",
                "aria-expanded": String(isActive.value),
                "aria-owns": id.value,
                onKeydown: onActivatorKeydown
            }, props.activatorProps));
        (0, _indexMjs3.useRender)(()=>{
            const overlayProps = (0, _indexMjs2.VOverlay).filterProps(props);
            return (0, _vue.createVNode)((0, _indexMjs2.VOverlay), (0, _vue.mergeProps)({
                "ref": overlay,
                "id": id.value,
                "class": [
                    "v-menu",
                    props.class
                ],
                "style": props.style
            }, overlayProps, {
                "modelValue": isActive.value,
                "onUpdate:modelValue": ($event)=>isActive.value = $event,
                "absolute": true,
                "activatorProps": activatorProps.value,
                "location": props.location ?? (props.submenu ? "end" : "bottom"),
                "onClick:outside": onClickOutside,
                "onKeydown": onKeydown
            }, scopeId), {
                activator: slots.activator,
                default: function() {
                    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
                    return (0, _vue.createVNode)((0, _indexMjs1.VDefaultsProvider), {
                        "root": "VMenu"
                    }, {
                        default: ()=>[
                                slots.default?.(...args)
                            ]
                    });
                }
            });
        });
        return (0, _forwardRefsMjs.forwardRefs)({
            id,
            \u03A8openChildren: openChildren
        }, overlay);
    }
});

},{"vue":"gCTam","./VMenu.css":"4KSmC","../transitions/index.mjs":"3ybHr","../VDefaultsProvider/index.mjs":"eFFvH","../VOverlay/index.mjs":"seRqS","../VOverlay/VOverlay.mjs":"2XVbS","../../composables/forwardRefs.mjs":"2TNTP","../../composables/locale.mjs":"9rJP0","../../composables/proxiedModel.mjs":"huwLk","../../composables/scopeId.mjs":"1zMgM","./shared.mjs":"1ZaHA","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"4KSmC":[function() {},{}],"seRqS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VOverlay", ()=>(0, _voverlayMjs.VOverlay));
var _voverlayMjs = require("./VOverlay.mjs");

},{"./VOverlay.mjs":"2XVbS","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"2XVbS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVOverlayProps", ()=>makeVOverlayProps);
parcelHelpers.export(exports, "VOverlay", ()=>VOverlay);
var _vue = require("vue");
// Styles
var _voverlayCss = require("./VOverlay.css");
// Composables
var _locationStrategiesMjs = require("./locationStrategies.mjs");
var _scrollStrategiesMjs = require("./scrollStrategies.mjs");
var _useActivatorMjs = require("./useActivator.mjs");
var _colorMjs = require("../../composables/color.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _dimensionsMjs = require("../../composables/dimensions.mjs");
var _hydrationMjs = require("../../composables/hydration.mjs");
var _lazyMjs = require("../../composables/lazy.mjs");
var _localeMjs = require("../../composables/locale.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs");
var _routerMjs = require("../../composables/router.mjs");
var _scopeIdMjs = require("../../composables/scopeId.mjs");
var _stackMjs = require("../../composables/stack.mjs");
var _teleportMjs = require("../../composables/teleport.mjs");
var _themeMjs = require("../../composables/theme.mjs");
var _toggleScopeMjs = require("../../composables/toggleScope.mjs");
var _transitionMjs = require("../../composables/transition.mjs"); // Directives
var _indexMjs = require("../../directives/click-outside/index.mjs"); // Utilities
var _indexMjs1 = require("../../util/index.mjs"); // Types
function Scrim(props) {
    const { modelValue, color, ...rest } = props;
    return (0, _vue.createVNode)((0, _vue.Transition), {
        "name": "fade-transition",
        "appear": true
    }, {
        default: ()=>[
                props.modelValue && (0, _vue.createVNode)("div", (0, _vue.mergeProps)({
                    "class": [
                        "v-overlay__scrim",
                        props.color.backgroundColorClasses.value
                    ],
                    "style": props.color.backgroundColorStyles.value
                }, rest), null)
            ]
    });
}
const makeVOverlayProps = (0, _indexMjs1.propsFactory)({
    absolute: Boolean,
    attach: [
        Boolean,
        String,
        Object
    ],
    closeOnBack: {
        type: Boolean,
        default: true
    },
    contained: Boolean,
    contentClass: null,
    contentProps: null,
    disabled: Boolean,
    opacity: [
        Number,
        String
    ],
    noClickAnimation: Boolean,
    modelValue: Boolean,
    persistent: Boolean,
    scrim: {
        type: [
            Boolean,
            String
        ],
        default: true
    },
    zIndex: {
        type: [
            Number,
            String
        ],
        default: 2000
    },
    ...(0, _useActivatorMjs.makeActivatorProps)(),
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _dimensionsMjs.makeDimensionProps)(),
    ...(0, _lazyMjs.makeLazyProps)(),
    ...(0, _locationStrategiesMjs.makeLocationStrategyProps)(),
    ...(0, _scrollStrategiesMjs.makeScrollStrategyProps)(),
    ...(0, _themeMjs.makeThemeProps)(),
    ...(0, _transitionMjs.makeTransitionProps)()
}, "VOverlay");
const VOverlay = (0, _indexMjs1.genericComponent)()({
    name: "VOverlay",
    directives: {
        ClickOutside: (0, _indexMjs.ClickOutside)
    },
    inheritAttrs: false,
    props: {
        _disableGlobalStack: Boolean,
        ...makeVOverlayProps()
    },
    emits: {
        "click:outside": (e)=>true,
        "update:modelValue": (value)=>true,
        afterEnter: ()=>true,
        afterLeave: ()=>true
    },
    setup (props, _ref) {
        let { slots, attrs, emit } = _ref;
        const vm = (0, _indexMjs1.getCurrentInstance)("VOverlay");
        const root = (0, _vue.ref)();
        const scrimEl = (0, _vue.ref)();
        const contentEl = (0, _vue.ref)();
        const model = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
        const isActive = (0, _vue.computed)({
            get: ()=>model.value,
            set: (v)=>{
                if (!(v && props.disabled)) model.value = v;
            }
        });
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const { rtlClasses, isRtl } = (0, _localeMjs.useRtl)();
        const { hasContent, onAfterLeave: _onAfterLeave } = (0, _lazyMjs.useLazy)(props, isActive);
        const scrimColor = (0, _colorMjs.useBackgroundColor)((0, _vue.computed)(()=>{
            return typeof props.scrim === "string" ? props.scrim : null;
        }));
        const { globalTop, localTop, stackStyles } = (0, _stackMjs.useStack)(isActive, (0, _vue.toRef)(props, "zIndex"), props._disableGlobalStack);
        const { activatorEl, activatorRef, target, targetEl, targetRef, activatorEvents, contentEvents, scrimEvents } = (0, _useActivatorMjs.useActivator)(props, {
            isActive,
            isTop: localTop,
            contentEl
        });
        const { teleportTarget } = (0, _teleportMjs.useTeleport)(()=>{
            const target = props.attach || props.contained;
            if (target) return target;
            const rootNode = activatorEl?.value?.getRootNode() || vm.proxy?.$el?.getRootNode();
            if (rootNode instanceof ShadowRoot) return rootNode;
            return false;
        });
        const { dimensionStyles } = (0, _dimensionsMjs.useDimension)(props);
        const isMounted = (0, _hydrationMjs.useHydration)();
        const { scopeId } = (0, _scopeIdMjs.useScopeId)();
        (0, _vue.watch)(()=>props.disabled, (v)=>{
            if (v) isActive.value = false;
        });
        const { contentStyles, updateLocation } = (0, _locationStrategiesMjs.useLocationStrategies)(props, {
            isRtl,
            contentEl,
            target,
            isActive
        });
        (0, _scrollStrategiesMjs.useScrollStrategies)(props, {
            root,
            contentEl,
            targetEl,
            isActive,
            updateLocation
        });
        function onClickOutside(e) {
            emit("click:outside", e);
            if (!props.persistent) isActive.value = false;
            else animateClick();
        }
        function closeConditional(e) {
            return isActive.value && globalTop.value && // If using scrim, only close if clicking on it rather than anything opened on top
            (!props.scrim || e.target === scrimEl.value || e instanceof MouseEvent && e.shadowTarget === scrimEl.value);
        }
        (0, _indexMjs1.IN_BROWSER) && (0, _vue.watch)(isActive, (val)=>{
            if (val) window.addEventListener("keydown", onKeydown);
            else window.removeEventListener("keydown", onKeydown);
        }, {
            immediate: true
        });
        (0, _vue.onBeforeUnmount)(()=>{
            if (!(0, _indexMjs1.IN_BROWSER)) return;
            window.removeEventListener("keydown", onKeydown);
        });
        function onKeydown(e) {
            if (e.key === "Escape" && globalTop.value) {
                if (!props.persistent) {
                    isActive.value = false;
                    if (contentEl.value?.contains(document.activeElement)) activatorEl.value?.focus();
                } else animateClick();
            }
        }
        const router = (0, _routerMjs.useRouter)();
        (0, _toggleScopeMjs.useToggleScope)(()=>props.closeOnBack, ()=>{
            (0, _routerMjs.useBackButton)(router, (next)=>{
                if (globalTop.value && isActive.value) {
                    next(false);
                    if (!props.persistent) isActive.value = false;
                    else animateClick();
                } else next();
            });
        });
        const top = (0, _vue.ref)();
        (0, _vue.watch)(()=>isActive.value && (props.absolute || props.contained) && teleportTarget.value == null, (val)=>{
            if (val) {
                const scrollParent = (0, _indexMjs1.getScrollParent)(root.value);
                if (scrollParent && scrollParent !== document.scrollingElement) top.value = scrollParent.scrollTop;
            }
        });
        // Add a quick "bounce" animation to the content
        function animateClick() {
            if (props.noClickAnimation) return;
            contentEl.value && (0, _indexMjs1.animate)(contentEl.value, [
                {
                    transformOrigin: "center"
                },
                {
                    transform: "scale(1.03)"
                },
                {
                    transformOrigin: "center"
                }
            ], {
                duration: 150,
                easing: (0, _indexMjs1.standardEasing)
            });
        }
        function onAfterEnter() {
            emit("afterEnter");
        }
        function onAfterLeave() {
            _onAfterLeave();
            emit("afterLeave");
        }
        (0, _indexMjs1.useRender)(()=>(0, _vue.createVNode)((0, _vue.Fragment), null, [
                slots.activator?.({
                    isActive: isActive.value,
                    targetRef,
                    props: (0, _vue.mergeProps)({
                        ref: activatorRef
                    }, activatorEvents.value, props.activatorProps)
                }),
                isMounted.value && hasContent.value && (0, _vue.createVNode)((0, _vue.Teleport), {
                    "disabled": !teleportTarget.value,
                    "to": teleportTarget.value
                }, {
                    default: ()=>[
                            (0, _vue.createVNode)("div", (0, _vue.mergeProps)({
                                "class": [
                                    "v-overlay",
                                    {
                                        "v-overlay--absolute": props.absolute || props.contained,
                                        "v-overlay--active": isActive.value,
                                        "v-overlay--contained": props.contained
                                    },
                                    themeClasses.value,
                                    rtlClasses.value,
                                    props.class
                                ],
                                "style": [
                                    stackStyles.value,
                                    {
                                        "--v-overlay-opacity": props.opacity,
                                        top: (0, _indexMjs1.convertToUnit)(top.value)
                                    },
                                    props.style
                                ],
                                "ref": root
                            }, scopeId, attrs), [
                                (0, _vue.createVNode)(Scrim, (0, _vue.mergeProps)({
                                    "color": scrimColor,
                                    "modelValue": isActive.value && !!props.scrim,
                                    "ref": scrimEl
                                }, scrimEvents.value), null),
                                (0, _vue.createVNode)((0, _transitionMjs.MaybeTransition), {
                                    "appear": true,
                                    "persisted": true,
                                    "transition": props.transition,
                                    "target": target.value,
                                    "onAfterEnter": onAfterEnter,
                                    "onAfterLeave": onAfterLeave
                                }, {
                                    default: ()=>[
                                            (0, _vue.withDirectives)((0, _vue.createVNode)("div", (0, _vue.mergeProps)({
                                                "ref": contentEl,
                                                "class": [
                                                    "v-overlay__content",
                                                    props.contentClass
                                                ],
                                                "style": [
                                                    dimensionStyles.value,
                                                    contentStyles.value
                                                ]
                                            }, contentEvents.value, props.contentProps), [
                                                slots.default?.({
                                                    isActive
                                                })
                                            ]), [
                                                [
                                                    (0, _vue.vShow),
                                                    isActive.value
                                                ],
                                                [
                                                    (0, _vue.resolveDirective)("click-outside"),
                                                    {
                                                        handler: onClickOutside,
                                                        closeConditional,
                                                        include: ()=>[
                                                                activatorEl.value
                                                            ]
                                                    }
                                                ]
                                            ])
                                        ]
                                })
                            ])
                        ]
                })
            ]));
        return {
            activatorEl,
            scrimEl,
            target,
            animateClick,
            contentEl,
            globalTop,
            localTop,
            updateLocation
        };
    }
});

},{"vue":"gCTam","./VOverlay.css":"gSUgl","./locationStrategies.mjs":"kggK5","./scrollStrategies.mjs":"54n16","./useActivator.mjs":"8xikW","../../composables/color.mjs":"6TeQR","../../composables/component.mjs":"4YAxs","../../composables/dimensions.mjs":"daVmy","../../composables/hydration.mjs":"ksxeK","../../composables/lazy.mjs":"lca0Z","../../composables/locale.mjs":"9rJP0","../../composables/proxiedModel.mjs":"huwLk","../../composables/router.mjs":"8IJEw","../../composables/scopeId.mjs":"1zMgM","../../composables/stack.mjs":"bnW0f","../../composables/teleport.mjs":"eroPT","../../composables/theme.mjs":"c9HGg","../../composables/toggleScope.mjs":"dsKlJ","../../composables/transition.mjs":"dJyg1","../../directives/click-outside/index.mjs":"cVgr0","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"gSUgl":[function() {},{}],"kggK5":[function(require,module,exports) {
// Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeLocationStrategyProps", ()=>makeLocationStrategyProps);
parcelHelpers.export(exports, "useLocationStrategies", ()=>useLocationStrategies);
var _toggleScopeMjs = require("../../composables/toggleScope.mjs"); // Utilities
var _vue = require("vue");
var _pointMjs = require("./util/point.mjs");
var _indexMjs = require("../../util/index.mjs");
var _boxMjs = require("../../util/box.mjs"); // Types
const locationStrategies = {
    static: staticLocationStrategy,
    // specific viewport position, usually centered
    connected: connectedLocationStrategy // connected to a certain element
};
const makeLocationStrategyProps = (0, _indexMjs.propsFactory)({
    locationStrategy: {
        type: [
            String,
            Function
        ],
        default: "static",
        validator: (val)=>typeof val === "function" || val in locationStrategies
    },
    location: {
        type: String,
        default: "bottom"
    },
    origin: {
        type: String,
        default: "auto"
    },
    offset: [
        Number,
        String,
        Array
    ]
}, "VOverlay-location-strategies");
function useLocationStrategies(props, data) {
    const contentStyles = (0, _vue.ref)({});
    const updateLocation = (0, _vue.ref)();
    if (0, _indexMjs.IN_BROWSER) (0, _toggleScopeMjs.useToggleScope)(()=>!!(data.isActive.value && props.locationStrategy), (reset)=>{
        (0, _vue.watch)(()=>props.locationStrategy, reset);
        (0, _vue.onScopeDispose)(()=>{
            window.removeEventListener("resize", onResize);
            updateLocation.value = undefined;
        });
        window.addEventListener("resize", onResize, {
            passive: true
        });
        if (typeof props.locationStrategy === "function") updateLocation.value = props.locationStrategy(data, props, contentStyles)?.updateLocation;
        else updateLocation.value = locationStrategies[props.locationStrategy](data, props, contentStyles)?.updateLocation;
    });
    function onResize(e) {
        updateLocation.value?.(e);
    }
    return {
        contentStyles,
        updateLocation
    };
}
function staticLocationStrategy() {
// TODO
}
/** Get size of element ignoring max-width/max-height */ function getIntrinsicSize(el, isRtl) {
    // const scrollables = new Map<Element, [number, number]>()
    // el.querySelectorAll('*').forEach(el => {
    //   const x = el.scrollLeft
    //   const y = el.scrollTop
    //   if (x || y) {
    //     scrollables.set(el, [x, y])
    //   }
    // })
    // const initialMaxWidth = el.style.maxWidth
    // const initialMaxHeight = el.style.maxHeight
    // el.style.removeProperty('max-width')
    // el.style.removeProperty('max-height')
    /* eslint-disable-next-line sonarjs/prefer-immediate-return */ const contentBox = (0, _indexMjs.nullifyTransforms)(el);
    if (isRtl) contentBox.x += parseFloat(el.style.right || 0);
    else contentBox.x -= parseFloat(el.style.left || 0);
    contentBox.y -= parseFloat(el.style.top || 0);
    // el.style.maxWidth = initialMaxWidth
    // el.style.maxHeight = initialMaxHeight
    // scrollables.forEach((position, el) => {
    //   el.scrollTo(...position)
    // })
    return contentBox;
}
function connectedLocationStrategy(data, props, contentStyles) {
    const activatorFixed = Array.isArray(data.target.value) || (0, _indexMjs.isFixedPosition)(data.target.value);
    if (activatorFixed) Object.assign(contentStyles.value, {
        position: "fixed",
        top: 0,
        [data.isRtl.value ? "right" : "left"]: 0
    });
    const { preferredAnchor, preferredOrigin } = (0, _indexMjs.destructComputed)(()=>{
        const parsedAnchor = (0, _indexMjs.parseAnchor)(props.location, data.isRtl.value);
        const parsedOrigin = props.origin === "overlap" ? parsedAnchor : props.origin === "auto" ? (0, _indexMjs.flipSide)(parsedAnchor) : (0, _indexMjs.parseAnchor)(props.origin, data.isRtl.value);
        // Some combinations of props may produce an invalid origin
        if (parsedAnchor.side === parsedOrigin.side && parsedAnchor.align === (0, _indexMjs.flipAlign)(parsedOrigin).align) return {
            preferredAnchor: (0, _indexMjs.flipCorner)(parsedAnchor),
            preferredOrigin: (0, _indexMjs.flipCorner)(parsedOrigin)
        };
        else return {
            preferredAnchor: parsedAnchor,
            preferredOrigin: parsedOrigin
        };
    });
    const [minWidth, minHeight, maxWidth, maxHeight] = [
        "minWidth",
        "minHeight",
        "maxWidth",
        "maxHeight"
    ].map((key)=>{
        return (0, _vue.computed)(()=>{
            const val = parseFloat(props[key]);
            return isNaN(val) ? Infinity : val;
        });
    });
    const offset = (0, _vue.computed)(()=>{
        if (Array.isArray(props.offset)) return props.offset;
        if (typeof props.offset === "string") {
            const offset = props.offset.split(" ").map(parseFloat);
            if (offset.length < 2) offset.push(0);
            return offset;
        }
        return typeof props.offset === "number" ? [
            props.offset,
            0
        ] : [
            0,
            0
        ];
    });
    let observe = false;
    const observer = new ResizeObserver(()=>{
        if (observe) updateLocation();
    });
    (0, _vue.watch)([
        data.target,
        data.contentEl
    ], (_ref, _ref2)=>{
        let [newTarget, newContentEl] = _ref;
        let [oldTarget, oldContentEl] = _ref2;
        if (oldTarget && !Array.isArray(oldTarget)) observer.unobserve(oldTarget);
        if (newTarget && !Array.isArray(newTarget)) observer.observe(newTarget);
        if (oldContentEl) observer.unobserve(oldContentEl);
        if (newContentEl) observer.observe(newContentEl);
    }, {
        immediate: true
    });
    (0, _vue.onScopeDispose)(()=>{
        observer.disconnect();
    });
    // eslint-disable-next-line max-statements
    function updateLocation() {
        observe = false;
        requestAnimationFrame(()=>observe = true);
        if (!data.target.value || !data.contentEl.value) return;
        const targetBox = (0, _boxMjs.getTargetBox)(data.target.value);
        const contentBox = getIntrinsicSize(data.contentEl.value, data.isRtl.value);
        const scrollParents = (0, _indexMjs.getScrollParents)(data.contentEl.value);
        const viewportMargin = 12;
        if (!scrollParents.length) {
            scrollParents.push(document.documentElement);
            if (!(data.contentEl.value.style.top && data.contentEl.value.style.left)) {
                contentBox.x -= parseFloat(document.documentElement.style.getPropertyValue("--v-body-scroll-x") || 0);
                contentBox.y -= parseFloat(document.documentElement.style.getPropertyValue("--v-body-scroll-y") || 0);
            }
        }
        const viewport = scrollParents.reduce((box, el)=>{
            const rect = el.getBoundingClientRect();
            const scrollBox = new (0, _boxMjs.Box)({
                x: el === document.documentElement ? 0 : rect.x,
                y: el === document.documentElement ? 0 : rect.y,
                width: el.clientWidth,
                height: el.clientHeight
            });
            if (box) return new (0, _boxMjs.Box)({
                x: Math.max(box.left, scrollBox.left),
                y: Math.max(box.top, scrollBox.top),
                width: Math.min(box.right, scrollBox.right) - Math.max(box.left, scrollBox.left),
                height: Math.min(box.bottom, scrollBox.bottom) - Math.max(box.top, scrollBox.top)
            });
            return scrollBox;
        }, undefined);
        viewport.x += viewportMargin;
        viewport.y += viewportMargin;
        viewport.width -= viewportMargin * 2;
        viewport.height -= viewportMargin * 2;
        let placement = {
            anchor: preferredAnchor.value,
            origin: preferredOrigin.value
        };
        function checkOverflow(_placement) {
            const box = new (0, _boxMjs.Box)(contentBox);
            const targetPoint = (0, _pointMjs.anchorToPoint)(_placement.anchor, targetBox);
            const contentPoint = (0, _pointMjs.anchorToPoint)(_placement.origin, box);
            let { x, y } = (0, _pointMjs.getOffset)(targetPoint, contentPoint);
            switch(_placement.anchor.side){
                case "top":
                    y -= offset.value[0];
                    break;
                case "bottom":
                    y += offset.value[0];
                    break;
                case "left":
                    x -= offset.value[0];
                    break;
                case "right":
                    x += offset.value[0];
                    break;
            }
            switch(_placement.anchor.align){
                case "top":
                    y -= offset.value[1];
                    break;
                case "bottom":
                    y += offset.value[1];
                    break;
                case "left":
                    x -= offset.value[1];
                    break;
                case "right":
                    x += offset.value[1];
                    break;
            }
            box.x += x;
            box.y += y;
            box.width = Math.min(box.width, maxWidth.value);
            box.height = Math.min(box.height, maxHeight.value);
            const overflows = (0, _boxMjs.getOverflow)(box, viewport);
            return {
                overflows,
                x,
                y
            };
        }
        let x = 0;
        let y = 0;
        const available = {
            x: 0,
            y: 0
        };
        const flipped = {
            x: false,
            y: false
        };
        let resets = -1;
        while(true){
            if (resets++ > 10) {
                (0, _indexMjs.consoleError)("Infinite loop detected in connectedLocationStrategy");
                break;
            }
            const { x: _x, y: _y, overflows } = checkOverflow(placement);
            x += _x;
            y += _y;
            contentBox.x += _x;
            contentBox.y += _y;
            // flip
            {
                const axis = (0, _indexMjs.getAxis)(placement.anchor);
                const hasOverflowX = overflows.x.before || overflows.x.after;
                const hasOverflowY = overflows.y.before || overflows.y.after;
                let reset = false;
                [
                    "x",
                    "y"
                ].forEach((key)=>{
                    if (key === "x" && hasOverflowX && !flipped.x || key === "y" && hasOverflowY && !flipped.y) {
                        const newPlacement = {
                            anchor: {
                                ...placement.anchor
                            },
                            origin: {
                                ...placement.origin
                            }
                        };
                        const flip = key === "x" ? axis === "y" ? (0, _indexMjs.flipAlign) : (0, _indexMjs.flipSide) : axis === "y" ? (0, _indexMjs.flipSide) : (0, _indexMjs.flipAlign);
                        newPlacement.anchor = flip(newPlacement.anchor);
                        newPlacement.origin = flip(newPlacement.origin);
                        const { overflows: newOverflows } = checkOverflow(newPlacement);
                        if (newOverflows[key].before <= overflows[key].before && newOverflows[key].after <= overflows[key].after || newOverflows[key].before + newOverflows[key].after < (overflows[key].before + overflows[key].after) / 2) {
                            placement = newPlacement;
                            reset = flipped[key] = true;
                        }
                    }
                });
                if (reset) continue;
            }
            // shift
            if (overflows.x.before) {
                x += overflows.x.before;
                contentBox.x += overflows.x.before;
            }
            if (overflows.x.after) {
                x -= overflows.x.after;
                contentBox.x -= overflows.x.after;
            }
            if (overflows.y.before) {
                y += overflows.y.before;
                contentBox.y += overflows.y.before;
            }
            if (overflows.y.after) {
                y -= overflows.y.after;
                contentBox.y -= overflows.y.after;
            }
            // size
            {
                const overflows = (0, _boxMjs.getOverflow)(contentBox, viewport);
                available.x = viewport.width - overflows.x.before - overflows.x.after;
                available.y = viewport.height - overflows.y.before - overflows.y.after;
                x += overflows.x.before;
                contentBox.x += overflows.x.before;
                y += overflows.y.before;
                contentBox.y += overflows.y.before;
            }
            break;
        }
        const axis = (0, _indexMjs.getAxis)(placement.anchor);
        Object.assign(contentStyles.value, {
            "--v-overlay-anchor-origin": `${placement.anchor.side} ${placement.anchor.align}`,
            transformOrigin: `${placement.origin.side} ${placement.origin.align}`,
            // transform: `translate(${pixelRound(x)}px, ${pixelRound(y)}px)`,
            top: (0, _indexMjs.convertToUnit)(pixelRound(y)),
            left: data.isRtl.value ? undefined : (0, _indexMjs.convertToUnit)(pixelRound(x)),
            right: data.isRtl.value ? (0, _indexMjs.convertToUnit)(pixelRound(-x)) : undefined,
            minWidth: (0, _indexMjs.convertToUnit)(axis === "y" ? Math.min(minWidth.value, targetBox.width) : minWidth.value),
            maxWidth: (0, _indexMjs.convertToUnit)(pixelCeil((0, _indexMjs.clamp)(available.x, minWidth.value === Infinity ? 0 : minWidth.value, maxWidth.value))),
            maxHeight: (0, _indexMjs.convertToUnit)(pixelCeil((0, _indexMjs.clamp)(available.y, minHeight.value === Infinity ? 0 : minHeight.value, maxHeight.value)))
        });
        return {
            available,
            contentBox
        };
    }
    (0, _vue.watch)(()=>[
            preferredAnchor.value,
            preferredOrigin.value,
            props.offset,
            props.minWidth,
            props.minHeight,
            props.maxWidth,
            props.maxHeight
        ], ()=>updateLocation());
    (0, _vue.nextTick)(()=>{
        const result = updateLocation();
        // TODO: overflowing content should only require a single updateLocation call
        // Icky hack to make sure the content is positioned consistently
        if (!result) return;
        const { available, contentBox } = result;
        if (contentBox.height > available.y) requestAnimationFrame(()=>{
            updateLocation();
            requestAnimationFrame(()=>{
                updateLocation();
            });
        });
    });
    return {
        updateLocation
    };
}
function pixelRound(val) {
    return Math.round(val * devicePixelRatio) / devicePixelRatio;
}
function pixelCeil(val) {
    return Math.ceil(val * devicePixelRatio) / devicePixelRatio;
}

},{"../../composables/toggleScope.mjs":"dsKlJ","vue":"gCTam","./util/point.mjs":"biK4h","../../util/index.mjs":"ivUh8","../../util/box.mjs":"9ahRi","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"biK4h":[function(require,module,exports) {
// Types
/** Convert a point in local space to viewport space */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "elementToViewport", ()=>elementToViewport);
/** Convert a point in viewport space to local space */ parcelHelpers.export(exports, "viewportToElement", ()=>viewportToElement);
/** Get the difference between two points */ parcelHelpers.export(exports, "getOffset", ()=>getOffset);
/** Convert an anchor object to a point in local space */ parcelHelpers.export(exports, "anchorToPoint", ()=>anchorToPoint);
function elementToViewport(point, offset) {
    return {
        x: point.x + offset.x,
        y: point.y + offset.y
    };
}
function viewportToElement(point, offset) {
    return {
        x: point.x - offset.x,
        y: point.y - offset.y
    };
}
function getOffset(a, b) {
    return {
        x: a.x - b.x,
        y: a.y - b.y
    };
}
function anchorToPoint(anchor, box) {
    if (anchor.side === "top" || anchor.side === "bottom") {
        const { side, align } = anchor;
        const x = align === "left" ? 0 : align === "center" ? box.width / 2 : align === "right" ? box.width : align;
        const y = side === "top" ? 0 : side === "bottom" ? box.height : side;
        return elementToViewport({
            x,
            y
        }, box);
    } else if (anchor.side === "left" || anchor.side === "right") {
        const { side, align } = anchor;
        const x = side === "left" ? 0 : side === "right" ? box.width : side;
        const y = align === "top" ? 0 : align === "center" ? box.height / 2 : align === "bottom" ? box.height : align;
        return elementToViewport({
            x,
            y
        }, box);
    }
    return elementToViewport({
        x: box.width / 2,
        y: box.height / 2
    }, box);
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"54n16":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeScrollStrategyProps", ()=>makeScrollStrategyProps);
parcelHelpers.export(exports, "useScrollStrategies", ()=>useScrollStrategies);
var _vue = require("vue");
var _requestNewFrameMjs = require("./requestNewFrame.mjs");
var _indexMjs = require("../../util/index.mjs"); // Types
const scrollStrategies = {
    none: null,
    close: closeScrollStrategy,
    block: blockScrollStrategy,
    reposition: repositionScrollStrategy
};
const makeScrollStrategyProps = (0, _indexMjs.propsFactory)({
    scrollStrategy: {
        type: [
            String,
            Function
        ],
        default: "block",
        validator: (val)=>typeof val === "function" || val in scrollStrategies
    }
}, "VOverlay-scroll-strategies");
function useScrollStrategies(props, data) {
    if (!(0, _indexMjs.IN_BROWSER)) return;
    let scope;
    (0, _vue.watchEffect)(async ()=>{
        scope?.stop();
        if (!(data.isActive.value && props.scrollStrategy)) return;
        scope = (0, _vue.effectScope)();
        await new Promise((resolve)=>setTimeout(resolve));
        scope.active && scope.run(()=>{
            if (typeof props.scrollStrategy === "function") props.scrollStrategy(data, props, scope);
            else scrollStrategies[props.scrollStrategy]?.(data, props, scope);
        });
    });
    (0, _vue.onScopeDispose)(()=>{
        scope?.stop();
    });
}
function closeScrollStrategy(data) {
    function onScroll(e) {
        data.isActive.value = false;
    }
    bindScroll(data.targetEl.value ?? data.contentEl.value, onScroll);
}
function blockScrollStrategy(data, props) {
    const offsetParent = data.root.value?.offsetParent;
    const scrollElements = [
        ...new Set([
            ...(0, _indexMjs.getScrollParents)(data.targetEl.value, props.contained ? offsetParent : undefined),
            ...(0, _indexMjs.getScrollParents)(data.contentEl.value, props.contained ? offsetParent : undefined)
        ])
    ].filter((el)=>!el.classList.contains("v-overlay-scroll-blocked"));
    const scrollbarWidth = window.innerWidth - document.documentElement.offsetWidth;
    const scrollableParent = ((el)=>(0, _indexMjs.hasScrollbar)(el) && el)(offsetParent || document.documentElement);
    if (scrollableParent) data.root.value.classList.add("v-overlay--scroll-blocked");
    scrollElements.forEach((el, i)=>{
        el.style.setProperty("--v-body-scroll-x", (0, _indexMjs.convertToUnit)(-el.scrollLeft));
        el.style.setProperty("--v-body-scroll-y", (0, _indexMjs.convertToUnit)(-el.scrollTop));
        if (el !== document.documentElement) el.style.setProperty("--v-scrollbar-offset", (0, _indexMjs.convertToUnit)(scrollbarWidth));
        el.classList.add("v-overlay-scroll-blocked");
    });
    (0, _vue.onScopeDispose)(()=>{
        scrollElements.forEach((el, i)=>{
            const x = parseFloat(el.style.getPropertyValue("--v-body-scroll-x"));
            const y = parseFloat(el.style.getPropertyValue("--v-body-scroll-y"));
            const scrollBehavior = el.style.scrollBehavior;
            el.style.scrollBehavior = "auto";
            el.style.removeProperty("--v-body-scroll-x");
            el.style.removeProperty("--v-body-scroll-y");
            el.style.removeProperty("--v-scrollbar-offset");
            el.classList.remove("v-overlay-scroll-blocked");
            el.scrollLeft = -x;
            el.scrollTop = -y;
            el.style.scrollBehavior = scrollBehavior;
        });
        if (scrollableParent) data.root.value.classList.remove("v-overlay--scroll-blocked");
    });
}
function repositionScrollStrategy(data, props, scope) {
    let slow = false;
    let raf = -1;
    let ric = -1;
    function update(e) {
        (0, _requestNewFrameMjs.requestNewFrame)(()=>{
            const start = performance.now();
            data.updateLocation.value?.(e);
            const time = performance.now() - start;
            slow = time / (1000 / 60) > 2;
        });
    }
    ric = (typeof requestIdleCallback === "undefined" ? (cb)=>cb() : requestIdleCallback)(()=>{
        scope.run(()=>{
            bindScroll(data.targetEl.value ?? data.contentEl.value, (e)=>{
                if (slow) {
                    // If the position calculation is slow,
                    // defer updates until scrolling is finished.
                    // Browsers usually fire one scroll event per frame so
                    // we just wait until we've got two frames without an event
                    cancelAnimationFrame(raf);
                    raf = requestAnimationFrame(()=>{
                        raf = requestAnimationFrame(()=>{
                            update(e);
                        });
                    });
                } else update(e);
            });
        });
    });
    (0, _vue.onScopeDispose)(()=>{
        typeof cancelIdleCallback !== "undefined" && cancelIdleCallback(ric);
        cancelAnimationFrame(raf);
    });
}
/** @private */ function bindScroll(el, onScroll) {
    const scrollElements = [
        document,
        ...(0, _indexMjs.getScrollParents)(el)
    ];
    scrollElements.forEach((el)=>{
        el.addEventListener("scroll", onScroll, {
            passive: true
        });
    });
    (0, _vue.onScopeDispose)(()=>{
        scrollElements.forEach((el)=>{
            el.removeEventListener("scroll", onScroll);
        });
    });
}

},{"vue":"gCTam","./requestNewFrame.mjs":"epDC7","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"epDC7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Schedule a task to run in an animation frame on its own
 * This is useful for heavy tasks that may cause jank if all ran together
 */ parcelHelpers.export(exports, "requestNewFrame", ()=>requestNewFrame);
let clean = true;
const frames = [];
function requestNewFrame(cb) {
    if (!clean || frames.length) {
        frames.push(cb);
        run();
    } else {
        clean = false;
        cb();
        run();
    }
}
let raf = -1;
function run() {
    cancelAnimationFrame(raf);
    raf = requestAnimationFrame(()=>{
        const frame = frames.shift();
        if (frame) frame();
        if (frames.length) run();
        else clean = true;
    });
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"8xikW":[function(require,module,exports) {
// Components
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeActivatorProps", ()=>makeActivatorProps);
parcelHelpers.export(exports, "useActivator", ()=>useActivator);
var _sharedMjs = require("../VMenu/shared.mjs"); // Composables
var _delayMjs = require("../../composables/delay.mjs"); // Utilities
var _vue = require("vue");
var _indexMjs = require("../../util/index.mjs"); // Types
const makeActivatorProps = (0, _indexMjs.propsFactory)({
    target: [
        String,
        Object
    ],
    activator: [
        String,
        Object
    ],
    activatorProps: {
        type: Object,
        default: ()=>({})
    },
    openOnClick: {
        type: Boolean,
        default: undefined
    },
    openOnHover: Boolean,
    openOnFocus: {
        type: Boolean,
        default: undefined
    },
    closeOnContentClick: Boolean,
    ...(0, _delayMjs.makeDelayProps)()
}, "VOverlay-activator");
function useActivator(props, _ref) {
    let { isActive, isTop, contentEl } = _ref;
    const vm = (0, _indexMjs.getCurrentInstance)("useActivator");
    const activatorEl = (0, _vue.ref)();
    let isHovered = false;
    let isFocused = false;
    let firstEnter = true;
    const openOnFocus = (0, _vue.computed)(()=>props.openOnFocus || props.openOnFocus == null && props.openOnHover);
    const openOnClick = (0, _vue.computed)(()=>props.openOnClick || props.openOnClick == null && !props.openOnHover && !openOnFocus.value);
    const { runOpenDelay, runCloseDelay } = (0, _delayMjs.useDelay)(props, (value)=>{
        if (value === (props.openOnHover && isHovered || openOnFocus.value && isFocused) && !(props.openOnHover && isActive.value && !isTop.value)) {
            if (isActive.value !== value) firstEnter = true;
            isActive.value = value;
        }
    });
    const cursorTarget = (0, _vue.ref)();
    const availableEvents = {
        onClick: (e)=>{
            e.stopPropagation();
            activatorEl.value = e.currentTarget || e.target;
            if (!isActive.value) cursorTarget.value = [
                e.clientX,
                e.clientY
            ];
            isActive.value = !isActive.value;
        },
        onMouseenter: (e)=>{
            if (e.sourceCapabilities?.firesTouchEvents) return;
            isHovered = true;
            activatorEl.value = e.currentTarget || e.target;
            runOpenDelay();
        },
        onMouseleave: (e)=>{
            isHovered = false;
            runCloseDelay();
        },
        onFocus: (e)=>{
            if ((0, _indexMjs.matchesSelector)(e.target, ":focus-visible") === false) return;
            isFocused = true;
            e.stopPropagation();
            activatorEl.value = e.currentTarget || e.target;
            runOpenDelay();
        },
        onBlur: (e)=>{
            isFocused = false;
            e.stopPropagation();
            runCloseDelay();
        }
    };
    const activatorEvents = (0, _vue.computed)(()=>{
        const events = {};
        if (openOnClick.value) events.onClick = availableEvents.onClick;
        if (props.openOnHover) {
            events.onMouseenter = availableEvents.onMouseenter;
            events.onMouseleave = availableEvents.onMouseleave;
        }
        if (openOnFocus.value) {
            events.onFocus = availableEvents.onFocus;
            events.onBlur = availableEvents.onBlur;
        }
        return events;
    });
    const contentEvents = (0, _vue.computed)(()=>{
        const events = {};
        if (props.openOnHover) {
            events.onMouseenter = ()=>{
                isHovered = true;
                runOpenDelay();
            };
            events.onMouseleave = ()=>{
                isHovered = false;
                runCloseDelay();
            };
        }
        if (openOnFocus.value) {
            events.onFocusin = ()=>{
                isFocused = true;
                runOpenDelay();
            };
            events.onFocusout = ()=>{
                isFocused = false;
                runCloseDelay();
            };
        }
        if (props.closeOnContentClick) {
            const menu = (0, _vue.inject)((0, _sharedMjs.VMenuSymbol), null);
            events.onClick = ()=>{
                isActive.value = false;
                menu?.closeParents();
            };
        }
        return events;
    });
    const scrimEvents = (0, _vue.computed)(()=>{
        const events = {};
        if (props.openOnHover) {
            events.onMouseenter = ()=>{
                if (firstEnter) {
                    isHovered = true;
                    firstEnter = false;
                    runOpenDelay();
                }
            };
            events.onMouseleave = ()=>{
                isHovered = false;
                runCloseDelay();
            };
        }
        return events;
    });
    (0, _vue.watch)(isTop, (val)=>{
        if (val && (props.openOnHover && !isHovered && (!openOnFocus.value || !isFocused) || openOnFocus.value && !isFocused && (!props.openOnHover || !isHovered)) && !contentEl.value?.contains(document.activeElement)) isActive.value = false;
    });
    (0, _vue.watch)(isActive, (val)=>{
        if (!val) setTimeout(()=>{
            cursorTarget.value = undefined;
        });
    }, {
        flush: "post"
    });
    const activatorRef = (0, _indexMjs.templateRef)();
    (0, _vue.watchEffect)(()=>{
        if (!activatorRef.value) return;
        (0, _vue.nextTick)(()=>{
            activatorEl.value = activatorRef.el;
        });
    });
    const targetRef = (0, _indexMjs.templateRef)();
    const target = (0, _vue.computed)(()=>{
        if (props.target === "cursor" && cursorTarget.value) return cursorTarget.value;
        if (targetRef.value) return targetRef.el;
        return getTarget(props.target, vm) || activatorEl.value;
    });
    const targetEl = (0, _vue.computed)(()=>{
        return Array.isArray(target.value) ? undefined : target.value;
    });
    let scope;
    (0, _vue.watch)(()=>!!props.activator, (val)=>{
        if (val && (0, _indexMjs.IN_BROWSER)) {
            scope = (0, _vue.effectScope)();
            scope.run(()=>{
                _useActivator(props, vm, {
                    activatorEl,
                    activatorEvents
                });
            });
        } else if (scope) scope.stop();
    }, {
        flush: "post",
        immediate: true
    });
    (0, _vue.onScopeDispose)(()=>{
        scope?.stop();
    });
    return {
        activatorEl,
        activatorRef,
        target,
        targetEl,
        targetRef,
        activatorEvents,
        contentEvents,
        scrimEvents
    };
}
function _useActivator(props, vm, _ref2) {
    let { activatorEl, activatorEvents } = _ref2;
    (0, _vue.watch)(()=>props.activator, (val, oldVal)=>{
        if (oldVal && val !== oldVal) {
            const activator = getActivator(oldVal);
            activator && unbindActivatorProps(activator);
        }
        if (val) (0, _vue.nextTick)(()=>bindActivatorProps());
    }, {
        immediate: true
    });
    (0, _vue.watch)(()=>props.activatorProps, ()=>{
        bindActivatorProps();
    });
    (0, _vue.onScopeDispose)(()=>{
        unbindActivatorProps();
    });
    function bindActivatorProps() {
        let el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getActivator();
        let _props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : props.activatorProps;
        if (!el) return;
        (0, _indexMjs.bindProps)(el, (0, _vue.mergeProps)(activatorEvents.value, _props));
    }
    function unbindActivatorProps() {
        let el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getActivator();
        let _props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : props.activatorProps;
        if (!el) return;
        (0, _indexMjs.unbindProps)(el, (0, _vue.mergeProps)(activatorEvents.value, _props));
    }
    function getActivator() {
        let selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : props.activator;
        const activator = getTarget(selector, vm);
        // The activator should only be a valid element (Ignore comments and text nodes)
        activatorEl.value = activator?.nodeType === Node.ELEMENT_NODE ? activator : undefined;
        return activatorEl.value;
    }
}
function getTarget(selector, vm) {
    if (!selector) return;
    let target;
    if (selector === "parent") {
        let el = vm?.proxy?.$el?.parentNode;
        while(el?.hasAttribute("data-no-activator"))el = el.parentNode;
        target = el;
    } else if (typeof selector === "string") // Selector
    target = document.querySelector(selector);
    else if ("$el" in selector) // Component (ref)
    target = selector.$el;
    else // HTMLElement | Element | [x, y]
    target = selector;
    return target;
}

},{"../VMenu/shared.mjs":"1ZaHA","../../composables/delay.mjs":"iMKjj","vue":"gCTam","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"1ZaHA":[function(require,module,exports) {
// Types
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VMenuSymbol", ()=>VMenuSymbol);
const VMenuSymbol = Symbol.for("vuetify:v-menu");

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"iMKjj":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeDelayProps", ()=>makeDelayProps);
parcelHelpers.export(exports, "useDelay", ()=>useDelay);
var _indexMjs = require("../util/index.mjs"); // Types
const makeDelayProps = (0, _indexMjs.propsFactory)({
    closeDelay: [
        Number,
        String
    ],
    openDelay: [
        Number,
        String
    ]
}, "delay");
function useDelay(props, cb) {
    let clearDelay = ()=>{};
    function runDelay(isOpening) {
        clearDelay?.();
        const delay = Number(isOpening ? props.openDelay : props.closeDelay);
        return new Promise((resolve)=>{
            clearDelay = (0, _indexMjs.defer)(delay, ()=>{
                cb?.(isOpening);
                resolve(isOpening);
            });
        });
    }
    function runOpenDelay() {
        return runDelay(true);
    }
    function runCloseDelay() {
        return runDelay(false);
    }
    return {
        clearDelay,
        runOpenDelay,
        runCloseDelay
    };
}

},{"../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"ksxeK":[function(require,module,exports) {
// Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useHydration", ()=>useHydration);
var _displayMjs = require("./display.mjs"); // Utilities
var _vue = require("vue");
var _indexMjs = require("../util/index.mjs");
function useHydration() {
    if (!(0, _indexMjs.IN_BROWSER)) return (0, _vue.shallowRef)(false);
    const { ssr } = (0, _displayMjs.useDisplay)();
    if (ssr) {
        const isMounted = (0, _vue.shallowRef)(false);
        (0, _vue.onMounted)(()=>{
            isMounted.value = true;
        });
        return isMounted;
    } else return (0, _vue.shallowRef)(true);
}

},{"./display.mjs":"bcRjl","vue":"gCTam","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"lca0Z":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeLazyProps", ()=>makeLazyProps);
parcelHelpers.export(exports, "useLazy", ()=>useLazy);
var _vue = require("vue");
var _indexMjs = require("../util/index.mjs"); // Types
const makeLazyProps = (0, _indexMjs.propsFactory)({
    eager: Boolean
}, "lazy");
function useLazy(props, active) {
    const isBooted = (0, _vue.shallowRef)(false);
    const hasContent = (0, _vue.computed)(()=>isBooted.value || props.eager || active.value);
    (0, _vue.watch)(active, ()=>isBooted.value = true);
    function onAfterLeave() {
        if (!props.eager) isBooted.value = false;
    }
    return {
        isBooted,
        hasContent,
        onAfterLeave
    };
}

},{"vue":"gCTam","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"1zMgM":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useScopeId", ()=>useScopeId);
var _indexMjs = require("../util/index.mjs");
function useScopeId() {
    const vm = (0, _indexMjs.getCurrentInstance)("useScopeId");
    const scopeId = vm.vnode.scopeId;
    return {
        scopeId: scopeId ? {
            [scopeId]: ""
        } : undefined
    };
}

},{"../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"bnW0f":[function(require,module,exports) {
// Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useStack", ()=>useStack);
var _toggleScopeMjs = require("./toggleScope.mjs"); // Utilities
var _vue = require("vue");
var _indexMjs = require("../util/index.mjs"); // Types
const StackSymbol = Symbol.for("vuetify:stack");
const globalStack = (0, _vue.reactive)([]);
function useStack(isActive, zIndex, disableGlobalStack) {
    const vm = (0, _indexMjs.getCurrentInstance)("useStack");
    const createStackEntry = !disableGlobalStack;
    const parent = (0, _vue.inject)(StackSymbol, undefined);
    const stack = (0, _vue.reactive)({
        activeChildren: new Set()
    });
    (0, _vue.provide)(StackSymbol, stack);
    const _zIndex = (0, _vue.shallowRef)(+zIndex.value);
    (0, _toggleScopeMjs.useToggleScope)(isActive, ()=>{
        const lastZIndex = globalStack.at(-1)?.[1];
        _zIndex.value = lastZIndex ? lastZIndex + 10 : +zIndex.value;
        if (createStackEntry) globalStack.push([
            vm.uid,
            _zIndex.value
        ]);
        parent?.activeChildren.add(vm.uid);
        (0, _vue.onScopeDispose)(()=>{
            if (createStackEntry) {
                const idx = (0, _vue.toRaw)(globalStack).findIndex((v)=>v[0] === vm.uid);
                globalStack.splice(idx, 1);
            }
            parent?.activeChildren.delete(vm.uid);
        });
    });
    const globalTop = (0, _vue.shallowRef)(true);
    if (createStackEntry) (0, _vue.watchEffect)(()=>{
        const _isTop = globalStack.at(-1)?.[0] === vm.uid;
        setTimeout(()=>globalTop.value = _isTop);
    });
    const localTop = (0, _vue.computed)(()=>!stack.activeChildren.size);
    return {
        globalTop: (0, _vue.readonly)(globalTop),
        localTop,
        stackStyles: (0, _vue.computed)(()=>({
                zIndex: _zIndex.value
            }))
    };
}

},{"./toggleScope.mjs":"dsKlJ","vue":"gCTam","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"eroPT":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useTeleport", ()=>useTeleport);
var _vue = require("vue");
var _indexMjs = require("../util/index.mjs");
function useTeleport(target) {
    const teleportTarget = (0, _vue.computed)(()=>{
        const _target = target();
        if (_target === true || !(0, _indexMjs.IN_BROWSER)) return undefined;
        const targetElement = _target === false ? document.body : typeof _target === "string" ? document.querySelector(_target) : _target;
        if (targetElement == null) {
            (0, _vue.warn)(`Unable to locate target ${_target}`);
            return undefined;
        }
        let container = [
            ...targetElement.children
        ].find((el)=>el.matches(".v-overlay-container"));
        if (!container) {
            container = document.createElement("div");
            container.className = "v-overlay-container";
            targetElement.appendChild(container);
        }
        return container;
    });
    return {
        teleportTarget
    };
}

},{"vue":"gCTam","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"cVgr0":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ClickOutside", ()=>ClickOutside);
var _indexMjs = require("../../util/index.mjs"); // Types
function defaultConditional() {
    return true;
}
function checkEvent(e, el, binding) {
    // The include element callbacks below can be expensive
    // so we should avoid calling them when we're not active.
    // Explicitly check for false to allow fallback compatibility
    // with non-toggleable components
    if (!e || checkIsActive(e, binding) === false) return false;
    // If we're clicking inside the shadowroot, then the app root doesn't get the same
    // level of introspection as to _what_ we're clicking. We want to check to see if
    // our target is the shadowroot parent container, and if it is, ignore.
    const root = (0, _indexMjs.attachedRoot)(el);
    if (typeof ShadowRoot !== "undefined" && root instanceof ShadowRoot && root.host === e.target) return false;
    // Check if additional elements were passed to be included in check
    // (click must be outside all included elements, if any)
    const elements = (typeof binding.value === "object" && binding.value.include || (()=>[]))();
    // Add the root element for the component this directive was defined on
    elements.push(el);
    // Check if it's a click outside our elements, and then if our callback returns true.
    // Non-toggleable components should take action in their callback and return falsy.
    // Toggleable can return true if it wants to deactivate.
    // Note that, because we're in the capture phase, this callback will occur before
    // the bubbling click event on any outside elements.
    return !elements.some((el)=>el?.contains(e.target));
}
function checkIsActive(e, binding) {
    const isActive = typeof binding.value === "object" && binding.value.closeConditional || defaultConditional;
    return isActive(e);
}
function directive(e, el, binding) {
    const handler = typeof binding.value === "function" ? binding.value : binding.value.handler;
    // Clicks in the Shadow DOM change their target while using setTimeout, so the original target is saved here
    e.shadowTarget = e.target;
    el._clickOutside.lastMousedownWasOutside && checkEvent(e, el, binding) && setTimeout(()=>{
        checkIsActive(e, binding) && handler && handler(e);
    }, 0);
}
function handleShadow(el, callback) {
    const root = (0, _indexMjs.attachedRoot)(el);
    callback(document);
    if (typeof ShadowRoot !== "undefined" && root instanceof ShadowRoot) callback(root);
}
const ClickOutside = {
    // [data-app] may not be found
    // if using bind, inserted makes
    // sure that the root element is
    // available, iOS does not support
    // clicks on body
    mounted (el, binding) {
        const onClick = (e)=>directive(e, el, binding);
        const onMousedown = (e)=>{
            el._clickOutside.lastMousedownWasOutside = checkEvent(e, el, binding);
        };
        handleShadow(el, (app)=>{
            app.addEventListener("click", onClick, true);
            app.addEventListener("mousedown", onMousedown, true);
        });
        if (!el._clickOutside) el._clickOutside = {
            lastMousedownWasOutside: false
        };
        el._clickOutside[binding.instance.$.uid] = {
            onClick,
            onMousedown
        };
    },
    beforeUnmount (el, binding) {
        if (!el._clickOutside) return;
        handleShadow(el, (app)=>{
            if (!app || !el._clickOutside?.[binding.instance.$.uid]) return;
            const { onClick, onMousedown } = el._clickOutside[binding.instance.$.uid];
            app.removeEventListener("click", onClick, true);
            app.removeEventListener("mousedown", onMousedown, true);
        });
        delete el._clickOutside[binding.instance.$.uid];
    }
};
exports.default = ClickOutside;

},{"../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"2TNTP":[function(require,module,exports) {
// Types
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "forwardRefs", ()=>forwardRefs);
const Refs = Symbol("Forwarded refs");
/** Omit properties starting with P */ function getDescriptor(obj, key) {
    let currentObj = obj;
    while(currentObj){
        const descriptor = Reflect.getOwnPropertyDescriptor(currentObj, key);
        if (descriptor) return descriptor;
        currentObj = Object.getPrototypeOf(currentObj);
    }
    return undefined;
}
function forwardRefs(target) {
    for(var _len = arguments.length, refs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)refs[_key - 1] = arguments[_key];
    target[Refs] = refs;
    return new Proxy(target, {
        get (target, key) {
            if (Reflect.has(target, key)) return Reflect.get(target, key);
            // Skip internal properties
            if (typeof key === "symbol" || key.startsWith("$") || key.startsWith("__")) return;
            for (const ref of refs)if (ref.value && Reflect.has(ref.value, key)) {
                const val = Reflect.get(ref.value, key);
                return typeof val === "function" ? val.bind(ref.value) : val;
            }
        },
        has (target, key) {
            if (Reflect.has(target, key)) return true;
            // Skip internal properties
            if (typeof key === "symbol" || key.startsWith("$") || key.startsWith("__")) return false;
            for (const ref of refs){
                if (ref.value && Reflect.has(ref.value, key)) return true;
            }
            return false;
        },
        set (target, key, value) {
            if (Reflect.has(target, key)) return Reflect.set(target, key, value);
            // Skip internal properties
            if (typeof key === "symbol" || key.startsWith("$") || key.startsWith("__")) return false;
            for (const ref of refs){
                if (ref.value && Reflect.has(ref.value, key)) return Reflect.set(ref.value, key, value);
            }
            return false;
        },
        getOwnPropertyDescriptor (target, key) {
            const descriptor = Reflect.getOwnPropertyDescriptor(target, key);
            if (descriptor) return descriptor;
            // Skip internal properties
            if (typeof key === "symbol" || key.startsWith("$") || key.startsWith("__")) return;
            // Check each ref's own properties
            for (const ref of refs){
                if (!ref.value) continue;
                const descriptor = getDescriptor(ref.value, key) ?? ("_" in ref.value ? getDescriptor(ref.value._?.setupState, key) : undefined);
                if (descriptor) return descriptor;
            }
            // Recursive search up each ref's prototype
            for (const ref of refs){
                const childRefs = ref.value && ref.value[Refs];
                if (!childRefs) continue;
                const queue = childRefs.slice();
                while(queue.length){
                    const ref = queue.shift();
                    const descriptor = getDescriptor(ref.value, key);
                    if (descriptor) return descriptor;
                    const childRefs = ref.value && ref.value[Refs];
                    if (childRefs) queue.push(...childRefs);
                }
            }
            return undefined;
        }
    });
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"lxk2a":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeSelectProps", ()=>makeSelectProps);
parcelHelpers.export(exports, "makeVSelectProps", ()=>makeVSelectProps);
parcelHelpers.export(exports, "VSelect", ()=>VSelect);
var _vue = require("vue");
// Styles
var _vselectCss = require("./VSelect.css");
// Components
var _indexMjs = require("../transitions/index.mjs");
var _indexMjs1 = require("../VAvatar/index.mjs");
var _indexMjs2 = require("../VCheckbox/index.mjs");
var _indexMjs3 = require("../VChip/index.mjs");
var _indexMjs4 = require("../VDefaultsProvider/index.mjs");
var _indexMjs5 = require("../VIcon/index.mjs");
var _indexMjs6 = require("../VList/index.mjs");
var _indexMjs7 = require("../VMenu/index.mjs");
var _vtextFieldMjs = require("../VTextField/VTextField.mjs");
var _indexMjs8 = require("../VVirtualScroll/index.mjs"); // Composables
var _useScrollingMjs = require("./useScrolling.mjs");
var _formMjs = require("../../composables/form.mjs");
var _forwardRefsMjs = require("../../composables/forwardRefs.mjs");
var _iconsMjs = require("../../composables/icons.mjs");
var _listItemsMjs = require("../../composables/list-items.mjs");
var _localeMjs = require("../../composables/locale.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs");
var _transitionMjs = require("../../composables/transition.mjs"); // Utilities
var _indexMjs9 = require("../../util/index.mjs"); // Types
const makeSelectProps = (0, _indexMjs9.propsFactory)({
    chips: Boolean,
    closableChips: Boolean,
    closeText: {
        type: String,
        default: "$vuetify.close"
    },
    openText: {
        type: String,
        default: "$vuetify.open"
    },
    eager: Boolean,
    hideNoData: Boolean,
    hideSelected: Boolean,
    listProps: {
        type: Object
    },
    menu: Boolean,
    menuIcon: {
        type: (0, _iconsMjs.IconValue),
        default: "$dropdown"
    },
    menuProps: {
        type: Object
    },
    multiple: Boolean,
    noDataText: {
        type: String,
        default: "$vuetify.noDataText"
    },
    openOnClear: Boolean,
    itemColor: String,
    ...(0, _listItemsMjs.makeItemsProps)({
        itemChildren: false
    })
}, "Select");
const makeVSelectProps = (0, _indexMjs9.propsFactory)({
    ...makeSelectProps(),
    ...(0, _indexMjs9.omit)((0, _vtextFieldMjs.makeVTextFieldProps)({
        modelValue: null,
        role: "combobox"
    }), [
        "validationValue",
        "dirty",
        "appendInnerIcon"
    ]),
    ...(0, _transitionMjs.makeTransitionProps)({
        transition: {
            component: (0, _indexMjs.VDialogTransition)
        }
    })
}, "VSelect");
const VSelect = (0, _indexMjs9.genericComponent)()({
    name: "VSelect",
    props: makeVSelectProps(),
    emits: {
        "update:focused": (focused)=>true,
        "update:modelValue": (value)=>true,
        "update:menu": (ue)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const { t } = (0, _localeMjs.useLocale)();
        const vTextFieldRef = (0, _vue.ref)();
        const vMenuRef = (0, _vue.ref)();
        const vVirtualScrollRef = (0, _vue.ref)();
        const _menu = (0, _proxiedModelMjs.useProxiedModel)(props, "menu");
        const menu = (0, _vue.computed)({
            get: ()=>_menu.value,
            set: (v)=>{
                if (_menu.value && !v && vMenuRef.value?.\u03A8openChildren.size) return;
                _menu.value = v;
            }
        });
        const { items, transformIn, transformOut } = (0, _listItemsMjs.useItems)(props);
        const model = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue", [], (v)=>transformIn(v === null ? [
                null
            ] : (0, _indexMjs9.wrapInArray)(v)), (v)=>{
            const transformed = transformOut(v);
            return props.multiple ? transformed : transformed[0] ?? null;
        });
        const counterValue = (0, _vue.computed)(()=>{
            return typeof props.counterValue === "function" ? props.counterValue(model.value) : typeof props.counterValue === "number" ? props.counterValue : model.value.length;
        });
        const form = (0, _formMjs.useForm)();
        const selectedValues = (0, _vue.computed)(()=>model.value.map((selection)=>selection.value));
        const isFocused = (0, _vue.shallowRef)(false);
        const label = (0, _vue.computed)(()=>menu.value ? props.closeText : props.openText);
        let keyboardLookupPrefix = "";
        let keyboardLookupLastTime;
        const displayItems = (0, _vue.computed)(()=>{
            if (props.hideSelected) return items.value.filter((item)=>!model.value.some((s)=>props.valueComparator(s, item)));
            return items.value;
        });
        const menuDisabled = (0, _vue.computed)(()=>props.hideNoData && !displayItems.value.length || props.readonly || form?.isReadonly.value);
        const computedMenuProps = (0, _vue.computed)(()=>{
            return {
                ...props.menuProps,
                activatorProps: {
                    ...props.menuProps?.activatorProps || {},
                    "aria-haspopup": "listbox" // Set aria-haspopup to 'listbox'
                }
            };
        });
        const listRef = (0, _vue.ref)();
        const listEvents = (0, _useScrollingMjs.useScrolling)(listRef, vTextFieldRef);
        function onClear(e) {
            if (props.openOnClear) menu.value = true;
        }
        function onMousedownControl() {
            if (menuDisabled.value) return;
            menu.value = !menu.value;
        }
        function onListKeydown(e) {
            if ((0, _indexMjs9.checkPrintable)(e)) onKeydown(e);
        }
        function onKeydown(e) {
            if (!e.key || props.readonly || form?.isReadonly.value) return;
            if ([
                "Enter",
                " ",
                "ArrowDown",
                "ArrowUp",
                "Home",
                "End"
            ].includes(e.key)) e.preventDefault();
            if ([
                "Enter",
                "ArrowDown",
                " "
            ].includes(e.key)) menu.value = true;
            if ([
                "Escape",
                "Tab"
            ].includes(e.key)) menu.value = false;
            if (e.key === "Home") listRef.value?.focus("first");
            else if (e.key === "End") listRef.value?.focus("last");
            // html select hotkeys
            const KEYBOARD_LOOKUP_THRESHOLD = 1000; // milliseconds
            if (props.multiple || !(0, _indexMjs9.checkPrintable)(e)) return;
            const now = performance.now();
            if (now - keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) keyboardLookupPrefix = "";
            keyboardLookupPrefix += e.key.toLowerCase();
            keyboardLookupLastTime = now;
            const item = items.value.find((item)=>item.title.toLowerCase().startsWith(keyboardLookupPrefix));
            if (item !== undefined) {
                model.value = [
                    item
                ];
                const index = displayItems.value.indexOf(item);
                (0, _indexMjs9.IN_BROWSER) && window.requestAnimationFrame(()=>{
                    index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index);
                });
            }
        }
        /** @param set - null means toggle */ function select(item) {
            let set = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
            if (item.props.disabled) return;
            if (props.multiple) {
                const index = model.value.findIndex((selection)=>props.valueComparator(selection.value, item.value));
                const add = set == null ? !~index : set;
                if (~index) {
                    const value = add ? [
                        ...model.value,
                        item
                    ] : [
                        ...model.value
                    ];
                    value.splice(index, 1);
                    model.value = value;
                } else if (add) model.value = [
                    ...model.value,
                    item
                ];
            } else {
                const add = set !== false;
                model.value = add ? [
                    item
                ] : [];
                (0, _vue.nextTick)(()=>{
                    menu.value = false;
                });
            }
        }
        function onBlur(e) {
            if (!listRef.value?.$el.contains(e.relatedTarget)) menu.value = false;
        }
        function onAfterEnter() {
            if (props.eager) vVirtualScrollRef.value?.calculateVisibleItems();
        }
        function onAfterLeave() {
            if (isFocused.value) vTextFieldRef.value?.focus();
        }
        function onFocusin(e) {
            isFocused.value = true;
        }
        function onModelUpdate(v) {
            if (v == null) model.value = [];
            else if ((0, _indexMjs9.matchesSelector)(vTextFieldRef.value, ":autofill") || (0, _indexMjs9.matchesSelector)(vTextFieldRef.value, ":-webkit-autofill")) {
                const item = items.value.find((item)=>item.title === v);
                if (item) select(item);
            } else if (vTextFieldRef.value) vTextFieldRef.value.value = "";
        }
        (0, _vue.watch)(menu, ()=>{
            if (!props.hideSelected && menu.value && model.value.length) {
                const index = displayItems.value.findIndex((item)=>model.value.some((s)=>props.valueComparator(s.value, item.value)));
                (0, _indexMjs9.IN_BROWSER) && window.requestAnimationFrame(()=>{
                    index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index);
                });
            }
        });
        (0, _vue.watch)(()=>props.items, (newVal, oldVal)=>{
            if (menu.value) return;
            if (isFocused.value && !oldVal.length && newVal.length) menu.value = true;
        });
        (0, _indexMjs9.useRender)(()=>{
            const hasChips = !!(props.chips || slots.chip);
            const hasList = !!(!props.hideNoData || displayItems.value.length || slots["prepend-item"] || slots["append-item"] || slots["no-data"]);
            const isDirty = model.value.length > 0;
            const textFieldProps = (0, _vtextFieldMjs.VTextField).filterProps(props);
            const placeholder = isDirty || !isFocused.value && props.label && !props.persistentPlaceholder ? undefined : props.placeholder;
            return (0, _vue.createVNode)((0, _vtextFieldMjs.VTextField), (0, _vue.mergeProps)({
                "ref": vTextFieldRef
            }, textFieldProps, {
                "modelValue": model.value.map((v)=>v.props.value).join(", "),
                "onUpdate:modelValue": onModelUpdate,
                "focused": isFocused.value,
                "onUpdate:focused": ($event)=>isFocused.value = $event,
                "validationValue": model.externalValue,
                "counterValue": counterValue.value,
                "dirty": isDirty,
                "class": [
                    "v-select",
                    {
                        "v-select--active-menu": menu.value,
                        "v-select--chips": !!props.chips,
                        [`v-select--${props.multiple ? "multiple" : "single"}`]: true,
                        "v-select--selected": model.value.length,
                        "v-select--selection-slot": !!slots.selection
                    },
                    props.class
                ],
                "style": props.style,
                "inputmode": "none",
                "placeholder": placeholder,
                "onClick:clear": onClear,
                "onMousedown:control": onMousedownControl,
                "onBlur": onBlur,
                "onKeydown": onKeydown,
                "aria-label": t(label.value),
                "title": t(label.value)
            }), {
                ...slots,
                default: ()=>(0, _vue.createVNode)((0, _vue.Fragment), null, [
                        (0, _vue.createVNode)((0, _indexMjs7.VMenu), (0, _vue.mergeProps)({
                            "ref": vMenuRef,
                            "modelValue": menu.value,
                            "onUpdate:modelValue": ($event)=>menu.value = $event,
                            "activator": "parent",
                            "contentClass": "v-select__content",
                            "disabled": menuDisabled.value,
                            "eager": props.eager,
                            "maxHeight": 310,
                            "openOnClick": false,
                            "closeOnContentClick": false,
                            "transition": props.transition,
                            "onAfterEnter": onAfterEnter,
                            "onAfterLeave": onAfterLeave
                        }, computedMenuProps.value), {
                            default: ()=>[
                                    hasList && (0, _vue.createVNode)((0, _indexMjs6.VList), (0, _vue.mergeProps)({
                                        "ref": listRef,
                                        "selected": selectedValues.value,
                                        "selectStrategy": props.multiple ? "independent" : "single-independent",
                                        "onMousedown": (e)=>e.preventDefault(),
                                        "onKeydown": onListKeydown,
                                        "onFocusin": onFocusin,
                                        "tabindex": "-1",
                                        "aria-live": "polite",
                                        "color": props.itemColor ?? props.color
                                    }, listEvents, props.listProps), {
                                        default: ()=>[
                                                slots["prepend-item"]?.(),
                                                !displayItems.value.length && !props.hideNoData && (slots["no-data"]?.() ?? (0, _vue.createVNode)((0, _indexMjs6.VListItem), {
                                                    "title": t(props.noDataText)
                                                }, null)),
                                                (0, _vue.createVNode)((0, _indexMjs8.VVirtualScroll), {
                                                    "ref": vVirtualScrollRef,
                                                    "renderless": true,
                                                    "items": displayItems.value
                                                }, {
                                                    default: (_ref2)=>{
                                                        let { item, index, itemRef } = _ref2;
                                                        const itemProps = (0, _vue.mergeProps)(item.props, {
                                                            ref: itemRef,
                                                            key: index,
                                                            onClick: ()=>select(item, null)
                                                        });
                                                        return slots.item?.({
                                                            item,
                                                            index,
                                                            props: itemProps
                                                        }) ?? (0, _vue.createVNode)((0, _indexMjs6.VListItem), (0, _vue.mergeProps)(itemProps, {
                                                            "role": "option"
                                                        }), {
                                                            prepend: (_ref3)=>{
                                                                let { isSelected } = _ref3;
                                                                return (0, _vue.createVNode)((0, _vue.Fragment), null, [
                                                                    props.multiple && !props.hideSelected ? (0, _vue.createVNode)((0, _indexMjs2.VCheckboxBtn), {
                                                                        "key": item.value,
                                                                        "modelValue": isSelected,
                                                                        "ripple": false,
                                                                        "tabindex": "-1"
                                                                    }, null) : undefined,
                                                                    item.props.prependAvatar && (0, _vue.createVNode)((0, _indexMjs1.VAvatar), {
                                                                        "image": item.props.prependAvatar
                                                                    }, null),
                                                                    item.props.prependIcon && (0, _vue.createVNode)((0, _indexMjs5.VIcon), {
                                                                        "icon": item.props.prependIcon
                                                                    }, null)
                                                                ]);
                                                            }
                                                        });
                                                    }
                                                }),
                                                slots["append-item"]?.()
                                            ]
                                    })
                                ]
                        }),
                        model.value.map((item, index)=>{
                            function onChipClose(e) {
                                e.stopPropagation();
                                e.preventDefault();
                                select(item, false);
                            }
                            const slotProps = {
                                "onClick:close": onChipClose,
                                onKeydown (e) {
                                    if (e.key !== "Enter" && e.key !== " ") return;
                                    e.preventDefault();
                                    e.stopPropagation();
                                    onChipClose(e);
                                },
                                onMousedown (e) {
                                    e.preventDefault();
                                    e.stopPropagation();
                                },
                                modelValue: true,
                                "onUpdate:modelValue": undefined
                            };
                            const hasSlot = hasChips ? !!slots.chip : !!slots.selection;
                            const slotContent = hasSlot ? (0, _indexMjs9.ensureValidVNode)(hasChips ? slots.chip({
                                item,
                                index,
                                props: slotProps
                            }) : slots.selection({
                                item,
                                index
                            })) : undefined;
                            if (hasSlot && !slotContent) return undefined;
                            return (0, _vue.createVNode)("div", {
                                "key": item.value,
                                "class": "v-select__selection"
                            }, [
                                hasChips ? !slots.chip ? (0, _vue.createVNode)((0, _indexMjs3.VChip), (0, _vue.mergeProps)({
                                    "key": "chip",
                                    "closable": props.closableChips,
                                    "size": "small",
                                    "text": item.title,
                                    "disabled": item.props.disabled
                                }, slotProps), null) : (0, _vue.createVNode)((0, _indexMjs4.VDefaultsProvider), {
                                    "key": "chip-defaults",
                                    "defaults": {
                                        VChip: {
                                            closable: props.closableChips,
                                            size: "small",
                                            text: item.title
                                        }
                                    }
                                }, {
                                    default: ()=>[
                                            slotContent
                                        ]
                                }) : slotContent ?? (0, _vue.createVNode)("span", {
                                    "class": "v-select__selection-text"
                                }, [
                                    item.title,
                                    props.multiple && index < model.value.length - 1 && (0, _vue.createVNode)("span", {
                                        "class": "v-select__selection-comma"
                                    }, [
                                        (0, _vue.createTextVNode)(",")
                                    ])
                                ])
                            ]);
                        })
                    ]),
                "append-inner": function() {
                    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
                    return (0, _vue.createVNode)((0, _vue.Fragment), null, [
                        slots["append-inner"]?.(...args),
                        props.menuIcon ? (0, _vue.createVNode)((0, _indexMjs5.VIcon), {
                            "class": "v-select__menu-icon",
                            "icon": props.menuIcon
                        }, null) : undefined
                    ]);
                }
            });
        });
        return (0, _forwardRefsMjs.forwardRefs)({
            isFocused,
            menu,
            select
        }, vTextFieldRef);
    }
});

},{"vue":"gCTam","./VSelect.css":"jG5J9","../transitions/index.mjs":"3ybHr","../VAvatar/index.mjs":"d9olW","../VCheckbox/index.mjs":"c1Gdu","../VChip/index.mjs":"bLlpp","../VDefaultsProvider/index.mjs":"eFFvH","../VIcon/index.mjs":"5Yjjr","../VList/index.mjs":"56Mcn","../VMenu/index.mjs":"72lak","../VTextField/VTextField.mjs":"kzi5r","../VVirtualScroll/index.mjs":"cUhx7","./useScrolling.mjs":"6iRHI","../../composables/form.mjs":"wQrA9","../../composables/forwardRefs.mjs":"2TNTP","../../composables/icons.mjs":"g4kLv","../../composables/list-items.mjs":"9YaK8","../../composables/locale.mjs":"9rJP0","../../composables/proxiedModel.mjs":"huwLk","../../composables/transition.mjs":"dJyg1","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"jG5J9":[function() {},{}],"kzi5r":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVTextFieldProps", ()=>makeVTextFieldProps);
parcelHelpers.export(exports, "VTextField", ()=>VTextField);
var _vue = require("vue");
// Styles
var _vtextFieldCss = require("./VTextField.css");
// Components
var _vcounterMjs = require("../VCounter/VCounter.mjs");
var _vfieldMjs = require("../VField/VField.mjs");
var _vinputMjs = require("../VInput/VInput.mjs"); // Composables
var _focusMjs = require("../../composables/focus.mjs");
var _forwardRefsMjs = require("../../composables/forwardRefs.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs"); // Directives
var _indexMjs = require("../../directives/intersect/index.mjs"); // Utilities
var _indexMjsDefault = parcelHelpers.interopDefault(_indexMjs);
var _indexMjs1 = require("../../util/index.mjs"); // Types
const activeTypes = [
    "color",
    "file",
    "time",
    "date",
    "datetime-local",
    "week",
    "month"
];
const makeVTextFieldProps = (0, _indexMjs1.propsFactory)({
    autofocus: Boolean,
    counter: [
        Boolean,
        Number,
        String
    ],
    counterValue: [
        Number,
        Function
    ],
    prefix: String,
    placeholder: String,
    persistentPlaceholder: Boolean,
    persistentCounter: Boolean,
    suffix: String,
    role: String,
    type: {
        type: String,
        default: "text"
    },
    modelModifiers: Object,
    ...(0, _vinputMjs.makeVInputProps)(),
    ...(0, _vfieldMjs.makeVFieldProps)()
}, "VTextField");
const VTextField = (0, _indexMjs1.genericComponent)()({
    name: "VTextField",
    directives: {
        Intersect: (0, _indexMjsDefault.default)
    },
    inheritAttrs: false,
    props: makeVTextFieldProps(),
    emits: {
        "click:control": (e)=>true,
        "mousedown:control": (e)=>true,
        "update:focused": (focused)=>true,
        "update:modelValue": (val)=>true
    },
    setup (props, _ref) {
        let { attrs, emit, slots } = _ref;
        const model = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
        const { isFocused, focus, blur } = (0, _focusMjs.useFocus)(props);
        const counterValue = (0, _vue.computed)(()=>{
            return typeof props.counterValue === "function" ? props.counterValue(model.value) : typeof props.counterValue === "number" ? props.counterValue : (model.value ?? "").toString().length;
        });
        const max = (0, _vue.computed)(()=>{
            if (attrs.maxlength) return attrs.maxlength;
            if (!props.counter || typeof props.counter !== "number" && typeof props.counter !== "string") return undefined;
            return props.counter;
        });
        const isPlainOrUnderlined = (0, _vue.computed)(()=>[
                "plain",
                "underlined"
            ].includes(props.variant));
        function onIntersect(isIntersecting, entries) {
            if (!props.autofocus || !isIntersecting) return;
            entries[0].target?.focus?.();
        }
        const vInputRef = (0, _vue.ref)();
        const vFieldRef = (0, _vue.ref)();
        const inputRef = (0, _vue.ref)();
        const isActive = (0, _vue.computed)(()=>activeTypes.includes(props.type) || props.persistentPlaceholder || isFocused.value || props.active);
        function onFocus() {
            if (inputRef.value !== document.activeElement) inputRef.value?.focus();
            if (!isFocused.value) focus();
        }
        function onControlMousedown(e) {
            emit("mousedown:control", e);
            if (e.target === inputRef.value) return;
            onFocus();
            e.preventDefault();
        }
        function onControlClick(e) {
            onFocus();
            emit("click:control", e);
        }
        function onClear(e) {
            e.stopPropagation();
            onFocus();
            (0, _vue.nextTick)(()=>{
                model.value = null;
                (0, _indexMjs1.callEvent)(props["onClick:clear"], e);
            });
        }
        function onInput(e) {
            const el = e.target;
            model.value = el.value;
            if (props.modelModifiers?.trim && [
                "text",
                "search",
                "password",
                "tel",
                "url"
            ].includes(props.type)) {
                const caretPosition = [
                    el.selectionStart,
                    el.selectionEnd
                ];
                (0, _vue.nextTick)(()=>{
                    el.selectionStart = caretPosition[0];
                    el.selectionEnd = caretPosition[1];
                });
            }
        }
        (0, _indexMjs1.useRender)(()=>{
            const hasCounter = !!(slots.counter || props.counter !== false && props.counter != null);
            const hasDetails = !!(hasCounter || slots.details);
            const [rootAttrs, inputAttrs] = (0, _indexMjs1.filterInputAttrs)(attrs);
            const { modelValue: _, ...inputProps } = (0, _vinputMjs.VInput).filterProps(props);
            const fieldProps = (0, _vfieldMjs.filterFieldProps)(props);
            return (0, _vue.createVNode)((0, _vinputMjs.VInput), (0, _vue.mergeProps)({
                "ref": vInputRef,
                "modelValue": model.value,
                "onUpdate:modelValue": ($event)=>model.value = $event,
                "class": [
                    "v-text-field",
                    {
                        "v-text-field--prefixed": props.prefix,
                        "v-text-field--suffixed": props.suffix,
                        "v-input--plain-underlined": isPlainOrUnderlined.value
                    },
                    props.class
                ],
                "style": props.style
            }, rootAttrs, inputProps, {
                "centerAffix": !isPlainOrUnderlined.value,
                "focused": isFocused.value
            }), {
                ...slots,
                default: (_ref2)=>{
                    let { id, isDisabled, isDirty, isReadonly, isValid } = _ref2;
                    return (0, _vue.createVNode)((0, _vfieldMjs.VField), (0, _vue.mergeProps)({
                        "ref": vFieldRef,
                        "onMousedown": onControlMousedown,
                        "onClick": onControlClick,
                        "onClick:clear": onClear,
                        "onClick:prependInner": props["onClick:prependInner"],
                        "onClick:appendInner": props["onClick:appendInner"],
                        "role": props.role
                    }, fieldProps, {
                        "id": id.value,
                        "active": isActive.value || isDirty.value,
                        "dirty": isDirty.value || props.dirty,
                        "disabled": isDisabled.value,
                        "focused": isFocused.value,
                        "error": isValid.value === false
                    }), {
                        ...slots,
                        default: (_ref3)=>{
                            let { props: { class: fieldClass, ...slotProps } } = _ref3;
                            const inputNode = (0, _vue.withDirectives)((0, _vue.createVNode)("input", (0, _vue.mergeProps)({
                                "ref": inputRef,
                                "value": model.value,
                                "onInput": onInput,
                                "autofocus": props.autofocus,
                                "readonly": isReadonly.value,
                                "disabled": isDisabled.value,
                                "name": props.name,
                                "placeholder": props.placeholder,
                                "size": 1,
                                "type": props.type,
                                "onFocus": onFocus,
                                "onBlur": blur
                            }, slotProps, inputAttrs), null), [
                                [
                                    (0, _vue.resolveDirective)("intersect"),
                                    {
                                        handler: onIntersect
                                    },
                                    null,
                                    {
                                        once: true
                                    }
                                ]
                            ]);
                            return (0, _vue.createVNode)((0, _vue.Fragment), null, [
                                props.prefix && (0, _vue.createVNode)("span", {
                                    "class": "v-text-field__prefix"
                                }, [
                                    (0, _vue.createVNode)("span", {
                                        "class": "v-text-field__prefix__text"
                                    }, [
                                        props.prefix
                                    ])
                                ]),
                                slots.default ? (0, _vue.createVNode)("div", {
                                    "class": fieldClass,
                                    "data-no-activator": ""
                                }, [
                                    slots.default(),
                                    inputNode
                                ]) : (0, _vue.cloneVNode)(inputNode, {
                                    class: fieldClass
                                }),
                                props.suffix && (0, _vue.createVNode)("span", {
                                    "class": "v-text-field__suffix"
                                }, [
                                    (0, _vue.createVNode)("span", {
                                        "class": "v-text-field__suffix__text"
                                    }, [
                                        props.suffix
                                    ])
                                ])
                            ]);
                        }
                    });
                },
                details: hasDetails ? (slotProps)=>(0, _vue.createVNode)((0, _vue.Fragment), null, [
                        slots.details?.(slotProps),
                        hasCounter && (0, _vue.createVNode)((0, _vue.Fragment), null, [
                            (0, _vue.createVNode)("span", null, null),
                            (0, _vue.createVNode)((0, _vcounterMjs.VCounter), {
                                "active": props.persistentCounter || isFocused.value,
                                "value": counterValue.value,
                                "max": max.value,
                                "disabled": props.disabled
                            }, slots.counter)
                        ])
                    ]) : undefined
            });
        });
        return (0, _forwardRefsMjs.forwardRefs)({}, vInputRef, vFieldRef, inputRef);
    }
});

},{"vue":"gCTam","./VTextField.css":"crDGq","../VCounter/VCounter.mjs":"b8Y9k","../VField/VField.mjs":"kYFSe","../VInput/VInput.mjs":"fIDss","../../composables/focus.mjs":"ez9on","../../composables/forwardRefs.mjs":"2TNTP","../../composables/proxiedModel.mjs":"huwLk","../../directives/intersect/index.mjs":"iNCN8","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"crDGq":[function() {},{}],"b8Y9k":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVCounterProps", ()=>makeVCounterProps);
parcelHelpers.export(exports, "VCounter", ()=>VCounter);
var _vue = require("vue");
// Styles
var _vcounterCss = require("./VCounter.css");
// Components
var _indexMjs = require("../transitions/index.mjs"); // Composables
var _componentMjs = require("../../composables/component.mjs");
var _transitionMjs = require("../../composables/transition.mjs"); // Utilities
var _indexMjs1 = require("../../util/index.mjs"); // Types
const makeVCounterProps = (0, _indexMjs1.propsFactory)({
    active: Boolean,
    disabled: Boolean,
    max: [
        Number,
        String
    ],
    value: {
        type: [
            Number,
            String
        ],
        default: 0
    },
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _transitionMjs.makeTransitionProps)({
        transition: {
            component: (0, _indexMjs.VSlideYTransition)
        }
    })
}, "VCounter");
const VCounter = (0, _indexMjs1.genericComponent)()({
    name: "VCounter",
    functional: true,
    props: makeVCounterProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const counter = (0, _vue.computed)(()=>{
            return props.max ? `${props.value} / ${props.max}` : String(props.value);
        });
        (0, _indexMjs1.useRender)(()=>(0, _vue.createVNode)((0, _transitionMjs.MaybeTransition), {
                "transition": props.transition
            }, {
                default: ()=>[
                        (0, _vue.withDirectives)((0, _vue.createVNode)("div", {
                            "class": [
                                "v-counter",
                                {
                                    "text-error": props.max && !props.disabled && parseFloat(props.value) > parseFloat(props.max)
                                },
                                props.class
                            ],
                            "style": props.style
                        }, [
                            slots.default ? slots.default({
                                counter: counter.value,
                                max: props.max,
                                value: props.value
                            }) : counter.value
                        ]), [
                            [
                                (0, _vue.vShow),
                                props.active
                            ]
                        ])
                    ]
            }));
        return {};
    }
});

},{"vue":"gCTam","./VCounter.css":"7g5Ir","../transitions/index.mjs":"3ybHr","../../composables/component.mjs":"4YAxs","../../composables/transition.mjs":"dJyg1","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"7g5Ir":[function() {},{}],"kYFSe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVFieldProps", ()=>makeVFieldProps);
parcelHelpers.export(exports, "VField", ()=>VField);
// TODO: this is kinda slow, might be better to implicitly inherit props instead
parcelHelpers.export(exports, "filterFieldProps", ()=>filterFieldProps);
var _vue = require("vue");
// Styles
var _vfieldCss = require("./VField.css");
// Components
var _vfieldLabelMjs = require("./VFieldLabel.mjs");
var _indexMjs = require("../transitions/index.mjs");
var _indexMjs1 = require("../VDefaultsProvider/index.mjs");
var _inputIconMjs = require("../VInput/InputIcon.mjs"); // Composables
var _colorMjs = require("../../composables/color.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _focusMjs = require("../../composables/focus.mjs");
var _iconsMjs = require("../../composables/icons.mjs");
var _loaderMjs = require("../../composables/loader.mjs");
var _localeMjs = require("../../composables/locale.mjs");
var _roundedMjs = require("../../composables/rounded.mjs");
var _themeMjs = require("../../composables/theme.mjs"); // Utilities
var _indexMjs2 = require("../../util/index.mjs"); // Types
const allowedVariants = [
    "underlined",
    "outlined",
    "filled",
    "solo",
    "solo-inverted",
    "solo-filled",
    "plain"
];
const makeVFieldProps = (0, _indexMjs2.propsFactory)({
    appendInnerIcon: (0, _iconsMjs.IconValue),
    bgColor: String,
    clearable: Boolean,
    clearIcon: {
        type: (0, _iconsMjs.IconValue),
        default: "$clear"
    },
    active: Boolean,
    centerAffix: {
        type: Boolean,
        default: undefined
    },
    color: String,
    baseColor: String,
    dirty: Boolean,
    disabled: {
        type: Boolean,
        default: null
    },
    error: Boolean,
    flat: Boolean,
    label: String,
    persistentClear: Boolean,
    prependInnerIcon: (0, _iconsMjs.IconValue),
    reverse: Boolean,
    singleLine: Boolean,
    variant: {
        type: String,
        default: "filled",
        validator: (v)=>allowedVariants.includes(v)
    },
    "onClick:clear": (0, _indexMjs2.EventProp)(),
    "onClick:appendInner": (0, _indexMjs2.EventProp)(),
    "onClick:prependInner": (0, _indexMjs2.EventProp)(),
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _loaderMjs.makeLoaderProps)(),
    ...(0, _roundedMjs.makeRoundedProps)(),
    ...(0, _themeMjs.makeThemeProps)()
}, "VField");
const VField = (0, _indexMjs2.genericComponent)()({
    name: "VField",
    inheritAttrs: false,
    props: {
        id: String,
        ...(0, _focusMjs.makeFocusProps)(),
        ...makeVFieldProps()
    },
    emits: {
        "update:focused": (focused)=>true,
        "update:modelValue": (value)=>true
    },
    setup (props, _ref) {
        let { attrs, emit, slots } = _ref;
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const { loaderClasses } = (0, _loaderMjs.useLoader)(props);
        const { focusClasses, isFocused, focus, blur } = (0, _focusMjs.useFocus)(props);
        const { InputIcon } = (0, _inputIconMjs.useInputIcon)(props);
        const { roundedClasses } = (0, _roundedMjs.useRounded)(props);
        const { rtlClasses } = (0, _localeMjs.useRtl)();
        const isActive = (0, _vue.computed)(()=>props.dirty || props.active);
        const hasLabel = (0, _vue.computed)(()=>!props.singleLine && !!(props.label || slots.label));
        const uid = (0, _indexMjs2.getUid)();
        const id = (0, _vue.computed)(()=>props.id || `input-${uid}`);
        const messagesId = (0, _vue.computed)(()=>`${id.value}-messages`);
        const labelRef = (0, _vue.ref)();
        const floatingLabelRef = (0, _vue.ref)();
        const controlRef = (0, _vue.ref)();
        const isPlainOrUnderlined = (0, _vue.computed)(()=>[
                "plain",
                "underlined"
            ].includes(props.variant));
        const { backgroundColorClasses, backgroundColorStyles } = (0, _colorMjs.useBackgroundColor)((0, _vue.toRef)(props, "bgColor"));
        const { textColorClasses, textColorStyles } = (0, _colorMjs.useTextColor)((0, _vue.computed)(()=>{
            return props.error || props.disabled ? undefined : isActive.value && isFocused.value ? props.color : props.baseColor;
        }));
        (0, _vue.watch)(isActive, (val)=>{
            if (hasLabel.value) {
                const el = labelRef.value.$el;
                const targetEl = floatingLabelRef.value.$el;
                requestAnimationFrame(()=>{
                    const rect = (0, _indexMjs2.nullifyTransforms)(el);
                    const targetRect = targetEl.getBoundingClientRect();
                    const x = targetRect.x - rect.x;
                    const y = targetRect.y - rect.y - (rect.height / 2 - targetRect.height / 2);
                    const targetWidth = targetRect.width / 0.75;
                    const width = Math.abs(targetWidth - rect.width) > 1 ? {
                        maxWidth: (0, _indexMjs2.convertToUnit)(targetWidth)
                    } : undefined;
                    const style = getComputedStyle(el);
                    const targetStyle = getComputedStyle(targetEl);
                    const duration = parseFloat(style.transitionDuration) * 1000 || 150;
                    const scale = parseFloat(targetStyle.getPropertyValue("--v-field-label-scale"));
                    const color = targetStyle.getPropertyValue("color");
                    el.style.visibility = "visible";
                    targetEl.style.visibility = "hidden";
                    (0, _indexMjs2.animate)(el, {
                        transform: `translate(${x}px, ${y}px) scale(${scale})`,
                        color,
                        ...width
                    }, {
                        duration,
                        easing: (0, _indexMjs2.standardEasing),
                        direction: val ? "normal" : "reverse"
                    }).finished.then(()=>{
                        el.style.removeProperty("visibility");
                        targetEl.style.removeProperty("visibility");
                    });
                });
            }
        }, {
            flush: "post"
        });
        const slotProps = (0, _vue.computed)(()=>({
                isActive,
                isFocused,
                controlRef,
                blur,
                focus
            }));
        function onClick(e) {
            if (e.target !== document.activeElement) e.preventDefault();
        }
        function onKeydownClear(e) {
            if (e.key !== "Enter" && e.key !== " ") return;
            e.preventDefault();
            e.stopPropagation();
            props["onClick:clear"]?.(new MouseEvent("click"));
        }
        (0, _indexMjs2.useRender)(()=>{
            const isOutlined = props.variant === "outlined";
            const hasPrepend = !!(slots["prepend-inner"] || props.prependInnerIcon);
            const hasClear = !!(props.clearable || slots.clear);
            const hasAppend = !!(slots["append-inner"] || props.appendInnerIcon || hasClear);
            const label = ()=>slots.label ? slots.label({
                    ...slotProps.value,
                    label: props.label,
                    props: {
                        for: id.value
                    }
                }) : props.label;
            return (0, _vue.createVNode)("div", (0, _vue.mergeProps)({
                "class": [
                    "v-field",
                    {
                        "v-field--active": isActive.value,
                        "v-field--appended": hasAppend,
                        "v-field--center-affix": props.centerAffix ?? !isPlainOrUnderlined.value,
                        "v-field--disabled": props.disabled,
                        "v-field--dirty": props.dirty,
                        "v-field--error": props.error,
                        "v-field--flat": props.flat,
                        "v-field--has-background": !!props.bgColor,
                        "v-field--persistent-clear": props.persistentClear,
                        "v-field--prepended": hasPrepend,
                        "v-field--reverse": props.reverse,
                        "v-field--single-line": props.singleLine,
                        "v-field--no-label": !label(),
                        [`v-field--variant-${props.variant}`]: true
                    },
                    themeClasses.value,
                    backgroundColorClasses.value,
                    focusClasses.value,
                    loaderClasses.value,
                    roundedClasses.value,
                    rtlClasses.value,
                    props.class
                ],
                "style": [
                    backgroundColorStyles.value,
                    props.style
                ],
                "onClick": onClick
            }, attrs), [
                (0, _vue.createVNode)("div", {
                    "class": "v-field__overlay"
                }, null),
                (0, _vue.createVNode)((0, _loaderMjs.LoaderSlot), {
                    "name": "v-field",
                    "active": !!props.loading,
                    "color": props.error ? "error" : typeof props.loading === "string" ? props.loading : props.color
                }, {
                    default: slots.loader
                }),
                hasPrepend && (0, _vue.createVNode)("div", {
                    "key": "prepend",
                    "class": "v-field__prepend-inner"
                }, [
                    props.prependInnerIcon && (0, _vue.createVNode)(InputIcon, {
                        "key": "prepend-icon",
                        "name": "prependInner"
                    }, null),
                    slots["prepend-inner"]?.(slotProps.value)
                ]),
                (0, _vue.createVNode)("div", {
                    "class": "v-field__field",
                    "data-no-activator": ""
                }, [
                    [
                        "filled",
                        "solo",
                        "solo-inverted",
                        "solo-filled"
                    ].includes(props.variant) && hasLabel.value && (0, _vue.createVNode)((0, _vfieldLabelMjs.VFieldLabel), {
                        "key": "floating-label",
                        "ref": floatingLabelRef,
                        "class": [
                            textColorClasses.value
                        ],
                        "floating": true,
                        "for": id.value,
                        "style": textColorStyles.value
                    }, {
                        default: ()=>[
                                label()
                            ]
                    }),
                    (0, _vue.createVNode)((0, _vfieldLabelMjs.VFieldLabel), {
                        "ref": labelRef,
                        "for": id.value
                    }, {
                        default: ()=>[
                                label()
                            ]
                    }),
                    slots.default?.({
                        ...slotProps.value,
                        props: {
                            id: id.value,
                            class: "v-field__input",
                            "aria-describedby": messagesId.value
                        },
                        focus,
                        blur
                    })
                ]),
                hasClear && (0, _vue.createVNode)((0, _indexMjs.VExpandXTransition), {
                    "key": "clear"
                }, {
                    default: ()=>[
                            (0, _vue.withDirectives)((0, _vue.createVNode)("div", {
                                "class": "v-field__clearable",
                                "onMousedown": (e)=>{
                                    e.preventDefault();
                                    e.stopPropagation();
                                }
                            }, [
                                (0, _vue.createVNode)((0, _indexMjs1.VDefaultsProvider), {
                                    "defaults": {
                                        VIcon: {
                                            icon: props.clearIcon
                                        }
                                    }
                                }, {
                                    default: ()=>[
                                            slots.clear ? slots.clear({
                                                ...slotProps.value,
                                                props: {
                                                    onKeydown: onKeydownClear,
                                                    onFocus: focus,
                                                    onBlur: blur,
                                                    onClick: props["onClick:clear"]
                                                }
                                            }) : (0, _vue.createVNode)(InputIcon, {
                                                "name": "clear",
                                                "onKeydown": onKeydownClear,
                                                "onFocus": focus,
                                                "onBlur": blur
                                            }, null)
                                        ]
                                })
                            ]), [
                                [
                                    (0, _vue.vShow),
                                    props.dirty
                                ]
                            ])
                        ]
                }),
                hasAppend && (0, _vue.createVNode)("div", {
                    "key": "append",
                    "class": "v-field__append-inner"
                }, [
                    slots["append-inner"]?.(slotProps.value),
                    props.appendInnerIcon && (0, _vue.createVNode)(InputIcon, {
                        "key": "append-icon",
                        "name": "appendInner"
                    }, null)
                ]),
                (0, _vue.createVNode)("div", {
                    "class": [
                        "v-field__outline",
                        textColorClasses.value
                    ],
                    "style": textColorStyles.value
                }, [
                    isOutlined && (0, _vue.createVNode)((0, _vue.Fragment), null, [
                        (0, _vue.createVNode)("div", {
                            "class": "v-field__outline__start"
                        }, null),
                        hasLabel.value && (0, _vue.createVNode)("div", {
                            "class": "v-field__outline__notch"
                        }, [
                            (0, _vue.createVNode)((0, _vfieldLabelMjs.VFieldLabel), {
                                "ref": floatingLabelRef,
                                "floating": true,
                                "for": id.value
                            }, {
                                default: ()=>[
                                        label()
                                    ]
                            })
                        ]),
                        (0, _vue.createVNode)("div", {
                            "class": "v-field__outline__end"
                        }, null)
                    ]),
                    isPlainOrUnderlined.value && hasLabel.value && (0, _vue.createVNode)((0, _vfieldLabelMjs.VFieldLabel), {
                        "ref": floatingLabelRef,
                        "floating": true,
                        "for": id.value
                    }, {
                        default: ()=>[
                                label()
                            ]
                    })
                ])
            ]);
        });
        return {
            controlRef
        };
    }
});
function filterFieldProps(attrs) {
    const keys = Object.keys(VField.props).filter((k)=>!(0, _indexMjs2.isOn)(k) && k !== "class" && k !== "style");
    return (0, _indexMjs2.pick)(attrs, keys);
}

},{"vue":"gCTam","./VField.css":"7ct40","./VFieldLabel.mjs":"4wTrB","../transitions/index.mjs":"3ybHr","../VDefaultsProvider/index.mjs":"eFFvH","../VInput/InputIcon.mjs":"i4d58","../../composables/color.mjs":"6TeQR","../../composables/component.mjs":"4YAxs","../../composables/focus.mjs":"ez9on","../../composables/icons.mjs":"g4kLv","../../composables/loader.mjs":"6m53O","../../composables/locale.mjs":"9rJP0","../../composables/rounded.mjs":"1RfhA","../../composables/theme.mjs":"c9HGg","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"7ct40":[function() {},{}],"4wTrB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVFieldLabelProps", ()=>makeVFieldLabelProps);
parcelHelpers.export(exports, "VFieldLabel", ()=>VFieldLabel);
var _vue = require("vue");
// Components
var _indexMjs = require("../VLabel/index.mjs"); // Composables
var _componentMjs = require("../../composables/component.mjs"); // Utilities
var _indexMjs1 = require("../../util/index.mjs");
const makeVFieldLabelProps = (0, _indexMjs1.propsFactory)({
    floating: Boolean,
    ...(0, _componentMjs.makeComponentProps)()
}, "VFieldLabel");
const VFieldLabel = (0, _indexMjs1.genericComponent)()({
    name: "VFieldLabel",
    props: makeVFieldLabelProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        (0, _indexMjs1.useRender)(()=>(0, _vue.createVNode)((0, _indexMjs.VLabel), {
                "class": [
                    "v-field-label",
                    {
                        "v-field-label--floating": props.floating
                    },
                    props.class
                ],
                "style": props.style,
                "aria-hidden": props.floating || undefined
            }, slots));
        return {};
    }
});

},{"vue":"gCTam","../VLabel/index.mjs":"2xWF9","../../composables/component.mjs":"4YAxs","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"cUhx7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VVirtualScroll", ()=>(0, _vvirtualScrollMjs.VVirtualScroll));
var _vvirtualScrollMjs = require("./VVirtualScroll.mjs");

},{"./VVirtualScroll.mjs":"i8sHy","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"i8sHy":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVVirtualScrollProps", ()=>makeVVirtualScrollProps);
parcelHelpers.export(exports, "VVirtualScroll", ()=>VVirtualScroll);
var _vue = require("vue");
// Styles
var _vvirtualScrollCss = require("./VVirtualScroll.css");
// Components
var _vvirtualScrollItemMjs = require("./VVirtualScrollItem.mjs"); // Composables
var _componentMjs = require("../../composables/component.mjs");
var _dimensionsMjs = require("../../composables/dimensions.mjs");
var _toggleScopeMjs = require("../../composables/toggleScope.mjs");
var _virtualMjs = require("../../composables/virtual.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const makeVVirtualScrollProps = (0, _indexMjs.propsFactory)({
    items: {
        type: Array,
        default: ()=>[]
    },
    renderless: Boolean,
    ...(0, _virtualMjs.makeVirtualProps)(),
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _dimensionsMjs.makeDimensionProps)()
}, "VVirtualScroll");
const VVirtualScroll = (0, _indexMjs.genericComponent)()({
    name: "VVirtualScroll",
    props: makeVVirtualScrollProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const vm = (0, _indexMjs.getCurrentInstance)("VVirtualScroll");
        const { dimensionStyles } = (0, _dimensionsMjs.useDimension)(props);
        const { calculateVisibleItems, containerRef, markerRef, handleScroll, handleScrollend, handleItemResize, scrollToIndex, paddingTop, paddingBottom, computedItems } = (0, _virtualMjs.useVirtual)(props, (0, _vue.toRef)(props, "items"));
        (0, _toggleScopeMjs.useToggleScope)(()=>props.renderless, ()=>{
            function handleListeners() {
                let add = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
                const method = add ? "addEventListener" : "removeEventListener";
                if (containerRef.value === document.documentElement) {
                    document[method]("scroll", handleScroll, {
                        passive: true
                    });
                    document[method]("scrollend", handleScrollend);
                } else {
                    containerRef.value?.[method]("scroll", handleScroll, {
                        passive: true
                    });
                    containerRef.value?.[method]("scrollend", handleScrollend);
                }
            }
            (0, _vue.onMounted)(()=>{
                containerRef.value = (0, _indexMjs.getScrollParent)(vm.vnode.el, true);
                handleListeners(true);
            });
            (0, _vue.onScopeDispose)(handleListeners);
        });
        (0, _indexMjs.useRender)(()=>{
            const children = computedItems.value.map((item)=>(0, _vue.createVNode)((0, _vvirtualScrollItemMjs.VVirtualScrollItem), {
                    "key": item.index,
                    "renderless": props.renderless,
                    "onUpdate:height": (height)=>handleItemResize(item.index, height)
                }, {
                    default: (slotProps)=>slots.default?.({
                            item: item.raw,
                            index: item.index,
                            ...slotProps
                        })
                }));
            return props.renderless ? (0, _vue.createVNode)((0, _vue.Fragment), null, [
                (0, _vue.createVNode)("div", {
                    "ref": markerRef,
                    "class": "v-virtual-scroll__spacer",
                    "style": {
                        paddingTop: (0, _indexMjs.convertToUnit)(paddingTop.value)
                    }
                }, null),
                children,
                (0, _vue.createVNode)("div", {
                    "class": "v-virtual-scroll__spacer",
                    "style": {
                        paddingBottom: (0, _indexMjs.convertToUnit)(paddingBottom.value)
                    }
                }, null)
            ]) : (0, _vue.createVNode)("div", {
                "ref": containerRef,
                "class": [
                    "v-virtual-scroll",
                    props.class
                ],
                "onScrollPassive": handleScroll,
                "onScrollend": handleScrollend,
                "style": [
                    dimensionStyles.value,
                    props.style
                ]
            }, [
                (0, _vue.createVNode)("div", {
                    "ref": markerRef,
                    "class": "v-virtual-scroll__container",
                    "style": {
                        paddingTop: (0, _indexMjs.convertToUnit)(paddingTop.value),
                        paddingBottom: (0, _indexMjs.convertToUnit)(paddingBottom.value)
                    }
                }, [
                    children
                ])
            ]);
        });
        return {
            calculateVisibleItems,
            scrollToIndex
        };
    }
});

},{"vue":"gCTam","./VVirtualScroll.css":"icS5Z","./VVirtualScrollItem.mjs":"8iMAl","../../composables/component.mjs":"4YAxs","../../composables/dimensions.mjs":"daVmy","../../composables/toggleScope.mjs":"dsKlJ","../../composables/virtual.mjs":"AxLCQ","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"icS5Z":[function() {},{}],"8iMAl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVVirtualScrollItemProps", ()=>makeVVirtualScrollItemProps);
parcelHelpers.export(exports, "VVirtualScrollItem", ()=>VVirtualScrollItem);
var _vue = require("vue");
// Composables
var _componentMjs = require("../../composables/component.mjs");
var _resizeObserverMjs = require("../../composables/resizeObserver.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const makeVVirtualScrollItemProps = (0, _indexMjs.propsFactory)({
    renderless: Boolean,
    ...(0, _componentMjs.makeComponentProps)()
}, "VVirtualScrollItem");
const VVirtualScrollItem = (0, _indexMjs.genericComponent)()({
    name: "VVirtualScrollItem",
    inheritAttrs: false,
    props: makeVVirtualScrollItemProps(),
    emits: {
        "update:height": (height)=>true
    },
    setup (props, _ref) {
        let { attrs, emit, slots } = _ref;
        const { resizeRef, contentRect } = (0, _resizeObserverMjs.useResizeObserver)(undefined, "border");
        (0, _vue.watch)(()=>contentRect.value?.height, (height)=>{
            if (height != null) emit("update:height", height);
        });
        (0, _indexMjs.useRender)(()=>props.renderless ? (0, _vue.createVNode)((0, _vue.Fragment), null, [
                slots.default?.({
                    itemRef: resizeRef
                })
            ]) : (0, _vue.createVNode)("div", (0, _vue.mergeProps)({
                "ref": resizeRef,
                "class": [
                    "v-virtual-scroll__item",
                    props.class
                ],
                "style": props.style
            }, attrs), [
                slots.default?.()
            ]));
    }
});

},{"vue":"gCTam","../../composables/component.mjs":"4YAxs","../../composables/resizeObserver.mjs":"hIk8t","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"AxLCQ":[function(require,module,exports) {
// Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVirtualProps", ()=>makeVirtualProps);
parcelHelpers.export(exports, "useVirtual", ()=>useVirtual);
var _displayMjs = require("./display.mjs");
var _resizeObserverMjs = require("./resizeObserver.mjs"); // Utilities
var _vue = require("vue");
var _indexMjs = require("../util/index.mjs"); // Types
const UP = -1;
const DOWN = 1;
/** Determines how large each batch of items should be */ const BUFFER_PX = 100;
const makeVirtualProps = (0, _indexMjs.propsFactory)({
    itemHeight: {
        type: [
            Number,
            String
        ],
        default: null
    },
    height: [
        Number,
        String
    ]
}, "virtual");
function useVirtual(props, items) {
    const display = (0, _displayMjs.useDisplay)();
    const itemHeight = (0, _vue.shallowRef)(0);
    (0, _vue.watchEffect)(()=>{
        itemHeight.value = parseFloat(props.itemHeight || 0);
    });
    const first = (0, _vue.shallowRef)(0);
    const last = (0, _vue.shallowRef)(Math.ceil(// Assume 16px items filling the entire screen height if
    // not provided. This is probably incorrect but it minimises
    // the chance of ending up with empty space at the bottom.
    // The default value is set here to avoid poisoning getSize()
    (parseInt(props.height) || display.height.value) / (itemHeight.value || 16)) || 1);
    const paddingTop = (0, _vue.shallowRef)(0);
    const paddingBottom = (0, _vue.shallowRef)(0);
    /** The scrollable element */ const containerRef = (0, _vue.ref)();
    /** An element marking the top of the scrollable area,
   * used to add an offset if there's padding or other elements above the virtual list */ const markerRef = (0, _vue.ref)();
    /** markerRef's offsetTop, lazily evaluated */ let markerOffset = 0;
    const { resizeRef, contentRect } = (0, _resizeObserverMjs.useResizeObserver)();
    (0, _vue.watchEffect)(()=>{
        resizeRef.value = containerRef.value;
    });
    const viewportHeight = (0, _vue.computed)(()=>{
        return containerRef.value === document.documentElement ? display.height.value : contentRect.value?.height || parseInt(props.height) || 0;
    });
    /** All static elements have been rendered and we have an assumed item height */ const hasInitialRender = (0, _vue.computed)(()=>{
        return !!(containerRef.value && markerRef.value && viewportHeight.value && itemHeight.value);
    });
    let sizes = Array.from({
        length: items.value.length
    });
    let offsets = Array.from({
        length: items.value.length
    });
    const updateTime = (0, _vue.shallowRef)(0);
    let targetScrollIndex = -1;
    function getSize(index) {
        return sizes[index] || itemHeight.value;
    }
    const updateOffsets = (0, _indexMjs.debounce)(()=>{
        const start = performance.now();
        offsets[0] = 0;
        const length = items.value.length;
        for(let i = 1; i <= length - 1; i++)offsets[i] = (offsets[i - 1] || 0) + getSize(i - 1);
        updateTime.value = Math.max(updateTime.value, performance.now() - start);
    }, updateTime);
    const unwatch = (0, _vue.watch)(hasInitialRender, (v)=>{
        if (!v) return;
        // First render is complete, update offsets and visible
        // items in case our assumed item height was incorrect
        unwatch();
        markerOffset = markerRef.value.offsetTop;
        updateOffsets.immediate();
        calculateVisibleItems();
        if (!~targetScrollIndex) return;
        (0, _vue.nextTick)(()=>{
            (0, _indexMjs.IN_BROWSER) && window.requestAnimationFrame(()=>{
                scrollToIndex(targetScrollIndex);
                targetScrollIndex = -1;
            });
        });
    });
    (0, _vue.onScopeDispose)(()=>{
        updateOffsets.clear();
    });
    function handleItemResize(index, height) {
        const prevHeight = sizes[index];
        const prevMinHeight = itemHeight.value;
        itemHeight.value = prevMinHeight ? Math.min(itemHeight.value, height) : height;
        if (prevHeight !== height || prevMinHeight !== itemHeight.value) {
            sizes[index] = height;
            updateOffsets();
        }
    }
    function calculateOffset(index) {
        index = (0, _indexMjs.clamp)(index, 0, items.value.length - 1);
        return offsets[index] || 0;
    }
    function calculateIndex(scrollTop) {
        return binaryClosest(offsets, scrollTop);
    }
    let lastScrollTop = 0;
    let scrollVelocity = 0;
    let lastScrollTime = 0;
    (0, _vue.watch)(viewportHeight, (val, oldVal)=>{
        if (oldVal) {
            calculateVisibleItems();
            if (val < oldVal) requestAnimationFrame(()=>{
                scrollVelocity = 0;
                calculateVisibleItems();
            });
        }
    });
    function handleScroll() {
        if (!containerRef.value || !markerRef.value) return;
        const scrollTop = containerRef.value.scrollTop;
        const scrollTime = performance.now();
        const scrollDeltaT = scrollTime - lastScrollTime;
        if (scrollDeltaT > 500) {
            scrollVelocity = Math.sign(scrollTop - lastScrollTop);
            // Not super important, only update at the
            // start of a scroll sequence to avoid reflows
            markerOffset = markerRef.value.offsetTop;
        } else scrollVelocity = scrollTop - lastScrollTop;
        lastScrollTop = scrollTop;
        lastScrollTime = scrollTime;
        calculateVisibleItems();
    }
    function handleScrollend() {
        if (!containerRef.value || !markerRef.value) return;
        scrollVelocity = 0;
        lastScrollTime = 0;
        calculateVisibleItems();
    }
    let raf = -1;
    function calculateVisibleItems() {
        cancelAnimationFrame(raf);
        raf = requestAnimationFrame(_calculateVisibleItems);
    }
    function _calculateVisibleItems() {
        if (!containerRef.value || !viewportHeight.value) return;
        const scrollTop = lastScrollTop - markerOffset;
        const direction = Math.sign(scrollVelocity);
        const startPx = Math.max(0, scrollTop - BUFFER_PX);
        const start = (0, _indexMjs.clamp)(calculateIndex(startPx), 0, items.value.length);
        const endPx = scrollTop + viewportHeight.value + BUFFER_PX;
        const end = (0, _indexMjs.clamp)(calculateIndex(endPx) + 1, start + 1, items.value.length);
        if (// Only update the side we're scrolling towards,
        // the other side will be updated incidentally
        (direction !== UP || start < first.value) && (direction !== DOWN || end > last.value)) {
            const topOverflow = calculateOffset(first.value) - calculateOffset(start);
            const bottomOverflow = calculateOffset(end) - calculateOffset(last.value);
            const bufferOverflow = Math.max(topOverflow, bottomOverflow);
            if (bufferOverflow > BUFFER_PX) {
                first.value = start;
                last.value = end;
            } else {
                // Only update the side that's reached its limit if there's still buffer left
                if (start <= 0) first.value = start;
                if (end >= items.value.length) last.value = end;
            }
        }
        paddingTop.value = calculateOffset(first.value);
        paddingBottom.value = calculateOffset(items.value.length) - calculateOffset(last.value);
    }
    function scrollToIndex(index) {
        const offset = calculateOffset(index);
        if (!containerRef.value || index && !offset) targetScrollIndex = index;
        else containerRef.value.scrollTop = offset;
    }
    const computedItems = (0, _vue.computed)(()=>{
        return items.value.slice(first.value, last.value).map((item, index)=>({
                raw: item,
                index: index + first.value
            }));
    });
    (0, _vue.watch)(items, ()=>{
        sizes = Array.from({
            length: items.value.length
        });
        offsets = Array.from({
            length: items.value.length
        });
        updateOffsets.immediate();
        calculateVisibleItems();
    }, {
        deep: true
    });
    return {
        calculateVisibleItems,
        containerRef,
        markerRef,
        computedItems,
        paddingTop,
        paddingBottom,
        scrollToIndex,
        handleScroll,
        handleScrollend,
        handleItemResize
    };
}
// https://gist.github.com/robertleeplummerjr/1cc657191d34ecd0a324
function binaryClosest(arr, val) {
    let high = arr.length - 1;
    let low = 0;
    let mid = 0;
    let item = null;
    let target = -1;
    if (arr[high] < val) return high;
    while(low <= high){
        mid = low + high >> 1;
        item = arr[mid];
        if (item > val) high = mid - 1;
        else if (item < val) {
            target = mid;
            low = mid + 1;
        } else if (item === val) return mid;
        else return low;
    }
    return target;
}

},{"./display.mjs":"bcRjl","./resizeObserver.mjs":"hIk8t","vue":"gCTam","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"6iRHI":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// Types
parcelHelpers.export(exports, "useScrolling", ()=>useScrolling);
var _vue = require("vue");
function useScrolling(listRef, textFieldRef) {
    const isScrolling = (0, _vue.shallowRef)(false);
    let scrollTimeout;
    function onListScroll(e) {
        cancelAnimationFrame(scrollTimeout);
        isScrolling.value = true;
        scrollTimeout = requestAnimationFrame(()=>{
            scrollTimeout = requestAnimationFrame(()=>{
                isScrolling.value = false;
            });
        });
    }
    async function finishScrolling() {
        await new Promise((resolve)=>requestAnimationFrame(resolve));
        await new Promise((resolve)=>requestAnimationFrame(resolve));
        await new Promise((resolve)=>requestAnimationFrame(resolve));
        await new Promise((resolve)=>{
            if (isScrolling.value) {
                const stop = (0, _vue.watch)(isScrolling, ()=>{
                    stop();
                    resolve();
                });
            } else resolve();
        });
    }
    async function onListKeydown(e) {
        if (e.key === "Tab") textFieldRef.value?.focus();
        if (![
            "PageDown",
            "PageUp",
            "Home",
            "End"
        ].includes(e.key)) return;
        const el = listRef.value?.$el;
        if (!el) return;
        if (e.key === "Home" || e.key === "End") el.scrollTo({
            top: e.key === "Home" ? 0 : el.scrollHeight,
            behavior: "smooth"
        });
        await finishScrolling();
        const children = el.querySelectorAll(":scope > :not(.v-virtual-scroll__spacer)");
        if (e.key === "PageDown" || e.key === "Home") {
            const top = el.getBoundingClientRect().top;
            for (const child of children)if (child.getBoundingClientRect().top >= top) {
                child.focus();
                break;
            }
        } else {
            const bottom = el.getBoundingClientRect().bottom;
            for (const child of [
                ...children
            ].reverse())if (child.getBoundingClientRect().bottom <= bottom) {
                child.focus();
                break;
            }
        }
    }
    return {
        onScrollPassive: onListScroll,
        onKeydown: onListKeydown
    }; // typescript doesn't know about vue's event merging
}

},{"vue":"gCTam","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"eW6zz":[function(require,module,exports) {
/* eslint-disable max-statements */ /* eslint-disable no-labels */ // Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "defaultFilter", ()=>defaultFilter);
parcelHelpers.export(exports, "makeFilterProps", ()=>makeFilterProps);
parcelHelpers.export(exports, "filterItems", ()=>filterItems);
parcelHelpers.export(exports, "useFilter", ()=>useFilter);
var _vue = require("vue");
var _indexMjs = require("../util/index.mjs"); // Types
const defaultFilter = (value, query, item)=>{
    if (value == null || query == null) return -1;
    return value.toString().toLocaleLowerCase().indexOf(query.toString().toLocaleLowerCase());
};
const makeFilterProps = (0, _indexMjs.propsFactory)({
    customFilter: Function,
    customKeyFilter: Object,
    filterKeys: [
        Array,
        String
    ],
    filterMode: {
        type: String,
        default: "intersection"
    },
    noFilter: Boolean
}, "filter");
function filterItems(items, query, options) {
    const array = [];
    // always ensure we fall back to a functioning filter
    const filter = options?.default ?? defaultFilter;
    const keys = options?.filterKeys ? (0, _indexMjs.wrapInArray)(options.filterKeys) : false;
    const customFiltersLength = Object.keys(options?.customKeyFilter ?? {}).length;
    if (!items?.length) return array;
    loop: for(let i = 0; i < items.length; i++){
        const [item, transformed = item] = (0, _indexMjs.wrapInArray)(items[i]);
        const customMatches = {};
        const defaultMatches = {};
        let match = -1;
        if ((query || customFiltersLength > 0) && !options?.noFilter) {
            if (typeof item === "object") {
                const filterKeys = keys || Object.keys(transformed);
                for (const key of filterKeys){
                    const value = (0, _indexMjs.getPropertyFromItem)(transformed, key);
                    const keyFilter = options?.customKeyFilter?.[key];
                    match = keyFilter ? keyFilter(value, query, item) : filter(value, query, item);
                    if (match !== -1 && match !== false) {
                        if (keyFilter) customMatches[key] = match;
                        else defaultMatches[key] = match;
                    } else if (options?.filterMode === "every") continue loop;
                }
            } else {
                match = filter(item, query, item);
                if (match !== -1 && match !== false) defaultMatches.title = match;
            }
            const defaultMatchesLength = Object.keys(defaultMatches).length;
            const customMatchesLength = Object.keys(customMatches).length;
            if (!defaultMatchesLength && !customMatchesLength) continue;
            if (options?.filterMode === "union" && customMatchesLength !== customFiltersLength && !defaultMatchesLength) continue;
            if (options?.filterMode === "intersection" && (customMatchesLength !== customFiltersLength || !defaultMatchesLength)) continue;
        }
        array.push({
            index: i,
            matches: {
                ...defaultMatches,
                ...customMatches
            }
        });
    }
    return array;
}
function useFilter(props, items, query, options) {
    const filteredItems = (0, _vue.ref)([]);
    const filteredMatches = (0, _vue.ref)(new Map());
    const transformedItems = (0, _vue.computed)(()=>options?.transform ? (0, _vue.unref)(items).map((item)=>[
                item,
                options.transform(item)
            ]) : (0, _vue.unref)(items));
    (0, _vue.watchEffect)(()=>{
        const _query = typeof query === "function" ? query() : (0, _vue.unref)(query);
        const strQuery = typeof _query !== "string" && typeof _query !== "number" ? "" : String(_query);
        const results = filterItems(transformedItems.value, strQuery, {
            customKeyFilter: {
                ...props.customKeyFilter,
                ...(0, _vue.unref)(options?.customKeyFilter)
            },
            default: props.customFilter,
            filterKeys: props.filterKeys,
            filterMode: props.filterMode,
            noFilter: props.noFilter
        });
        const originalItems = (0, _vue.unref)(items);
        const _filteredItems = [];
        const _filteredMatches = new Map();
        results.forEach((_ref)=>{
            let { index, matches } = _ref;
            const item = originalItems[index];
            _filteredItems.push(item);
            _filteredMatches.set(item.value, matches);
        });
        filteredItems.value = _filteredItems;
        filteredMatches.value = _filteredMatches;
    });
    function getMatches(item) {
        return filteredMatches.value.get(item.value);
    }
    return {
        filteredItems,
        filteredMatches,
        getMatches
    };
}

},{"vue":"gCTam","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"7cZ6u":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VBadge", ()=>(0, _vbadgeMjs.VBadge));
var _vbadgeMjs = require("./VBadge.mjs");

},{"./VBadge.mjs":"4gcHg","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"4gcHg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVBadgeProps", ()=>makeVBadgeProps);
parcelHelpers.export(exports, "VBadge", ()=>VBadge);
var _vue = require("vue");
// Styles
var _vbadgeCss = require("./VBadge.css");
// Components
var _indexMjs = require("../VIcon/index.mjs"); // Composables
var _colorMjs = require("../../composables/color.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _iconsMjs = require("../../composables/icons.mjs");
var _localeMjs = require("../../composables/locale.mjs");
var _locationMjs = require("../../composables/location.mjs");
var _roundedMjs = require("../../composables/rounded.mjs");
var _tagMjs = require("../../composables/tag.mjs");
var _themeMjs = require("../../composables/theme.mjs");
var _transitionMjs = require("../../composables/transition.mjs"); // Utilities
var _indexMjs1 = require("../../util/index.mjs");
const makeVBadgeProps = (0, _indexMjs1.propsFactory)({
    bordered: Boolean,
    color: String,
    content: [
        Number,
        String
    ],
    dot: Boolean,
    floating: Boolean,
    icon: (0, _iconsMjs.IconValue),
    inline: Boolean,
    label: {
        type: String,
        default: "$vuetify.badge"
    },
    max: [
        Number,
        String
    ],
    modelValue: {
        type: Boolean,
        default: true
    },
    offsetX: [
        Number,
        String
    ],
    offsetY: [
        Number,
        String
    ],
    textColor: String,
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _locationMjs.makeLocationProps)({
        location: "top end"
    }),
    ...(0, _roundedMjs.makeRoundedProps)(),
    ...(0, _tagMjs.makeTagProps)(),
    ...(0, _themeMjs.makeThemeProps)(),
    ...(0, _transitionMjs.makeTransitionProps)({
        transition: "scale-rotate-transition"
    })
}, "VBadge");
const VBadge = (0, _indexMjs1.genericComponent)()({
    name: "VBadge",
    inheritAttrs: false,
    props: makeVBadgeProps(),
    setup (props, ctx) {
        const { backgroundColorClasses, backgroundColorStyles } = (0, _colorMjs.useBackgroundColor)((0, _vue.toRef)(props, "color"));
        const { roundedClasses } = (0, _roundedMjs.useRounded)(props);
        const { t } = (0, _localeMjs.useLocale)();
        const { textColorClasses, textColorStyles } = (0, _colorMjs.useTextColor)((0, _vue.toRef)(props, "textColor"));
        const { themeClasses } = (0, _themeMjs.useTheme)();
        const { locationStyles } = (0, _locationMjs.useLocation)(props, true, (side)=>{
            const base = props.floating ? props.dot ? 2 : 4 : props.dot ? 8 : 12;
            return base + ([
                "top",
                "bottom"
            ].includes(side) ? +(props.offsetY ?? 0) : [
                "left",
                "right"
            ].includes(side) ? +(props.offsetX ?? 0) : 0);
        });
        (0, _indexMjs1.useRender)(()=>{
            const value = Number(props.content);
            const content = !props.max || isNaN(value) ? props.content : value <= +props.max ? value : `${props.max}+`;
            const [badgeAttrs, attrs] = (0, _indexMjs1.pickWithRest)(ctx.attrs, [
                "aria-atomic",
                "aria-label",
                "aria-live",
                "role",
                "title"
            ]);
            return (0, _vue.createVNode)(props.tag, (0, _vue.mergeProps)({
                "class": [
                    "v-badge",
                    {
                        "v-badge--bordered": props.bordered,
                        "v-badge--dot": props.dot,
                        "v-badge--floating": props.floating,
                        "v-badge--inline": props.inline
                    },
                    props.class
                ]
            }, attrs, {
                "style": props.style
            }), {
                default: ()=>[
                        (0, _vue.createVNode)("div", {
                            "class": "v-badge__wrapper"
                        }, [
                            ctx.slots.default?.(),
                            (0, _vue.createVNode)((0, _transitionMjs.MaybeTransition), {
                                "transition": props.transition
                            }, {
                                default: ()=>[
                                        (0, _vue.withDirectives)((0, _vue.createVNode)("span", (0, _vue.mergeProps)({
                                            "class": [
                                                "v-badge__badge",
                                                themeClasses.value,
                                                backgroundColorClasses.value,
                                                roundedClasses.value,
                                                textColorClasses.value
                                            ],
                                            "style": [
                                                backgroundColorStyles.value,
                                                textColorStyles.value,
                                                props.inline ? {} : locationStyles.value
                                            ],
                                            "aria-atomic": "true",
                                            "aria-label": t(props.label, value),
                                            "aria-live": "polite",
                                            "role": "status"
                                        }, badgeAttrs), [
                                            props.dot ? undefined : ctx.slots.badge ? ctx.slots.badge?.() : props.icon ? (0, _vue.createVNode)((0, _indexMjs.VIcon), {
                                                "icon": props.icon
                                            }, null) : content
                                        ]), [
                                            [
                                                (0, _vue.vShow),
                                                props.modelValue
                                            ]
                                        ])
                                    ]
                            })
                        ])
                    ]
            });
        });
        return {};
    }
});

},{"vue":"gCTam","./VBadge.css":"jrbwT","../VIcon/index.mjs":"5Yjjr","../../composables/color.mjs":"6TeQR","../../composables/component.mjs":"4YAxs","../../composables/icons.mjs":"g4kLv","../../composables/locale.mjs":"9rJP0","../../composables/location.mjs":"cIK4d","../../composables/rounded.mjs":"1RfhA","../../composables/tag.mjs":"3LqcC","../../composables/theme.mjs":"c9HGg","../../composables/transition.mjs":"dJyg1","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"jrbwT":[function() {},{}],"g0y4z":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VBanner", ()=>(0, _vbannerMjs.VBanner));
parcelHelpers.export(exports, "VBannerActions", ()=>(0, _vbannerActionsMjs.VBannerActions));
parcelHelpers.export(exports, "VBannerText", ()=>(0, _vbannerTextMjs.VBannerText));
var _vbannerMjs = require("./VBanner.mjs");
var _vbannerActionsMjs = require("./VBannerActions.mjs");
var _vbannerTextMjs = require("./VBannerText.mjs");

},{"./VBanner.mjs":"ciA0m","./VBannerActions.mjs":"6Bjx0","./VBannerText.mjs":"3m8Ms","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"ciA0m":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVBannerProps", ()=>makeVBannerProps);
parcelHelpers.export(exports, "VBanner", ()=>VBanner);
var _vue = require("vue");
// Styles
var _vbannerCss = require("./VBanner.css");
// Components
var _vbannerActionsMjs = require("./VBannerActions.mjs");
var _vbannerTextMjs = require("./VBannerText.mjs");
var _indexMjs = require("../VAvatar/index.mjs");
var _indexMjs1 = require("../VDefaultsProvider/index.mjs"); // Composables
var _borderMjs = require("../../composables/border.mjs");
var _colorMjs = require("../../composables/color.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _defaultsMjs = require("../../composables/defaults.mjs");
var _densityMjs = require("../../composables/density.mjs");
var _dimensionsMjs = require("../../composables/dimensions.mjs");
var _displayMjs = require("../../composables/display.mjs");
var _elevationMjs = require("../../composables/elevation.mjs");
var _iconsMjs = require("../../composables/icons.mjs");
var _locationMjs = require("../../composables/location.mjs");
var _positionMjs = require("../../composables/position.mjs");
var _roundedMjs = require("../../composables/rounded.mjs");
var _tagMjs = require("../../composables/tag.mjs");
var _themeMjs = require("../../composables/theme.mjs"); // Utilities
var _indexMjs2 = require("../../util/index.mjs"); // Types
const makeVBannerProps = (0, _indexMjs2.propsFactory)({
    avatar: String,
    bgColor: String,
    color: String,
    icon: (0, _iconsMjs.IconValue),
    lines: String,
    stacked: Boolean,
    sticky: Boolean,
    text: String,
    ...(0, _borderMjs.makeBorderProps)(),
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _densityMjs.makeDensityProps)(),
    ...(0, _dimensionsMjs.makeDimensionProps)(),
    ...(0, _displayMjs.makeDisplayProps)({
        mobile: null
    }),
    ...(0, _elevationMjs.makeElevationProps)(),
    ...(0, _locationMjs.makeLocationProps)(),
    ...(0, _positionMjs.makePositionProps)(),
    ...(0, _roundedMjs.makeRoundedProps)(),
    ...(0, _tagMjs.makeTagProps)(),
    ...(0, _themeMjs.makeThemeProps)()
}, "VBanner");
const VBanner = (0, _indexMjs2.genericComponent)()({
    name: "VBanner",
    props: makeVBannerProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const { backgroundColorClasses, backgroundColorStyles } = (0, _colorMjs.useBackgroundColor)(props, "bgColor");
        const { borderClasses } = (0, _borderMjs.useBorder)(props);
        const { densityClasses } = (0, _densityMjs.useDensity)(props);
        const { displayClasses, mobile } = (0, _displayMjs.useDisplay)(props);
        const { dimensionStyles } = (0, _dimensionsMjs.useDimension)(props);
        const { elevationClasses } = (0, _elevationMjs.useElevation)(props);
        const { locationStyles } = (0, _locationMjs.useLocation)(props);
        const { positionClasses } = (0, _positionMjs.usePosition)(props);
        const { roundedClasses } = (0, _roundedMjs.useRounded)(props);
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const color = (0, _vue.toRef)(props, "color");
        const density = (0, _vue.toRef)(props, "density");
        (0, _defaultsMjs.provideDefaults)({
            VBannerActions: {
                color,
                density
            }
        });
        (0, _indexMjs2.useRender)(()=>{
            const hasText = !!(props.text || slots.text);
            const hasPrependMedia = !!(props.avatar || props.icon);
            const hasPrepend = !!(hasPrependMedia || slots.prepend);
            return (0, _vue.createVNode)(props.tag, {
                "class": [
                    "v-banner",
                    {
                        "v-banner--stacked": props.stacked || mobile.value,
                        "v-banner--sticky": props.sticky,
                        [`v-banner--${props.lines}-line`]: !!props.lines
                    },
                    themeClasses.value,
                    backgroundColorClasses.value,
                    borderClasses.value,
                    densityClasses.value,
                    displayClasses.value,
                    elevationClasses.value,
                    positionClasses.value,
                    roundedClasses.value,
                    props.class
                ],
                "style": [
                    backgroundColorStyles.value,
                    dimensionStyles.value,
                    locationStyles.value,
                    props.style
                ],
                "role": "banner"
            }, {
                default: ()=>[
                        hasPrepend && (0, _vue.createVNode)("div", {
                            "key": "prepend",
                            "class": "v-banner__prepend"
                        }, [
                            !slots.prepend ? (0, _vue.createVNode)((0, _indexMjs.VAvatar), {
                                "key": "prepend-avatar",
                                "color": color.value,
                                "density": density.value,
                                "icon": props.icon,
                                "image": props.avatar
                            }, null) : (0, _vue.createVNode)((0, _indexMjs1.VDefaultsProvider), {
                                "key": "prepend-defaults",
                                "disabled": !hasPrependMedia,
                                "defaults": {
                                    VAvatar: {
                                        color: color.value,
                                        density: density.value,
                                        icon: props.icon,
                                        image: props.avatar
                                    }
                                }
                            }, slots.prepend)
                        ]),
                        (0, _vue.createVNode)("div", {
                            "class": "v-banner__content"
                        }, [
                            hasText && (0, _vue.createVNode)((0, _vbannerTextMjs.VBannerText), {
                                "key": "text"
                            }, {
                                default: ()=>[
                                        slots.text?.() ?? props.text
                                    ]
                            }),
                            slots.default?.()
                        ]),
                        slots.actions && (0, _vue.createVNode)((0, _vbannerActionsMjs.VBannerActions), {
                            "key": "actions"
                        }, slots.actions)
                    ]
            });
        });
    }
});

},{"vue":"gCTam","./VBanner.css":"h46LQ","./VBannerActions.mjs":"6Bjx0","./VBannerText.mjs":"3m8Ms","../VAvatar/index.mjs":"d9olW","../VDefaultsProvider/index.mjs":"eFFvH","../../composables/border.mjs":"iYaxw","../../composables/color.mjs":"6TeQR","../../composables/component.mjs":"4YAxs","../../composables/defaults.mjs":"29Im0","../../composables/density.mjs":"kOsEB","../../composables/dimensions.mjs":"daVmy","../../composables/display.mjs":"bcRjl","../../composables/elevation.mjs":"aNIiI","../../composables/icons.mjs":"g4kLv","../../composables/location.mjs":"cIK4d","../../composables/position.mjs":"8GbJq","../../composables/rounded.mjs":"1RfhA","../../composables/tag.mjs":"3LqcC","../../composables/theme.mjs":"c9HGg","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"h46LQ":[function() {},{}],"6Bjx0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVBannerActionsProps", ()=>makeVBannerActionsProps);
parcelHelpers.export(exports, "VBannerActions", ()=>VBannerActions);
var _vue = require("vue");
// Composables
var _componentMjs = require("../../composables/component.mjs");
var _defaultsMjs = require("../../composables/defaults.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const makeVBannerActionsProps = (0, _indexMjs.propsFactory)({
    color: String,
    density: String,
    ...(0, _componentMjs.makeComponentProps)()
}, "VBannerActions");
const VBannerActions = (0, _indexMjs.genericComponent)()({
    name: "VBannerActions",
    props: makeVBannerActionsProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        (0, _defaultsMjs.provideDefaults)({
            VBtn: {
                color: props.color,
                density: props.density,
                slim: true,
                variant: "text"
            }
        });
        (0, _indexMjs.useRender)(()=>(0, _vue.createVNode)("div", {
                "class": [
                    "v-banner-actions",
                    props.class
                ],
                "style": props.style
            }, [
                slots.default?.()
            ]));
        return {};
    }
});

},{"vue":"gCTam","../../composables/component.mjs":"4YAxs","../../composables/defaults.mjs":"29Im0","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"3m8Ms":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VBannerText", ()=>VBannerText);
var _indexMjs = require("../../util/index.mjs");
const VBannerText = (0, _indexMjs.createSimpleFunctional)("v-banner-text");

},{"../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"jGWwf":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VBottomNavigation", ()=>(0, _vbottomNavigationMjs.VBottomNavigation));
var _vbottomNavigationMjs = require("./VBottomNavigation.mjs");

},{"./VBottomNavigation.mjs":"eNpGp","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"eNpGp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVBottomNavigationProps", ()=>makeVBottomNavigationProps);
parcelHelpers.export(exports, "VBottomNavigation", ()=>VBottomNavigation);
var _vue = require("vue");
// Styles
var _vbottomNavigationCss = require("./VBottomNavigation.css");
// Components
var _vbtnToggleMjs = require("../VBtnToggle/VBtnToggle.mjs"); // Composables
var _borderMjs = require("../../composables/border.mjs");
var _colorMjs = require("../../composables/color.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _defaultsMjs = require("../../composables/defaults.mjs");
var _densityMjs = require("../../composables/density.mjs");
var _elevationMjs = require("../../composables/elevation.mjs");
var _groupMjs = require("../../composables/group.mjs");
var _layoutMjs = require("../../composables/layout.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs");
var _roundedMjs = require("../../composables/rounded.mjs");
var _ssrBootMjs = require("../../composables/ssrBoot.mjs");
var _tagMjs = require("../../composables/tag.mjs");
var _themeMjs = require("../../composables/theme.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const makeVBottomNavigationProps = (0, _indexMjs.propsFactory)({
    baseColor: String,
    bgColor: String,
    color: String,
    grow: Boolean,
    mode: {
        type: String,
        validator: (v)=>!v || [
                "horizontal",
                "shift"
            ].includes(v)
    },
    height: {
        type: [
            Number,
            String
        ],
        default: 56
    },
    active: {
        type: Boolean,
        default: true
    },
    ...(0, _borderMjs.makeBorderProps)(),
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _densityMjs.makeDensityProps)(),
    ...(0, _elevationMjs.makeElevationProps)(),
    ...(0, _roundedMjs.makeRoundedProps)(),
    ...(0, _layoutMjs.makeLayoutItemProps)({
        name: "bottom-navigation"
    }),
    ...(0, _tagMjs.makeTagProps)({
        tag: "header"
    }),
    ...(0, _groupMjs.makeGroupProps)({
        selectedClass: "v-btn--selected"
    }),
    ...(0, _themeMjs.makeThemeProps)()
}, "VBottomNavigation");
const VBottomNavigation = (0, _indexMjs.genericComponent)()({
    name: "VBottomNavigation",
    props: makeVBottomNavigationProps(),
    emits: {
        "update:active": (value)=>true,
        "update:modelValue": (value)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const { themeClasses } = (0, _themeMjs.useTheme)();
        const { borderClasses } = (0, _borderMjs.useBorder)(props);
        const { backgroundColorClasses, backgroundColorStyles } = (0, _colorMjs.useBackgroundColor)((0, _vue.toRef)(props, "bgColor"));
        const { densityClasses } = (0, _densityMjs.useDensity)(props);
        const { elevationClasses } = (0, _elevationMjs.useElevation)(props);
        const { roundedClasses } = (0, _roundedMjs.useRounded)(props);
        const { ssrBootStyles } = (0, _ssrBootMjs.useSsrBoot)();
        const height = (0, _vue.computed)(()=>Number(props.height) - (props.density === "comfortable" ? 8 : 0) - (props.density === "compact" ? 16 : 0));
        const isActive = (0, _proxiedModelMjs.useProxiedModel)(props, "active", props.active);
        const { layoutItemStyles } = (0, _layoutMjs.useLayoutItem)({
            id: props.name,
            order: (0, _vue.computed)(()=>parseInt(props.order, 10)),
            position: (0, _vue.computed)(()=>"bottom"),
            layoutSize: (0, _vue.computed)(()=>isActive.value ? height.value : 0),
            elementSize: height,
            active: isActive,
            absolute: (0, _vue.toRef)(props, "absolute")
        });
        (0, _groupMjs.useGroup)(props, (0, _vbtnToggleMjs.VBtnToggleSymbol));
        (0, _defaultsMjs.provideDefaults)({
            VBtn: {
                baseColor: (0, _vue.toRef)(props, "baseColor"),
                color: (0, _vue.toRef)(props, "color"),
                density: (0, _vue.toRef)(props, "density"),
                stacked: (0, _vue.computed)(()=>props.mode !== "horizontal"),
                variant: "text"
            }
        }, {
            scoped: true
        });
        (0, _indexMjs.useRender)(()=>{
            return (0, _vue.createVNode)(props.tag, {
                "class": [
                    "v-bottom-navigation",
                    {
                        "v-bottom-navigation--active": isActive.value,
                        "v-bottom-navigation--grow": props.grow,
                        "v-bottom-navigation--shift": props.mode === "shift"
                    },
                    themeClasses.value,
                    backgroundColorClasses.value,
                    borderClasses.value,
                    densityClasses.value,
                    elevationClasses.value,
                    roundedClasses.value,
                    props.class
                ],
                "style": [
                    backgroundColorStyles.value,
                    layoutItemStyles.value,
                    {
                        height: (0, _indexMjs.convertToUnit)(height.value)
                    },
                    ssrBootStyles.value,
                    props.style
                ]
            }, {
                default: ()=>[
                        slots.default && (0, _vue.createVNode)("div", {
                            "class": "v-bottom-navigation__content"
                        }, [
                            slots.default()
                        ])
                    ]
            });
        });
        return {};
    }
});

},{"vue":"gCTam","./VBottomNavigation.css":"9qySA","../VBtnToggle/VBtnToggle.mjs":"gWoIS","../../composables/border.mjs":"iYaxw","../../composables/color.mjs":"6TeQR","../../composables/component.mjs":"4YAxs","../../composables/defaults.mjs":"29Im0","../../composables/density.mjs":"kOsEB","../../composables/elevation.mjs":"aNIiI","../../composables/group.mjs":"hPbgr","../../composables/layout.mjs":"lfigA","../../composables/proxiedModel.mjs":"huwLk","../../composables/rounded.mjs":"1RfhA","../../composables/ssrBoot.mjs":"bVwDz","../../composables/tag.mjs":"3LqcC","../../composables/theme.mjs":"c9HGg","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"9qySA":[function() {},{}],"kjAJB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VBottomSheet", ()=>(0, _vbottomSheetMjs.VBottomSheet));
var _vbottomSheetMjs = require("./VBottomSheet.mjs");

},{"./VBottomSheet.mjs":"ij4lH","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"ij4lH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVBottomSheetProps", ()=>makeVBottomSheetProps);
parcelHelpers.export(exports, "VBottomSheet", ()=>VBottomSheet);
var _vue = require("vue");
// Styles
var _vbottomSheetCss = require("./VBottomSheet.css");
// Components
var _vdialogMjs = require("../VDialog/VDialog.mjs"); // Composables
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const makeVBottomSheetProps = (0, _indexMjs.propsFactory)({
    inset: Boolean,
    ...(0, _vdialogMjs.makeVDialogProps)({
        transition: "bottom-sheet-transition"
    })
}, "VBottomSheet");
const VBottomSheet = (0, _indexMjs.genericComponent)()({
    name: "VBottomSheet",
    props: makeVBottomSheetProps(),
    emits: {
        "update:modelValue": (value)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const isActive = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
        (0, _indexMjs.useRender)(()=>{
            const dialogProps = (0, _vdialogMjs.VDialog).filterProps(props);
            return (0, _vue.createVNode)((0, _vdialogMjs.VDialog), (0, _vue.mergeProps)(dialogProps, {
                "contentClass": [
                    "v-bottom-sheet__content",
                    props.contentClass
                ],
                "modelValue": isActive.value,
                "onUpdate:modelValue": ($event)=>isActive.value = $event,
                "class": [
                    "v-bottom-sheet",
                    {
                        "v-bottom-sheet--inset": props.inset
                    },
                    props.class
                ],
                "style": props.style
            }), slots);
        });
        return {};
    }
});

},{"vue":"gCTam","./VBottomSheet.css":"1WdZl","../VDialog/VDialog.mjs":"9vSdN","../../composables/proxiedModel.mjs":"huwLk","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"1WdZl":[function() {},{}],"9vSdN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVDialogProps", ()=>makeVDialogProps);
parcelHelpers.export(exports, "VDialog", ()=>VDialog);
var _vue = require("vue");
// Styles
var _vdialogCss = require("./VDialog.css");
// Components
var _indexMjs = require("../transitions/index.mjs");
var _indexMjs1 = require("../VDefaultsProvider/index.mjs");
var _indexMjs2 = require("../VOverlay/index.mjs");
var _voverlayMjs = require("../VOverlay/VOverlay.mjs"); // Composables
var _forwardRefsMjs = require("../../composables/forwardRefs.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs");
var _scopeIdMjs = require("../../composables/scopeId.mjs"); // Utilities
var _indexMjs3 = require("../../util/index.mjs"); // Types
const makeVDialogProps = (0, _indexMjs3.propsFactory)({
    fullscreen: Boolean,
    retainFocus: {
        type: Boolean,
        default: true
    },
    scrollable: Boolean,
    ...(0, _voverlayMjs.makeVOverlayProps)({
        origin: "center center",
        scrollStrategy: "block",
        transition: {
            component: (0, _indexMjs.VDialogTransition)
        },
        zIndex: 2400
    })
}, "VDialog");
const VDialog = (0, _indexMjs3.genericComponent)()({
    name: "VDialog",
    props: makeVDialogProps(),
    emits: {
        "update:modelValue": (value)=>true,
        afterLeave: ()=>true
    },
    setup (props, _ref) {
        let { emit, slots } = _ref;
        const isActive = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
        const { scopeId } = (0, _scopeIdMjs.useScopeId)();
        const overlay = (0, _vue.ref)();
        function onFocusin(e) {
            const before = e.relatedTarget;
            const after = e.target;
            if (before !== after && overlay.value?.contentEl && // We're the topmost dialog
            overlay.value?.globalTop && // It isn't the document or the dialog body
            ![
                document,
                overlay.value.contentEl
            ].includes(after) && // It isn't inside the dialog body
            !overlay.value.contentEl.contains(after)) {
                const focusable = (0, _indexMjs3.focusableChildren)(overlay.value.contentEl);
                if (!focusable.length) return;
                const firstElement = focusable[0];
                const lastElement = focusable[focusable.length - 1];
                if (before === firstElement) lastElement.focus();
                else firstElement.focus();
            }
        }
        if (0, _indexMjs3.IN_BROWSER) (0, _vue.watch)(()=>isActive.value && props.retainFocus, (val)=>{
            val ? document.addEventListener("focusin", onFocusin) : document.removeEventListener("focusin", onFocusin);
        }, {
            immediate: true
        });
        function onAfterEnter() {
            if (overlay.value?.contentEl && !overlay.value.contentEl.contains(document.activeElement)) overlay.value.contentEl.focus({
                preventScroll: true
            });
        }
        function onAfterLeave() {
            emit("afterLeave");
        }
        (0, _vue.watch)(isActive, async (val)=>{
            if (!val) {
                await (0, _vue.nextTick)();
                overlay.value.activatorEl?.focus({
                    preventScroll: true
                });
            }
        });
        (0, _indexMjs3.useRender)(()=>{
            const overlayProps = (0, _indexMjs2.VOverlay).filterProps(props);
            const activatorProps = (0, _vue.mergeProps)({
                "aria-haspopup": "dialog",
                "aria-expanded": String(isActive.value)
            }, props.activatorProps);
            const contentProps = (0, _vue.mergeProps)({
                tabindex: -1
            }, props.contentProps);
            return (0, _vue.createVNode)((0, _indexMjs2.VOverlay), (0, _vue.mergeProps)({
                "ref": overlay,
                "class": [
                    "v-dialog",
                    {
                        "v-dialog--fullscreen": props.fullscreen,
                        "v-dialog--scrollable": props.scrollable
                    },
                    props.class
                ],
                "style": props.style
            }, overlayProps, {
                "modelValue": isActive.value,
                "onUpdate:modelValue": ($event)=>isActive.value = $event,
                "aria-modal": "true",
                "activatorProps": activatorProps,
                "contentProps": contentProps,
                "role": "dialog",
                "onAfterEnter": onAfterEnter,
                "onAfterLeave": onAfterLeave
            }, scopeId), {
                activator: slots.activator,
                default: function() {
                    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
                    return (0, _vue.createVNode)((0, _indexMjs1.VDefaultsProvider), {
                        "root": "VDialog"
                    }, {
                        default: ()=>[
                                slots.default?.(...args)
                            ]
                    });
                }
            });
        });
        return (0, _forwardRefsMjs.forwardRefs)({}, overlay);
    }
});

},{"vue":"gCTam","./VDialog.css":"89jw1","../transitions/index.mjs":"3ybHr","../VDefaultsProvider/index.mjs":"eFFvH","../VOverlay/index.mjs":"seRqS","../VOverlay/VOverlay.mjs":"2XVbS","../../composables/forwardRefs.mjs":"2TNTP","../../composables/proxiedModel.mjs":"huwLk","../../composables/scopeId.mjs":"1zMgM","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"89jw1":[function() {},{}],"fuBty":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VBreadcrumbs", ()=>(0, _vbreadcrumbsMjs.VBreadcrumbs));
parcelHelpers.export(exports, "VBreadcrumbsItem", ()=>(0, _vbreadcrumbsItemMjs.VBreadcrumbsItem));
parcelHelpers.export(exports, "VBreadcrumbsDivider", ()=>(0, _vbreadcrumbsDividerMjs.VBreadcrumbsDivider));
var _vbreadcrumbsMjs = require("./VBreadcrumbs.mjs");
var _vbreadcrumbsItemMjs = require("./VBreadcrumbsItem.mjs");
var _vbreadcrumbsDividerMjs = require("./VBreadcrumbsDivider.mjs");

},{"./VBreadcrumbs.mjs":"gBMk4","./VBreadcrumbsItem.mjs":"bthKV","./VBreadcrumbsDivider.mjs":"fecmP","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"gBMk4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVBreadcrumbsProps", ()=>makeVBreadcrumbsProps);
parcelHelpers.export(exports, "VBreadcrumbs", ()=>VBreadcrumbs);
var _vue = require("vue");
// Styles
var _vbreadcrumbsCss = require("./VBreadcrumbs.css");
// Components
var _vbreadcrumbsDividerMjs = require("./VBreadcrumbsDivider.mjs");
var _vbreadcrumbsItemMjs = require("./VBreadcrumbsItem.mjs");
var _indexMjs = require("../VDefaultsProvider/index.mjs");
var _indexMjs1 = require("../VIcon/index.mjs"); // Composables
var _colorMjs = require("../../composables/color.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _defaultsMjs = require("../../composables/defaults.mjs");
var _densityMjs = require("../../composables/density.mjs");
var _iconsMjs = require("../../composables/icons.mjs");
var _roundedMjs = require("../../composables/rounded.mjs");
var _tagMjs = require("../../composables/tag.mjs"); // Utilities
var _indexMjs2 = require("../../util/index.mjs"); // Types
const makeVBreadcrumbsProps = (0, _indexMjs2.propsFactory)({
    activeClass: String,
    activeColor: String,
    bgColor: String,
    color: String,
    disabled: Boolean,
    divider: {
        type: String,
        default: "/"
    },
    icon: (0, _iconsMjs.IconValue),
    items: {
        type: Array,
        default: ()=>[]
    },
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _densityMjs.makeDensityProps)(),
    ...(0, _roundedMjs.makeRoundedProps)(),
    ...(0, _tagMjs.makeTagProps)({
        tag: "ul"
    })
}, "VBreadcrumbs");
const VBreadcrumbs = (0, _indexMjs2.genericComponent)()({
    name: "VBreadcrumbs",
    props: makeVBreadcrumbsProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const { backgroundColorClasses, backgroundColorStyles } = (0, _colorMjs.useBackgroundColor)((0, _vue.toRef)(props, "bgColor"));
        const { densityClasses } = (0, _densityMjs.useDensity)(props);
        const { roundedClasses } = (0, _roundedMjs.useRounded)(props);
        (0, _defaultsMjs.provideDefaults)({
            VBreadcrumbsDivider: {
                divider: (0, _vue.toRef)(props, "divider")
            },
            VBreadcrumbsItem: {
                activeClass: (0, _vue.toRef)(props, "activeClass"),
                activeColor: (0, _vue.toRef)(props, "activeColor"),
                color: (0, _vue.toRef)(props, "color"),
                disabled: (0, _vue.toRef)(props, "disabled")
            }
        });
        const items = (0, _vue.computed)(()=>props.items.map((item)=>{
                return typeof item === "string" ? {
                    item: {
                        title: item
                    },
                    raw: item
                } : {
                    item,
                    raw: item
                };
            }));
        (0, _indexMjs2.useRender)(()=>{
            const hasPrepend = !!(slots.prepend || props.icon);
            return (0, _vue.createVNode)(props.tag, {
                "class": [
                    "v-breadcrumbs",
                    backgroundColorClasses.value,
                    densityClasses.value,
                    roundedClasses.value,
                    props.class
                ],
                "style": [
                    backgroundColorStyles.value,
                    props.style
                ]
            }, {
                default: ()=>[
                        hasPrepend && (0, _vue.createVNode)("li", {
                            "key": "prepend",
                            "class": "v-breadcrumbs__prepend"
                        }, [
                            !slots.prepend ? (0, _vue.createVNode)((0, _indexMjs1.VIcon), {
                                "key": "prepend-icon",
                                "start": true,
                                "icon": props.icon
                            }, null) : (0, _vue.createVNode)((0, _indexMjs.VDefaultsProvider), {
                                "key": "prepend-defaults",
                                "disabled": !props.icon,
                                "defaults": {
                                    VIcon: {
                                        icon: props.icon,
                                        start: true
                                    }
                                }
                            }, slots.prepend)
                        ]),
                        items.value.map((_ref2, index, array)=>{
                            let { item, raw } = _ref2;
                            return (0, _vue.createVNode)((0, _vue.Fragment), null, [
                                slots.item?.({
                                    item,
                                    index
                                }) ?? (0, _vue.createVNode)((0, _vbreadcrumbsItemMjs.VBreadcrumbsItem), (0, _vue.mergeProps)({
                                    "key": index,
                                    "disabled": index >= array.length - 1
                                }, typeof item === "string" ? {
                                    title: item
                                } : item), {
                                    default: slots.title ? ()=>slots.title?.({
                                            item,
                                            index
                                        }) : undefined
                                }),
                                index < array.length - 1 && (0, _vue.createVNode)((0, _vbreadcrumbsDividerMjs.VBreadcrumbsDivider), null, {
                                    default: slots.divider ? ()=>slots.divider?.({
                                            item: raw,
                                            index
                                        }) : undefined
                                })
                            ]);
                        }),
                        slots.default?.()
                    ]
            });
        });
        return {};
    }
});

},{"vue":"gCTam","./VBreadcrumbs.css":"1i4VG","./VBreadcrumbsDivider.mjs":"fecmP","./VBreadcrumbsItem.mjs":"bthKV","../VDefaultsProvider/index.mjs":"eFFvH","../VIcon/index.mjs":"5Yjjr","../../composables/color.mjs":"6TeQR","../../composables/component.mjs":"4YAxs","../../composables/defaults.mjs":"29Im0","../../composables/density.mjs":"kOsEB","../../composables/icons.mjs":"g4kLv","../../composables/rounded.mjs":"1RfhA","../../composables/tag.mjs":"3LqcC","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"1i4VG":[function() {},{}],"fecmP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVBreadcrumbsDividerProps", ()=>makeVBreadcrumbsDividerProps);
parcelHelpers.export(exports, "VBreadcrumbsDivider", ()=>VBreadcrumbsDivider);
var _vue = require("vue");
// Composables
var _componentMjs = require("../../composables/component.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const makeVBreadcrumbsDividerProps = (0, _indexMjs.propsFactory)({
    divider: [
        Number,
        String
    ],
    ...(0, _componentMjs.makeComponentProps)()
}, "VBreadcrumbsDivider");
const VBreadcrumbsDivider = (0, _indexMjs.genericComponent)()({
    name: "VBreadcrumbsDivider",
    props: makeVBreadcrumbsDividerProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        (0, _indexMjs.useRender)(()=>(0, _vue.createVNode)("li", {
                "class": [
                    "v-breadcrumbs-divider",
                    props.class
                ],
                "style": props.style
            }, [
                slots?.default?.() ?? props.divider
            ]));
        return {};
    }
});

},{"vue":"gCTam","../../composables/component.mjs":"4YAxs","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"bthKV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVBreadcrumbsItemProps", ()=>makeVBreadcrumbsItemProps);
parcelHelpers.export(exports, "VBreadcrumbsItem", ()=>VBreadcrumbsItem);
var _vue = require("vue");
// Composables
var _colorMjs = require("../../composables/color.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _routerMjs = require("../../composables/router.mjs");
var _tagMjs = require("../../composables/tag.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const makeVBreadcrumbsItemProps = (0, _indexMjs.propsFactory)({
    active: Boolean,
    activeClass: String,
    activeColor: String,
    color: String,
    disabled: Boolean,
    title: String,
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _routerMjs.makeRouterProps)(),
    ...(0, _tagMjs.makeTagProps)({
        tag: "li"
    })
}, "VBreadcrumbsItem");
const VBreadcrumbsItem = (0, _indexMjs.genericComponent)()({
    name: "VBreadcrumbsItem",
    props: makeVBreadcrumbsItemProps(),
    setup (props, _ref) {
        let { slots, attrs } = _ref;
        const link = (0, _routerMjs.useLink)(props, attrs);
        const isActive = (0, _vue.computed)(()=>props.active || link.isActive?.value);
        const color = (0, _vue.computed)(()=>isActive.value ? props.activeColor : props.color);
        const { textColorClasses, textColorStyles } = (0, _colorMjs.useTextColor)(color);
        (0, _indexMjs.useRender)(()=>{
            return (0, _vue.createVNode)(props.tag, {
                "class": [
                    "v-breadcrumbs-item",
                    {
                        "v-breadcrumbs-item--active": isActive.value,
                        "v-breadcrumbs-item--disabled": props.disabled,
                        [`${props.activeClass}`]: isActive.value && props.activeClass
                    },
                    textColorClasses.value,
                    props.class
                ],
                "style": [
                    textColorStyles.value,
                    props.style
                ],
                "aria-current": isActive.value ? "page" : undefined
            }, {
                default: ()=>[
                        !link.isLink.value ? slots.default?.() ?? props.title : (0, _vue.createVNode)("a", {
                            "class": "v-breadcrumbs-item--link",
                            "href": link.href.value,
                            "aria-current": isActive.value ? "page" : undefined,
                            "onClick": link.navigate
                        }, [
                            slots.default?.() ?? props.title
                        ])
                    ]
            });
        });
        return {};
    }
});

},{"vue":"gCTam","../../composables/color.mjs":"6TeQR","../../composables/component.mjs":"4YAxs","../../composables/router.mjs":"8IJEw","../../composables/tag.mjs":"3LqcC","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"4DX5K":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VBtnGroup", ()=>(0, _vbtnGroupMjs.VBtnGroup));
var _vbtnGroupMjs = require("./VBtnGroup.mjs");

},{"./VBtnGroup.mjs":"9ys7b","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"eqjim":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VBtnToggle", ()=>(0, _vbtnToggleMjs.VBtnToggle));
var _vbtnToggleMjs = require("./VBtnToggle.mjs");

},{"./VBtnToggle.mjs":"gWoIS","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"1dUj9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VCard", ()=>(0, _vcardMjs.VCard));
parcelHelpers.export(exports, "VCardActions", ()=>(0, _vcardActionsMjs.VCardActions));
parcelHelpers.export(exports, "VCardItem", ()=>(0, _vcardItemMjs.VCardItem));
parcelHelpers.export(exports, "VCardSubtitle", ()=>(0, _vcardSubtitleMjs.VCardSubtitle));
parcelHelpers.export(exports, "VCardText", ()=>(0, _vcardTextMjs.VCardText));
parcelHelpers.export(exports, "VCardTitle", ()=>(0, _vcardTitleMjs.VCardTitle));
var _vcardMjs = require("./VCard.mjs");
var _vcardActionsMjs = require("./VCardActions.mjs");
var _vcardItemMjs = require("./VCardItem.mjs");
var _vcardSubtitleMjs = require("./VCardSubtitle.mjs");
var _vcardTextMjs = require("./VCardText.mjs");
var _vcardTitleMjs = require("./VCardTitle.mjs");

},{"./VCard.mjs":"7YJR6","./VCardActions.mjs":"6bZjc","./VCardItem.mjs":"bdOYG","./VCardSubtitle.mjs":"iEA6v","./VCardText.mjs":"eB5aX","./VCardTitle.mjs":"cgPMU","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"7YJR6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVCardProps", ()=>makeVCardProps);
parcelHelpers.export(exports, "VCard", ()=>VCard);
var _vue = require("vue");
/* eslint-disable complexity */ // Styles
var _vcardCss = require("./VCard.css");
// Components
var _vcardActionsMjs = require("./VCardActions.mjs");
var _vcardItemMjs = require("./VCardItem.mjs");
var _vcardTextMjs = require("./VCardText.mjs");
var _indexMjs = require("../VDefaultsProvider/index.mjs");
var _indexMjs1 = require("../VImg/index.mjs"); // Composables
var _borderMjs = require("../../composables/border.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _densityMjs = require("../../composables/density.mjs");
var _dimensionsMjs = require("../../composables/dimensions.mjs");
var _elevationMjs = require("../../composables/elevation.mjs");
var _iconsMjs = require("../../composables/icons.mjs");
var _loaderMjs = require("../../composables/loader.mjs");
var _locationMjs = require("../../composables/location.mjs");
var _positionMjs = require("../../composables/position.mjs");
var _roundedMjs = require("../../composables/rounded.mjs");
var _routerMjs = require("../../composables/router.mjs");
var _tagMjs = require("../../composables/tag.mjs");
var _themeMjs = require("../../composables/theme.mjs");
var _variantMjs = require("../../composables/variant.mjs"); // Directives
var _indexMjs2 = require("../../directives/ripple/index.mjs"); // Utilities
var _indexMjs3 = require("../../util/index.mjs"); // Types
const makeVCardProps = (0, _indexMjs3.propsFactory)({
    appendAvatar: String,
    appendIcon: (0, _iconsMjs.IconValue),
    disabled: Boolean,
    flat: Boolean,
    hover: Boolean,
    image: String,
    link: {
        type: Boolean,
        default: undefined
    },
    prependAvatar: String,
    prependIcon: (0, _iconsMjs.IconValue),
    ripple: {
        type: [
            Boolean,
            Object
        ],
        default: true
    },
    subtitle: [
        String,
        Number
    ],
    text: [
        String,
        Number
    ],
    title: [
        String,
        Number
    ],
    ...(0, _borderMjs.makeBorderProps)(),
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _densityMjs.makeDensityProps)(),
    ...(0, _dimensionsMjs.makeDimensionProps)(),
    ...(0, _elevationMjs.makeElevationProps)(),
    ...(0, _loaderMjs.makeLoaderProps)(),
    ...(0, _locationMjs.makeLocationProps)(),
    ...(0, _positionMjs.makePositionProps)(),
    ...(0, _roundedMjs.makeRoundedProps)(),
    ...(0, _routerMjs.makeRouterProps)(),
    ...(0, _tagMjs.makeTagProps)(),
    ...(0, _themeMjs.makeThemeProps)(),
    ...(0, _variantMjs.makeVariantProps)({
        variant: "elevated"
    })
}, "VCard");
const VCard = (0, _indexMjs3.genericComponent)()({
    name: "VCard",
    directives: {
        Ripple: (0, _indexMjs2.Ripple)
    },
    props: makeVCardProps(),
    setup (props, _ref) {
        let { attrs, slots } = _ref;
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const { borderClasses } = (0, _borderMjs.useBorder)(props);
        const { colorClasses, colorStyles, variantClasses } = (0, _variantMjs.useVariant)(props);
        const { densityClasses } = (0, _densityMjs.useDensity)(props);
        const { dimensionStyles } = (0, _dimensionsMjs.useDimension)(props);
        const { elevationClasses } = (0, _elevationMjs.useElevation)(props);
        const { loaderClasses } = (0, _loaderMjs.useLoader)(props);
        const { locationStyles } = (0, _locationMjs.useLocation)(props);
        const { positionClasses } = (0, _positionMjs.usePosition)(props);
        const { roundedClasses } = (0, _roundedMjs.useRounded)(props);
        const link = (0, _routerMjs.useLink)(props, attrs);
        const isLink = (0, _vue.computed)(()=>props.link !== false && link.isLink.value);
        const isClickable = (0, _vue.computed)(()=>!props.disabled && props.link !== false && (props.link || link.isClickable.value));
        (0, _indexMjs3.useRender)(()=>{
            const Tag = isLink.value ? "a" : props.tag;
            const hasTitle = !!(slots.title || props.title != null);
            const hasSubtitle = !!(slots.subtitle || props.subtitle != null);
            const hasHeader = hasTitle || hasSubtitle;
            const hasAppend = !!(slots.append || props.appendAvatar || props.appendIcon);
            const hasPrepend = !!(slots.prepend || props.prependAvatar || props.prependIcon);
            const hasImage = !!(slots.image || props.image);
            const hasCardItem = hasHeader || hasPrepend || hasAppend;
            const hasText = !!(slots.text || props.text != null);
            return (0, _vue.withDirectives)((0, _vue.createVNode)(Tag, {
                "class": [
                    "v-card",
                    {
                        "v-card--disabled": props.disabled,
                        "v-card--flat": props.flat,
                        "v-card--hover": props.hover && !(props.disabled || props.flat),
                        "v-card--link": isClickable.value
                    },
                    themeClasses.value,
                    borderClasses.value,
                    colorClasses.value,
                    densityClasses.value,
                    elevationClasses.value,
                    loaderClasses.value,
                    positionClasses.value,
                    roundedClasses.value,
                    variantClasses.value,
                    props.class
                ],
                "style": [
                    colorStyles.value,
                    dimensionStyles.value,
                    locationStyles.value,
                    props.style
                ],
                "href": link.href.value,
                "onClick": isClickable.value && link.navigate,
                "tabindex": props.disabled ? -1 : undefined
            }, {
                default: ()=>[
                        hasImage && (0, _vue.createVNode)("div", {
                            "key": "image",
                            "class": "v-card__image"
                        }, [
                            !slots.image ? (0, _vue.createVNode)((0, _indexMjs1.VImg), {
                                "key": "image-img",
                                "cover": true,
                                "src": props.image
                            }, null) : (0, _vue.createVNode)((0, _indexMjs.VDefaultsProvider), {
                                "key": "image-defaults",
                                "disabled": !props.image,
                                "defaults": {
                                    VImg: {
                                        cover: true,
                                        src: props.image
                                    }
                                }
                            }, slots.image)
                        ]),
                        (0, _vue.createVNode)((0, _loaderMjs.LoaderSlot), {
                            "name": "v-card",
                            "active": !!props.loading,
                            "color": typeof props.loading === "boolean" ? undefined : props.loading
                        }, {
                            default: slots.loader
                        }),
                        hasCardItem && (0, _vue.createVNode)((0, _vcardItemMjs.VCardItem), {
                            "key": "item",
                            "prependAvatar": props.prependAvatar,
                            "prependIcon": props.prependIcon,
                            "title": props.title,
                            "subtitle": props.subtitle,
                            "appendAvatar": props.appendAvatar,
                            "appendIcon": props.appendIcon
                        }, {
                            default: slots.item,
                            prepend: slots.prepend,
                            title: slots.title,
                            subtitle: slots.subtitle,
                            append: slots.append
                        }),
                        hasText && (0, _vue.createVNode)((0, _vcardTextMjs.VCardText), {
                            "key": "text"
                        }, {
                            default: ()=>[
                                    slots.text?.() ?? props.text
                                ]
                        }),
                        slots.default?.(),
                        slots.actions && (0, _vue.createVNode)((0, _vcardActionsMjs.VCardActions), null, {
                            default: slots.actions
                        }),
                        (0, _variantMjs.genOverlays)(isClickable.value, "v-card")
                    ]
            }), [
                [
                    (0, _vue.resolveDirective)("ripple"),
                    isClickable.value && props.ripple
                ]
            ]);
        });
        return {};
    }
});

},{"vue":"gCTam","./VCard.css":"8H39H","./VCardActions.mjs":"6bZjc","./VCardItem.mjs":"bdOYG","./VCardText.mjs":"eB5aX","../VDefaultsProvider/index.mjs":"eFFvH","../VImg/index.mjs":"dbGJJ","../../composables/border.mjs":"iYaxw","../../composables/component.mjs":"4YAxs","../../composables/density.mjs":"kOsEB","../../composables/dimensions.mjs":"daVmy","../../composables/elevation.mjs":"aNIiI","../../composables/icons.mjs":"g4kLv","../../composables/loader.mjs":"6m53O","../../composables/location.mjs":"cIK4d","../../composables/position.mjs":"8GbJq","../../composables/rounded.mjs":"1RfhA","../../composables/router.mjs":"8IJEw","../../composables/tag.mjs":"3LqcC","../../composables/theme.mjs":"c9HGg","../../composables/variant.mjs":"ivQo4","../../directives/ripple/index.mjs":"41ncU","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"8H39H":[function() {},{}],"6bZjc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VCardActions", ()=>VCardActions);
var _vue = require("vue");
// Composables
var _componentMjs = require("../../composables/component.mjs");
var _defaultsMjs = require("../../composables/defaults.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const VCardActions = (0, _indexMjs.genericComponent)()({
    name: "VCardActions",
    props: (0, _componentMjs.makeComponentProps)(),
    setup (props, _ref) {
        let { slots } = _ref;
        (0, _defaultsMjs.provideDefaults)({
            VBtn: {
                slim: true,
                variant: "text"
            }
        });
        (0, _indexMjs.useRender)(()=>(0, _vue.createVNode)("div", {
                "class": [
                    "v-card-actions",
                    props.class
                ],
                "style": props.style
            }, [
                slots.default?.()
            ]));
        return {};
    }
});

},{"vue":"gCTam","../../composables/component.mjs":"4YAxs","../../composables/defaults.mjs":"29Im0","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"bdOYG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeCardItemProps", ()=>makeCardItemProps);
parcelHelpers.export(exports, "VCardItem", ()=>VCardItem);
var _vue = require("vue");
// Components
var _vcardSubtitleMjs = require("./VCardSubtitle.mjs");
var _vcardTitleMjs = require("./VCardTitle.mjs");
var _indexMjs = require("../VAvatar/index.mjs");
var _indexMjs1 = require("../VDefaultsProvider/index.mjs");
var _indexMjs2 = require("../VIcon/index.mjs"); // Composables
var _componentMjs = require("../../composables/component.mjs");
var _densityMjs = require("../../composables/density.mjs");
var _iconsMjs = require("../../composables/icons.mjs"); // Utilities
var _indexMjs3 = require("../../util/index.mjs");
const makeCardItemProps = (0, _indexMjs3.propsFactory)({
    appendAvatar: String,
    appendIcon: (0, _iconsMjs.IconValue),
    prependAvatar: String,
    prependIcon: (0, _iconsMjs.IconValue),
    subtitle: [
        String,
        Number
    ],
    title: [
        String,
        Number
    ],
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _densityMjs.makeDensityProps)()
}, "VCardItem");
const VCardItem = (0, _indexMjs3.genericComponent)()({
    name: "VCardItem",
    props: makeCardItemProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        (0, _indexMjs3.useRender)(()=>{
            const hasPrependMedia = !!(props.prependAvatar || props.prependIcon);
            const hasPrepend = !!(hasPrependMedia || slots.prepend);
            const hasAppendMedia = !!(props.appendAvatar || props.appendIcon);
            const hasAppend = !!(hasAppendMedia || slots.append);
            const hasTitle = !!(props.title != null || slots.title);
            const hasSubtitle = !!(props.subtitle != null || slots.subtitle);
            return (0, _vue.createVNode)("div", {
                "class": [
                    "v-card-item",
                    props.class
                ],
                "style": props.style
            }, [
                hasPrepend && (0, _vue.createVNode)("div", {
                    "key": "prepend",
                    "class": "v-card-item__prepend"
                }, [
                    !slots.prepend ? (0, _vue.createVNode)((0, _vue.Fragment), null, [
                        props.prependAvatar && (0, _vue.createVNode)((0, _indexMjs.VAvatar), {
                            "key": "prepend-avatar",
                            "density": props.density,
                            "image": props.prependAvatar
                        }, null),
                        props.prependIcon && (0, _vue.createVNode)((0, _indexMjs2.VIcon), {
                            "key": "prepend-icon",
                            "density": props.density,
                            "icon": props.prependIcon
                        }, null)
                    ]) : (0, _vue.createVNode)((0, _indexMjs1.VDefaultsProvider), {
                        "key": "prepend-defaults",
                        "disabled": !hasPrependMedia,
                        "defaults": {
                            VAvatar: {
                                density: props.density,
                                image: props.prependAvatar
                            },
                            VIcon: {
                                density: props.density,
                                icon: props.prependIcon
                            }
                        }
                    }, slots.prepend)
                ]),
                (0, _vue.createVNode)("div", {
                    "class": "v-card-item__content"
                }, [
                    hasTitle && (0, _vue.createVNode)((0, _vcardTitleMjs.VCardTitle), {
                        "key": "title"
                    }, {
                        default: ()=>[
                                slots.title?.() ?? props.title
                            ]
                    }),
                    hasSubtitle && (0, _vue.createVNode)((0, _vcardSubtitleMjs.VCardSubtitle), {
                        "key": "subtitle"
                    }, {
                        default: ()=>[
                                slots.subtitle?.() ?? props.subtitle
                            ]
                    }),
                    slots.default?.()
                ]),
                hasAppend && (0, _vue.createVNode)("div", {
                    "key": "append",
                    "class": "v-card-item__append"
                }, [
                    !slots.append ? (0, _vue.createVNode)((0, _vue.Fragment), null, [
                        props.appendIcon && (0, _vue.createVNode)((0, _indexMjs2.VIcon), {
                            "key": "append-icon",
                            "density": props.density,
                            "icon": props.appendIcon
                        }, null),
                        props.appendAvatar && (0, _vue.createVNode)((0, _indexMjs.VAvatar), {
                            "key": "append-avatar",
                            "density": props.density,
                            "image": props.appendAvatar
                        }, null)
                    ]) : (0, _vue.createVNode)((0, _indexMjs1.VDefaultsProvider), {
                        "key": "append-defaults",
                        "disabled": !hasAppendMedia,
                        "defaults": {
                            VAvatar: {
                                density: props.density,
                                image: props.appendAvatar
                            },
                            VIcon: {
                                density: props.density,
                                icon: props.appendIcon
                            }
                        }
                    }, slots.append)
                ])
            ]);
        });
        return {};
    }
});

},{"vue":"gCTam","./VCardSubtitle.mjs":"iEA6v","./VCardTitle.mjs":"cgPMU","../VAvatar/index.mjs":"d9olW","../VDefaultsProvider/index.mjs":"eFFvH","../VIcon/index.mjs":"5Yjjr","../../composables/component.mjs":"4YAxs","../../composables/density.mjs":"kOsEB","../../composables/icons.mjs":"g4kLv","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"iEA6v":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVCardSubtitleProps", ()=>makeVCardSubtitleProps);
parcelHelpers.export(exports, "VCardSubtitle", ()=>VCardSubtitle);
var _vue = require("vue");
// Composables
var _componentMjs = require("../../composables/component.mjs");
var _tagMjs = require("../../composables/tag.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const makeVCardSubtitleProps = (0, _indexMjs.propsFactory)({
    opacity: [
        Number,
        String
    ],
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _tagMjs.makeTagProps)()
}, "VCardSubtitle");
const VCardSubtitle = (0, _indexMjs.genericComponent)()({
    name: "VCardSubtitle",
    props: makeVCardSubtitleProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        (0, _indexMjs.useRender)(()=>(0, _vue.createVNode)(props.tag, {
                "class": [
                    "v-card-subtitle",
                    props.class
                ],
                "style": [
                    {
                        "--v-card-subtitle-opacity": props.opacity
                    },
                    props.style
                ]
            }, slots));
        return {};
    }
});

},{"vue":"gCTam","../../composables/component.mjs":"4YAxs","../../composables/tag.mjs":"3LqcC","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"cgPMU":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VCardTitle", ()=>VCardTitle);
var _indexMjs = require("../../util/index.mjs");
const VCardTitle = (0, _indexMjs.createSimpleFunctional)("v-card-title");

},{"../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"eB5aX":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVCardTextProps", ()=>makeVCardTextProps);
parcelHelpers.export(exports, "VCardText", ()=>VCardText);
var _vue = require("vue");
// Composables
var _componentMjs = require("../../composables/component.mjs");
var _tagMjs = require("../../composables/tag.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const makeVCardTextProps = (0, _indexMjs.propsFactory)({
    opacity: [
        Number,
        String
    ],
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _tagMjs.makeTagProps)()
}, "VCardText");
const VCardText = (0, _indexMjs.genericComponent)()({
    name: "VCardText",
    props: makeVCardTextProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        (0, _indexMjs.useRender)(()=>(0, _vue.createVNode)(props.tag, {
                "class": [
                    "v-card-text",
                    props.class
                ],
                "style": [
                    {
                        "--v-card-text-opacity": props.opacity
                    },
                    props.style
                ]
            }, slots));
        return {};
    }
});

},{"vue":"gCTam","../../composables/component.mjs":"4YAxs","../../composables/tag.mjs":"3LqcC","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"6qWQA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VCarousel", ()=>(0, _vcarouselMjs.VCarousel));
parcelHelpers.export(exports, "VCarouselItem", ()=>(0, _vcarouselItemMjs.VCarouselItem));
var _vcarouselMjs = require("./VCarousel.mjs");
var _vcarouselItemMjs = require("./VCarouselItem.mjs");

},{"./VCarousel.mjs":"1xEOu","./VCarouselItem.mjs":"15mVE","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"1xEOu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVCarouselProps", ()=>makeVCarouselProps);
parcelHelpers.export(exports, "VCarousel", ()=>VCarousel);
var _vue = require("vue");
// Styles
var _vcarouselCss = require("./VCarousel.css");
// Components
var _indexMjs = require("../VBtn/index.mjs");
var _indexMjs1 = require("../VDefaultsProvider/index.mjs");
var _indexMjs2 = require("../VProgressLinear/index.mjs");
var _vwindowMjs = require("../VWindow/VWindow.mjs"); // Composables
var _iconsMjs = require("../../composables/icons.mjs");
var _localeMjs = require("../../composables/locale.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs"); // Utilities
var _indexMjs3 = require("../../util/index.mjs"); // Types
const makeVCarouselProps = (0, _indexMjs3.propsFactory)({
    color: String,
    cycle: Boolean,
    delimiterIcon: {
        type: (0, _iconsMjs.IconValue),
        default: "$delimiter"
    },
    height: {
        type: [
            Number,
            String
        ],
        default: 500
    },
    hideDelimiters: Boolean,
    hideDelimiterBackground: Boolean,
    interval: {
        type: [
            Number,
            String
        ],
        default: 6000,
        validator: (value)=>Number(value) > 0
    },
    progress: [
        Boolean,
        String
    ],
    verticalDelimiters: [
        Boolean,
        String
    ],
    ...(0, _vwindowMjs.makeVWindowProps)({
        continuous: true,
        mandatory: "force",
        showArrows: true
    })
}, "VCarousel");
const VCarousel = (0, _indexMjs3.genericComponent)()({
    name: "VCarousel",
    props: makeVCarouselProps(),
    emits: {
        "update:modelValue": (value)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const model = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
        const { t } = (0, _localeMjs.useLocale)();
        const windowRef = (0, _vue.ref)();
        let slideTimeout = -1;
        (0, _vue.watch)(model, restartTimeout);
        (0, _vue.watch)(()=>props.interval, restartTimeout);
        (0, _vue.watch)(()=>props.cycle, (val)=>{
            if (val) restartTimeout();
            else window.clearTimeout(slideTimeout);
        });
        (0, _vue.onMounted)(startTimeout);
        function startTimeout() {
            if (!props.cycle || !windowRef.value) return;
            slideTimeout = window.setTimeout(windowRef.value.group.next, +props.interval > 0 ? +props.interval : 6000);
        }
        function restartTimeout() {
            window.clearTimeout(slideTimeout);
            window.requestAnimationFrame(startTimeout);
        }
        (0, _indexMjs3.useRender)(()=>{
            const windowProps = (0, _vwindowMjs.VWindow).filterProps(props);
            return (0, _vue.createVNode)((0, _vwindowMjs.VWindow), (0, _vue.mergeProps)({
                "ref": windowRef
            }, windowProps, {
                "modelValue": model.value,
                "onUpdate:modelValue": ($event)=>model.value = $event,
                "class": [
                    "v-carousel",
                    {
                        "v-carousel--hide-delimiter-background": props.hideDelimiterBackground,
                        "v-carousel--vertical-delimiters": props.verticalDelimiters
                    },
                    props.class
                ],
                "style": [
                    {
                        height: (0, _indexMjs3.convertToUnit)(props.height)
                    },
                    props.style
                ]
            }), {
                default: slots.default,
                additional: (_ref2)=>{
                    let { group } = _ref2;
                    return (0, _vue.createVNode)((0, _vue.Fragment), null, [
                        !props.hideDelimiters && (0, _vue.createVNode)("div", {
                            "class": "v-carousel__controls",
                            "style": {
                                left: props.verticalDelimiters === "left" && props.verticalDelimiters ? 0 : "auto",
                                right: props.verticalDelimiters === "right" ? 0 : "auto"
                            }
                        }, [
                            group.items.value.length > 0 && (0, _vue.createVNode)((0, _indexMjs1.VDefaultsProvider), {
                                "defaults": {
                                    VBtn: {
                                        color: props.color,
                                        icon: props.delimiterIcon,
                                        size: "x-small",
                                        variant: "text"
                                    }
                                },
                                "scoped": true
                            }, {
                                default: ()=>[
                                        group.items.value.map((item, index)=>{
                                            const props = {
                                                id: `carousel-item-${item.id}`,
                                                "aria-label": t("$vuetify.carousel.ariaLabel.delimiter", index + 1, group.items.value.length),
                                                class: [
                                                    "v-carousel__controls__item",
                                                    group.isSelected(item.id) && "v-btn--active"
                                                ],
                                                onClick: ()=>group.select(item.id, true)
                                            };
                                            return slots.item ? slots.item({
                                                props,
                                                item
                                            }) : (0, _vue.createVNode)((0, _indexMjs.VBtn), (0, _vue.mergeProps)(item, props), null);
                                        })
                                    ]
                            })
                        ]),
                        props.progress && (0, _vue.createVNode)((0, _indexMjs2.VProgressLinear), {
                            "class": "v-carousel__progress",
                            "color": typeof props.progress === "string" ? props.progress : undefined,
                            "modelValue": (group.getItemIndex(model.value) + 1) / group.items.value.length * 100
                        }, null)
                    ]);
                },
                prev: slots.prev,
                next: slots.next
            });
        });
        return {};
    }
});

},{"vue":"gCTam","./VCarousel.css":"2QGex","../VBtn/index.mjs":"g9s2K","../VDefaultsProvider/index.mjs":"eFFvH","../VProgressLinear/index.mjs":"5Ak1A","../VWindow/VWindow.mjs":"csAvt","../../composables/icons.mjs":"g4kLv","../../composables/locale.mjs":"9rJP0","../../composables/proxiedModel.mjs":"huwLk","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"2QGex":[function() {},{}],"csAvt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VWindowSymbol", ()=>VWindowSymbol);
parcelHelpers.export(exports, "VWindowGroupSymbol", ()=>VWindowGroupSymbol);
parcelHelpers.export(exports, "makeVWindowProps", ()=>makeVWindowProps);
parcelHelpers.export(exports, "VWindow", ()=>VWindow);
var _vue = require("vue");
// Styles
var _vwindowCss = require("./VWindow.css");
// Components
var _indexMjs = require("../VBtn/index.mjs"); // Composables
var _componentMjs = require("../../composables/component.mjs");
var _groupMjs = require("../../composables/group.mjs");
var _localeMjs = require("../../composables/locale.mjs");
var _tagMjs = require("../../composables/tag.mjs");
var _themeMjs = require("../../composables/theme.mjs"); // Directives
var _indexMjs1 = require("../../directives/touch/index.mjs"); // Utilities
var _indexMjs2 = require("../../util/index.mjs"); // Types
const VWindowSymbol = Symbol.for("vuetify:v-window");
const VWindowGroupSymbol = Symbol.for("vuetify:v-window-group");
const makeVWindowProps = (0, _indexMjs2.propsFactory)({
    continuous: Boolean,
    nextIcon: {
        type: [
            Boolean,
            String,
            Function,
            Object
        ],
        default: "$next"
    },
    prevIcon: {
        type: [
            Boolean,
            String,
            Function,
            Object
        ],
        default: "$prev"
    },
    reverse: Boolean,
    showArrows: {
        type: [
            Boolean,
            String
        ],
        validator: (v)=>typeof v === "boolean" || v === "hover"
    },
    touch: {
        type: [
            Object,
            Boolean
        ],
        default: undefined
    },
    direction: {
        type: String,
        default: "horizontal"
    },
    modelValue: null,
    disabled: Boolean,
    selectedClass: {
        type: String,
        default: "v-window-item--active"
    },
    // TODO: mandatory should probably not be exposed but do this for now
    mandatory: {
        type: [
            Boolean,
            String
        ],
        default: "force"
    },
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _tagMjs.makeTagProps)(),
    ...(0, _themeMjs.makeThemeProps)()
}, "VWindow");
const VWindow = (0, _indexMjs2.genericComponent)()({
    name: "VWindow",
    directives: {
        Touch: (0, _indexMjs1.Touch)
    },
    props: makeVWindowProps(),
    emits: {
        "update:modelValue": (value)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const { isRtl } = (0, _localeMjs.useRtl)();
        const { t } = (0, _localeMjs.useLocale)();
        const group = (0, _groupMjs.useGroup)(props, VWindowGroupSymbol);
        const rootRef = (0, _vue.ref)();
        const isRtlReverse = (0, _vue.computed)(()=>isRtl.value ? !props.reverse : props.reverse);
        const isReversed = (0, _vue.shallowRef)(false);
        const transition = (0, _vue.computed)(()=>{
            const axis = props.direction === "vertical" ? "y" : "x";
            const reverse = isRtlReverse.value ? !isReversed.value : isReversed.value;
            const direction = reverse ? "-reverse" : "";
            return `v-window-${axis}${direction}-transition`;
        });
        const transitionCount = (0, _vue.shallowRef)(0);
        const transitionHeight = (0, _vue.ref)(undefined);
        const activeIndex = (0, _vue.computed)(()=>{
            return group.items.value.findIndex((item)=>group.selected.value.includes(item.id));
        });
        (0, _vue.watch)(activeIndex, (newVal, oldVal)=>{
            const itemsLength = group.items.value.length;
            const lastIndex = itemsLength - 1;
            if (itemsLength <= 2) isReversed.value = newVal < oldVal;
            else if (newVal === lastIndex && oldVal === 0) isReversed.value = true;
            else if (newVal === 0 && oldVal === lastIndex) isReversed.value = false;
            else isReversed.value = newVal < oldVal;
        });
        (0, _vue.provide)(VWindowSymbol, {
            transition,
            isReversed,
            transitionCount,
            transitionHeight,
            rootRef
        });
        const canMoveBack = (0, _vue.computed)(()=>props.continuous || activeIndex.value !== 0);
        const canMoveForward = (0, _vue.computed)(()=>props.continuous || activeIndex.value !== group.items.value.length - 1);
        function prev() {
            canMoveBack.value && group.prev();
        }
        function next() {
            canMoveForward.value && group.next();
        }
        const arrows = (0, _vue.computed)(()=>{
            const arrows = [];
            const prevProps = {
                icon: isRtl.value ? props.nextIcon : props.prevIcon,
                class: `v-window__${isRtlReverse.value ? "right" : "left"}`,
                onClick: group.prev,
                "aria-label": t("$vuetify.carousel.prev")
            };
            arrows.push(canMoveBack.value ? slots.prev ? slots.prev({
                props: prevProps
            }) : (0, _vue.createVNode)((0, _indexMjs.VBtn), prevProps, null) : (0, _vue.createVNode)("div", null, null));
            const nextProps = {
                icon: isRtl.value ? props.prevIcon : props.nextIcon,
                class: `v-window__${isRtlReverse.value ? "left" : "right"}`,
                onClick: group.next,
                "aria-label": t("$vuetify.carousel.next")
            };
            arrows.push(canMoveForward.value ? slots.next ? slots.next({
                props: nextProps
            }) : (0, _vue.createVNode)((0, _indexMjs.VBtn), nextProps, null) : (0, _vue.createVNode)("div", null, null));
            return arrows;
        });
        const touchOptions = (0, _vue.computed)(()=>{
            if (props.touch === false) return props.touch;
            const options = {
                left: ()=>{
                    isRtlReverse.value ? prev() : next();
                },
                right: ()=>{
                    isRtlReverse.value ? next() : prev();
                },
                start: (_ref2)=>{
                    let { originalEvent } = _ref2;
                    originalEvent.stopPropagation();
                }
            };
            return {
                ...options,
                ...props.touch === true ? {} : props.touch
            };
        });
        (0, _indexMjs2.useRender)(()=>(0, _vue.withDirectives)((0, _vue.createVNode)(props.tag, {
                "ref": rootRef,
                "class": [
                    "v-window",
                    {
                        "v-window--show-arrows-on-hover": props.showArrows === "hover"
                    },
                    themeClasses.value,
                    props.class
                ],
                "style": props.style
            }, {
                default: ()=>[
                        (0, _vue.createVNode)("div", {
                            "class": "v-window__container",
                            "style": {
                                height: transitionHeight.value
                            }
                        }, [
                            slots.default?.({
                                group
                            }),
                            props.showArrows !== false && (0, _vue.createVNode)("div", {
                                "class": "v-window__controls"
                            }, [
                                arrows.value
                            ])
                        ]),
                        slots.additional?.({
                            group
                        })
                    ]
            }), [
                [
                    (0, _vue.resolveDirective)("touch"),
                    touchOptions.value
                ]
            ]));
        return {
            group
        };
    }
});

},{"vue":"gCTam","./VWindow.css":"6AxYA","../VBtn/index.mjs":"g9s2K","../../composables/component.mjs":"4YAxs","../../composables/group.mjs":"hPbgr","../../composables/locale.mjs":"9rJP0","../../composables/tag.mjs":"3LqcC","../../composables/theme.mjs":"c9HGg","../../directives/touch/index.mjs":"rxCNC","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"6AxYA":[function() {},{}],"rxCNC":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Touch", ()=>Touch);
var _indexMjs = require("../../util/index.mjs"); // Types
const handleGesture = (wrapper)=>{
    const { touchstartX, touchendX, touchstartY, touchendY } = wrapper;
    const dirRatio = 0.5;
    const minDistance = 16;
    wrapper.offsetX = touchendX - touchstartX;
    wrapper.offsetY = touchendY - touchstartY;
    if (Math.abs(wrapper.offsetY) < dirRatio * Math.abs(wrapper.offsetX)) {
        wrapper.left && touchendX < touchstartX - minDistance && wrapper.left(wrapper);
        wrapper.right && touchendX > touchstartX + minDistance && wrapper.right(wrapper);
    }
    if (Math.abs(wrapper.offsetX) < dirRatio * Math.abs(wrapper.offsetY)) {
        wrapper.up && touchendY < touchstartY - minDistance && wrapper.up(wrapper);
        wrapper.down && touchendY > touchstartY + minDistance && wrapper.down(wrapper);
    }
};
function touchstart(event, wrapper) {
    const touch = event.changedTouches[0];
    wrapper.touchstartX = touch.clientX;
    wrapper.touchstartY = touch.clientY;
    wrapper.start?.({
        originalEvent: event,
        ...wrapper
    });
}
function touchend(event, wrapper) {
    const touch = event.changedTouches[0];
    wrapper.touchendX = touch.clientX;
    wrapper.touchendY = touch.clientY;
    wrapper.end?.({
        originalEvent: event,
        ...wrapper
    });
    handleGesture(wrapper);
}
function touchmove(event, wrapper) {
    const touch = event.changedTouches[0];
    wrapper.touchmoveX = touch.clientX;
    wrapper.touchmoveY = touch.clientY;
    wrapper.move?.({
        originalEvent: event,
        ...wrapper
    });
}
function createHandlers() {
    let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    const wrapper = {
        touchstartX: 0,
        touchstartY: 0,
        touchendX: 0,
        touchendY: 0,
        touchmoveX: 0,
        touchmoveY: 0,
        offsetX: 0,
        offsetY: 0,
        left: value.left,
        right: value.right,
        up: value.up,
        down: value.down,
        start: value.start,
        move: value.move,
        end: value.end
    };
    return {
        touchstart: (e)=>touchstart(e, wrapper),
        touchend: (e)=>touchend(e, wrapper),
        touchmove: (e)=>touchmove(e, wrapper)
    };
}
function mounted(el, binding) {
    const value = binding.value;
    const target = value?.parent ? el.parentElement : el;
    const options = value?.options ?? {
        passive: true
    };
    const uid = binding.instance?.$.uid; // TODO: use custom uid generator
    if (!target || !uid) return;
    const handlers = createHandlers(binding.value);
    target._touchHandlers = target._touchHandlers ?? Object.create(null);
    target._touchHandlers[uid] = handlers;
    (0, _indexMjs.keys)(handlers).forEach((eventName)=>{
        target.addEventListener(eventName, handlers[eventName], options);
    });
}
function unmounted(el, binding) {
    const target = binding.value?.parent ? el.parentElement : el;
    const uid = binding.instance?.$.uid;
    if (!target?._touchHandlers || !uid) return;
    const handlers = target._touchHandlers[uid];
    (0, _indexMjs.keys)(handlers).forEach((eventName)=>{
        target.removeEventListener(eventName, handlers[eventName]);
    });
    delete target._touchHandlers[uid];
}
const Touch = {
    mounted,
    unmounted
};
exports.default = Touch;

},{"../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"15mVE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVCarouselItemProps", ()=>makeVCarouselItemProps);
parcelHelpers.export(exports, "VCarouselItem", ()=>VCarouselItem);
var _vue = require("vue");
// Components
var _vimgMjs = require("../VImg/VImg.mjs");
var _vwindowItemMjs = require("../VWindow/VWindowItem.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const makeVCarouselItemProps = (0, _indexMjs.propsFactory)({
    ...(0, _vimgMjs.makeVImgProps)(),
    ...(0, _vwindowItemMjs.makeVWindowItemProps)()
}, "VCarouselItem");
const VCarouselItem = (0, _indexMjs.genericComponent)()({
    name: "VCarouselItem",
    inheritAttrs: false,
    props: makeVCarouselItemProps(),
    setup (props, _ref) {
        let { slots, attrs } = _ref;
        (0, _indexMjs.useRender)(()=>{
            const imgProps = (0, _vimgMjs.VImg).filterProps(props);
            const windowItemProps = (0, _vwindowItemMjs.VWindowItem).filterProps(props);
            return (0, _vue.createVNode)((0, _vwindowItemMjs.VWindowItem), (0, _vue.mergeProps)({
                "class": [
                    "v-carousel-item",
                    props.class
                ]
            }, windowItemProps), {
                default: ()=>[
                        (0, _vue.createVNode)((0, _vimgMjs.VImg), (0, _vue.mergeProps)(attrs, imgProps), slots)
                    ]
            });
        });
    }
});

},{"vue":"gCTam","../VImg/VImg.mjs":"cwz6F","../VWindow/VWindowItem.mjs":"jemUG","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"jemUG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVWindowItemProps", ()=>makeVWindowItemProps);
parcelHelpers.export(exports, "VWindowItem", ()=>VWindowItem);
var _vue = require("vue");
// Composables
var _componentMjs = require("../../composables/component.mjs");
var _groupMjs = require("../../composables/group.mjs");
var _lazyMjs = require("../../composables/lazy.mjs");
var _ssrBootMjs = require("../../composables/ssrBoot.mjs");
var _transitionMjs = require("../../composables/transition.mjs"); // Directives
var _indexMjs = require("../../directives/touch/index.mjs"); // Utilities
var _indexMjsDefault = parcelHelpers.interopDefault(_indexMjs);
var _indexMjs1 = require("../../util/index.mjs"); // Types
var _vwindowMjs = require("./VWindow.mjs");
const makeVWindowItemProps = (0, _indexMjs1.propsFactory)({
    reverseTransition: {
        type: [
            Boolean,
            String
        ],
        default: undefined
    },
    transition: {
        type: [
            Boolean,
            String
        ],
        default: undefined
    },
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _groupMjs.makeGroupItemProps)(),
    ...(0, _lazyMjs.makeLazyProps)()
}, "VWindowItem");
const VWindowItem = (0, _indexMjs1.genericComponent)()({
    name: "VWindowItem",
    directives: {
        Touch: (0, _indexMjsDefault.default)
    },
    props: makeVWindowItemProps(),
    emits: {
        "group:selected": (val)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const window = (0, _vue.inject)((0, _vwindowMjs.VWindowSymbol));
        const groupItem = (0, _groupMjs.useGroupItem)(props, (0, _vwindowMjs.VWindowGroupSymbol));
        const { isBooted } = (0, _ssrBootMjs.useSsrBoot)();
        if (!window || !groupItem) throw new Error("[Vuetify] VWindowItem must be used inside VWindow");
        const isTransitioning = (0, _vue.shallowRef)(false);
        const hasTransition = (0, _vue.computed)(()=>isBooted.value && (window.isReversed.value ? props.reverseTransition !== false : props.transition !== false));
        function onAfterTransition() {
            if (!isTransitioning.value || !window) return;
            // Finalize transition state.
            isTransitioning.value = false;
            if (window.transitionCount.value > 0) {
                window.transitionCount.value -= 1;
                // Remove container height if we are out of transition.
                if (window.transitionCount.value === 0) window.transitionHeight.value = undefined;
            }
        }
        function onBeforeTransition() {
            if (isTransitioning.value || !window) return;
            // Initialize transition state here.
            isTransitioning.value = true;
            if (window.transitionCount.value === 0) // Set initial height for height transition.
            window.transitionHeight.value = (0, _indexMjs1.convertToUnit)(window.rootRef.value?.clientHeight);
            window.transitionCount.value += 1;
        }
        function onTransitionCancelled() {
            onAfterTransition(); // This should have the same path as normal transition end.
        }
        function onEnterTransition(el) {
            if (!isTransitioning.value) return;
            (0, _vue.nextTick)(()=>{
                // Do not set height if no transition or cancelled.
                if (!hasTransition.value || !isTransitioning.value || !window) return;
                // Set transition target height.
                window.transitionHeight.value = (0, _indexMjs1.convertToUnit)(el.clientHeight);
            });
        }
        const transition = (0, _vue.computed)(()=>{
            const name = window.isReversed.value ? props.reverseTransition : props.transition;
            return !hasTransition.value ? false : {
                name: typeof name !== "string" ? window.transition.value : name,
                onBeforeEnter: onBeforeTransition,
                onAfterEnter: onAfterTransition,
                onEnterCancelled: onTransitionCancelled,
                onBeforeLeave: onBeforeTransition,
                onAfterLeave: onAfterTransition,
                onLeaveCancelled: onTransitionCancelled,
                onEnter: onEnterTransition
            };
        });
        const { hasContent } = (0, _lazyMjs.useLazy)(props, groupItem.isSelected);
        (0, _indexMjs1.useRender)(()=>(0, _vue.createVNode)((0, _transitionMjs.MaybeTransition), {
                "transition": transition.value,
                "disabled": !isBooted.value
            }, {
                default: ()=>[
                        (0, _vue.withDirectives)((0, _vue.createVNode)("div", {
                            "class": [
                                "v-window-item",
                                groupItem.selectedClass.value,
                                props.class
                            ],
                            "style": props.style
                        }, [
                            hasContent.value && slots.default?.()
                        ]), [
                            [
                                (0, _vue.vShow),
                                groupItem.isSelected.value
                            ]
                        ])
                    ]
            }));
        return {
            groupItem
        };
    }
});

},{"vue":"gCTam","../../composables/component.mjs":"4YAxs","../../composables/group.mjs":"hPbgr","../../composables/lazy.mjs":"lca0Z","../../composables/ssrBoot.mjs":"bVwDz","../../composables/transition.mjs":"dJyg1","../../directives/touch/index.mjs":"rxCNC","../../util/index.mjs":"ivUh8","./VWindow.mjs":"csAvt","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"6obMu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VChipGroup", ()=>(0, _vchipGroupMjs.VChipGroup));
var _vchipGroupMjs = require("./VChipGroup.mjs");

},{"./VChipGroup.mjs":"kd0mV","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"kwTC7":[function(require,module,exports) {
// Styles
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VCode", ()=>VCode);
var _vcodeCss = require("./VCode.css");
// Utilities
var _indexMjs = require("../../util/index.mjs");
const VCode = (0, _indexMjs.createSimpleFunctional)("v-code");

},{"./VCode.css":"antM5","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"antM5":[function() {},{}],"1FJOL":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VColorPicker", ()=>(0, _vcolorPickerMjs.VColorPicker));
var _vcolorPickerMjs = require("./VColorPicker.mjs");

},{"./VColorPicker.mjs":"89af6","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"89af6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVColorPickerProps", ()=>makeVColorPickerProps);
parcelHelpers.export(exports, "VColorPicker", ()=>VColorPicker);
var _vue = require("vue");
// Styles
var _vcolorPickerCss = require("./VColorPicker.css");
// Components
var _vcolorPickerCanvasMjs = require("./VColorPickerCanvas.mjs");
var _vcolorPickerEditMjs = require("./VColorPickerEdit.mjs");
var _vcolorPickerPreviewMjs = require("./VColorPickerPreview.mjs");
var _vcolorPickerSwatchesMjs = require("./VColorPickerSwatches.mjs");
var _vsheetMjs = require("../VSheet/VSheet.mjs"); // Composables
var _defaultsMjs = require("../../composables/defaults.mjs");
var _localeMjs = require("../../composables/locale.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs"); // Utilities
var _indexMjs = require("./util/index.mjs");
var _indexMjs1 = require("../../util/index.mjs"); // Types
const makeVColorPickerProps = (0, _indexMjs1.propsFactory)({
    canvasHeight: {
        type: [
            String,
            Number
        ],
        default: 150
    },
    disabled: Boolean,
    dotSize: {
        type: [
            Number,
            String
        ],
        default: 10
    },
    hideCanvas: Boolean,
    hideSliders: Boolean,
    hideInputs: Boolean,
    mode: {
        type: String,
        default: "rgba",
        validator: (v)=>Object.keys((0, _indexMjs.modes)).includes(v)
    },
    modes: {
        type: Array,
        default: ()=>Object.keys((0, _indexMjs.modes)),
        validator: (v)=>Array.isArray(v) && v.every((m)=>Object.keys((0, _indexMjs.modes)).includes(m))
    },
    showSwatches: Boolean,
    swatches: Array,
    swatchesMaxHeight: {
        type: [
            Number,
            String
        ],
        default: 150
    },
    modelValue: {
        type: [
            Object,
            String
        ]
    },
    ...(0, _indexMjs1.omit)((0, _vsheetMjs.makeVSheetProps)({
        width: 300
    }), [
        "height",
        "location",
        "minHeight",
        "maxHeight",
        "minWidth",
        "maxWidth"
    ])
}, "VColorPicker");
const VColorPicker = (0, _indexMjs1.defineComponent)({
    name: "VColorPicker",
    props: makeVColorPickerProps(),
    emits: {
        "update:modelValue": (color)=>true,
        "update:mode": (mode)=>true
    },
    setup (props) {
        const mode = (0, _proxiedModelMjs.useProxiedModel)(props, "mode");
        const hue = (0, _vue.ref)(null);
        const model = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue", undefined, (v)=>{
            if (v == null || v === "") return null;
            let c;
            try {
                c = (0, _indexMjs1.RGBtoHSV)((0, _indexMjs1.parseColor)(v));
            } catch (err) {
                (0, _indexMjs1.consoleWarn)(err);
                return null;
            }
            return c;
        }, (v)=>{
            if (!v) return null;
            return (0, _indexMjs.extractColor)(v, props.modelValue);
        });
        const currentColor = (0, _vue.computed)(()=>{
            return model.value ? {
                ...model.value,
                h: hue.value ?? model.value.h
            } : null;
        });
        const { rtlClasses } = (0, _localeMjs.useRtl)();
        let externalChange = true;
        (0, _vue.watch)(model, (v)=>{
            if (!externalChange) {
                // prevent hue shift from rgb conversion inaccuracy
                externalChange = true;
                return;
            }
            if (!v) return;
            hue.value = v.h;
        }, {
            immediate: true
        });
        const updateColor = (hsva)=>{
            externalChange = false;
            hue.value = hsva.h;
            model.value = hsva;
        };
        (0, _vue.onMounted)(()=>{
            if (!props.modes.includes(mode.value)) mode.value = props.modes[0];
        });
        (0, _defaultsMjs.provideDefaults)({
            VSlider: {
                color: undefined,
                trackColor: undefined,
                trackFillColor: undefined
            }
        });
        (0, _indexMjs1.useRender)(()=>{
            const sheetProps = (0, _vsheetMjs.VSheet).filterProps(props);
            return (0, _vue.createVNode)((0, _vsheetMjs.VSheet), (0, _vue.mergeProps)({
                "rounded": props.rounded,
                "elevation": props.elevation,
                "theme": props.theme,
                "class": [
                    "v-color-picker",
                    rtlClasses.value,
                    props.class
                ],
                "style": [
                    {
                        "--v-color-picker-color-hsv": (0, _indexMjs1.HSVtoCSS)({
                            ...currentColor.value ?? (0, _indexMjs.nullColor),
                            a: 1
                        })
                    },
                    props.style
                ]
            }, sheetProps, {
                "maxWidth": props.width
            }), {
                default: ()=>[
                        !props.hideCanvas && (0, _vue.createVNode)((0, _vcolorPickerCanvasMjs.VColorPickerCanvas), {
                            "key": "canvas",
                            "color": currentColor.value,
                            "onUpdate:color": updateColor,
                            "disabled": props.disabled,
                            "dotSize": props.dotSize,
                            "width": props.width,
                            "height": props.canvasHeight
                        }, null),
                        (!props.hideSliders || !props.hideInputs) && (0, _vue.createVNode)("div", {
                            "key": "controls",
                            "class": "v-color-picker__controls"
                        }, [
                            !props.hideSliders && (0, _vue.createVNode)((0, _vcolorPickerPreviewMjs.VColorPickerPreview), {
                                "key": "preview",
                                "color": currentColor.value,
                                "onUpdate:color": updateColor,
                                "hideAlpha": !mode.value.endsWith("a"),
                                "disabled": props.disabled
                            }, null),
                            !props.hideInputs && (0, _vue.createVNode)((0, _vcolorPickerEditMjs.VColorPickerEdit), {
                                "key": "edit",
                                "modes": props.modes,
                                "mode": mode.value,
                                "onUpdate:mode": (m)=>mode.value = m,
                                "color": currentColor.value,
                                "onUpdate:color": updateColor,
                                "disabled": props.disabled
                            }, null)
                        ]),
                        props.showSwatches && (0, _vue.createVNode)((0, _vcolorPickerSwatchesMjs.VColorPickerSwatches), {
                            "key": "swatches",
                            "color": currentColor.value,
                            "onUpdate:color": updateColor,
                            "maxHeight": props.swatchesMaxHeight,
                            "swatches": props.swatches,
                            "disabled": props.disabled
                        }, null)
                    ]
            });
        });
        return {};
    }
});

},{"vue":"gCTam","./VColorPicker.css":"jrWYv","./VColorPickerCanvas.mjs":"60LNn","./VColorPickerEdit.mjs":"5QfJe","./VColorPickerPreview.mjs":"aaS3h","./VColorPickerSwatches.mjs":"4kMGs","../VSheet/VSheet.mjs":"3SEh6","../../composables/defaults.mjs":"29Im0","../../composables/locale.mjs":"9rJP0","../../composables/proxiedModel.mjs":"huwLk","./util/index.mjs":"gqZlY","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"jrWYv":[function() {},{}],"60LNn":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVColorPickerCanvasProps", ()=>makeVColorPickerCanvasProps);
parcelHelpers.export(exports, "VColorPickerCanvas", ()=>VColorPickerCanvas);
var _vue = require("vue");
// Styles
var _vcolorPickerCanvasCss = require("./VColorPickerCanvas.css");
// Composables
var _componentMjs = require("../../composables/component.mjs");
var _resizeObserverMjs = require("../../composables/resizeObserver.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const makeVColorPickerCanvasProps = (0, _indexMjs.propsFactory)({
    color: {
        type: Object
    },
    disabled: Boolean,
    dotSize: {
        type: [
            Number,
            String
        ],
        default: 10
    },
    height: {
        type: [
            Number,
            String
        ],
        default: 150
    },
    width: {
        type: [
            Number,
            String
        ],
        default: 300
    },
    ...(0, _componentMjs.makeComponentProps)()
}, "VColorPickerCanvas");
const VColorPickerCanvas = (0, _indexMjs.defineComponent)({
    name: "VColorPickerCanvas",
    props: makeVColorPickerCanvasProps(),
    emits: {
        "update:color": (color)=>true,
        "update:position": (hue)=>true
    },
    setup (props, _ref) {
        let { emit } = _ref;
        const isInteracting = (0, _vue.shallowRef)(false);
        const canvasRef = (0, _vue.ref)();
        const canvasWidth = (0, _vue.shallowRef)(parseFloat(props.width));
        const canvasHeight = (0, _vue.shallowRef)(parseFloat(props.height));
        const _dotPosition = (0, _vue.ref)({
            x: 0,
            y: 0
        });
        const dotPosition = (0, _vue.computed)({
            get: ()=>_dotPosition.value,
            set (val) {
                if (!canvasRef.value) return;
                const { x, y } = val;
                _dotPosition.value = val;
                emit("update:color", {
                    h: props.color?.h ?? 0,
                    s: (0, _indexMjs.clamp)(x, 0, canvasWidth.value) / canvasWidth.value,
                    v: 1 - (0, _indexMjs.clamp)(y, 0, canvasHeight.value) / canvasHeight.value,
                    a: props.color?.a ?? 1
                });
            }
        });
        const dotStyles = (0, _vue.computed)(()=>{
            const { x, y } = dotPosition.value;
            const radius = parseInt(props.dotSize, 10) / 2;
            return {
                width: (0, _indexMjs.convertToUnit)(props.dotSize),
                height: (0, _indexMjs.convertToUnit)(props.dotSize),
                transform: `translate(${(0, _indexMjs.convertToUnit)(x - radius)}, ${(0, _indexMjs.convertToUnit)(y - radius)})`
            };
        });
        const { resizeRef } = (0, _resizeObserverMjs.useResizeObserver)((entries)=>{
            if (!resizeRef.el?.offsetParent) return;
            const { width, height } = entries[0].contentRect;
            canvasWidth.value = width;
            canvasHeight.value = height;
        });
        function updateDotPosition(x, y, rect) {
            const { left, top, width, height } = rect;
            dotPosition.value = {
                x: (0, _indexMjs.clamp)(x - left, 0, width),
                y: (0, _indexMjs.clamp)(y - top, 0, height)
            };
        }
        function handleMouseDown(e) {
            if (e.type === "mousedown") // Prevent text selection while dragging
            e.preventDefault();
            if (props.disabled) return;
            handleMouseMove(e);
            window.addEventListener("mousemove", handleMouseMove);
            window.addEventListener("mouseup", handleMouseUp);
            window.addEventListener("touchmove", handleMouseMove);
            window.addEventListener("touchend", handleMouseUp);
        }
        function handleMouseMove(e) {
            if (props.disabled || !canvasRef.value) return;
            isInteracting.value = true;
            const coords = (0, _indexMjs.getEventCoordinates)(e);
            updateDotPosition(coords.clientX, coords.clientY, canvasRef.value.getBoundingClientRect());
        }
        function handleMouseUp() {
            window.removeEventListener("mousemove", handleMouseMove);
            window.removeEventListener("mouseup", handleMouseUp);
            window.removeEventListener("touchmove", handleMouseMove);
            window.removeEventListener("touchend", handleMouseUp);
        }
        function updateCanvas() {
            if (!canvasRef.value) return;
            const canvas = canvasRef.value;
            const ctx = canvas.getContext("2d");
            if (!ctx) return;
            const saturationGradient = ctx.createLinearGradient(0, 0, canvas.width, 0);
            saturationGradient.addColorStop(0, "hsla(0, 0%, 100%, 1)"); // white
            saturationGradient.addColorStop(1, `hsla(${props.color?.h ?? 0}, 100%, 50%, 1)`);
            ctx.fillStyle = saturationGradient;
            ctx.fillRect(0, 0, canvas.width, canvas.height);
            const valueGradient = ctx.createLinearGradient(0, 0, 0, canvas.height);
            valueGradient.addColorStop(0, "hsla(0, 0%, 0%, 0)"); // transparent
            valueGradient.addColorStop(1, "hsla(0, 0%, 0%, 1)"); // black
            ctx.fillStyle = valueGradient;
            ctx.fillRect(0, 0, canvas.width, canvas.height);
        }
        (0, _vue.watch)(()=>props.color?.h, updateCanvas, {
            immediate: true
        });
        (0, _vue.watch)(()=>[
                canvasWidth.value,
                canvasHeight.value
            ], (newVal, oldVal)=>{
            updateCanvas();
            _dotPosition.value = {
                x: dotPosition.value.x * newVal[0] / oldVal[0],
                y: dotPosition.value.y * newVal[1] / oldVal[1]
            };
        }, {
            flush: "post"
        });
        (0, _vue.watch)(()=>props.color, ()=>{
            if (isInteracting.value) {
                isInteracting.value = false;
                return;
            }
            _dotPosition.value = props.color ? {
                x: props.color.s * canvasWidth.value,
                y: (1 - props.color.v) * canvasHeight.value
            } : {
                x: 0,
                y: 0
            };
        }, {
            deep: true,
            immediate: true
        });
        (0, _vue.onMounted)(()=>updateCanvas());
        (0, _indexMjs.useRender)(()=>(0, _vue.createVNode)("div", {
                "ref": resizeRef,
                "class": [
                    "v-color-picker-canvas",
                    props.class
                ],
                "style": props.style,
                "onMousedown": handleMouseDown,
                "onTouchstartPassive": handleMouseDown
            }, [
                (0, _vue.createVNode)("canvas", {
                    "ref": canvasRef,
                    "width": canvasWidth.value,
                    "height": canvasHeight.value
                }, null),
                props.color && (0, _vue.createVNode)("div", {
                    "class": [
                        "v-color-picker-canvas__dot",
                        {
                            "v-color-picker-canvas__dot--disabled": props.disabled
                        }
                    ],
                    "style": dotStyles.value
                }, null)
            ]));
        return {};
    }
});

},{"vue":"gCTam","./VColorPickerCanvas.css":"1Wisq","../../composables/component.mjs":"4YAxs","../../composables/resizeObserver.mjs":"hIk8t","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"1Wisq":[function() {},{}],"5QfJe":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVColorPickerEditProps", ()=>makeVColorPickerEditProps);
parcelHelpers.export(exports, "VColorPickerEdit", ()=>VColorPickerEdit);
var _vue = require("vue");
// Styles
var _vcolorPickerEditCss = require("./VColorPickerEdit.css");
// Components
var _indexMjs = require("../VBtn/index.mjs"); // Composables
var _componentMjs = require("../../composables/component.mjs"); // Utilities
var _indexMjs1 = require("./util/index.mjs");
var _indexMjs2 = require("../../util/index.mjs"); // Types
const VColorPickerInput = (_ref)=>{
    let { label, ...rest } = _ref;
    return (0, _vue.createVNode)("div", {
        "class": "v-color-picker-edit__input"
    }, [
        (0, _vue.createVNode)("input", rest, null),
        (0, _vue.createVNode)("span", null, [
            label
        ])
    ]);
};
const makeVColorPickerEditProps = (0, _indexMjs2.propsFactory)({
    color: Object,
    disabled: Boolean,
    mode: {
        type: String,
        default: "rgba",
        validator: (v)=>Object.keys((0, _indexMjs1.modes)).includes(v)
    },
    modes: {
        type: Array,
        default: ()=>Object.keys((0, _indexMjs1.modes)),
        validator: (v)=>Array.isArray(v) && v.every((m)=>Object.keys((0, _indexMjs1.modes)).includes(m))
    },
    ...(0, _componentMjs.makeComponentProps)()
}, "VColorPickerEdit");
const VColorPickerEdit = (0, _indexMjs2.defineComponent)({
    name: "VColorPickerEdit",
    props: makeVColorPickerEditProps(),
    emits: {
        "update:color": (color)=>true,
        "update:mode": (mode)=>true
    },
    setup (props, _ref2) {
        let { emit } = _ref2;
        const enabledModes = (0, _vue.computed)(()=>{
            return props.modes.map((key)=>({
                    ...(0, _indexMjs1.modes)[key],
                    name: key
                }));
        });
        const inputs = (0, _vue.computed)(()=>{
            const mode = enabledModes.value.find((m)=>m.name === props.mode);
            if (!mode) return [];
            const color = props.color ? mode.to(props.color) : null;
            return mode.inputs?.map((_ref3)=>{
                let { getValue, getColor, ...inputProps } = _ref3;
                return {
                    ...mode.inputProps,
                    ...inputProps,
                    disabled: props.disabled,
                    value: color && getValue(color),
                    onChange: (e)=>{
                        const target = e.target;
                        if (!target) return;
                        emit("update:color", mode.from(getColor(color ?? mode.to((0, _indexMjs1.nullColor)), target.value)));
                    }
                };
            });
        });
        (0, _indexMjs2.useRender)(()=>(0, _vue.createVNode)("div", {
                "class": [
                    "v-color-picker-edit",
                    props.class
                ],
                "style": props.style
            }, [
                inputs.value?.map((props)=>(0, _vue.createVNode)(VColorPickerInput, props, null)),
                enabledModes.value.length > 1 && (0, _vue.createVNode)((0, _indexMjs.VBtn), {
                    "icon": "$unfold",
                    "size": "x-small",
                    "variant": "plain",
                    "onClick": ()=>{
                        const mi = enabledModes.value.findIndex((m)=>m.name === props.mode);
                        emit("update:mode", enabledModes.value[(mi + 1) % enabledModes.value.length].name);
                    }
                }, null)
            ]));
        return {};
    }
});

},{"vue":"gCTam","./VColorPickerEdit.css":"if1Ex","../VBtn/index.mjs":"g9s2K","../../composables/component.mjs":"4YAxs","./util/index.mjs":"gqZlY","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"if1Ex":[function() {},{}],"gqZlY":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "extractColor", ()=>extractColor);
parcelHelpers.export(exports, "hasAlpha", ()=>hasAlpha);
parcelHelpers.export(exports, "nullColor", ()=>nullColor);
parcelHelpers.export(exports, "modes", ()=>modes);
var _colorUtilsMjs = require("../../../util/colorUtils.mjs");
var _helpersMjs = require("../../../util/helpers.mjs"); // Types
function stripAlpha(color, stripAlpha) {
    if (stripAlpha) {
        const { a, ...rest } = color;
        return rest;
    }
    return color;
}
function extractColor(color, input) {
    if (input == null || typeof input === "string") {
        const hex = (0, _colorUtilsMjs.HSVtoHex)(color);
        if (color.a === 1) return hex.slice(0, 7);
        else return hex;
    }
    if (typeof input === "object") {
        let converted;
        if ((0, _helpersMjs.has)(input, [
            "r",
            "g",
            "b"
        ])) converted = (0, _colorUtilsMjs.HSVtoRGB)(color);
        else if ((0, _helpersMjs.has)(input, [
            "h",
            "s",
            "l"
        ])) converted = (0, _colorUtilsMjs.HSVtoHSL)(color);
        else if ((0, _helpersMjs.has)(input, [
            "h",
            "s",
            "v"
        ])) converted = color;
        return stripAlpha(converted, !(0, _helpersMjs.has)(input, [
            "a"
        ]) && color.a === 1);
    }
    return color;
}
function hasAlpha(color) {
    if (!color) return false;
    if (typeof color === "string") return color.length > 7;
    if (typeof color === "object") return (0, _helpersMjs.has)(color, [
        "a"
    ]) || (0, _helpersMjs.has)(color, [
        "alpha"
    ]);
    return false;
}
const nullColor = {
    h: 0,
    s: 0,
    v: 0,
    a: 1
};
const rgba = {
    inputProps: {
        type: "number",
        min: 0
    },
    inputs: [
        {
            label: "R",
            max: 255,
            step: 1,
            getValue: (c)=>Math.round(c.r),
            getColor: (c, v)=>({
                    ...c,
                    r: Number(v)
                })
        },
        {
            label: "G",
            max: 255,
            step: 1,
            getValue: (c)=>Math.round(c.g),
            getColor: (c, v)=>({
                    ...c,
                    g: Number(v)
                })
        },
        {
            label: "B",
            max: 255,
            step: 1,
            getValue: (c)=>Math.round(c.b),
            getColor: (c, v)=>({
                    ...c,
                    b: Number(v)
                })
        },
        {
            label: "A",
            max: 1,
            step: 0.01,
            getValue: (_ref)=>{
                let { a } = _ref;
                return a != null ? Math.round(a * 100) / 100 : 1;
            },
            getColor: (c, v)=>({
                    ...c,
                    a: Number(v)
                })
        }
    ],
    to: (0, _colorUtilsMjs.HSVtoRGB),
    from: (0, _colorUtilsMjs.RGBtoHSV)
};
const rgb = {
    ...rgba,
    inputs: rgba.inputs?.slice(0, 3)
};
const hsla = {
    inputProps: {
        type: "number",
        min: 0
    },
    inputs: [
        {
            label: "H",
            max: 360,
            step: 1,
            getValue: (c)=>Math.round(c.h),
            getColor: (c, v)=>({
                    ...c,
                    h: Number(v)
                })
        },
        {
            label: "S",
            max: 1,
            step: 0.01,
            getValue: (c)=>Math.round(c.s * 100) / 100,
            getColor: (c, v)=>({
                    ...c,
                    s: Number(v)
                })
        },
        {
            label: "L",
            max: 1,
            step: 0.01,
            getValue: (c)=>Math.round(c.l * 100) / 100,
            getColor: (c, v)=>({
                    ...c,
                    l: Number(v)
                })
        },
        {
            label: "A",
            max: 1,
            step: 0.01,
            getValue: (_ref2)=>{
                let { a } = _ref2;
                return a != null ? Math.round(a * 100) / 100 : 1;
            },
            getColor: (c, v)=>({
                    ...c,
                    a: Number(v)
                })
        }
    ],
    to: (0, _colorUtilsMjs.HSVtoHSL),
    from: (0, _colorUtilsMjs.HSLtoHSV)
};
const hsl = {
    ...hsla,
    inputs: hsla.inputs.slice(0, 3)
};
const hexa = {
    inputProps: {
        type: "text"
    },
    inputs: [
        {
            label: "HEXA",
            getValue: (c)=>c,
            getColor: (c, v)=>v
        }
    ],
    to: (0, _colorUtilsMjs.HSVtoHex),
    from: (0, _colorUtilsMjs.HexToHSV)
};
const hex = {
    ...hexa,
    inputs: [
        {
            label: "HEX",
            getValue: (c)=>c.slice(0, 7),
            getColor: (c, v)=>v
        }
    ]
};
const modes = {
    rgb,
    rgba,
    hsl,
    hsla,
    hex,
    hexa
};

},{"../../../util/colorUtils.mjs":"4aEvK","../../../util/helpers.mjs":"lIICA","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"aaS3h":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVColorPickerPreviewProps", ()=>makeVColorPickerPreviewProps);
parcelHelpers.export(exports, "VColorPickerPreview", ()=>VColorPickerPreview);
var _vue = require("vue");
// Styles
var _vcolorPickerPreviewCss = require("./VColorPickerPreview.css");
// Components
var _indexMjs = require("../VBtn/index.mjs");
var _indexMjs1 = require("../VSlider/index.mjs"); // Composables
var _componentMjs = require("../../composables/component.mjs"); // Utilities
var _indexMjs2 = require("./util/index.mjs");
var _indexMjs3 = require("../../util/index.mjs"); // Types
const makeVColorPickerPreviewProps = (0, _indexMjs3.propsFactory)({
    color: {
        type: Object
    },
    disabled: Boolean,
    hideAlpha: Boolean,
    ...(0, _componentMjs.makeComponentProps)()
}, "VColorPickerPreview");
const VColorPickerPreview = (0, _indexMjs3.defineComponent)({
    name: "VColorPickerPreview",
    props: makeVColorPickerPreviewProps(),
    emits: {
        "update:color": (color)=>true
    },
    setup (props, _ref) {
        let { emit } = _ref;
        const abortController = new AbortController();
        (0, _vue.onUnmounted)(()=>abortController.abort());
        async function openEyeDropper() {
            if (!(0, _indexMjs3.SUPPORTS_EYE_DROPPER)) return;
            const eyeDropper = new window.EyeDropper();
            try {
                const result = await eyeDropper.open({
                    signal: abortController.signal
                });
                const colorHexValue = (0, _indexMjs3.HexToHSV)(result.sRGBHex);
                emit("update:color", {
                    ...props.color ?? (0, _indexMjs2.nullColor),
                    ...colorHexValue
                });
            } catch (e) {}
        }
        (0, _indexMjs3.useRender)(()=>(0, _vue.createVNode)("div", {
                "class": [
                    "v-color-picker-preview",
                    {
                        "v-color-picker-preview--hide-alpha": props.hideAlpha
                    },
                    props.class
                ],
                "style": props.style
            }, [
                (0, _indexMjs3.SUPPORTS_EYE_DROPPER) && (0, _vue.createVNode)("div", {
                    "class": "v-color-picker-preview__eye-dropper",
                    "key": "eyeDropper"
                }, [
                    (0, _vue.createVNode)((0, _indexMjs.VBtn), {
                        "onClick": openEyeDropper,
                        "icon": "$eyeDropper",
                        "variant": "plain",
                        "density": "comfortable"
                    }, null)
                ]),
                (0, _vue.createVNode)("div", {
                    "class": "v-color-picker-preview__dot"
                }, [
                    (0, _vue.createVNode)("div", {
                        "style": {
                            background: (0, _indexMjs3.HSVtoCSS)(props.color ?? (0, _indexMjs2.nullColor))
                        }
                    }, null)
                ]),
                (0, _vue.createVNode)("div", {
                    "class": "v-color-picker-preview__sliders"
                }, [
                    (0, _vue.createVNode)((0, _indexMjs1.VSlider), {
                        "class": "v-color-picker-preview__track v-color-picker-preview__hue",
                        "modelValue": props.color?.h,
                        "onUpdate:modelValue": (h)=>emit("update:color", {
                                ...props.color ?? (0, _indexMjs2.nullColor),
                                h
                            }),
                        "step": 0,
                        "min": 0,
                        "max": 360,
                        "disabled": props.disabled,
                        "thumbSize": 14,
                        "trackSize": 8,
                        "trackFillColor": "white",
                        "hideDetails": true
                    }, null),
                    !props.hideAlpha && (0, _vue.createVNode)((0, _indexMjs1.VSlider), {
                        "class": "v-color-picker-preview__track v-color-picker-preview__alpha",
                        "modelValue": props.color?.a ?? 1,
                        "onUpdate:modelValue": (a)=>emit("update:color", {
                                ...props.color ?? (0, _indexMjs2.nullColor),
                                a
                            }),
                        "step": 1 / 256,
                        "min": 0,
                        "max": 1,
                        "disabled": props.disabled,
                        "thumbSize": 14,
                        "trackSize": 8,
                        "trackFillColor": "white",
                        "hideDetails": true
                    }, null)
                ])
            ]));
        return {};
    }
});

},{"vue":"gCTam","./VColorPickerPreview.css":"3xD37","../VBtn/index.mjs":"g9s2K","../VSlider/index.mjs":"d2sTc","../../composables/component.mjs":"4YAxs","./util/index.mjs":"gqZlY","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"3xD37":[function() {},{}],"d2sTc":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VSlider", ()=>(0, _vsliderMjs.VSlider));
var _vsliderMjs = require("./VSlider.mjs");

},{"./VSlider.mjs":"lStRz","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"lStRz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVSliderProps", ()=>makeVSliderProps);
parcelHelpers.export(exports, "VSlider", ()=>VSlider);
var _vue = require("vue");
// Styles
var _vsliderCss = require("./VSlider.css");
// Components
var _vsliderThumbMjs = require("./VSliderThumb.mjs");
var _vsliderTrackMjs = require("./VSliderTrack.mjs");
var _vinputMjs = require("../VInput/VInput.mjs");
var _indexMjs = require("../VLabel/index.mjs"); // Composables
var _sliderMjs = require("./slider.mjs");
var _focusMjs = require("../../composables/focus.mjs");
var _localeMjs = require("../../composables/locale.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs"); // Utilities
var _indexMjs1 = require("../../util/index.mjs"); // Types
const makeVSliderProps = (0, _indexMjs1.propsFactory)({
    ...(0, _focusMjs.makeFocusProps)(),
    ...(0, _sliderMjs.makeSliderProps)(),
    ...(0, _vinputMjs.makeVInputProps)(),
    modelValue: {
        type: [
            Number,
            String
        ],
        default: 0
    }
}, "VSlider");
const VSlider = (0, _indexMjs1.genericComponent)()({
    name: "VSlider",
    props: makeVSliderProps(),
    emits: {
        "update:focused": (value)=>true,
        "update:modelValue": (v)=>true,
        start: (value)=>true,
        end: (value)=>true
    },
    setup (props, _ref) {
        let { slots, emit } = _ref;
        const thumbContainerRef = (0, _vue.ref)();
        const { rtlClasses } = (0, _localeMjs.useRtl)();
        const steps = (0, _sliderMjs.useSteps)(props);
        const model = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue", undefined, (value)=>{
            return steps.roundValue(value == null ? steps.min.value : value);
        });
        const { min, max, mousePressed, roundValue, onSliderMousedown, onSliderTouchstart, trackContainerRef, position, hasLabels, readonly } = (0, _sliderMjs.useSlider)({
            props,
            steps,
            onSliderStart: ()=>{
                emit("start", model.value);
            },
            onSliderEnd: (_ref2)=>{
                let { value } = _ref2;
                const roundedValue = roundValue(value);
                model.value = roundedValue;
                emit("end", roundedValue);
            },
            onSliderMove: (_ref3)=>{
                let { value } = _ref3;
                return model.value = roundValue(value);
            },
            getActiveThumb: ()=>thumbContainerRef.value?.$el
        });
        const { isFocused, focus, blur } = (0, _focusMjs.useFocus)(props);
        const trackStop = (0, _vue.computed)(()=>position(model.value));
        (0, _indexMjs1.useRender)(()=>{
            const inputProps = (0, _vinputMjs.VInput).filterProps(props);
            const hasPrepend = !!(props.label || slots.label || slots.prepend);
            return (0, _vue.createVNode)((0, _vinputMjs.VInput), (0, _vue.mergeProps)({
                "class": [
                    "v-slider",
                    {
                        "v-slider--has-labels": !!slots["tick-label"] || hasLabels.value,
                        "v-slider--focused": isFocused.value,
                        "v-slider--pressed": mousePressed.value,
                        "v-slider--disabled": props.disabled
                    },
                    rtlClasses.value,
                    props.class
                ],
                "style": props.style
            }, inputProps, {
                "focused": isFocused.value
            }), {
                ...slots,
                prepend: hasPrepend ? (slotProps)=>(0, _vue.createVNode)((0, _vue.Fragment), null, [
                        slots.label?.(slotProps) ?? (props.label ? (0, _vue.createVNode)((0, _indexMjs.VLabel), {
                            "id": slotProps.id.value,
                            "class": "v-slider__label",
                            "text": props.label
                        }, null) : undefined),
                        slots.prepend?.(slotProps)
                    ]) : undefined,
                default: (_ref4)=>{
                    let { id, messagesId } = _ref4;
                    return (0, _vue.createVNode)("div", {
                        "class": "v-slider__container",
                        "onMousedown": !readonly.value ? onSliderMousedown : undefined,
                        "onTouchstartPassive": !readonly.value ? onSliderTouchstart : undefined
                    }, [
                        (0, _vue.createVNode)("input", {
                            "id": id.value,
                            "name": props.name || id.value,
                            "disabled": !!props.disabled,
                            "readonly": !!props.readonly,
                            "tabindex": "-1",
                            "value": model.value
                        }, null),
                        (0, _vue.createVNode)((0, _vsliderTrackMjs.VSliderTrack), {
                            "ref": trackContainerRef,
                            "start": 0,
                            "stop": trackStop.value
                        }, {
                            "tick-label": slots["tick-label"]
                        }),
                        (0, _vue.createVNode)((0, _vsliderThumbMjs.VSliderThumb), {
                            "ref": thumbContainerRef,
                            "aria-describedby": messagesId.value,
                            "focused": isFocused.value,
                            "min": min.value,
                            "max": max.value,
                            "modelValue": model.value,
                            "onUpdate:modelValue": (v)=>model.value = v,
                            "position": trackStop.value,
                            "elevation": props.elevation,
                            "onFocus": focus,
                            "onBlur": blur,
                            "ripple": props.ripple,
                            "name": props.name
                        }, {
                            "thumb-label": slots["thumb-label"]
                        })
                    ]);
                }
            });
        });
        return {};
    }
});

},{"vue":"gCTam","./VSlider.css":"dspsL","./VSliderThumb.mjs":"5jv9S","./VSliderTrack.mjs":"jNOO0","../VInput/VInput.mjs":"fIDss","../VLabel/index.mjs":"2xWF9","./slider.mjs":"5xkNu","../../composables/focus.mjs":"ez9on","../../composables/locale.mjs":"9rJP0","../../composables/proxiedModel.mjs":"huwLk","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"dspsL":[function() {},{}],"5jv9S":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVSliderThumbProps", ()=>makeVSliderThumbProps);
parcelHelpers.export(exports, "VSliderThumb", ()=>VSliderThumb);
var _vue = require("vue");
// Styles
var _vsliderThumbCss = require("./VSliderThumb.css");
// Components
var _sliderMjs = require("./slider.mjs");
var _indexMjs = require("../transitions/index.mjs"); // Composables
var _colorMjs = require("../../composables/color.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _elevationMjs = require("../../composables/elevation.mjs");
var _localeMjs = require("../../composables/locale.mjs"); // Directives
var _indexMjs1 = require("../../directives/ripple/index.mjs"); // Utilities
var _indexMjsDefault = parcelHelpers.interopDefault(_indexMjs1);
var _indexMjs2 = require("../../util/index.mjs"); // Types
const makeVSliderThumbProps = (0, _indexMjs2.propsFactory)({
    focused: Boolean,
    max: {
        type: Number,
        required: true
    },
    min: {
        type: Number,
        required: true
    },
    modelValue: {
        type: Number,
        required: true
    },
    position: {
        type: Number,
        required: true
    },
    ripple: {
        type: [
            Boolean,
            Object
        ],
        default: true
    },
    name: String,
    ...(0, _componentMjs.makeComponentProps)()
}, "VSliderThumb");
const VSliderThumb = (0, _indexMjs2.genericComponent)()({
    name: "VSliderThumb",
    directives: {
        Ripple: (0, _indexMjsDefault.default)
    },
    props: makeVSliderThumbProps(),
    emits: {
        "update:modelValue": (v)=>true
    },
    setup (props, _ref) {
        let { slots, emit } = _ref;
        const slider = (0, _vue.inject)((0, _sliderMjs.VSliderSymbol));
        const { isRtl, rtlClasses } = (0, _localeMjs.useRtl)();
        if (!slider) throw new Error("[Vuetify] v-slider-thumb must be used inside v-slider or v-range-slider");
        const { thumbColor, step, disabled, thumbSize, thumbLabel, direction, isReversed, vertical, readonly, elevation, mousePressed, decimals, indexFromEnd } = slider;
        const elevationProps = (0, _vue.computed)(()=>!disabled.value ? elevation.value : undefined);
        const { elevationClasses } = (0, _elevationMjs.useElevation)(elevationProps);
        const { textColorClasses, textColorStyles } = (0, _colorMjs.useTextColor)(thumbColor);
        const { pageup, pagedown, end, home, left, right, down, up } = (0, _indexMjs2.keyValues);
        const relevantKeys = [
            pageup,
            pagedown,
            end,
            home,
            left,
            right,
            down,
            up
        ];
        const multipliers = (0, _vue.computed)(()=>{
            if (step.value) return [
                1,
                2,
                3
            ];
            else return [
                1,
                5,
                10
            ];
        });
        function parseKeydown(e, value) {
            if (!relevantKeys.includes(e.key)) return;
            e.preventDefault();
            const _step = step.value || 0.1;
            const steps = (props.max - props.min) / _step;
            if ([
                left,
                right,
                down,
                up
            ].includes(e.key)) {
                const increase = vertical.value ? [
                    isRtl.value ? left : right,
                    isReversed.value ? down : up
                ] : indexFromEnd.value !== isRtl.value ? [
                    left,
                    up
                ] : [
                    right,
                    up
                ];
                const direction = increase.includes(e.key) ? 1 : -1;
                const multiplier = e.shiftKey ? 2 : e.ctrlKey ? 1 : 0;
                value = value + direction * _step * multipliers.value[multiplier];
            } else if (e.key === home) value = props.min;
            else if (e.key === end) value = props.max;
            else {
                const direction = e.key === pagedown ? 1 : -1;
                value = value - direction * _step * (steps > 100 ? steps / 10 : 10);
            }
            return Math.max(props.min, Math.min(props.max, value));
        }
        function onKeydown(e) {
            const newValue = parseKeydown(e, props.modelValue);
            newValue != null && emit("update:modelValue", newValue);
        }
        (0, _indexMjs2.useRender)(()=>{
            const positionPercentage = (0, _indexMjs2.convertToUnit)(indexFromEnd.value ? 100 - props.position : props.position, "%");
            return (0, _vue.createVNode)("div", {
                "class": [
                    "v-slider-thumb",
                    {
                        "v-slider-thumb--focused": props.focused,
                        "v-slider-thumb--pressed": props.focused && mousePressed.value
                    },
                    props.class,
                    rtlClasses.value
                ],
                "style": [
                    {
                        "--v-slider-thumb-position": positionPercentage,
                        "--v-slider-thumb-size": (0, _indexMjs2.convertToUnit)(thumbSize.value)
                    },
                    props.style
                ],
                "role": "slider",
                "tabindex": disabled.value ? -1 : 0,
                "aria-label": props.name,
                "aria-valuemin": props.min,
                "aria-valuemax": props.max,
                "aria-valuenow": props.modelValue,
                "aria-readonly": !!readonly.value,
                "aria-orientation": direction.value,
                "onKeydown": !readonly.value ? onKeydown : undefined
            }, [
                (0, _vue.createVNode)("div", {
                    "class": [
                        "v-slider-thumb__surface",
                        textColorClasses.value,
                        elevationClasses.value
                    ],
                    "style": {
                        ...textColorStyles.value
                    }
                }, null),
                (0, _vue.withDirectives)((0, _vue.createVNode)("div", {
                    "class": [
                        "v-slider-thumb__ripple",
                        textColorClasses.value
                    ],
                    "style": textColorStyles.value
                }, null), [
                    [
                        (0, _vue.resolveDirective)("ripple"),
                        props.ripple,
                        null,
                        {
                            circle: true,
                            center: true
                        }
                    ]
                ]),
                (0, _vue.createVNode)((0, _indexMjs.VScaleTransition), {
                    "origin": "bottom center"
                }, {
                    default: ()=>[
                            (0, _vue.withDirectives)((0, _vue.createVNode)("div", {
                                "class": "v-slider-thumb__label-container"
                            }, [
                                (0, _vue.createVNode)("div", {
                                    "class": [
                                        "v-slider-thumb__label"
                                    ]
                                }, [
                                    (0, _vue.createVNode)("div", null, [
                                        slots["thumb-label"]?.({
                                            modelValue: props.modelValue
                                        }) ?? props.modelValue.toFixed(step.value ? decimals.value : 1)
                                    ])
                                ])
                            ]), [
                                [
                                    (0, _vue.vShow),
                                    thumbLabel.value && props.focused || thumbLabel.value === "always"
                                ]
                            ])
                        ]
                })
            ]);
        });
        return {};
    }
});

},{"vue":"gCTam","./VSliderThumb.css":"cLK4g","./slider.mjs":"5xkNu","../transitions/index.mjs":"3ybHr","../../composables/color.mjs":"6TeQR","../../composables/component.mjs":"4YAxs","../../composables/elevation.mjs":"aNIiI","../../composables/locale.mjs":"9rJP0","../../directives/ripple/index.mjs":"41ncU","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"cLK4g":[function() {},{}],"5xkNu":[function(require,module,exports) {
/* eslint-disable max-statements */ // Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VSliderSymbol", ()=>VSliderSymbol);
parcelHelpers.export(exports, "getOffset", ()=>getOffset);
parcelHelpers.export(exports, "makeSliderProps", ()=>makeSliderProps);
parcelHelpers.export(exports, "useSteps", ()=>useSteps);
parcelHelpers.export(exports, "useSlider", ()=>useSlider);
var _elevationMjs = require("../../composables/elevation.mjs");
var _localeMjs = require("../../composables/locale.mjs");
var _roundedMjs = require("../../composables/rounded.mjs"); // Utilities
var _vue = require("vue");
var _indexMjs = require("../../util/index.mjs"); // Types
const VSliderSymbol = Symbol.for("vuetify:v-slider");
function getOffset(e, el, direction) {
    const vertical = direction === "vertical";
    const rect = el.getBoundingClientRect();
    const touch = "touches" in e ? e.touches[0] : e;
    return vertical ? touch.clientY - (rect.top + rect.height / 2) : touch.clientX - (rect.left + rect.width / 2);
}
function getPosition(e, position) {
    if ("touches" in e && e.touches.length) return e.touches[0][position];
    else if ("changedTouches" in e && e.changedTouches.length) return e.changedTouches[0][position];
    else return e[position];
}
const makeSliderProps = (0, _indexMjs.propsFactory)({
    disabled: {
        type: Boolean,
        default: null
    },
    error: Boolean,
    readonly: {
        type: Boolean,
        default: null
    },
    max: {
        type: [
            Number,
            String
        ],
        default: 100
    },
    min: {
        type: [
            Number,
            String
        ],
        default: 0
    },
    step: {
        type: [
            Number,
            String
        ],
        default: 0
    },
    thumbColor: String,
    thumbLabel: {
        type: [
            Boolean,
            String
        ],
        default: undefined,
        validator: (v)=>typeof v === "boolean" || v === "always"
    },
    thumbSize: {
        type: [
            Number,
            String
        ],
        default: 20
    },
    showTicks: {
        type: [
            Boolean,
            String
        ],
        default: false,
        validator: (v)=>typeof v === "boolean" || v === "always"
    },
    ticks: {
        type: [
            Array,
            Object
        ]
    },
    tickSize: {
        type: [
            Number,
            String
        ],
        default: 2
    },
    color: String,
    trackColor: String,
    trackFillColor: String,
    trackSize: {
        type: [
            Number,
            String
        ],
        default: 4
    },
    direction: {
        type: String,
        default: "horizontal",
        validator: (v)=>[
                "vertical",
                "horizontal"
            ].includes(v)
    },
    reverse: Boolean,
    ...(0, _roundedMjs.makeRoundedProps)(),
    ...(0, _elevationMjs.makeElevationProps)({
        elevation: 2
    }),
    ripple: {
        type: Boolean,
        default: true
    }
}, "Slider");
const useSteps = (props)=>{
    const min = (0, _vue.computed)(()=>parseFloat(props.min));
    const max = (0, _vue.computed)(()=>parseFloat(props.max));
    const step = (0, _vue.computed)(()=>+props.step > 0 ? parseFloat(props.step) : 0);
    const decimals = (0, _vue.computed)(()=>Math.max((0, _indexMjs.getDecimals)(step.value), (0, _indexMjs.getDecimals)(min.value)));
    function roundValue(value) {
        value = parseFloat(value);
        if (step.value <= 0) return value;
        const clamped = (0, _indexMjs.clamp)(value, min.value, max.value);
        const offset = min.value % step.value;
        const newValue = Math.round((clamped - offset) / step.value) * step.value + offset;
        return parseFloat(Math.min(newValue, max.value).toFixed(decimals.value));
    }
    return {
        min,
        max,
        step,
        decimals,
        roundValue
    };
};
const useSlider = (_ref)=>{
    let { props, steps, onSliderStart, onSliderMove, onSliderEnd, getActiveThumb } = _ref;
    const { isRtl } = (0, _localeMjs.useRtl)();
    const isReversed = (0, _vue.toRef)(props, "reverse");
    const vertical = (0, _vue.computed)(()=>props.direction === "vertical");
    const indexFromEnd = (0, _vue.computed)(()=>vertical.value !== isReversed.value);
    const { min, max, step, decimals, roundValue } = steps;
    const thumbSize = (0, _vue.computed)(()=>parseInt(props.thumbSize, 10));
    const tickSize = (0, _vue.computed)(()=>parseInt(props.tickSize, 10));
    const trackSize = (0, _vue.computed)(()=>parseInt(props.trackSize, 10));
    const numTicks = (0, _vue.computed)(()=>(max.value - min.value) / step.value);
    const disabled = (0, _vue.toRef)(props, "disabled");
    const thumbColor = (0, _vue.computed)(()=>props.error || props.disabled ? undefined : props.thumbColor ?? props.color);
    const trackColor = (0, _vue.computed)(()=>props.error || props.disabled ? undefined : props.trackColor ?? props.color);
    const trackFillColor = (0, _vue.computed)(()=>props.error || props.disabled ? undefined : props.trackFillColor ?? props.color);
    const mousePressed = (0, _vue.shallowRef)(false);
    const startOffset = (0, _vue.shallowRef)(0);
    const trackContainerRef = (0, _vue.ref)();
    const activeThumbRef = (0, _vue.ref)();
    function parseMouseMove(e) {
        const vertical = props.direction === "vertical";
        const start = vertical ? "top" : "left";
        const length = vertical ? "height" : "width";
        const position = vertical ? "clientY" : "clientX";
        const { [start]: trackStart, [length]: trackLength } = trackContainerRef.value?.$el.getBoundingClientRect();
        const clickOffset = getPosition(e, position);
        // It is possible for left to be NaN, force to number
        let clickPos = Math.min(Math.max((clickOffset - trackStart - startOffset.value) / trackLength, 0), 1) || 0;
        if (vertical ? indexFromEnd.value : indexFromEnd.value !== isRtl.value) clickPos = 1 - clickPos;
        return roundValue(min.value + clickPos * (max.value - min.value));
    }
    const handleStop = (e)=>{
        onSliderEnd({
            value: parseMouseMove(e)
        });
        mousePressed.value = false;
        startOffset.value = 0;
    };
    const handleStart = (e)=>{
        activeThumbRef.value = getActiveThumb(e);
        if (!activeThumbRef.value) return;
        activeThumbRef.value.focus();
        mousePressed.value = true;
        if (activeThumbRef.value.contains(e.target)) startOffset.value = getOffset(e, activeThumbRef.value, props.direction);
        else {
            startOffset.value = 0;
            onSliderMove({
                value: parseMouseMove(e)
            });
        }
        onSliderStart({
            value: parseMouseMove(e)
        });
    };
    const moveListenerOptions = {
        passive: true,
        capture: true
    };
    function onMouseMove(e) {
        onSliderMove({
            value: parseMouseMove(e)
        });
    }
    function onSliderMouseUp(e) {
        e.stopPropagation();
        e.preventDefault();
        handleStop(e);
        window.removeEventListener("mousemove", onMouseMove, moveListenerOptions);
        window.removeEventListener("mouseup", onSliderMouseUp);
    }
    function onSliderTouchend(e) {
        handleStop(e);
        window.removeEventListener("touchmove", onMouseMove, moveListenerOptions);
        e.target?.removeEventListener("touchend", onSliderTouchend);
    }
    function onSliderTouchstart(e) {
        handleStart(e);
        window.addEventListener("touchmove", onMouseMove, moveListenerOptions);
        e.target?.addEventListener("touchend", onSliderTouchend, {
            passive: false
        });
    }
    function onSliderMousedown(e) {
        e.preventDefault();
        handleStart(e);
        window.addEventListener("mousemove", onMouseMove, moveListenerOptions);
        window.addEventListener("mouseup", onSliderMouseUp, {
            passive: false
        });
    }
    const position = (val)=>{
        const percentage = (val - min.value) / (max.value - min.value) * 100;
        return (0, _indexMjs.clamp)(isNaN(percentage) ? 0 : percentage, 0, 100);
    };
    const showTicks = (0, _vue.toRef)(props, "showTicks");
    const parsedTicks = (0, _vue.computed)(()=>{
        if (!showTicks.value) return [];
        if (!props.ticks) return numTicks.value !== Infinity ? (0, _indexMjs.createRange)(numTicks.value + 1).map((t)=>{
            const value = min.value + t * step.value;
            return {
                value,
                position: position(value)
            };
        }) : [];
        if (Array.isArray(props.ticks)) return props.ticks.map((t)=>({
                value: t,
                position: position(t),
                label: t.toString()
            }));
        return Object.keys(props.ticks).map((key)=>({
                value: parseFloat(key),
                position: position(parseFloat(key)),
                label: props.ticks[key]
            }));
    });
    const hasLabels = (0, _vue.computed)(()=>parsedTicks.value.some((_ref2)=>{
            let { label } = _ref2;
            return !!label;
        }));
    const data = {
        activeThumbRef,
        color: (0, _vue.toRef)(props, "color"),
        decimals,
        disabled,
        direction: (0, _vue.toRef)(props, "direction"),
        elevation: (0, _vue.toRef)(props, "elevation"),
        hasLabels,
        isReversed,
        indexFromEnd,
        min,
        max,
        mousePressed,
        numTicks,
        onSliderMousedown,
        onSliderTouchstart,
        parsedTicks,
        parseMouseMove,
        position,
        readonly: (0, _vue.toRef)(props, "readonly"),
        rounded: (0, _vue.toRef)(props, "rounded"),
        roundValue,
        showTicks,
        startOffset,
        step,
        thumbSize,
        thumbColor,
        thumbLabel: (0, _vue.toRef)(props, "thumbLabel"),
        ticks: (0, _vue.toRef)(props, "ticks"),
        tickSize,
        trackColor,
        trackContainerRef,
        trackFillColor,
        trackSize,
        vertical
    };
    (0, _vue.provide)(VSliderSymbol, data);
    return data;
};

},{"../../composables/elevation.mjs":"aNIiI","../../composables/locale.mjs":"9rJP0","../../composables/rounded.mjs":"1RfhA","vue":"gCTam","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"jNOO0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVSliderTrackProps", ()=>makeVSliderTrackProps);
parcelHelpers.export(exports, "VSliderTrack", ()=>VSliderTrack);
var _vue = require("vue");
// Styles
var _vsliderTrackCss = require("./VSliderTrack.css");
// Components
var _sliderMjs = require("./slider.mjs"); // Composables
var _colorMjs = require("../../composables/color.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _roundedMjs = require("../../composables/rounded.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const makeVSliderTrackProps = (0, _indexMjs.propsFactory)({
    start: {
        type: Number,
        required: true
    },
    stop: {
        type: Number,
        required: true
    },
    ...(0, _componentMjs.makeComponentProps)()
}, "VSliderTrack");
const VSliderTrack = (0, _indexMjs.genericComponent)()({
    name: "VSliderTrack",
    props: makeVSliderTrackProps(),
    emits: {},
    setup (props, _ref) {
        let { slots } = _ref;
        const slider = (0, _vue.inject)((0, _sliderMjs.VSliderSymbol));
        if (!slider) throw new Error("[Vuetify] v-slider-track must be inside v-slider or v-range-slider");
        const { color, parsedTicks, rounded, showTicks, tickSize, trackColor, trackFillColor, trackSize, vertical, min, max, indexFromEnd } = slider;
        const { roundedClasses } = (0, _roundedMjs.useRounded)(rounded);
        const { backgroundColorClasses: trackFillColorClasses, backgroundColorStyles: trackFillColorStyles } = (0, _colorMjs.useBackgroundColor)(trackFillColor);
        const { backgroundColorClasses: trackColorClasses, backgroundColorStyles: trackColorStyles } = (0, _colorMjs.useBackgroundColor)(trackColor);
        const startDir = (0, _vue.computed)(()=>`inset-${vertical.value ? "block" : "inline"}-${indexFromEnd.value ? "end" : "start"}`);
        const endDir = (0, _vue.computed)(()=>vertical.value ? "height" : "width");
        const backgroundStyles = (0, _vue.computed)(()=>{
            return {
                [startDir.value]: "0%",
                [endDir.value]: "100%"
            };
        });
        const trackFillWidth = (0, _vue.computed)(()=>props.stop - props.start);
        const trackFillStyles = (0, _vue.computed)(()=>{
            return {
                [startDir.value]: (0, _indexMjs.convertToUnit)(props.start, "%"),
                [endDir.value]: (0, _indexMjs.convertToUnit)(trackFillWidth.value, "%")
            };
        });
        const computedTicks = (0, _vue.computed)(()=>{
            if (!showTicks.value) return [];
            const ticks = vertical.value ? parsedTicks.value.slice().reverse() : parsedTicks.value;
            return ticks.map((tick, index)=>{
                const directionValue = tick.value !== min.value && tick.value !== max.value ? (0, _indexMjs.convertToUnit)(tick.position, "%") : undefined;
                return (0, _vue.createVNode)("div", {
                    "key": tick.value,
                    "class": [
                        "v-slider-track__tick",
                        {
                            "v-slider-track__tick--filled": tick.position >= props.start && tick.position <= props.stop,
                            "v-slider-track__tick--first": tick.value === min.value,
                            "v-slider-track__tick--last": tick.value === max.value
                        }
                    ],
                    "style": {
                        [startDir.value]: directionValue
                    }
                }, [
                    (tick.label || slots["tick-label"]) && (0, _vue.createVNode)("div", {
                        "class": "v-slider-track__tick-label"
                    }, [
                        slots["tick-label"]?.({
                            tick,
                            index
                        }) ?? tick.label
                    ])
                ]);
            });
        });
        (0, _indexMjs.useRender)(()=>{
            return (0, _vue.createVNode)("div", {
                "class": [
                    "v-slider-track",
                    roundedClasses.value,
                    props.class
                ],
                "style": [
                    {
                        "--v-slider-track-size": (0, _indexMjs.convertToUnit)(trackSize.value),
                        "--v-slider-tick-size": (0, _indexMjs.convertToUnit)(tickSize.value)
                    },
                    props.style
                ]
            }, [
                (0, _vue.createVNode)("div", {
                    "class": [
                        "v-slider-track__background",
                        trackColorClasses.value,
                        {
                            "v-slider-track__background--opacity": !!color.value || !trackFillColor.value
                        }
                    ],
                    "style": {
                        ...backgroundStyles.value,
                        ...trackColorStyles.value
                    }
                }, null),
                (0, _vue.createVNode)("div", {
                    "class": [
                        "v-slider-track__fill",
                        trackFillColorClasses.value
                    ],
                    "style": {
                        ...trackFillStyles.value,
                        ...trackFillColorStyles.value
                    }
                }, null),
                showTicks.value && (0, _vue.createVNode)("div", {
                    "class": [
                        "v-slider-track__ticks",
                        {
                            "v-slider-track__ticks--always-show": showTicks.value === "always"
                        }
                    ]
                }, [
                    computedTicks.value
                ])
            ]);
        });
        return {};
    }
});

},{"vue":"gCTam","./VSliderTrack.css":"ebWFX","./slider.mjs":"5xkNu","../../composables/color.mjs":"6TeQR","../../composables/component.mjs":"4YAxs","../../composables/rounded.mjs":"1RfhA","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"ebWFX":[function() {},{}],"4kMGs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVColorPickerSwatchesProps", ()=>makeVColorPickerSwatchesProps);
parcelHelpers.export(exports, "VColorPickerSwatches", ()=>VColorPickerSwatches);
var _vue = require("vue");
// Styles
var _vcolorPickerSwatchesCss = require("./VColorPickerSwatches.css");
// Components
var _indexMjs = require("../VIcon/index.mjs"); // Composables
var _componentMjs = require("../../composables/component.mjs"); // Utilities
var _indexMjs1 = require("../../util/index.mjs");
var _colorsMjs = require("../../util/colors.mjs"); // Types
var _colorsMjsDefault = parcelHelpers.interopDefault(_colorsMjs);
const makeVColorPickerSwatchesProps = (0, _indexMjs1.propsFactory)({
    swatches: {
        type: Array,
        default: ()=>parseDefaultColors((0, _colorsMjsDefault.default))
    },
    disabled: Boolean,
    color: Object,
    maxHeight: [
        Number,
        String
    ],
    ...(0, _componentMjs.makeComponentProps)()
}, "VColorPickerSwatches");
function parseDefaultColors(colors) {
    return Object.keys(colors).map((key)=>{
        const color = colors[key];
        return color.base ? [
            color.base,
            color.darken4,
            color.darken3,
            color.darken2,
            color.darken1,
            color.lighten1,
            color.lighten2,
            color.lighten3,
            color.lighten4,
            color.lighten5
        ] : [
            color.black,
            color.white,
            color.transparent
        ];
    });
}
const VColorPickerSwatches = (0, _indexMjs1.defineComponent)({
    name: "VColorPickerSwatches",
    props: makeVColorPickerSwatchesProps(),
    emits: {
        "update:color": (color)=>true
    },
    setup (props, _ref) {
        let { emit } = _ref;
        (0, _indexMjs1.useRender)(()=>(0, _vue.createVNode)("div", {
                "class": [
                    "v-color-picker-swatches",
                    props.class
                ],
                "style": [
                    {
                        maxHeight: (0, _indexMjs1.convertToUnit)(props.maxHeight)
                    },
                    props.style
                ]
            }, [
                (0, _vue.createVNode)("div", null, [
                    props.swatches.map((swatch)=>(0, _vue.createVNode)("div", {
                            "class": "v-color-picker-swatches__swatch"
                        }, [
                            swatch.map((color)=>{
                                const rgba = (0, _indexMjs1.parseColor)(color);
                                const hsva = (0, _indexMjs1.RGBtoHSV)(rgba);
                                const background = (0, _indexMjs1.RGBtoCSS)(rgba);
                                return (0, _vue.createVNode)("div", {
                                    "class": "v-color-picker-swatches__color",
                                    "onClick": ()=>hsva && emit("update:color", hsva)
                                }, [
                                    (0, _vue.createVNode)("div", {
                                        "style": {
                                            background
                                        }
                                    }, [
                                        props.color && (0, _indexMjs1.deepEqual)(props.color, hsva) ? (0, _vue.createVNode)((0, _indexMjs.VIcon), {
                                            "size": "x-small",
                                            "icon": "$success",
                                            "color": (0, _indexMjs1.getContrast)(color, "#FFFFFF") > 2 ? "white" : "black"
                                        }, null) : undefined
                                    ])
                                ]);
                            })
                        ]))
                ])
            ]));
        return {};
    }
});

},{"vue":"gCTam","./VColorPickerSwatches.css":"gjWPh","../VIcon/index.mjs":"5Yjjr","../../composables/component.mjs":"4YAxs","../../util/index.mjs":"ivUh8","../../util/colors.mjs":"cqZkH","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"gjWPh":[function() {},{}],"cqZkH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "red", ()=>red);
parcelHelpers.export(exports, "pink", ()=>pink);
parcelHelpers.export(exports, "purple", ()=>purple);
parcelHelpers.export(exports, "deepPurple", ()=>deepPurple);
parcelHelpers.export(exports, "indigo", ()=>indigo);
parcelHelpers.export(exports, "blue", ()=>blue);
parcelHelpers.export(exports, "lightBlue", ()=>lightBlue);
parcelHelpers.export(exports, "cyan", ()=>cyan);
parcelHelpers.export(exports, "teal", ()=>teal);
parcelHelpers.export(exports, "green", ()=>green);
parcelHelpers.export(exports, "lightGreen", ()=>lightGreen);
parcelHelpers.export(exports, "lime", ()=>lime);
parcelHelpers.export(exports, "yellow", ()=>yellow);
parcelHelpers.export(exports, "amber", ()=>amber);
parcelHelpers.export(exports, "orange", ()=>orange);
parcelHelpers.export(exports, "deepOrange", ()=>deepOrange);
parcelHelpers.export(exports, "brown", ()=>brown);
parcelHelpers.export(exports, "blueGrey", ()=>blueGrey);
parcelHelpers.export(exports, "grey", ()=>grey);
parcelHelpers.export(exports, "shades", ()=>shades);
const red = {
    base: "#f44336",
    lighten5: "#ffebee",
    lighten4: "#ffcdd2",
    lighten3: "#ef9a9a",
    lighten2: "#e57373",
    lighten1: "#ef5350",
    darken1: "#e53935",
    darken2: "#d32f2f",
    darken3: "#c62828",
    darken4: "#b71c1c",
    accent1: "#ff8a80",
    accent2: "#ff5252",
    accent3: "#ff1744",
    accent4: "#d50000"
};
const pink = {
    base: "#e91e63",
    lighten5: "#fce4ec",
    lighten4: "#f8bbd0",
    lighten3: "#f48fb1",
    lighten2: "#f06292",
    lighten1: "#ec407a",
    darken1: "#d81b60",
    darken2: "#c2185b",
    darken3: "#ad1457",
    darken4: "#880e4f",
    accent1: "#ff80ab",
    accent2: "#ff4081",
    accent3: "#f50057",
    accent4: "#c51162"
};
const purple = {
    base: "#9c27b0",
    lighten5: "#f3e5f5",
    lighten4: "#e1bee7",
    lighten3: "#ce93d8",
    lighten2: "#ba68c8",
    lighten1: "#ab47bc",
    darken1: "#8e24aa",
    darken2: "#7b1fa2",
    darken3: "#6a1b9a",
    darken4: "#4a148c",
    accent1: "#ea80fc",
    accent2: "#e040fb",
    accent3: "#d500f9",
    accent4: "#aa00ff"
};
const deepPurple = {
    base: "#673ab7",
    lighten5: "#ede7f6",
    lighten4: "#d1c4e9",
    lighten3: "#b39ddb",
    lighten2: "#9575cd",
    lighten1: "#7e57c2",
    darken1: "#5e35b1",
    darken2: "#512da8",
    darken3: "#4527a0",
    darken4: "#311b92",
    accent1: "#b388ff",
    accent2: "#7c4dff",
    accent3: "#651fff",
    accent4: "#6200ea"
};
const indigo = {
    base: "#3f51b5",
    lighten5: "#e8eaf6",
    lighten4: "#c5cae9",
    lighten3: "#9fa8da",
    lighten2: "#7986cb",
    lighten1: "#5c6bc0",
    darken1: "#3949ab",
    darken2: "#303f9f",
    darken3: "#283593",
    darken4: "#1a237e",
    accent1: "#8c9eff",
    accent2: "#536dfe",
    accent3: "#3d5afe",
    accent4: "#304ffe"
};
const blue = {
    base: "#2196f3",
    lighten5: "#e3f2fd",
    lighten4: "#bbdefb",
    lighten3: "#90caf9",
    lighten2: "#64b5f6",
    lighten1: "#42a5f5",
    darken1: "#1e88e5",
    darken2: "#1976d2",
    darken3: "#1565c0",
    darken4: "#0d47a1",
    accent1: "#82b1ff",
    accent2: "#448aff",
    accent3: "#2979ff",
    accent4: "#2962ff"
};
const lightBlue = {
    base: "#03a9f4",
    lighten5: "#e1f5fe",
    lighten4: "#b3e5fc",
    lighten3: "#81d4fa",
    lighten2: "#4fc3f7",
    lighten1: "#29b6f6",
    darken1: "#039be5",
    darken2: "#0288d1",
    darken3: "#0277bd",
    darken4: "#01579b",
    accent1: "#80d8ff",
    accent2: "#40c4ff",
    accent3: "#00b0ff",
    accent4: "#0091ea"
};
const cyan = {
    base: "#00bcd4",
    lighten5: "#e0f7fa",
    lighten4: "#b2ebf2",
    lighten3: "#80deea",
    lighten2: "#4dd0e1",
    lighten1: "#26c6da",
    darken1: "#00acc1",
    darken2: "#0097a7",
    darken3: "#00838f",
    darken4: "#006064",
    accent1: "#84ffff",
    accent2: "#18ffff",
    accent3: "#00e5ff",
    accent4: "#00b8d4"
};
const teal = {
    base: "#009688",
    lighten5: "#e0f2f1",
    lighten4: "#b2dfdb",
    lighten3: "#80cbc4",
    lighten2: "#4db6ac",
    lighten1: "#26a69a",
    darken1: "#00897b",
    darken2: "#00796b",
    darken3: "#00695c",
    darken4: "#004d40",
    accent1: "#a7ffeb",
    accent2: "#64ffda",
    accent3: "#1de9b6",
    accent4: "#00bfa5"
};
const green = {
    base: "#4caf50",
    lighten5: "#e8f5e9",
    lighten4: "#c8e6c9",
    lighten3: "#a5d6a7",
    lighten2: "#81c784",
    lighten1: "#66bb6a",
    darken1: "#43a047",
    darken2: "#388e3c",
    darken3: "#2e7d32",
    darken4: "#1b5e20",
    accent1: "#b9f6ca",
    accent2: "#69f0ae",
    accent3: "#00e676",
    accent4: "#00c853"
};
const lightGreen = {
    base: "#8bc34a",
    lighten5: "#f1f8e9",
    lighten4: "#dcedc8",
    lighten3: "#c5e1a5",
    lighten2: "#aed581",
    lighten1: "#9ccc65",
    darken1: "#7cb342",
    darken2: "#689f38",
    darken3: "#558b2f",
    darken4: "#33691e",
    accent1: "#ccff90",
    accent2: "#b2ff59",
    accent3: "#76ff03",
    accent4: "#64dd17"
};
const lime = {
    base: "#cddc39",
    lighten5: "#f9fbe7",
    lighten4: "#f0f4c3",
    lighten3: "#e6ee9c",
    lighten2: "#dce775",
    lighten1: "#d4e157",
    darken1: "#c0ca33",
    darken2: "#afb42b",
    darken3: "#9e9d24",
    darken4: "#827717",
    accent1: "#f4ff81",
    accent2: "#eeff41",
    accent3: "#c6ff00",
    accent4: "#aeea00"
};
const yellow = {
    base: "#ffeb3b",
    lighten5: "#fffde7",
    lighten4: "#fff9c4",
    lighten3: "#fff59d",
    lighten2: "#fff176",
    lighten1: "#ffee58",
    darken1: "#fdd835",
    darken2: "#fbc02d",
    darken3: "#f9a825",
    darken4: "#f57f17",
    accent1: "#ffff8d",
    accent2: "#ffff00",
    accent3: "#ffea00",
    accent4: "#ffd600"
};
const amber = {
    base: "#ffc107",
    lighten5: "#fff8e1",
    lighten4: "#ffecb3",
    lighten3: "#ffe082",
    lighten2: "#ffd54f",
    lighten1: "#ffca28",
    darken1: "#ffb300",
    darken2: "#ffa000",
    darken3: "#ff8f00",
    darken4: "#ff6f00",
    accent1: "#ffe57f",
    accent2: "#ffd740",
    accent3: "#ffc400",
    accent4: "#ffab00"
};
const orange = {
    base: "#ff9800",
    lighten5: "#fff3e0",
    lighten4: "#ffe0b2",
    lighten3: "#ffcc80",
    lighten2: "#ffb74d",
    lighten1: "#ffa726",
    darken1: "#fb8c00",
    darken2: "#f57c00",
    darken3: "#ef6c00",
    darken4: "#e65100",
    accent1: "#ffd180",
    accent2: "#ffab40",
    accent3: "#ff9100",
    accent4: "#ff6d00"
};
const deepOrange = {
    base: "#ff5722",
    lighten5: "#fbe9e7",
    lighten4: "#ffccbc",
    lighten3: "#ffab91",
    lighten2: "#ff8a65",
    lighten1: "#ff7043",
    darken1: "#f4511e",
    darken2: "#e64a19",
    darken3: "#d84315",
    darken4: "#bf360c",
    accent1: "#ff9e80",
    accent2: "#ff6e40",
    accent3: "#ff3d00",
    accent4: "#dd2c00"
};
const brown = {
    base: "#795548",
    lighten5: "#efebe9",
    lighten4: "#d7ccc8",
    lighten3: "#bcaaa4",
    lighten2: "#a1887f",
    lighten1: "#8d6e63",
    darken1: "#6d4c41",
    darken2: "#5d4037",
    darken3: "#4e342e",
    darken4: "#3e2723"
};
const blueGrey = {
    base: "#607d8b",
    lighten5: "#eceff1",
    lighten4: "#cfd8dc",
    lighten3: "#b0bec5",
    lighten2: "#90a4ae",
    lighten1: "#78909c",
    darken1: "#546e7a",
    darken2: "#455a64",
    darken3: "#37474f",
    darken4: "#263238"
};
const grey = {
    base: "#9e9e9e",
    lighten5: "#fafafa",
    lighten4: "#f5f5f5",
    lighten3: "#eeeeee",
    lighten2: "#e0e0e0",
    lighten1: "#bdbdbd",
    darken1: "#757575",
    darken2: "#616161",
    darken3: "#424242",
    darken4: "#212121"
};
const shades = {
    black: "#000000",
    white: "#ffffff",
    transparent: "#ffffff00"
};
exports.default = {
    red,
    pink,
    purple,
    deepPurple,
    indigo,
    blue,
    lightBlue,
    cyan,
    teal,
    green,
    lightGreen,
    lime,
    yellow,
    amber,
    orange,
    deepOrange,
    brown,
    blueGrey,
    grey,
    shades
};

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"3SEh6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVSheetProps", ()=>makeVSheetProps);
parcelHelpers.export(exports, "VSheet", ()=>VSheet);
var _vue = require("vue");
// Styles
var _vsheetCss = require("./VSheet.css");
// Composables
var _borderMjs = require("../../composables/border.mjs");
var _colorMjs = require("../../composables/color.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _dimensionsMjs = require("../../composables/dimensions.mjs");
var _elevationMjs = require("../../composables/elevation.mjs");
var _locationMjs = require("../../composables/location.mjs");
var _positionMjs = require("../../composables/position.mjs");
var _roundedMjs = require("../../composables/rounded.mjs");
var _tagMjs = require("../../composables/tag.mjs");
var _themeMjs = require("../../composables/theme.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const makeVSheetProps = (0, _indexMjs.propsFactory)({
    color: String,
    ...(0, _borderMjs.makeBorderProps)(),
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _dimensionsMjs.makeDimensionProps)(),
    ...(0, _elevationMjs.makeElevationProps)(),
    ...(0, _locationMjs.makeLocationProps)(),
    ...(0, _positionMjs.makePositionProps)(),
    ...(0, _roundedMjs.makeRoundedProps)(),
    ...(0, _tagMjs.makeTagProps)(),
    ...(0, _themeMjs.makeThemeProps)()
}, "VSheet");
const VSheet = (0, _indexMjs.genericComponent)()({
    name: "VSheet",
    props: makeVSheetProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const { backgroundColorClasses, backgroundColorStyles } = (0, _colorMjs.useBackgroundColor)((0, _vue.toRef)(props, "color"));
        const { borderClasses } = (0, _borderMjs.useBorder)(props);
        const { dimensionStyles } = (0, _dimensionsMjs.useDimension)(props);
        const { elevationClasses } = (0, _elevationMjs.useElevation)(props);
        const { locationStyles } = (0, _locationMjs.useLocation)(props);
        const { positionClasses } = (0, _positionMjs.usePosition)(props);
        const { roundedClasses } = (0, _roundedMjs.useRounded)(props);
        (0, _indexMjs.useRender)(()=>(0, _vue.createVNode)(props.tag, {
                "class": [
                    "v-sheet",
                    themeClasses.value,
                    backgroundColorClasses.value,
                    borderClasses.value,
                    elevationClasses.value,
                    positionClasses.value,
                    roundedClasses.value,
                    props.class
                ],
                "style": [
                    backgroundColorStyles.value,
                    dimensionStyles.value,
                    locationStyles.value,
                    props.style
                ]
            }, slots));
        return {};
    }
});

},{"vue":"gCTam","./VSheet.css":"hoiWj","../../composables/border.mjs":"iYaxw","../../composables/color.mjs":"6TeQR","../../composables/component.mjs":"4YAxs","../../composables/dimensions.mjs":"daVmy","../../composables/elevation.mjs":"aNIiI","../../composables/location.mjs":"cIK4d","../../composables/position.mjs":"8GbJq","../../composables/rounded.mjs":"1RfhA","../../composables/tag.mjs":"3LqcC","../../composables/theme.mjs":"c9HGg","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"hoiWj":[function() {},{}],"aD5I5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VCombobox", ()=>(0, _vcomboboxMjs.VCombobox));
var _vcomboboxMjs = require("./VCombobox.mjs");

},{"./VCombobox.mjs":"1SDiv","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"1SDiv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVComboboxProps", ()=>makeVComboboxProps);
parcelHelpers.export(exports, "VCombobox", ()=>VCombobox);
var _vue = require("vue");
// Styles
var _vcomboboxCss = require("./VCombobox.css");
// Components
var _indexMjs = require("../VAvatar/index.mjs");
var _indexMjs1 = require("../VCheckbox/index.mjs");
var _indexMjs2 = require("../VChip/index.mjs");
var _indexMjs3 = require("../VDefaultsProvider/index.mjs");
var _indexMjs4 = require("../VIcon/index.mjs");
var _indexMjs5 = require("../VList/index.mjs");
var _indexMjs6 = require("../VMenu/index.mjs");
var _vselectMjs = require("../VSelect/VSelect.mjs");
var _indexMjs7 = require("../VTextField/index.mjs");
var _vtextFieldMjs = require("../VTextField/VTextField.mjs");
var _indexMjs8 = require("../VVirtualScroll/index.mjs"); // Composables
var _useScrollingMjs = require("../VSelect/useScrolling.mjs");
var _colorMjs = require("../../composables/color.mjs");
var _filterMjs = require("../../composables/filter.mjs");
var _formMjs = require("../../composables/form.mjs");
var _forwardRefsMjs = require("../../composables/forwardRefs.mjs");
var _listItemsMjs = require("../../composables/list-items.mjs");
var _localeMjs = require("../../composables/locale.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs");
var _transitionMjs = require("../../composables/transition.mjs"); // Utilities
var _indexMjs9 = require("../../util/index.mjs"); // Types
function highlightResult(text, matches, length) {
    if (matches == null) return text;
    if (Array.isArray(matches)) throw new Error("Multiple matches is not implemented");
    return typeof matches === "number" && ~matches ? (0, _vue.createVNode)((0, _vue.Fragment), null, [
        (0, _vue.createVNode)("span", {
            "class": "v-combobox__unmask"
        }, [
            text.substr(0, matches)
        ]),
        (0, _vue.createVNode)("span", {
            "class": "v-combobox__mask"
        }, [
            text.substr(matches, length)
        ]),
        (0, _vue.createVNode)("span", {
            "class": "v-combobox__unmask"
        }, [
            text.substr(matches + length)
        ])
    ]) : text;
}
const makeVComboboxProps = (0, _indexMjs9.propsFactory)({
    autoSelectFirst: {
        type: [
            Boolean,
            String
        ]
    },
    clearOnSelect: {
        type: Boolean,
        default: true
    },
    delimiters: Array,
    ...(0, _filterMjs.makeFilterProps)({
        filterKeys: [
            "title"
        ]
    }),
    ...(0, _vselectMjs.makeSelectProps)({
        hideNoData: true,
        returnObject: true
    }),
    ...(0, _indexMjs9.omit)((0, _vtextFieldMjs.makeVTextFieldProps)({
        modelValue: null,
        role: "combobox"
    }), [
        "validationValue",
        "dirty",
        "appendInnerIcon"
    ]),
    ...(0, _transitionMjs.makeTransitionProps)({
        transition: false
    })
}, "VCombobox");
const VCombobox = (0, _indexMjs9.genericComponent)()({
    name: "VCombobox",
    props: makeVComboboxProps(),
    emits: {
        "update:focused": (focused)=>true,
        "update:modelValue": (value)=>true,
        "update:search": (value)=>true,
        "update:menu": (value)=>true
    },
    setup (props, _ref) {
        let { emit, slots } = _ref;
        const { t } = (0, _localeMjs.useLocale)();
        const vTextFieldRef = (0, _vue.ref)();
        const isFocused = (0, _vue.shallowRef)(false);
        const isPristine = (0, _vue.shallowRef)(true);
        const listHasFocus = (0, _vue.shallowRef)(false);
        const vMenuRef = (0, _vue.ref)();
        const vVirtualScrollRef = (0, _vue.ref)();
        const _menu = (0, _proxiedModelMjs.useProxiedModel)(props, "menu");
        const menu = (0, _vue.computed)({
            get: ()=>_menu.value,
            set: (v)=>{
                if (_menu.value && !v && vMenuRef.value?.\u03A8openChildren.size) return;
                _menu.value = v;
            }
        });
        const selectionIndex = (0, _vue.shallowRef)(-1);
        let cleared = false;
        const color = (0, _vue.computed)(()=>vTextFieldRef.value?.color);
        const label = (0, _vue.computed)(()=>menu.value ? props.closeText : props.openText);
        const { items, transformIn, transformOut } = (0, _listItemsMjs.useItems)(props);
        const { textColorClasses, textColorStyles } = (0, _colorMjs.useTextColor)(color);
        const model = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue", [], (v)=>transformIn((0, _indexMjs9.wrapInArray)(v)), (v)=>{
            const transformed = transformOut(v);
            return props.multiple ? transformed : transformed[0] ?? null;
        });
        const form = (0, _formMjs.useForm)();
        const hasChips = (0, _vue.computed)(()=>!!(props.chips || slots.chip));
        const hasSelectionSlot = (0, _vue.computed)(()=>hasChips.value || !!slots.selection);
        const _search = (0, _vue.shallowRef)(!props.multiple && !hasSelectionSlot.value ? model.value[0]?.title ?? "" : "");
        const search = (0, _vue.computed)({
            get: ()=>{
                return _search.value;
            },
            set: (val)=>{
                _search.value = val ?? "";
                if (!props.multiple && !hasSelectionSlot.value) model.value = [
                    (0, _listItemsMjs.transformItem)(props, val)
                ];
                if (val && props.multiple && props.delimiters?.length) {
                    const values = val.split(new RegExp(`(?:${props.delimiters.join("|")})+`));
                    if (values.length > 1) {
                        values.forEach((v)=>{
                            v = v.trim();
                            if (v) select((0, _listItemsMjs.transformItem)(props, v));
                        });
                        _search.value = "";
                    }
                }
                if (!val) selectionIndex.value = -1;
                isPristine.value = !val;
            }
        });
        const counterValue = (0, _vue.computed)(()=>{
            return typeof props.counterValue === "function" ? props.counterValue(model.value) : typeof props.counterValue === "number" ? props.counterValue : props.multiple ? model.value.length : search.value.length;
        });
        (0, _vue.watch)(_search, (value)=>{
            if (cleared) // wait for clear to finish, VTextField sets _search to null
            // then search computed triggers and updates _search to ''
            (0, _vue.nextTick)(()=>cleared = false);
            else if (isFocused.value && !menu.value) menu.value = true;
            emit("update:search", value);
        });
        (0, _vue.watch)(model, (value)=>{
            if (!props.multiple && !hasSelectionSlot.value) _search.value = value[0]?.title ?? "";
        });
        const { filteredItems, getMatches } = (0, _filterMjs.useFilter)(props, items, ()=>isPristine.value ? "" : search.value);
        const displayItems = (0, _vue.computed)(()=>{
            if (props.hideSelected) return filteredItems.value.filter((filteredItem)=>!model.value.some((s)=>s.value === filteredItem.value));
            return filteredItems.value;
        });
        const selectedValues = (0, _vue.computed)(()=>model.value.map((selection)=>selection.value));
        const highlightFirst = (0, _vue.computed)(()=>{
            const selectFirst = props.autoSelectFirst === true || props.autoSelectFirst === "exact" && search.value === displayItems.value[0]?.title;
            return selectFirst && displayItems.value.length > 0 && !isPristine.value && !listHasFocus.value;
        });
        const menuDisabled = (0, _vue.computed)(()=>props.hideNoData && !displayItems.value.length || props.readonly || form?.isReadonly.value);
        const listRef = (0, _vue.ref)();
        const listEvents = (0, _useScrollingMjs.useScrolling)(listRef, vTextFieldRef);
        function onClear(e) {
            cleared = true;
            if (props.openOnClear) menu.value = true;
        }
        function onMousedownControl() {
            if (menuDisabled.value) return;
            menu.value = true;
        }
        function onMousedownMenuIcon(e) {
            if (menuDisabled.value) return;
            if (isFocused.value) {
                e.preventDefault();
                e.stopPropagation();
            }
            menu.value = !menu.value;
        }
        function onListKeydown(e) {
            if ((0, _indexMjs9.checkPrintable)(e)) vTextFieldRef.value?.focus();
        }
        // eslint-disable-next-line complexity
        function onKeydown(e) {
            if ((0, _indexMjs9.isComposingIgnoreKey)(e) || props.readonly || form?.isReadonly.value) return;
            const selectionStart = vTextFieldRef.value.selectionStart;
            const length = model.value.length;
            if (selectionIndex.value > -1 || [
                "Enter",
                "ArrowDown",
                "ArrowUp"
            ].includes(e.key)) e.preventDefault();
            if ([
                "Enter",
                "ArrowDown"
            ].includes(e.key)) menu.value = true;
            if ([
                "Escape"
            ].includes(e.key)) menu.value = false;
            if ([
                "Enter",
                "Escape",
                "Tab"
            ].includes(e.key)) {
                if (highlightFirst.value && [
                    "Enter",
                    "Tab"
                ].includes(e.key) && !model.value.some((_ref2)=>{
                    let { value } = _ref2;
                    return value === displayItems.value[0].value;
                })) select(filteredItems.value[0]);
                isPristine.value = true;
            }
            if (e.key === "ArrowDown" && highlightFirst.value) listRef.value?.focus("next");
            if (e.key === "Enter" && search.value) {
                select((0, _listItemsMjs.transformItem)(props, search.value));
                if (hasSelectionSlot.value) _search.value = "";
            }
            if ([
                "Backspace",
                "Delete"
            ].includes(e.key)) {
                if (!props.multiple && hasSelectionSlot.value && model.value.length > 0 && !search.value) return select(model.value[0], false);
                if (~selectionIndex.value) {
                    const originalSelectionIndex = selectionIndex.value;
                    select(model.value[selectionIndex.value], false);
                    selectionIndex.value = originalSelectionIndex >= length - 1 ? length - 2 : originalSelectionIndex;
                } else if (e.key === "Backspace" && !search.value) selectionIndex.value = length - 1;
            }
            if (!props.multiple) return;
            if (e.key === "ArrowLeft") {
                if (selectionIndex.value < 0 && selectionStart > 0) return;
                const prev = selectionIndex.value > -1 ? selectionIndex.value - 1 : length - 1;
                if (model.value[prev]) selectionIndex.value = prev;
                else {
                    selectionIndex.value = -1;
                    vTextFieldRef.value.setSelectionRange(search.value.length, search.value.length);
                }
            }
            if (e.key === "ArrowRight") {
                if (selectionIndex.value < 0) return;
                const next = selectionIndex.value + 1;
                if (model.value[next]) selectionIndex.value = next;
                else {
                    selectionIndex.value = -1;
                    vTextFieldRef.value.setSelectionRange(0, 0);
                }
            }
        }
        function onAfterEnter() {
            if (props.eager) vVirtualScrollRef.value?.calculateVisibleItems();
        }
        function onAfterLeave() {
            if (isFocused.value) {
                isPristine.value = true;
                vTextFieldRef.value?.focus();
            }
        }
        /** @param set - null means toggle */ function select(item) {
            let set = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
            if (!item || item.props.disabled) return;
            if (props.multiple) {
                const index = model.value.findIndex((selection)=>props.valueComparator(selection.value, item.value));
                const add = set == null ? !~index : set;
                if (~index) {
                    const value = add ? [
                        ...model.value,
                        item
                    ] : [
                        ...model.value
                    ];
                    value.splice(index, 1);
                    model.value = value;
                } else if (add) model.value = [
                    ...model.value,
                    item
                ];
                if (props.clearOnSelect) search.value = "";
            } else {
                const add = set !== false;
                model.value = add ? [
                    item
                ] : [];
                _search.value = add && !hasSelectionSlot.value ? item.title : "";
                // watch for search watcher to trigger
                (0, _vue.nextTick)(()=>{
                    menu.value = false;
                    isPristine.value = true;
                });
            }
        }
        function onFocusin(e) {
            isFocused.value = true;
            setTimeout(()=>{
                listHasFocus.value = true;
            });
        }
        function onFocusout(e) {
            listHasFocus.value = false;
        }
        function onUpdateModelValue(v) {
            if (v == null || v === "" && !props.multiple && !hasSelectionSlot.value) model.value = [];
        }
        (0, _vue.watch)(isFocused, (val, oldVal)=>{
            if (val || val === oldVal) return;
            selectionIndex.value = -1;
            menu.value = false;
            if (search.value) {
                if (props.multiple) {
                    select((0, _listItemsMjs.transformItem)(props, search.value));
                    return;
                }
                if (!hasSelectionSlot.value) return;
                if (model.value.some((_ref3)=>{
                    let { title } = _ref3;
                    return title === search.value;
                })) _search.value = "";
                else select((0, _listItemsMjs.transformItem)(props, search.value));
            }
        });
        (0, _vue.watch)(menu, ()=>{
            if (!props.hideSelected && menu.value && model.value.length) {
                const index = displayItems.value.findIndex((item)=>model.value.some((s)=>props.valueComparator(s.value, item.value)));
                (0, _indexMjs9.IN_BROWSER) && window.requestAnimationFrame(()=>{
                    index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index);
                });
            }
        });
        (0, _vue.watch)(()=>props.items, (newVal, oldVal)=>{
            if (menu.value) return;
            if (isFocused.value && !oldVal.length && newVal.length) menu.value = true;
        });
        (0, _indexMjs9.useRender)(()=>{
            const hasList = !!(!props.hideNoData || displayItems.value.length || slots["prepend-item"] || slots["append-item"] || slots["no-data"]);
            const isDirty = model.value.length > 0;
            const textFieldProps = (0, _indexMjs7.VTextField).filterProps(props);
            return (0, _vue.createVNode)((0, _indexMjs7.VTextField), (0, _vue.mergeProps)({
                "ref": vTextFieldRef
            }, textFieldProps, {
                "modelValue": search.value,
                "onUpdate:modelValue": [
                    ($event)=>search.value = $event,
                    onUpdateModelValue
                ],
                "focused": isFocused.value,
                "onUpdate:focused": ($event)=>isFocused.value = $event,
                "validationValue": model.externalValue,
                "counterValue": counterValue.value,
                "dirty": isDirty,
                "class": [
                    "v-combobox",
                    {
                        "v-combobox--active-menu": menu.value,
                        "v-combobox--chips": !!props.chips,
                        "v-combobox--selection-slot": !!hasSelectionSlot.value,
                        "v-combobox--selecting-index": selectionIndex.value > -1,
                        [`v-combobox--${props.multiple ? "multiple" : "single"}`]: true
                    },
                    props.class
                ],
                "style": props.style,
                "readonly": props.readonly,
                "placeholder": isDirty ? undefined : props.placeholder,
                "onClick:clear": onClear,
                "onMousedown:control": onMousedownControl,
                "onKeydown": onKeydown
            }), {
                ...slots,
                default: ()=>(0, _vue.createVNode)((0, _vue.Fragment), null, [
                        (0, _vue.createVNode)((0, _indexMjs6.VMenu), (0, _vue.mergeProps)({
                            "ref": vMenuRef,
                            "modelValue": menu.value,
                            "onUpdate:modelValue": ($event)=>menu.value = $event,
                            "activator": "parent",
                            "contentClass": "v-combobox__content",
                            "disabled": menuDisabled.value,
                            "eager": props.eager,
                            "maxHeight": 310,
                            "openOnClick": false,
                            "closeOnContentClick": false,
                            "transition": props.transition,
                            "onAfterEnter": onAfterEnter,
                            "onAfterLeave": onAfterLeave
                        }, props.menuProps), {
                            default: ()=>[
                                    hasList && (0, _vue.createVNode)((0, _indexMjs5.VList), (0, _vue.mergeProps)({
                                        "ref": listRef,
                                        "selected": selectedValues.value,
                                        "selectStrategy": props.multiple ? "independent" : "single-independent",
                                        "onMousedown": (e)=>e.preventDefault(),
                                        "onKeydown": onListKeydown,
                                        "onFocusin": onFocusin,
                                        "onFocusout": onFocusout,
                                        "tabindex": "-1",
                                        "aria-live": "polite",
                                        "color": props.itemColor ?? props.color
                                    }, listEvents, props.listProps), {
                                        default: ()=>[
                                                slots["prepend-item"]?.(),
                                                !displayItems.value.length && !props.hideNoData && (slots["no-data"]?.() ?? (0, _vue.createVNode)((0, _indexMjs5.VListItem), {
                                                    "title": t(props.noDataText)
                                                }, null)),
                                                (0, _vue.createVNode)((0, _indexMjs8.VVirtualScroll), {
                                                    "ref": vVirtualScrollRef,
                                                    "renderless": true,
                                                    "items": displayItems.value
                                                }, {
                                                    default: (_ref4)=>{
                                                        let { item, index, itemRef } = _ref4;
                                                        const itemProps = (0, _vue.mergeProps)(item.props, {
                                                            ref: itemRef,
                                                            key: index,
                                                            active: highlightFirst.value && index === 0 ? true : undefined,
                                                            onClick: ()=>select(item, null)
                                                        });
                                                        return slots.item?.({
                                                            item,
                                                            index,
                                                            props: itemProps
                                                        }) ?? (0, _vue.createVNode)((0, _indexMjs5.VListItem), (0, _vue.mergeProps)(itemProps, {
                                                            "role": "option"
                                                        }), {
                                                            prepend: (_ref5)=>{
                                                                let { isSelected } = _ref5;
                                                                return (0, _vue.createVNode)((0, _vue.Fragment), null, [
                                                                    props.multiple && !props.hideSelected ? (0, _vue.createVNode)((0, _indexMjs1.VCheckboxBtn), {
                                                                        "key": item.value,
                                                                        "modelValue": isSelected,
                                                                        "ripple": false,
                                                                        "tabindex": "-1"
                                                                    }, null) : undefined,
                                                                    item.props.prependAvatar && (0, _vue.createVNode)((0, _indexMjs.VAvatar), {
                                                                        "image": item.props.prependAvatar
                                                                    }, null),
                                                                    item.props.prependIcon && (0, _vue.createVNode)((0, _indexMjs4.VIcon), {
                                                                        "icon": item.props.prependIcon
                                                                    }, null)
                                                                ]);
                                                            },
                                                            title: ()=>{
                                                                return isPristine.value ? item.title : highlightResult(item.title, getMatches(item)?.title, search.value?.length ?? 0);
                                                            }
                                                        });
                                                    }
                                                }),
                                                slots["append-item"]?.()
                                            ]
                                    })
                                ]
                        }),
                        model.value.map((item, index)=>{
                            function onChipClose(e) {
                                e.stopPropagation();
                                e.preventDefault();
                                select(item, false);
                            }
                            const slotProps = {
                                "onClick:close": onChipClose,
                                onKeydown (e) {
                                    if (e.key !== "Enter" && e.key !== " ") return;
                                    e.preventDefault();
                                    e.stopPropagation();
                                    onChipClose(e);
                                },
                                onMousedown (e) {
                                    e.preventDefault();
                                    e.stopPropagation();
                                },
                                modelValue: true,
                                "onUpdate:modelValue": undefined
                            };
                            const hasSlot = hasChips.value ? !!slots.chip : !!slots.selection;
                            const slotContent = hasSlot ? (0, _indexMjs9.ensureValidVNode)(hasChips.value ? slots.chip({
                                item,
                                index,
                                props: slotProps
                            }) : slots.selection({
                                item,
                                index
                            })) : undefined;
                            if (hasSlot && !slotContent) return undefined;
                            return (0, _vue.createVNode)("div", {
                                "key": item.value,
                                "class": [
                                    "v-combobox__selection",
                                    index === selectionIndex.value && [
                                        "v-combobox__selection--selected",
                                        textColorClasses.value
                                    ]
                                ],
                                "style": index === selectionIndex.value ? textColorStyles.value : {}
                            }, [
                                hasChips.value ? !slots.chip ? (0, _vue.createVNode)((0, _indexMjs2.VChip), (0, _vue.mergeProps)({
                                    "key": "chip",
                                    "closable": props.closableChips,
                                    "size": "small",
                                    "text": item.title,
                                    "disabled": item.props.disabled
                                }, slotProps), null) : (0, _vue.createVNode)((0, _indexMjs3.VDefaultsProvider), {
                                    "key": "chip-defaults",
                                    "defaults": {
                                        VChip: {
                                            closable: props.closableChips,
                                            size: "small",
                                            text: item.title
                                        }
                                    }
                                }, {
                                    default: ()=>[
                                            slotContent
                                        ]
                                }) : slotContent ?? (0, _vue.createVNode)("span", {
                                    "class": "v-combobox__selection-text"
                                }, [
                                    item.title,
                                    props.multiple && index < model.value.length - 1 && (0, _vue.createVNode)("span", {
                                        "class": "v-combobox__selection-comma"
                                    }, [
                                        (0, _vue.createTextVNode)(",")
                                    ])
                                ])
                            ]);
                        })
                    ]),
                "append-inner": function() {
                    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
                    return (0, _vue.createVNode)((0, _vue.Fragment), null, [
                        slots["append-inner"]?.(...args),
                        (!props.hideNoData || props.items.length) && props.menuIcon ? (0, _vue.createVNode)((0, _indexMjs4.VIcon), {
                            "class": "v-combobox__menu-icon",
                            "icon": props.menuIcon,
                            "onMousedown": onMousedownMenuIcon,
                            "onClick": (0, _indexMjs9.noop),
                            "aria-label": t(label.value),
                            "title": t(label.value),
                            "tabindex": "-1"
                        }, null) : undefined
                    ]);
                }
            });
        });
        return (0, _forwardRefsMjs.forwardRefs)({
            isFocused,
            isPristine,
            menu,
            search,
            selectionIndex,
            filteredItems,
            select
        }, vTextFieldRef);
    }
});

},{"vue":"gCTam","./VCombobox.css":"fbGbw","../VAvatar/index.mjs":"d9olW","../VCheckbox/index.mjs":"c1Gdu","../VChip/index.mjs":"bLlpp","../VDefaultsProvider/index.mjs":"eFFvH","../VIcon/index.mjs":"5Yjjr","../VList/index.mjs":"56Mcn","../VMenu/index.mjs":"72lak","../VSelect/VSelect.mjs":"lxk2a","../VTextField/index.mjs":"e6Ydp","../VTextField/VTextField.mjs":"kzi5r","../VVirtualScroll/index.mjs":"cUhx7","../VSelect/useScrolling.mjs":"6iRHI","../../composables/color.mjs":"6TeQR","../../composables/filter.mjs":"eW6zz","../../composables/form.mjs":"wQrA9","../../composables/forwardRefs.mjs":"2TNTP","../../composables/list-items.mjs":"9YaK8","../../composables/locale.mjs":"9rJP0","../../composables/proxiedModel.mjs":"huwLk","../../composables/transition.mjs":"dJyg1","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"fbGbw":[function() {},{}],"e6Ydp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VTextField", ()=>(0, _vtextFieldMjs.VTextField));
var _vtextFieldMjs = require("./VTextField.mjs");

},{"./VTextField.mjs":"kzi5r","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"g0y7n":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VConfirmEdit", ()=>(0, _vconfirmEditMjs.VConfirmEdit));
var _vconfirmEditMjs = require("./VConfirmEdit.mjs");

},{"./VConfirmEdit.mjs":"8pa5R","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"8pa5R":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVConfirmEditProps", ()=>makeVConfirmEditProps);
parcelHelpers.export(exports, "VConfirmEdit", ()=>VConfirmEdit);
var _vue = require("vue");
// Components
var _indexMjs = require("../VBtn/index.mjs"); // Composables
var _indexMjs1 = require("../../composables/index.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs"); // Utilities
var _indexMjs2 = require("../../util/index.mjs"); // Types
const makeVConfirmEditProps = (0, _indexMjs2.propsFactory)({
    modelValue: null,
    color: String,
    cancelText: {
        type: String,
        default: "$vuetify.confirmEdit.cancel"
    },
    okText: {
        type: String,
        default: "$vuetify.confirmEdit.ok"
    }
}, "VConfirmEdit");
const VConfirmEdit = (0, _indexMjs2.genericComponent)()({
    name: "VConfirmEdit",
    props: makeVConfirmEditProps(),
    emits: {
        cancel: ()=>true,
        save: (value)=>true,
        "update:modelValue": (value)=>true
    },
    setup (props, _ref) {
        let { emit, slots } = _ref;
        const model = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
        const internalModel = (0, _vue.ref)();
        (0, _vue.watchEffect)(()=>{
            internalModel.value = structuredClone((0, _vue.toRaw)(model.value));
        });
        const { t } = (0, _indexMjs1.useLocale)();
        const isPristine = (0, _vue.computed)(()=>{
            return (0, _indexMjs2.deepEqual)(model.value, internalModel.value);
        });
        function save() {
            model.value = internalModel.value;
            emit("save", internalModel.value);
        }
        function cancel() {
            internalModel.value = structuredClone((0, _vue.toRaw)(model.value));
            emit("cancel");
        }
        let actionsUsed = false;
        (0, _indexMjs2.useRender)(()=>{
            const actions = (0, _vue.createVNode)((0, _vue.Fragment), null, [
                (0, _vue.createVNode)((0, _indexMjs.VBtn), {
                    "disabled": isPristine.value,
                    "variant": "text",
                    "color": props.color,
                    "onClick": cancel,
                    "text": t(props.cancelText)
                }, null),
                (0, _vue.createVNode)((0, _indexMjs.VBtn), {
                    "disabled": isPristine.value,
                    "variant": "text",
                    "color": props.color,
                    "onClick": save,
                    "text": t(props.okText)
                }, null)
            ]);
            return (0, _vue.createVNode)((0, _vue.Fragment), null, [
                slots.default?.({
                    model: internalModel,
                    save,
                    cancel,
                    isPristine: isPristine.value,
                    get actions () {
                        actionsUsed = true;
                        return actions;
                    }
                }),
                !actionsUsed && actions
            ]);
        });
        return {
            save,
            cancel,
            isPristine
        };
    }
});

},{"vue":"gCTam","../VBtn/index.mjs":"g9s2K","../../composables/index.mjs":"fthaS","../../composables/proxiedModel.mjs":"huwLk","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"lmomu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VCounter", ()=>(0, _vcounterMjs.VCounter));
var _vcounterMjs = require("./VCounter.mjs");

},{"./VCounter.mjs":"b8Y9k","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"cjPmY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VDataIterator", ()=>(0, _vdataIteratorMjs.VDataIterator));
var _vdataIteratorMjs = require("./VDataIterator.mjs");

},{"./VDataIterator.mjs":"5l5ZN","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"5l5ZN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVDataIteratorProps", ()=>makeVDataIteratorProps);
parcelHelpers.export(exports, "VDataIterator", ()=>VDataIterator);
var _vue = require("vue");
// Components
var _indexMjs = require("../transitions/index.mjs");
var _expandMjs = require("../VDataTable/composables/expand.mjs");
var _groupMjs = require("../VDataTable/composables/group.mjs");
var _optionsMjs = require("../VDataTable/composables/options.mjs");
var _paginateMjs = require("../VDataTable/composables/paginate.mjs");
var _selectMjs = require("../VDataTable/composables/select.mjs");
var _sortMjs = require("../VDataTable/composables/sort.mjs"); // Composables
var _itemsMjs = require("./composables/items.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _filterMjs = require("../../composables/filter.mjs");
var _loaderMjs = require("../../composables/loader.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs");
var _tagMjs = require("../../composables/tag.mjs");
var _transitionMjs = require("../../composables/transition.mjs"); // Utilities
var _indexMjs1 = require("../../util/index.mjs"); // Types
const makeVDataIteratorProps = (0, _indexMjs1.propsFactory)({
    search: String,
    loading: Boolean,
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _itemsMjs.makeDataIteratorItemsProps)(),
    ...(0, _selectMjs.makeDataTableSelectProps)(),
    ...(0, _sortMjs.makeDataTableSortProps)(),
    ...(0, _paginateMjs.makeDataTablePaginateProps)({
        itemsPerPage: 5
    }),
    ...(0, _expandMjs.makeDataTableExpandProps)(),
    ...(0, _groupMjs.makeDataTableGroupProps)(),
    ...(0, _filterMjs.makeFilterProps)(),
    ...(0, _tagMjs.makeTagProps)(),
    ...(0, _transitionMjs.makeTransitionProps)({
        transition: {
            component: (0, _indexMjs.VFadeTransition),
            hideOnLeave: true
        }
    })
}, "VDataIterator");
const VDataIterator = (0, _indexMjs1.genericComponent)()({
    name: "VDataIterator",
    props: makeVDataIteratorProps(),
    emits: {
        "update:modelValue": (value)=>true,
        "update:groupBy": (value)=>true,
        "update:page": (value)=>true,
        "update:itemsPerPage": (value)=>true,
        "update:sortBy": (value)=>true,
        "update:options": (value)=>true,
        "update:expanded": (value)=>true,
        "update:currentItems": (value)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const groupBy = (0, _proxiedModelMjs.useProxiedModel)(props, "groupBy");
        const search = (0, _vue.toRef)(props, "search");
        const { items } = (0, _itemsMjs.useDataIteratorItems)(props);
        const { filteredItems } = (0, _filterMjs.useFilter)(props, items, search, {
            transform: (item)=>item.raw
        });
        const { sortBy, multiSort, mustSort } = (0, _sortMjs.createSort)(props);
        const { page, itemsPerPage } = (0, _paginateMjs.createPagination)(props);
        const { toggleSort } = (0, _sortMjs.provideSort)({
            sortBy,
            multiSort,
            mustSort,
            page
        });
        const { sortByWithGroups, opened, extractRows, isGroupOpen, toggleGroup } = (0, _groupMjs.provideGroupBy)({
            groupBy,
            sortBy
        });
        const { sortedItems } = (0, _sortMjs.useSortedItems)(props, filteredItems, sortByWithGroups, {
            transform: (item)=>item.raw
        });
        const { flatItems } = (0, _groupMjs.useGroupedItems)(sortedItems, groupBy, opened);
        const itemsLength = (0, _vue.computed)(()=>flatItems.value.length);
        const { startIndex, stopIndex, pageCount, prevPage, nextPage, setItemsPerPage, setPage } = (0, _paginateMjs.providePagination)({
            page,
            itemsPerPage,
            itemsLength
        });
        const { paginatedItems } = (0, _paginateMjs.usePaginatedItems)({
            items: flatItems,
            startIndex,
            stopIndex,
            itemsPerPage
        });
        const paginatedItemsWithoutGroups = (0, _vue.computed)(()=>extractRows(paginatedItems.value));
        const { isSelected, select, selectAll, toggleSelect } = (0, _selectMjs.provideSelection)(props, {
            allItems: items,
            currentPage: paginatedItemsWithoutGroups
        });
        const { isExpanded, toggleExpand } = (0, _expandMjs.provideExpanded)(props);
        (0, _optionsMjs.useOptions)({
            page,
            itemsPerPage,
            sortBy,
            groupBy,
            search
        });
        const slotProps = (0, _vue.computed)(()=>({
                page: page.value,
                itemsPerPage: itemsPerPage.value,
                sortBy: sortBy.value,
                pageCount: pageCount.value,
                toggleSort,
                prevPage,
                nextPage,
                setPage,
                setItemsPerPage,
                isSelected,
                select,
                selectAll,
                toggleSelect,
                isExpanded,
                toggleExpand,
                isGroupOpen,
                toggleGroup,
                items: paginatedItemsWithoutGroups.value,
                groupedItems: paginatedItems.value
            }));
        (0, _indexMjs1.useRender)(()=>(0, _vue.createVNode)(props.tag, {
                "class": [
                    "v-data-iterator",
                    {
                        "v-data-iterator--loading": props.loading
                    },
                    props.class
                ],
                "style": props.style
            }, {
                default: ()=>[
                        slots.header?.(slotProps.value),
                        (0, _vue.createVNode)((0, _transitionMjs.MaybeTransition), {
                            "transition": props.transition
                        }, {
                            default: ()=>[
                                    props.loading ? (0, _vue.createVNode)((0, _loaderMjs.LoaderSlot), {
                                        "key": "loader",
                                        "name": "v-data-iterator",
                                        "active": true
                                    }, {
                                        default: (slotProps)=>slots.loader?.(slotProps)
                                    }) : (0, _vue.createVNode)("div", {
                                        "key": "items"
                                    }, [
                                        !paginatedItems.value.length ? slots["no-data"]?.() : slots.default?.(slotProps.value)
                                    ])
                                ]
                        }),
                        slots.footer?.(slotProps.value)
                    ]
            }));
        return {};
    }
});

},{"vue":"gCTam","../transitions/index.mjs":"3ybHr","../VDataTable/composables/expand.mjs":"cfWXg","../VDataTable/composables/group.mjs":"4bxDC","../VDataTable/composables/options.mjs":"9Xhsu","../VDataTable/composables/paginate.mjs":"5g37V","../VDataTable/composables/select.mjs":"2IxTD","../VDataTable/composables/sort.mjs":"82x7K","./composables/items.mjs":"3DoB3","../../composables/component.mjs":"4YAxs","../../composables/filter.mjs":"eW6zz","../../composables/loader.mjs":"6m53O","../../composables/proxiedModel.mjs":"huwLk","../../composables/tag.mjs":"3LqcC","../../composables/transition.mjs":"dJyg1","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"cfWXg":[function(require,module,exports) {
// Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeDataTableExpandProps", ()=>makeDataTableExpandProps);
parcelHelpers.export(exports, "VDataTableExpandedKey", ()=>VDataTableExpandedKey);
parcelHelpers.export(exports, "provideExpanded", ()=>provideExpanded);
parcelHelpers.export(exports, "useExpanded", ()=>useExpanded);
var _proxiedModelMjs = require("../../../composables/proxiedModel.mjs"); // Utilities
var _vue = require("vue");
var _indexMjs = require("../../../util/index.mjs"); // Types
const makeDataTableExpandProps = (0, _indexMjs.propsFactory)({
    expandOnClick: Boolean,
    showExpand: Boolean,
    expanded: {
        type: Array,
        default: ()=>[]
    }
}, "DataTable-expand");
const VDataTableExpandedKey = Symbol.for("vuetify:datatable:expanded");
function provideExpanded(props) {
    const expandOnClick = (0, _vue.toRef)(props, "expandOnClick");
    const expanded = (0, _proxiedModelMjs.useProxiedModel)(props, "expanded", props.expanded, (v)=>{
        return new Set(v);
    }, (v)=>{
        return [
            ...v.values()
        ];
    });
    function expand(item, value) {
        const newExpanded = new Set(expanded.value);
        if (!value) newExpanded.delete(item.value);
        else newExpanded.add(item.value);
        expanded.value = newExpanded;
    }
    function isExpanded(item) {
        return expanded.value.has(item.value);
    }
    function toggleExpand(item) {
        expand(item, !isExpanded(item));
    }
    const data = {
        expand,
        expanded,
        expandOnClick,
        isExpanded,
        toggleExpand
    };
    (0, _vue.provide)(VDataTableExpandedKey, data);
    return data;
}
function useExpanded() {
    const data = (0, _vue.inject)(VDataTableExpandedKey);
    if (!data) throw new Error("foo");
    return data;
}

},{"../../../composables/proxiedModel.mjs":"huwLk","vue":"gCTam","../../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"4bxDC":[function(require,module,exports) {
// Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeDataTableGroupProps", ()=>makeDataTableGroupProps);
parcelHelpers.export(exports, "createGroupBy", ()=>createGroupBy);
parcelHelpers.export(exports, "provideGroupBy", ()=>provideGroupBy);
parcelHelpers.export(exports, "useGroupBy", ()=>useGroupBy);
parcelHelpers.export(exports, "useGroupedItems", ()=>useGroupedItems);
var _proxiedModelMjs = require("../../../composables/proxiedModel.mjs"); // Utilities
var _vue = require("vue");
var _indexMjs = require("../../../util/index.mjs"); // Types
const makeDataTableGroupProps = (0, _indexMjs.propsFactory)({
    groupBy: {
        type: Array,
        default: ()=>[]
    }
}, "DataTable-group");
const VDataTableGroupSymbol = Symbol.for("vuetify:data-table-group");
function createGroupBy(props) {
    const groupBy = (0, _proxiedModelMjs.useProxiedModel)(props, "groupBy");
    return {
        groupBy
    };
}
function provideGroupBy(options) {
    const { disableSort, groupBy, sortBy } = options;
    const opened = (0, _vue.ref)(new Set());
    const sortByWithGroups = (0, _vue.computed)(()=>{
        return groupBy.value.map((val)=>({
                ...val,
                order: val.order ?? false
            })).concat(disableSort?.value ? [] : sortBy.value);
    });
    function isGroupOpen(group) {
        return opened.value.has(group.id);
    }
    function toggleGroup(group) {
        const newOpened = new Set(opened.value);
        if (!isGroupOpen(group)) newOpened.add(group.id);
        else newOpened.delete(group.id);
        opened.value = newOpened;
    }
    function extractRows(items) {
        function dive(group) {
            const arr = [];
            for (const item of group.items)if ("type" in item && item.type === "group") arr.push(...dive(item));
            else arr.push(item);
            return arr;
        }
        return dive({
            type: "group",
            items,
            id: "dummy",
            key: "dummy",
            value: "dummy",
            depth: 0
        });
    }
    // onBeforeMount(() => {
    //   for (const key of groupedItems.value.keys()) {
    //     opened.value.add(key)
    //   }
    // })
    const data = {
        sortByWithGroups,
        toggleGroup,
        opened,
        groupBy,
        extractRows,
        isGroupOpen
    };
    (0, _vue.provide)(VDataTableGroupSymbol, data);
    return data;
}
function useGroupBy() {
    const data = (0, _vue.inject)(VDataTableGroupSymbol);
    if (!data) throw new Error("Missing group!");
    return data;
}
function groupItemsByProperty(items, groupBy) {
    if (!items.length) return [];
    const groups = new Map();
    for (const item of items){
        const value = (0, _indexMjs.getObjectValueByPath)(item.raw, groupBy);
        if (!groups.has(value)) groups.set(value, []);
        groups.get(value).push(item);
    }
    return groups;
}
function groupItems(items, groupBy) {
    let depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
    let prefix = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "root";
    if (!groupBy.length) return [];
    const groupedItems = groupItemsByProperty(items, groupBy[0]);
    const groups = [];
    const rest = groupBy.slice(1);
    groupedItems.forEach((items, value)=>{
        const key = groupBy[0];
        const id = `${prefix}_${key}_${value}`;
        groups.push({
            depth,
            id,
            key,
            value,
            items: rest.length ? groupItems(items, rest, depth + 1, id) : items,
            type: "group"
        });
    });
    return groups;
}
function flattenItems(items, opened) {
    const flatItems = [];
    for (const item of items)// TODO: make this better
    if ("type" in item && item.type === "group") {
        if (item.value != null) flatItems.push(item);
        if (opened.has(item.id) || item.value == null) flatItems.push(...flattenItems(item.items, opened));
    } else flatItems.push(item);
    return flatItems;
}
function useGroupedItems(items, groupBy, opened) {
    const flatItems = (0, _vue.computed)(()=>{
        if (!groupBy.value.length) return items.value;
        const groupedItems = groupItems(items.value, groupBy.value.map((item)=>item.key));
        return flattenItems(groupedItems, opened.value);
    });
    return {
        flatItems
    };
}

},{"../../../composables/proxiedModel.mjs":"huwLk","vue":"gCTam","../../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"9Xhsu":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useOptions", ()=>useOptions);
var _vue = require("vue");
var _indexMjs = require("../../../util/index.mjs"); // Types
function useOptions(_ref) {
    let { page, itemsPerPage, sortBy, groupBy, search } = _ref;
    const vm = (0, _indexMjs.getCurrentInstance)("VDataTable");
    const options = (0, _vue.computed)(()=>({
            page: page.value,
            itemsPerPage: itemsPerPage.value,
            sortBy: sortBy.value,
            groupBy: groupBy.value,
            search: search.value
        }));
    let oldOptions = null;
    (0, _vue.watch)(options, ()=>{
        if ((0, _indexMjs.deepEqual)(oldOptions, options.value)) return;
        // Reset page when searching
        if (oldOptions && oldOptions.search !== options.value.search) page.value = 1;
        vm.emit("update:options", options.value);
        oldOptions = options.value;
    }, {
        deep: true,
        immediate: true
    });
}

},{"vue":"gCTam","../../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"5g37V":[function(require,module,exports) {
// Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeDataTablePaginateProps", ()=>makeDataTablePaginateProps);
parcelHelpers.export(exports, "createPagination", ()=>createPagination);
parcelHelpers.export(exports, "providePagination", ()=>providePagination);
parcelHelpers.export(exports, "usePagination", ()=>usePagination);
parcelHelpers.export(exports, "usePaginatedItems", ()=>usePaginatedItems);
var _proxiedModelMjs = require("../../../composables/proxiedModel.mjs"); // Utilities
var _vue = require("vue");
var _indexMjs = require("../../../util/index.mjs"); // Types
const makeDataTablePaginateProps = (0, _indexMjs.propsFactory)({
    page: {
        type: [
            Number,
            String
        ],
        default: 1
    },
    itemsPerPage: {
        type: [
            Number,
            String
        ],
        default: 10
    }
}, "DataTable-paginate");
const VDataTablePaginationSymbol = Symbol.for("vuetify:data-table-pagination");
function createPagination(props) {
    const page = (0, _proxiedModelMjs.useProxiedModel)(props, "page", undefined, (value)=>+(value ?? 1));
    const itemsPerPage = (0, _proxiedModelMjs.useProxiedModel)(props, "itemsPerPage", undefined, (value)=>+(value ?? 10));
    return {
        page,
        itemsPerPage
    };
}
function providePagination(options) {
    const { page, itemsPerPage, itemsLength } = options;
    const startIndex = (0, _vue.computed)(()=>{
        if (itemsPerPage.value === -1) return 0;
        return itemsPerPage.value * (page.value - 1);
    });
    const stopIndex = (0, _vue.computed)(()=>{
        if (itemsPerPage.value === -1) return itemsLength.value;
        return Math.min(itemsLength.value, startIndex.value + itemsPerPage.value);
    });
    const pageCount = (0, _vue.computed)(()=>{
        if (itemsPerPage.value === -1 || itemsLength.value === 0) return 1;
        return Math.ceil(itemsLength.value / itemsPerPage.value);
    });
    (0, _vue.watchEffect)(()=>{
        if (page.value > pageCount.value) page.value = pageCount.value;
    });
    function setItemsPerPage(value) {
        itemsPerPage.value = value;
        page.value = 1;
    }
    function nextPage() {
        page.value = (0, _indexMjs.clamp)(page.value + 1, 1, pageCount.value);
    }
    function prevPage() {
        page.value = (0, _indexMjs.clamp)(page.value - 1, 1, pageCount.value);
    }
    function setPage(value) {
        page.value = (0, _indexMjs.clamp)(value, 1, pageCount.value);
    }
    const data = {
        page,
        itemsPerPage,
        startIndex,
        stopIndex,
        pageCount,
        itemsLength,
        nextPage,
        prevPage,
        setPage,
        setItemsPerPage
    };
    (0, _vue.provide)(VDataTablePaginationSymbol, data);
    return data;
}
function usePagination() {
    const data = (0, _vue.inject)(VDataTablePaginationSymbol);
    if (!data) throw new Error("Missing pagination!");
    return data;
}
function usePaginatedItems(options) {
    const vm = (0, _indexMjs.getCurrentInstance)("usePaginatedItems");
    const { items, startIndex, stopIndex, itemsPerPage } = options;
    const paginatedItems = (0, _vue.computed)(()=>{
        if (itemsPerPage.value <= 0) return items.value;
        return items.value.slice(startIndex.value, stopIndex.value);
    });
    (0, _vue.watch)(paginatedItems, (val)=>{
        vm.emit("update:currentItems", val);
    });
    return {
        paginatedItems
    };
}

},{"../../../composables/proxiedModel.mjs":"huwLk","vue":"gCTam","../../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"2IxTD":[function(require,module,exports) {
// Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeDataTableSelectProps", ()=>makeDataTableSelectProps);
parcelHelpers.export(exports, "VDataTableSelectionSymbol", ()=>VDataTableSelectionSymbol);
parcelHelpers.export(exports, "provideSelection", ()=>provideSelection);
parcelHelpers.export(exports, "useSelection", ()=>useSelection);
var _proxiedModelMjs = require("../../../composables/proxiedModel.mjs"); // Utilities
var _vue = require("vue");
var _indexMjs = require("../../../util/index.mjs"); // Types
const singleSelectStrategy = {
    showSelectAll: false,
    allSelected: ()=>[],
    select: (_ref)=>{
        let { items, value } = _ref;
        return new Set(value ? [
            items[0]?.value
        ] : []);
    },
    selectAll: (_ref2)=>{
        let { selected } = _ref2;
        return selected;
    }
};
const pageSelectStrategy = {
    showSelectAll: true,
    allSelected: (_ref3)=>{
        let { currentPage } = _ref3;
        return currentPage;
    },
    select: (_ref4)=>{
        let { items, value, selected } = _ref4;
        for (const item of items)if (value) selected.add(item.value);
        else selected.delete(item.value);
        return selected;
    },
    selectAll: (_ref5)=>{
        let { value, currentPage, selected } = _ref5;
        return pageSelectStrategy.select({
            items: currentPage,
            value,
            selected
        });
    }
};
const allSelectStrategy = {
    showSelectAll: true,
    allSelected: (_ref6)=>{
        let { allItems } = _ref6;
        return allItems;
    },
    select: (_ref7)=>{
        let { items, value, selected } = _ref7;
        for (const item of items)if (value) selected.add(item.value);
        else selected.delete(item.value);
        return selected;
    },
    selectAll: (_ref8)=>{
        let { value, allItems, selected } = _ref8;
        return allSelectStrategy.select({
            items: allItems,
            value,
            selected
        });
    }
};
const makeDataTableSelectProps = (0, _indexMjs.propsFactory)({
    showSelect: Boolean,
    selectStrategy: {
        type: [
            String,
            Object
        ],
        default: "page"
    },
    modelValue: {
        type: Array,
        default: ()=>[]
    },
    valueComparator: {
        type: Function,
        default: (0, _indexMjs.deepEqual)
    }
}, "DataTable-select");
const VDataTableSelectionSymbol = Symbol.for("vuetify:data-table-selection");
function provideSelection(props, _ref9) {
    let { allItems, currentPage } = _ref9;
    const selected = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue", props.modelValue, (v)=>{
        return new Set((0, _indexMjs.wrapInArray)(v).map((v)=>{
            return allItems.value.find((item)=>props.valueComparator(v, item.value))?.value ?? v;
        }));
    }, (v)=>{
        return [
            ...v.values()
        ];
    });
    const allSelectable = (0, _vue.computed)(()=>allItems.value.filter((item)=>item.selectable));
    const currentPageSelectable = (0, _vue.computed)(()=>currentPage.value.filter((item)=>item.selectable));
    const selectStrategy = (0, _vue.computed)(()=>{
        if (typeof props.selectStrategy === "object") return props.selectStrategy;
        switch(props.selectStrategy){
            case "single":
                return singleSelectStrategy;
            case "all":
                return allSelectStrategy;
            case "page":
            default:
                return pageSelectStrategy;
        }
    });
    function isSelected(items) {
        return (0, _indexMjs.wrapInArray)(items).every((item)=>selected.value.has(item.value));
    }
    function isSomeSelected(items) {
        return (0, _indexMjs.wrapInArray)(items).some((item)=>selected.value.has(item.value));
    }
    function select(items, value) {
        const newSelected = selectStrategy.value.select({
            items,
            value,
            selected: new Set(selected.value)
        });
        selected.value = newSelected;
    }
    function toggleSelect(item) {
        select([
            item
        ], !isSelected([
            item
        ]));
    }
    function selectAll(value) {
        const newSelected = selectStrategy.value.selectAll({
            value,
            allItems: allSelectable.value,
            currentPage: currentPageSelectable.value,
            selected: new Set(selected.value)
        });
        selected.value = newSelected;
    }
    const someSelected = (0, _vue.computed)(()=>selected.value.size > 0);
    const allSelected = (0, _vue.computed)(()=>{
        const items = selectStrategy.value.allSelected({
            allItems: allSelectable.value,
            currentPage: currentPageSelectable.value
        });
        return !!items.length && isSelected(items);
    });
    const showSelectAll = (0, _vue.computed)(()=>selectStrategy.value.showSelectAll);
    const data = {
        toggleSelect,
        select,
        selectAll,
        isSelected,
        isSomeSelected,
        someSelected,
        allSelected,
        showSelectAll
    };
    (0, _vue.provide)(VDataTableSelectionSymbol, data);
    return data;
}
function useSelection() {
    const data = (0, _vue.inject)(VDataTableSelectionSymbol);
    if (!data) throw new Error("Missing selection!");
    return data;
}

},{"../../../composables/proxiedModel.mjs":"huwLk","vue":"gCTam","../../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"82x7K":[function(require,module,exports) {
// Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeDataTableSortProps", ()=>makeDataTableSortProps);
parcelHelpers.export(exports, "createSort", ()=>createSort);
parcelHelpers.export(exports, "provideSort", ()=>provideSort);
parcelHelpers.export(exports, "useSort", ()=>useSort);
// TODO: abstract into project composable
parcelHelpers.export(exports, "useSortedItems", ()=>useSortedItems);
parcelHelpers.export(exports, "sortItems", ()=>sortItems);
var _indexMjs = require("../../../composables/index.mjs");
var _proxiedModelMjs = require("../../../composables/proxiedModel.mjs"); // Utilities
var _vue = require("vue");
var _indexMjs1 = require("../../../util/index.mjs"); // Types
const makeDataTableSortProps = (0, _indexMjs1.propsFactory)({
    sortBy: {
        type: Array,
        default: ()=>[]
    },
    customKeySort: Object,
    multiSort: Boolean,
    mustSort: Boolean
}, "DataTable-sort");
const VDataTableSortSymbol = Symbol.for("vuetify:data-table-sort");
function createSort(props) {
    const sortBy = (0, _proxiedModelMjs.useProxiedModel)(props, "sortBy");
    const mustSort = (0, _vue.toRef)(props, "mustSort");
    const multiSort = (0, _vue.toRef)(props, "multiSort");
    return {
        sortBy,
        mustSort,
        multiSort
    };
}
function provideSort(options) {
    const { sortBy, mustSort, multiSort, page } = options;
    const toggleSort = (column)=>{
        if (column.key == null) return;
        let newSortBy = sortBy.value.map((x)=>({
                ...x
            })) ?? [];
        const item = newSortBy.find((x)=>x.key === column.key);
        if (!item) {
            if (multiSort.value) newSortBy = [
                ...newSortBy,
                {
                    key: column.key,
                    order: "asc"
                }
            ];
            else newSortBy = [
                {
                    key: column.key,
                    order: "asc"
                }
            ];
        } else if (item.order === "desc") {
            if (mustSort.value) item.order = "asc";
            else newSortBy = newSortBy.filter((x)=>x.key !== column.key);
        } else item.order = "desc";
        sortBy.value = newSortBy;
        if (page) page.value = 1;
    };
    function isSorted(column) {
        return !!sortBy.value.find((item)=>item.key === column.key);
    }
    const data = {
        sortBy,
        toggleSort,
        isSorted
    };
    (0, _vue.provide)(VDataTableSortSymbol, data);
    return data;
}
function useSort() {
    const data = (0, _vue.inject)(VDataTableSortSymbol);
    if (!data) throw new Error("Missing sort!");
    return data;
}
function useSortedItems(props, items, sortBy, options) {
    const locale = (0, _indexMjs.useLocale)();
    const sortedItems = (0, _vue.computed)(()=>{
        if (!sortBy.value.length) return items.value;
        return sortItems(items.value, sortBy.value, locale.current.value, {
            transform: options?.transform,
            sortFunctions: {
                ...props.customKeySort,
                ...options?.sortFunctions?.value
            },
            sortRawFunctions: options?.sortRawFunctions?.value
        });
    });
    return {
        sortedItems
    };
}
function sortItems(items, sortByItems, locale, options) {
    const stringCollator = new Intl.Collator(locale, {
        sensitivity: "accent",
        usage: "sort"
    });
    const transformedItems = items.map((item)=>[
            item,
            options?.transform ? options.transform(item) : item
        ]);
    return transformedItems.sort((a, b)=>{
        for(let i = 0; i < sortByItems.length; i++){
            let hasCustomResult = false;
            const sortKey = sortByItems[i].key;
            const sortOrder = sortByItems[i].order ?? "asc";
            if (sortOrder === false) continue;
            let sortA = (0, _indexMjs1.getObjectValueByPath)(a[1], sortKey);
            let sortB = (0, _indexMjs1.getObjectValueByPath)(b[1], sortKey);
            let sortARaw = a[0].raw;
            let sortBRaw = b[0].raw;
            if (sortOrder === "desc") {
                [sortA, sortB] = [
                    sortB,
                    sortA
                ];
                [sortARaw, sortBRaw] = [
                    sortBRaw,
                    sortARaw
                ];
            }
            if (options?.sortRawFunctions?.[sortKey]) {
                const customResult = options.sortRawFunctions[sortKey](sortARaw, sortBRaw);
                if (customResult == null) continue;
                hasCustomResult = true;
                if (customResult) return customResult;
            }
            if (options?.sortFunctions?.[sortKey]) {
                const customResult = options.sortFunctions[sortKey](sortA, sortB);
                if (customResult == null) continue;
                hasCustomResult = true;
                if (customResult) return customResult;
            }
            if (hasCustomResult) continue;
            // Dates should be compared numerically
            if (sortA instanceof Date && sortB instanceof Date) return sortA.getTime() - sortB.getTime();
            [sortA, sortB] = [
                sortA,
                sortB
            ].map((s)=>s != null ? s.toString().toLocaleLowerCase() : s);
            if (sortA !== sortB) {
                if ((0, _indexMjs1.isEmpty)(sortA) && (0, _indexMjs1.isEmpty)(sortB)) return 0;
                if ((0, _indexMjs1.isEmpty)(sortA)) return -1;
                if ((0, _indexMjs1.isEmpty)(sortB)) return 1;
                if (!isNaN(sortA) && !isNaN(sortB)) return Number(sortA) - Number(sortB);
                return stringCollator.compare(sortA, sortB);
            }
        }
        return 0;
    }).map((_ref)=>{
        let [item] = _ref;
        return item;
    });
}

},{"../../../composables/index.mjs":"fthaS","../../../composables/proxiedModel.mjs":"huwLk","vue":"gCTam","../../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"3DoB3":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeDataIteratorItemsProps", ()=>makeDataIteratorItemsProps);
parcelHelpers.export(exports, "transformItem", ()=>transformItem);
parcelHelpers.export(exports, "transformItems", ()=>transformItems);
parcelHelpers.export(exports, "useDataIteratorItems", ()=>useDataIteratorItems);
var _vue = require("vue");
var _indexMjs = require("../../../util/index.mjs"); // Types
const makeDataIteratorItemsProps = (0, _indexMjs.propsFactory)({
    items: {
        type: Array,
        default: ()=>[]
    },
    itemValue: {
        type: [
            String,
            Array,
            Function
        ],
        default: "id"
    },
    itemSelectable: {
        type: [
            String,
            Array,
            Function
        ],
        default: null
    },
    returnObject: Boolean
}, "DataIterator-items");
function transformItem(props, item) {
    const value = props.returnObject ? item : (0, _indexMjs.getPropertyFromItem)(item, props.itemValue);
    const selectable = (0, _indexMjs.getPropertyFromItem)(item, props.itemSelectable, true);
    return {
        type: "item",
        value,
        selectable,
        raw: item
    };
}
function transformItems(props, items) {
    const array = [];
    for (const item of items)array.push(transformItem(props, item));
    return array;
}
function useDataIteratorItems(props) {
    const items = (0, _vue.computed)(()=>transformItems(props, props.items));
    return {
        items
    };
}

},{"vue":"gCTam","../../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"8k1sD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VDataTable", ()=>(0, _vdataTableMjs.VDataTable));
parcelHelpers.export(exports, "VDataTableHeaders", ()=>(0, _vdataTableHeadersMjs.VDataTableHeaders));
parcelHelpers.export(exports, "VDataTableFooter", ()=>(0, _vdataTableFooterMjs.VDataTableFooter));
parcelHelpers.export(exports, "VDataTableRows", ()=>(0, _vdataTableRowsMjs.VDataTableRows));
parcelHelpers.export(exports, "VDataTableRow", ()=>(0, _vdataTableRowMjs.VDataTableRow));
parcelHelpers.export(exports, "VDataTableVirtual", ()=>(0, _vdataTableVirtualMjs.VDataTableVirtual));
parcelHelpers.export(exports, "VDataTableServer", ()=>(0, _vdataTableServerMjs.VDataTableServer));
var _vdataTableMjs = require("./VDataTable.mjs");
var _vdataTableHeadersMjs = require("./VDataTableHeaders.mjs");
var _vdataTableFooterMjs = require("./VDataTableFooter.mjs");
var _vdataTableRowsMjs = require("./VDataTableRows.mjs");
var _vdataTableRowMjs = require("./VDataTableRow.mjs");
var _vdataTableVirtualMjs = require("./VDataTableVirtual.mjs");
var _vdataTableServerMjs = require("./VDataTableServer.mjs");

},{"./VDataTable.mjs":"kKHGP","./VDataTableHeaders.mjs":"iO3Mg","./VDataTableFooter.mjs":"lNgce","./VDataTableRows.mjs":"i83nK","./VDataTableRow.mjs":"i0QEN","./VDataTableVirtual.mjs":"8udMH","./VDataTableServer.mjs":"9dRIM","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"kKHGP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeDataTableProps", ()=>makeDataTableProps);
parcelHelpers.export(exports, "makeVDataTableProps", ()=>makeVDataTableProps);
parcelHelpers.export(exports, "VDataTable", ()=>VDataTable);
var _vue = require("vue");
// Styles
var _vdataTableCss = require("./VDataTable.css");
// Components
var _vdataTableFooterMjs = require("./VDataTableFooter.mjs");
var _vdataTableHeadersMjs = require("./VDataTableHeaders.mjs");
var _vdataTableRowsMjs = require("./VDataTableRows.mjs");
var _indexMjs = require("../VDivider/index.mjs");
var _vtableMjs = require("../VTable/VTable.mjs"); // Composables
var _expandMjs = require("./composables/expand.mjs");
var _groupMjs = require("./composables/group.mjs");
var _headersMjs = require("./composables/headers.mjs");
var _itemsMjs = require("./composables/items.mjs");
var _optionsMjs = require("./composables/options.mjs");
var _paginateMjs = require("./composables/paginate.mjs");
var _selectMjs = require("./composables/select.mjs");
var _sortMjs = require("./composables/sort.mjs");
var _defaultsMjs = require("../../composables/defaults.mjs");
var _filterMjs = require("../../composables/filter.mjs"); // Utilities
var _indexMjs1 = require("../../util/index.mjs"); // Types
const makeDataTableProps = (0, _indexMjs1.propsFactory)({
    ...(0, _vdataTableRowsMjs.makeVDataTableRowsProps)(),
    hideDefaultBody: Boolean,
    hideDefaultFooter: Boolean,
    hideDefaultHeader: Boolean,
    width: [
        String,
        Number
    ],
    search: String,
    ...(0, _expandMjs.makeDataTableExpandProps)(),
    ...(0, _groupMjs.makeDataTableGroupProps)(),
    ...(0, _headersMjs.makeDataTableHeaderProps)(),
    ...(0, _itemsMjs.makeDataTableItemsProps)(),
    ...(0, _selectMjs.makeDataTableSelectProps)(),
    ...(0, _sortMjs.makeDataTableSortProps)(),
    ...(0, _vdataTableHeadersMjs.makeVDataTableHeadersProps)(),
    ...(0, _vtableMjs.makeVTableProps)()
}, "DataTable");
const makeVDataTableProps = (0, _indexMjs1.propsFactory)({
    ...(0, _paginateMjs.makeDataTablePaginateProps)(),
    ...makeDataTableProps(),
    ...(0, _filterMjs.makeFilterProps)(),
    ...(0, _vdataTableFooterMjs.makeVDataTableFooterProps)()
}, "VDataTable");
const VDataTable = (0, _indexMjs1.genericComponent)()({
    name: "VDataTable",
    props: makeVDataTableProps(),
    emits: {
        "update:modelValue": (value)=>true,
        "update:page": (value)=>true,
        "update:itemsPerPage": (value)=>true,
        "update:sortBy": (value)=>true,
        "update:options": (value)=>true,
        "update:groupBy": (value)=>true,
        "update:expanded": (value)=>true,
        "update:currentItems": (value)=>true
    },
    setup (props, _ref) {
        let { attrs, slots } = _ref;
        const { groupBy } = (0, _groupMjs.createGroupBy)(props);
        const { sortBy, multiSort, mustSort } = (0, _sortMjs.createSort)(props);
        const { page, itemsPerPage } = (0, _paginateMjs.createPagination)(props);
        const { disableSort } = (0, _vue.toRefs)(props);
        const { columns, headers, sortFunctions, sortRawFunctions, filterFunctions } = (0, _headersMjs.createHeaders)(props, {
            groupBy,
            showSelect: (0, _vue.toRef)(props, "showSelect"),
            showExpand: (0, _vue.toRef)(props, "showExpand")
        });
        const { items } = (0, _itemsMjs.useDataTableItems)(props, columns);
        const search = (0, _vue.toRef)(props, "search");
        const { filteredItems } = (0, _filterMjs.useFilter)(props, items, search, {
            transform: (item)=>item.columns,
            customKeyFilter: filterFunctions
        });
        const { toggleSort } = (0, _sortMjs.provideSort)({
            sortBy,
            multiSort,
            mustSort,
            page
        });
        const { sortByWithGroups, opened, extractRows, isGroupOpen, toggleGroup } = (0, _groupMjs.provideGroupBy)({
            groupBy,
            sortBy,
            disableSort
        });
        const { sortedItems } = (0, _sortMjs.useSortedItems)(props, filteredItems, sortByWithGroups, {
            transform: (item)=>({
                    ...item.raw,
                    ...item.columns
                }),
            sortFunctions,
            sortRawFunctions
        });
        const { flatItems } = (0, _groupMjs.useGroupedItems)(sortedItems, groupBy, opened);
        const itemsLength = (0, _vue.computed)(()=>flatItems.value.length);
        const { startIndex, stopIndex, pageCount, setItemsPerPage } = (0, _paginateMjs.providePagination)({
            page,
            itemsPerPage,
            itemsLength
        });
        const { paginatedItems } = (0, _paginateMjs.usePaginatedItems)({
            items: flatItems,
            startIndex,
            stopIndex,
            itemsPerPage
        });
        const paginatedItemsWithoutGroups = (0, _vue.computed)(()=>extractRows(paginatedItems.value));
        const { isSelected, select, selectAll, toggleSelect, someSelected, allSelected } = (0, _selectMjs.provideSelection)(props, {
            allItems: items,
            currentPage: paginatedItemsWithoutGroups
        });
        const { isExpanded, toggleExpand } = (0, _expandMjs.provideExpanded)(props);
        (0, _optionsMjs.useOptions)({
            page,
            itemsPerPage,
            sortBy,
            groupBy,
            search
        });
        (0, _defaultsMjs.provideDefaults)({
            VDataTableRows: {
                hideNoData: (0, _vue.toRef)(props, "hideNoData"),
                noDataText: (0, _vue.toRef)(props, "noDataText"),
                loading: (0, _vue.toRef)(props, "loading"),
                loadingText: (0, _vue.toRef)(props, "loadingText")
            }
        });
        const slotProps = (0, _vue.computed)(()=>({
                page: page.value,
                itemsPerPage: itemsPerPage.value,
                sortBy: sortBy.value,
                pageCount: pageCount.value,
                toggleSort,
                setItemsPerPage,
                someSelected: someSelected.value,
                allSelected: allSelected.value,
                isSelected,
                select,
                selectAll,
                toggleSelect,
                isExpanded,
                toggleExpand,
                isGroupOpen,
                toggleGroup,
                items: paginatedItemsWithoutGroups.value.map((item)=>item.raw),
                internalItems: paginatedItemsWithoutGroups.value,
                groupedItems: paginatedItems.value,
                columns: columns.value,
                headers: headers.value
            }));
        (0, _indexMjs1.useRender)(()=>{
            const dataTableFooterProps = (0, _vdataTableFooterMjs.VDataTableFooter).filterProps(props);
            const dataTableHeadersProps = (0, _vdataTableHeadersMjs.VDataTableHeaders).filterProps(props);
            const dataTableRowsProps = (0, _vdataTableRowsMjs.VDataTableRows).filterProps(props);
            const tableProps = (0, _vtableMjs.VTable).filterProps(props);
            return (0, _vue.createVNode)((0, _vtableMjs.VTable), (0, _vue.mergeProps)({
                "class": [
                    "v-data-table",
                    {
                        "v-data-table--show-select": props.showSelect,
                        "v-data-table--loading": props.loading
                    },
                    props.class
                ],
                "style": props.style
            }, tableProps), {
                top: ()=>slots.top?.(slotProps.value),
                default: ()=>slots.default ? slots.default(slotProps.value) : (0, _vue.createVNode)((0, _vue.Fragment), null, [
                        slots.colgroup?.(slotProps.value),
                        !props.hideDefaultHeader && (0, _vue.createVNode)("thead", {
                            "key": "thead"
                        }, [
                            (0, _vue.createVNode)((0, _vdataTableHeadersMjs.VDataTableHeaders), dataTableHeadersProps, slots)
                        ]),
                        slots.thead?.(slotProps.value),
                        !props.hideDefaultBody && (0, _vue.createVNode)("tbody", null, [
                            slots["body.prepend"]?.(slotProps.value),
                            slots.body ? slots.body(slotProps.value) : (0, _vue.createVNode)((0, _vdataTableRowsMjs.VDataTableRows), (0, _vue.mergeProps)(attrs, dataTableRowsProps, {
                                "items": paginatedItems.value
                            }), slots),
                            slots["body.append"]?.(slotProps.value)
                        ]),
                        slots.tbody?.(slotProps.value),
                        slots.tfoot?.(slotProps.value)
                    ]),
                bottom: ()=>slots.bottom ? slots.bottom(slotProps.value) : !props.hideDefaultFooter && (0, _vue.createVNode)((0, _vue.Fragment), null, [
                        (0, _vue.createVNode)((0, _indexMjs.VDivider), null, null),
                        (0, _vue.createVNode)((0, _vdataTableFooterMjs.VDataTableFooter), dataTableFooterProps, {
                            prepend: slots["footer.prepend"]
                        })
                    ])
            });
        });
        return {};
    }
});

},{"vue":"gCTam","./VDataTable.css":"kF6vt","./VDataTableFooter.mjs":"lNgce","./VDataTableHeaders.mjs":"iO3Mg","./VDataTableRows.mjs":"i83nK","../VDivider/index.mjs":"bj3uM","../VTable/VTable.mjs":"8K1ln","./composables/expand.mjs":"cfWXg","./composables/group.mjs":"4bxDC","./composables/headers.mjs":"5YD9C","./composables/items.mjs":"1YZGS","./composables/options.mjs":"9Xhsu","./composables/paginate.mjs":"5g37V","./composables/select.mjs":"2IxTD","./composables/sort.mjs":"82x7K","../../composables/defaults.mjs":"29Im0","../../composables/filter.mjs":"eW6zz","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"kF6vt":[function() {},{}],"lNgce":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVDataTableFooterProps", ()=>makeVDataTableFooterProps);
parcelHelpers.export(exports, "VDataTableFooter", ()=>VDataTableFooter);
var _vue = require("vue");
// Styles
var _vdataTableFooterCss = require("./VDataTableFooter.css");
// Components
var _indexMjs = require("../VPagination/index.mjs");
var _indexMjs1 = require("../VSelect/index.mjs"); // Composables
var _paginateMjs = require("./composables/paginate.mjs");
var _iconsMjs = require("../../composables/icons.mjs");
var _localeMjs = require("../../composables/locale.mjs"); // Utilities
var _indexMjs2 = require("../../util/index.mjs"); // Types
const makeVDataTableFooterProps = (0, _indexMjs2.propsFactory)({
    prevIcon: {
        type: (0, _iconsMjs.IconValue),
        default: "$prev"
    },
    nextIcon: {
        type: (0, _iconsMjs.IconValue),
        default: "$next"
    },
    firstIcon: {
        type: (0, _iconsMjs.IconValue),
        default: "$first"
    },
    lastIcon: {
        type: (0, _iconsMjs.IconValue),
        default: "$last"
    },
    itemsPerPageText: {
        type: String,
        default: "$vuetify.dataFooter.itemsPerPageText"
    },
    pageText: {
        type: String,
        default: "$vuetify.dataFooter.pageText"
    },
    firstPageLabel: {
        type: String,
        default: "$vuetify.dataFooter.firstPage"
    },
    prevPageLabel: {
        type: String,
        default: "$vuetify.dataFooter.prevPage"
    },
    nextPageLabel: {
        type: String,
        default: "$vuetify.dataFooter.nextPage"
    },
    lastPageLabel: {
        type: String,
        default: "$vuetify.dataFooter.lastPage"
    },
    itemsPerPageOptions: {
        type: Array,
        default: ()=>[
                {
                    value: 10,
                    title: "10"
                },
                {
                    value: 25,
                    title: "25"
                },
                {
                    value: 50,
                    title: "50"
                },
                {
                    value: 100,
                    title: "100"
                },
                {
                    value: -1,
                    title: "$vuetify.dataFooter.itemsPerPageAll"
                }
            ]
    },
    showCurrentPage: Boolean
}, "VDataTableFooter");
const VDataTableFooter = (0, _indexMjs2.genericComponent)()({
    name: "VDataTableFooter",
    props: makeVDataTableFooterProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const { t } = (0, _localeMjs.useLocale)();
        const { page, pageCount, startIndex, stopIndex, itemsLength, itemsPerPage, setItemsPerPage } = (0, _paginateMjs.usePagination)();
        const itemsPerPageOptions = (0, _vue.computed)(()=>props.itemsPerPageOptions.map((option)=>{
                if (typeof option === "number") return {
                    value: option,
                    title: option === -1 ? t("$vuetify.dataFooter.itemsPerPageAll") : String(option)
                };
                return {
                    ...option,
                    title: !isNaN(Number(option.title)) ? option.title : t(option.title)
                };
            }));
        (0, _indexMjs2.useRender)(()=>{
            const paginationProps = (0, _indexMjs.VPagination).filterProps(props);
            return (0, _vue.createVNode)("div", {
                "class": "v-data-table-footer"
            }, [
                slots.prepend?.(),
                (0, _vue.createVNode)("div", {
                    "class": "v-data-table-footer__items-per-page"
                }, [
                    (0, _vue.createVNode)("span", null, [
                        t(props.itemsPerPageText)
                    ]),
                    (0, _vue.createVNode)((0, _indexMjs1.VSelect), {
                        "items": itemsPerPageOptions.value,
                        "modelValue": itemsPerPage.value,
                        "onUpdate:modelValue": (v)=>setItemsPerPage(Number(v)),
                        "density": "compact",
                        "variant": "outlined",
                        "hide-details": true
                    }, null)
                ]),
                (0, _vue.createVNode)("div", {
                    "class": "v-data-table-footer__info"
                }, [
                    (0, _vue.createVNode)("div", null, [
                        t(props.pageText, !itemsLength.value ? 0 : startIndex.value + 1, stopIndex.value, itemsLength.value)
                    ])
                ]),
                (0, _vue.createVNode)("div", {
                    "class": "v-data-table-footer__pagination"
                }, [
                    (0, _vue.createVNode)((0, _indexMjs.VPagination), (0, _vue.mergeProps)({
                        "modelValue": page.value,
                        "onUpdate:modelValue": ($event)=>page.value = $event,
                        "density": "comfortable",
                        "first-aria-label": props.firstPageLabel,
                        "last-aria-label": props.lastPageLabel,
                        "length": pageCount.value,
                        "next-aria-label": props.nextPageLabel,
                        "previous-aria-label": props.prevPageLabel,
                        "rounded": true,
                        "show-first-last-page": true,
                        "total-visible": props.showCurrentPage ? 1 : 0,
                        "variant": "plain"
                    }, paginationProps), null)
                ])
            ]);
        });
        return {};
    }
});

},{"vue":"gCTam","./VDataTableFooter.css":"2GADe","../VPagination/index.mjs":"lmGXi","../VSelect/index.mjs":"bVJdt","./composables/paginate.mjs":"5g37V","../../composables/icons.mjs":"g4kLv","../../composables/locale.mjs":"9rJP0","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"2GADe":[function() {},{}],"lmGXi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VPagination", ()=>(0, _vpaginationMjs.VPagination));
var _vpaginationMjs = require("./VPagination.mjs");

},{"./VPagination.mjs":"eUpWz","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"eUpWz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVPaginationProps", ()=>makeVPaginationProps);
parcelHelpers.export(exports, "VPagination", ()=>VPagination);
var _vue = require("vue");
// Styles
var _vpaginationCss = require("./VPagination.css");
// Components
var _indexMjs = require("../VBtn/index.mjs"); // Composables
var _indexMjs1 = require("../../composables/index.mjs");
var _borderMjs = require("../../composables/border.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _defaultsMjs = require("../../composables/defaults.mjs");
var _densityMjs = require("../../composables/density.mjs");
var _elevationMjs = require("../../composables/elevation.mjs");
var _iconsMjs = require("../../composables/icons.mjs");
var _localeMjs = require("../../composables/locale.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs");
var _refsMjs = require("../../composables/refs.mjs");
var _resizeObserverMjs = require("../../composables/resizeObserver.mjs");
var _roundedMjs = require("../../composables/rounded.mjs");
var _sizeMjs = require("../../composables/size.mjs");
var _tagMjs = require("../../composables/tag.mjs");
var _themeMjs = require("../../composables/theme.mjs");
var _variantMjs = require("../../composables/variant.mjs"); // Utilities
var _indexMjs2 = require("../../util/index.mjs"); // Types
const makeVPaginationProps = (0, _indexMjs2.propsFactory)({
    activeColor: String,
    start: {
        type: [
            Number,
            String
        ],
        default: 1
    },
    modelValue: {
        type: Number,
        default: (props)=>props.start
    },
    disabled: Boolean,
    length: {
        type: [
            Number,
            String
        ],
        default: 1,
        validator: (val)=>val % 1 === 0
    },
    totalVisible: [
        Number,
        String
    ],
    firstIcon: {
        type: (0, _iconsMjs.IconValue),
        default: "$first"
    },
    prevIcon: {
        type: (0, _iconsMjs.IconValue),
        default: "$prev"
    },
    nextIcon: {
        type: (0, _iconsMjs.IconValue),
        default: "$next"
    },
    lastIcon: {
        type: (0, _iconsMjs.IconValue),
        default: "$last"
    },
    ariaLabel: {
        type: String,
        default: "$vuetify.pagination.ariaLabel.root"
    },
    pageAriaLabel: {
        type: String,
        default: "$vuetify.pagination.ariaLabel.page"
    },
    currentPageAriaLabel: {
        type: String,
        default: "$vuetify.pagination.ariaLabel.currentPage"
    },
    firstAriaLabel: {
        type: String,
        default: "$vuetify.pagination.ariaLabel.first"
    },
    previousAriaLabel: {
        type: String,
        default: "$vuetify.pagination.ariaLabel.previous"
    },
    nextAriaLabel: {
        type: String,
        default: "$vuetify.pagination.ariaLabel.next"
    },
    lastAriaLabel: {
        type: String,
        default: "$vuetify.pagination.ariaLabel.last"
    },
    ellipsis: {
        type: String,
        default: "..."
    },
    showFirstLastPage: Boolean,
    ...(0, _borderMjs.makeBorderProps)(),
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _densityMjs.makeDensityProps)(),
    ...(0, _elevationMjs.makeElevationProps)(),
    ...(0, _roundedMjs.makeRoundedProps)(),
    ...(0, _sizeMjs.makeSizeProps)(),
    ...(0, _tagMjs.makeTagProps)({
        tag: "nav"
    }),
    ...(0, _themeMjs.makeThemeProps)(),
    ...(0, _variantMjs.makeVariantProps)({
        variant: "text"
    })
}, "VPagination");
const VPagination = (0, _indexMjs2.genericComponent)()({
    name: "VPagination",
    props: makeVPaginationProps(),
    emits: {
        "update:modelValue": (value)=>true,
        first: (value)=>true,
        prev: (value)=>true,
        next: (value)=>true,
        last: (value)=>true
    },
    setup (props, _ref) {
        let { slots, emit } = _ref;
        const page = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
        const { t, n } = (0, _localeMjs.useLocale)();
        const { isRtl } = (0, _localeMjs.useRtl)();
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const { width } = (0, _indexMjs1.useDisplay)();
        const maxButtons = (0, _vue.shallowRef)(-1);
        (0, _defaultsMjs.provideDefaults)(undefined, {
            scoped: true
        });
        const { resizeRef } = (0, _resizeObserverMjs.useResizeObserver)((entries)=>{
            if (!entries.length) return;
            const { target, contentRect } = entries[0];
            const firstItem = target.querySelector(".v-pagination__list > *");
            if (!firstItem) return;
            const totalWidth = contentRect.width;
            const itemWidth = firstItem.offsetWidth + parseFloat(getComputedStyle(firstItem).marginRight) * 2;
            maxButtons.value = getMax(totalWidth, itemWidth);
        });
        const length = (0, _vue.computed)(()=>parseInt(props.length, 10));
        const start = (0, _vue.computed)(()=>parseInt(props.start, 10));
        const totalVisible = (0, _vue.computed)(()=>{
            if (props.totalVisible != null) return parseInt(props.totalVisible, 10);
            else if (maxButtons.value >= 0) return maxButtons.value;
            return getMax(width.value, 58);
        });
        function getMax(totalWidth, itemWidth) {
            const minButtons = props.showFirstLastPage ? 5 : 3;
            return Math.max(0, Math.floor(// Round to two decimal places to avoid floating point errors
            +((totalWidth - itemWidth * minButtons) / itemWidth).toFixed(2)));
        }
        const range = (0, _vue.computed)(()=>{
            if (length.value <= 0 || isNaN(length.value) || length.value > Number.MAX_SAFE_INTEGER) return [];
            if (totalVisible.value <= 0) return [];
            else if (totalVisible.value === 1) return [
                page.value
            ];
            if (length.value <= totalVisible.value) return (0, _indexMjs2.createRange)(length.value, start.value);
            const even = totalVisible.value % 2 === 0;
            const middle = even ? totalVisible.value / 2 : Math.floor(totalVisible.value / 2);
            const left = even ? middle : middle + 1;
            const right = length.value - middle;
            if (left - page.value >= 0) return [
                ...(0, _indexMjs2.createRange)(Math.max(1, totalVisible.value - 1), start.value),
                props.ellipsis,
                length.value
            ];
            else if (page.value - right >= (even ? 1 : 0)) {
                const rangeLength = totalVisible.value - 1;
                const rangeStart = length.value - rangeLength + start.value;
                return [
                    start.value,
                    props.ellipsis,
                    ...(0, _indexMjs2.createRange)(rangeLength, rangeStart)
                ];
            } else {
                const rangeLength = Math.max(1, totalVisible.value - 3);
                const rangeStart = rangeLength === 1 ? page.value : page.value - Math.ceil(rangeLength / 2) + start.value;
                return [
                    start.value,
                    props.ellipsis,
                    ...(0, _indexMjs2.createRange)(rangeLength, rangeStart),
                    props.ellipsis,
                    length.value
                ];
            }
        });
        // TODO: 'first' | 'prev' | 'next' | 'last' does not work here?
        function setValue(e, value, event) {
            e.preventDefault();
            page.value = value;
            event && emit(event, value);
        }
        const { refs, updateRef } = (0, _refsMjs.useRefs)();
        (0, _defaultsMjs.provideDefaults)({
            VPaginationBtn: {
                color: (0, _vue.toRef)(props, "color"),
                border: (0, _vue.toRef)(props, "border"),
                density: (0, _vue.toRef)(props, "density"),
                size: (0, _vue.toRef)(props, "size"),
                variant: (0, _vue.toRef)(props, "variant"),
                rounded: (0, _vue.toRef)(props, "rounded"),
                elevation: (0, _vue.toRef)(props, "elevation")
            }
        });
        const items = (0, _vue.computed)(()=>{
            return range.value.map((item, index)=>{
                const ref = (e)=>updateRef(e, index);
                if (typeof item === "string") return {
                    isActive: false,
                    key: `ellipsis-${index}`,
                    page: item,
                    props: {
                        ref,
                        ellipsis: true,
                        icon: true,
                        disabled: true
                    }
                };
                else {
                    const isActive = item === page.value;
                    return {
                        isActive,
                        key: item,
                        page: n(item),
                        props: {
                            ref,
                            ellipsis: false,
                            icon: true,
                            disabled: !!props.disabled || +props.length < 2,
                            color: isActive ? props.activeColor : props.color,
                            "aria-current": isActive,
                            "aria-label": t(isActive ? props.currentPageAriaLabel : props.pageAriaLabel, item),
                            onClick: (e)=>setValue(e, item)
                        }
                    };
                }
            });
        });
        const controls = (0, _vue.computed)(()=>{
            const prevDisabled = !!props.disabled || page.value <= start.value;
            const nextDisabled = !!props.disabled || page.value >= start.value + length.value - 1;
            return {
                first: props.showFirstLastPage ? {
                    icon: isRtl.value ? props.lastIcon : props.firstIcon,
                    onClick: (e)=>setValue(e, start.value, "first"),
                    disabled: prevDisabled,
                    "aria-label": t(props.firstAriaLabel),
                    "aria-disabled": prevDisabled
                } : undefined,
                prev: {
                    icon: isRtl.value ? props.nextIcon : props.prevIcon,
                    onClick: (e)=>setValue(e, page.value - 1, "prev"),
                    disabled: prevDisabled,
                    "aria-label": t(props.previousAriaLabel),
                    "aria-disabled": prevDisabled
                },
                next: {
                    icon: isRtl.value ? props.prevIcon : props.nextIcon,
                    onClick: (e)=>setValue(e, page.value + 1, "next"),
                    disabled: nextDisabled,
                    "aria-label": t(props.nextAriaLabel),
                    "aria-disabled": nextDisabled
                },
                last: props.showFirstLastPage ? {
                    icon: isRtl.value ? props.firstIcon : props.lastIcon,
                    onClick: (e)=>setValue(e, start.value + length.value - 1, "last"),
                    disabled: nextDisabled,
                    "aria-label": t(props.lastAriaLabel),
                    "aria-disabled": nextDisabled
                } : undefined
            };
        });
        function updateFocus() {
            const currentIndex = page.value - start.value;
            refs.value[currentIndex]?.$el.focus();
        }
        function onKeydown(e) {
            if (e.key === (0, _indexMjs2.keyValues).left && !props.disabled && page.value > +props.start) {
                page.value = page.value - 1;
                (0, _vue.nextTick)(updateFocus);
            } else if (e.key === (0, _indexMjs2.keyValues).right && !props.disabled && page.value < start.value + length.value - 1) {
                page.value = page.value + 1;
                (0, _vue.nextTick)(updateFocus);
            }
        }
        (0, _indexMjs2.useRender)(()=>(0, _vue.createVNode)(props.tag, {
                "ref": resizeRef,
                "class": [
                    "v-pagination",
                    themeClasses.value,
                    props.class
                ],
                "style": props.style,
                "role": "navigation",
                "aria-label": t(props.ariaLabel),
                "onKeydown": onKeydown,
                "data-test": "v-pagination-root"
            }, {
                default: ()=>[
                        (0, _vue.createVNode)("ul", {
                            "class": "v-pagination__list"
                        }, [
                            props.showFirstLastPage && (0, _vue.createVNode)("li", {
                                "key": "first",
                                "class": "v-pagination__first",
                                "data-test": "v-pagination-first"
                            }, [
                                slots.first ? slots.first(controls.value.first) : (0, _vue.createVNode)((0, _indexMjs.VBtn), (0, _vue.mergeProps)({
                                    "_as": "VPaginationBtn"
                                }, controls.value.first), null)
                            ]),
                            (0, _vue.createVNode)("li", {
                                "key": "prev",
                                "class": "v-pagination__prev",
                                "data-test": "v-pagination-prev"
                            }, [
                                slots.prev ? slots.prev(controls.value.prev) : (0, _vue.createVNode)((0, _indexMjs.VBtn), (0, _vue.mergeProps)({
                                    "_as": "VPaginationBtn"
                                }, controls.value.prev), null)
                            ]),
                            items.value.map((item, index)=>(0, _vue.createVNode)("li", {
                                    "key": item.key,
                                    "class": [
                                        "v-pagination__item",
                                        {
                                            "v-pagination__item--is-active": item.isActive
                                        }
                                    ],
                                    "data-test": "v-pagination-item"
                                }, [
                                    slots.item ? slots.item(item) : (0, _vue.createVNode)((0, _indexMjs.VBtn), (0, _vue.mergeProps)({
                                        "_as": "VPaginationBtn"
                                    }, item.props), {
                                        default: ()=>[
                                                item.page
                                            ]
                                    })
                                ])),
                            (0, _vue.createVNode)("li", {
                                "key": "next",
                                "class": "v-pagination__next",
                                "data-test": "v-pagination-next"
                            }, [
                                slots.next ? slots.next(controls.value.next) : (0, _vue.createVNode)((0, _indexMjs.VBtn), (0, _vue.mergeProps)({
                                    "_as": "VPaginationBtn"
                                }, controls.value.next), null)
                            ]),
                            props.showFirstLastPage && (0, _vue.createVNode)("li", {
                                "key": "last",
                                "class": "v-pagination__last",
                                "data-test": "v-pagination-last"
                            }, [
                                slots.last ? slots.last(controls.value.last) : (0, _vue.createVNode)((0, _indexMjs.VBtn), (0, _vue.mergeProps)({
                                    "_as": "VPaginationBtn"
                                }, controls.value.last), null)
                            ])
                        ])
                    ]
            }));
        return {};
    }
});

},{"vue":"gCTam","./VPagination.css":"1MhrB","../VBtn/index.mjs":"g9s2K","../../composables/index.mjs":"fthaS","../../composables/border.mjs":"iYaxw","../../composables/component.mjs":"4YAxs","../../composables/defaults.mjs":"29Im0","../../composables/density.mjs":"kOsEB","../../composables/elevation.mjs":"aNIiI","../../composables/icons.mjs":"g4kLv","../../composables/locale.mjs":"9rJP0","../../composables/proxiedModel.mjs":"huwLk","../../composables/refs.mjs":"bT1at","../../composables/resizeObserver.mjs":"hIk8t","../../composables/rounded.mjs":"1RfhA","../../composables/size.mjs":"2PnSq","../../composables/tag.mjs":"3LqcC","../../composables/theme.mjs":"c9HGg","../../composables/variant.mjs":"ivQo4","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"1MhrB":[function() {},{}],"bT1at":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// Types
parcelHelpers.export(exports, "useRefs", ()=>useRefs);
var _vue = require("vue");
function useRefs() {
    const refs = (0, _vue.ref)([]);
    (0, _vue.onBeforeUpdate)(()=>refs.value = []);
    function updateRef(e, i) {
        refs.value[i] = e;
    }
    return {
        refs,
        updateRef
    };
}

},{"vue":"gCTam","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"bVJdt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VSelect", ()=>(0, _vselectMjs.VSelect));
var _vselectMjs = require("./VSelect.mjs");

},{"./VSelect.mjs":"lxk2a","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"iO3Mg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVDataTableHeadersProps", ()=>makeVDataTableHeadersProps);
parcelHelpers.export(exports, "VDataTableHeaders", ()=>VDataTableHeaders);
var _vue = require("vue");
// Components
var _vdataTableColumnMjs = require("./VDataTableColumn.mjs");
var _indexMjs = require("../VCheckbox/index.mjs");
var _indexMjs1 = require("../VChip/index.mjs");
var _indexMjs2 = require("../VIcon/index.mjs");
var _indexMjs3 = require("../VSelect/index.mjs"); // Composables
var _headersMjs = require("./composables/headers.mjs");
var _selectMjs = require("./composables/select.mjs");
var _sortMjs = require("./composables/sort.mjs");
var _colorMjs = require("../../composables/color.mjs");
var _displayMjs = require("../../composables/display.mjs");
var _iconsMjs = require("../../composables/icons.mjs");
var _loaderMjs = require("../../composables/loader.mjs");
var _localeMjs = require("../../composables/locale.mjs"); // Utilities
var _indexMjs4 = require("../../util/index.mjs"); // Types
const makeVDataTableHeadersProps = (0, _indexMjs4.propsFactory)({
    color: String,
    sticky: Boolean,
    disableSort: Boolean,
    multiSort: Boolean,
    sortAscIcon: {
        type: (0, _iconsMjs.IconValue),
        default: "$sortAsc"
    },
    sortDescIcon: {
        type: (0, _iconsMjs.IconValue),
        default: "$sortDesc"
    },
    headerProps: {
        type: Object
    },
    ...(0, _displayMjs.makeDisplayProps)(),
    ...(0, _loaderMjs.makeLoaderProps)()
}, "VDataTableHeaders");
const VDataTableHeaders = (0, _indexMjs4.genericComponent)()({
    name: "VDataTableHeaders",
    props: makeVDataTableHeadersProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const { t } = (0, _localeMjs.useLocale)();
        const { toggleSort, sortBy, isSorted } = (0, _sortMjs.useSort)();
        const { someSelected, allSelected, selectAll, showSelectAll } = (0, _selectMjs.useSelection)();
        const { columns, headers } = (0, _headersMjs.useHeaders)();
        const { loaderClasses } = (0, _loaderMjs.useLoader)(props);
        function getFixedStyles(column, y) {
            if (!props.sticky && !column.fixed) return undefined;
            return {
                position: "sticky",
                left: column.fixed ? (0, _indexMjs4.convertToUnit)(column.fixedOffset) : undefined,
                top: props.sticky ? `calc(var(--v-table-header-height) * ${y})` : undefined
            };
        }
        function getSortIcon(column) {
            const item = sortBy.value.find((item)=>item.key === column.key);
            if (!item) return props.sortAscIcon;
            return item.order === "asc" ? props.sortAscIcon : props.sortDescIcon;
        }
        const { backgroundColorClasses, backgroundColorStyles } = (0, _colorMjs.useBackgroundColor)(props, "color");
        const { displayClasses, mobile } = (0, _displayMjs.useDisplay)(props);
        const slotProps = (0, _vue.computed)(()=>({
                headers: headers.value,
                columns: columns.value,
                toggleSort,
                isSorted,
                sortBy: sortBy.value,
                someSelected: someSelected.value,
                allSelected: allSelected.value,
                selectAll,
                getSortIcon
            }));
        const headerCellClasses = (0, _vue.computed)(()=>[
                "v-data-table__th",
                {
                    "v-data-table__th--sticky": props.sticky
                },
                displayClasses.value,
                loaderClasses.value
            ]);
        const VDataTableHeaderCell = (_ref2)=>{
            let { column, x, y } = _ref2;
            const noPadding = column.key === "data-table-select" || column.key === "data-table-expand";
            const headerProps = (0, _vue.mergeProps)(props.headerProps ?? {}, column.headerProps ?? {});
            return (0, _vue.createVNode)((0, _vdataTableColumnMjs.VDataTableColumn), (0, _vue.mergeProps)({
                "tag": "th",
                "align": column.align,
                "class": [
                    {
                        "v-data-table__th--sortable": column.sortable && !props.disableSort,
                        "v-data-table__th--sorted": isSorted(column),
                        "v-data-table__th--fixed": column.fixed
                    },
                    ...headerCellClasses.value
                ],
                "style": {
                    width: (0, _indexMjs4.convertToUnit)(column.width),
                    minWidth: (0, _indexMjs4.convertToUnit)(column.minWidth),
                    maxWidth: (0, _indexMjs4.convertToUnit)(column.maxWidth),
                    ...getFixedStyles(column, y)
                },
                "colspan": column.colspan,
                "rowspan": column.rowspan,
                "onClick": column.sortable ? ()=>toggleSort(column) : undefined,
                "fixed": column.fixed,
                "nowrap": column.nowrap,
                "lastFixed": column.lastFixed,
                "noPadding": noPadding
            }, headerProps), {
                default: ()=>{
                    const columnSlotName = `header.${column.key}`;
                    const columnSlotProps = {
                        column,
                        selectAll,
                        isSorted,
                        toggleSort,
                        sortBy: sortBy.value,
                        someSelected: someSelected.value,
                        allSelected: allSelected.value,
                        getSortIcon
                    };
                    if (slots[columnSlotName]) return slots[columnSlotName](columnSlotProps);
                    if (column.key === "data-table-select") return slots["header.data-table-select"]?.(columnSlotProps) ?? (showSelectAll.value && (0, _vue.createVNode)((0, _indexMjs.VCheckboxBtn), {
                        "modelValue": allSelected.value,
                        "indeterminate": someSelected.value && !allSelected.value,
                        "onUpdate:modelValue": selectAll
                    }, null));
                    return (0, _vue.createVNode)("div", {
                        "class": "v-data-table-header__content"
                    }, [
                        (0, _vue.createVNode)("span", null, [
                            column.title
                        ]),
                        column.sortable && !props.disableSort && (0, _vue.createVNode)((0, _indexMjs2.VIcon), {
                            "key": "icon",
                            "class": "v-data-table-header__sort-icon",
                            "icon": getSortIcon(column)
                        }, null),
                        props.multiSort && isSorted(column) && (0, _vue.createVNode)("div", {
                            "key": "badge",
                            "class": [
                                "v-data-table-header__sort-badge",
                                ...backgroundColorClasses.value
                            ],
                            "style": backgroundColorStyles.value
                        }, [
                            sortBy.value.findIndex((x)=>x.key === column.key) + 1
                        ])
                    ]);
                }
            });
        };
        const VDataTableMobileHeaderCell = ()=>{
            const headerProps = (0, _vue.mergeProps)(props.headerProps ?? {} ?? {});
            const displayItems = (0, _vue.computed)(()=>{
                return columns.value.filter((column)=>column?.sortable && !props.disableSort);
            });
            const appendIcon = (0, _vue.computed)(()=>{
                const showSelectColumn = columns.value.find((column)=>column.key === "data-table-select");
                if (showSelectColumn == null) return;
                return allSelected.value ? "$checkboxOn" : someSelected.value ? "$checkboxIndeterminate" : "$checkboxOff";
            });
            return (0, _vue.createVNode)((0, _vdataTableColumnMjs.VDataTableColumn), (0, _vue.mergeProps)({
                "tag": "th",
                "class": [
                    ...headerCellClasses.value
                ],
                "colspan": headers.value.length + 1
            }, headerProps), {
                default: ()=>[
                        (0, _vue.createVNode)("div", {
                            "class": "v-data-table-header__content"
                        }, [
                            (0, _vue.createVNode)((0, _indexMjs3.VSelect), {
                                "chips": true,
                                "class": "v-data-table__td-sort-select",
                                "clearable": true,
                                "density": "default",
                                "items": displayItems.value,
                                "label": t("$vuetify.dataTable.sortBy"),
                                "multiple": props.multiSort,
                                "variant": "underlined",
                                "onClick:clear": ()=>sortBy.value = [],
                                "appendIcon": appendIcon.value,
                                "onClick:append": ()=>selectAll(!allSelected.value)
                            }, {
                                ...slots,
                                chip: (props)=>(0, _vue.createVNode)((0, _indexMjs1.VChip), {
                                        "onClick": props.item.raw?.sortable ? ()=>toggleSort(props.item.raw) : undefined,
                                        "onMousedown": (e)=>{
                                            e.preventDefault();
                                            e.stopPropagation();
                                        }
                                    }, {
                                        default: ()=>[
                                                props.item.title,
                                                (0, _vue.createVNode)((0, _indexMjs2.VIcon), {
                                                    "class": [
                                                        "v-data-table__td-sort-icon",
                                                        isSorted(props.item.raw) && "v-data-table__td-sort-icon-active"
                                                    ],
                                                    "icon": getSortIcon(props.item.raw),
                                                    "size": "small"
                                                }, null)
                                            ]
                                    })
                            })
                        ])
                    ]
            });
        };
        (0, _indexMjs4.useRender)(()=>{
            return mobile.value ? (0, _vue.createVNode)("tr", null, [
                (0, _vue.createVNode)(VDataTableMobileHeaderCell, null, null)
            ]) : (0, _vue.createVNode)((0, _vue.Fragment), null, [
                slots.headers ? slots.headers(slotProps.value) : headers.value.map((row, y)=>(0, _vue.createVNode)("tr", null, [
                        row.map((column, x)=>(0, _vue.createVNode)(VDataTableHeaderCell, {
                                "column": column,
                                "x": x,
                                "y": y
                            }, null))
                    ])),
                props.loading && (0, _vue.createVNode)("tr", {
                    "class": "v-data-table-progress"
                }, [
                    (0, _vue.createVNode)("th", {
                        "colspan": columns.value.length
                    }, [
                        (0, _vue.createVNode)((0, _loaderMjs.LoaderSlot), {
                            "name": "v-data-table-progress",
                            "absolute": true,
                            "active": true,
                            "color": typeof props.loading === "boolean" ? undefined : props.loading,
                            "indeterminate": true
                        }, {
                            default: slots.loader
                        })
                    ])
                ])
            ]);
        });
    }
});

},{"vue":"gCTam","./VDataTableColumn.mjs":"iBz98","../VCheckbox/index.mjs":"c1Gdu","../VChip/index.mjs":"bLlpp","../VIcon/index.mjs":"5Yjjr","../VSelect/index.mjs":"bVJdt","./composables/headers.mjs":"5YD9C","./composables/select.mjs":"2IxTD","./composables/sort.mjs":"82x7K","../../composables/color.mjs":"6TeQR","../../composables/display.mjs":"bcRjl","../../composables/icons.mjs":"g4kLv","../../composables/loader.mjs":"6m53O","../../composables/locale.mjs":"9rJP0","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"iBz98":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VDataTableColumn", ()=>VDataTableColumn);
var _vue = require("vue");
// Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const VDataTableColumn = (0, _indexMjs.defineFunctionalComponent)({
    align: {
        type: String,
        default: "start"
    },
    fixed: Boolean,
    fixedOffset: [
        Number,
        String
    ],
    height: [
        Number,
        String
    ],
    lastFixed: Boolean,
    noPadding: Boolean,
    tag: String,
    width: [
        Number,
        String
    ],
    maxWidth: [
        Number,
        String
    ],
    nowrap: Boolean
}, (props, _ref)=>{
    let { slots } = _ref;
    const Tag = props.tag ?? "td";
    return (0, _vue.createVNode)(Tag, {
        "class": [
            "v-data-table__td",
            {
                "v-data-table-column--fixed": props.fixed,
                "v-data-table-column--last-fixed": props.lastFixed,
                "v-data-table-column--no-padding": props.noPadding,
                "v-data-table-column--nowrap": props.nowrap
            },
            `v-data-table-column--align-${props.align}`
        ],
        "style": {
            height: (0, _indexMjs.convertToUnit)(props.height),
            width: (0, _indexMjs.convertToUnit)(props.width),
            maxWidth: (0, _indexMjs.convertToUnit)(props.maxWidth),
            left: (0, _indexMjs.convertToUnit)(props.fixedOffset || null)
        }
    }, {
        default: ()=>[
                slots.default?.()
            ]
    });
});

},{"vue":"gCTam","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"5YD9C":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeDataTableHeaderProps", ()=>makeDataTableHeaderProps);
parcelHelpers.export(exports, "VDataTableHeadersSymbol", ()=>VDataTableHeadersSymbol);
parcelHelpers.export(exports, "createHeaders", ()=>createHeaders);
parcelHelpers.export(exports, "useHeaders", ()=>useHeaders);
var _vue = require("vue");
var _indexMjs = require("../../../util/index.mjs"); // Types
const makeDataTableHeaderProps = (0, _indexMjs.propsFactory)({
    headers: Array
}, "DataTable-header");
const VDataTableHeadersSymbol = Symbol.for("vuetify:data-table-headers");
const defaultHeader = {
    title: "",
    sortable: false
};
const defaultActionHeader = {
    ...defaultHeader,
    width: 48
};
function priorityQueue() {
    let arr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    const queue = arr.map((element)=>({
            element,
            priority: 0
        }));
    return {
        enqueue: (element, priority)=>{
            let added = false;
            for(let i = 0; i < queue.length; i++){
                const item = queue[i];
                if (item.priority > priority) {
                    queue.splice(i, 0, {
                        element,
                        priority
                    });
                    added = true;
                    break;
                }
            }
            if (!added) queue.push({
                element,
                priority
            });
        },
        size: ()=>queue.length,
        count: ()=>{
            let count = 0;
            if (!queue.length) return 0;
            const whole = Math.floor(queue[0].priority);
            for(let i = 0; i < queue.length; i++)if (Math.floor(queue[i].priority) === whole) count += 1;
            return count;
        },
        dequeue: ()=>{
            return queue.shift();
        }
    };
}
function extractLeaves(item) {
    let columns = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    if (!item.children) columns.push(item);
    else for (const child of item.children)extractLeaves(child, columns);
    return columns;
}
function extractKeys(headers) {
    let keys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Set();
    for (const item of headers){
        if (item.key) keys.add(item.key);
        if (item.children) extractKeys(item.children, keys);
    }
    return keys;
}
function getDefaultItem(item) {
    if (!item.key) return undefined;
    if (item.key === "data-table-group") return defaultHeader;
    if ([
        "data-table-expand",
        "data-table-select"
    ].includes(item.key)) return defaultActionHeader;
    return undefined;
}
function getDepth(item) {
    let depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    if (!item.children) return depth;
    return Math.max(depth, ...item.children.map((child)=>getDepth(child, depth + 1)));
}
function parseFixedColumns(items) {
    let seenFixed = false;
    function setFixed(item) {
        let parentFixed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
        if (!item) return;
        if (parentFixed) item.fixed = true;
        if (item.fixed) {
            if (item.children) for(let i = item.children.length - 1; i >= 0; i--)setFixed(item.children[i], true);
            else {
                if (!seenFixed) item.lastFixed = true;
                else if (isNaN(+item.width)) (0, _indexMjs.consoleError)(`Multiple fixed columns should have a static width (key: ${item.key})`);
                seenFixed = true;
            }
        } else {
            if (item.children) for(let i = item.children.length - 1; i >= 0; i--)setFixed(item.children[i]);
            else seenFixed = false;
        }
    }
    for(let i = items.length - 1; i >= 0; i--)setFixed(items[i]);
    function setFixedOffset(item) {
        let fixedOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
        if (!item) return fixedOffset;
        if (item.children) {
            item.fixedOffset = fixedOffset;
            for (const child of item.children)fixedOffset = setFixedOffset(child, fixedOffset);
        } else if (item.fixed) {
            item.fixedOffset = fixedOffset;
            fixedOffset += parseFloat(item.width || "0") || 0;
        }
        return fixedOffset;
    }
    let fixedOffset = 0;
    for (const item of items)fixedOffset = setFixedOffset(item, fixedOffset);
}
function parse(items, maxDepth) {
    const headers = [];
    let currentDepth = 0;
    const queue = priorityQueue(items);
    while(queue.size() > 0){
        let rowSize = queue.count();
        const row = [];
        let fraction = 1;
        while(rowSize > 0){
            const { element: item, priority } = queue.dequeue();
            const diff = maxDepth - currentDepth - getDepth(item);
            row.push({
                ...item,
                rowspan: diff ?? 1,
                colspan: item.children ? extractLeaves(item).length : 1
            });
            if (item.children) for (const child of item.children){
                // This internally sorts items that are on the same priority "row"
                const sort = priority % 1 + fraction / Math.pow(10, currentDepth + 2);
                queue.enqueue(child, currentDepth + diff + sort);
            }
            fraction += 1;
            rowSize -= 1;
        }
        currentDepth += 1;
        headers.push(row);
    }
    const columns = items.map((item)=>extractLeaves(item)).flat();
    return {
        columns,
        headers
    };
}
function convertToInternalHeaders(items) {
    const internalHeaders = [];
    for (const item of items){
        const defaultItem = {
            ...getDefaultItem(item),
            ...item
        };
        const key = defaultItem.key ?? (typeof defaultItem.value === "string" ? defaultItem.value : null);
        const value = defaultItem.value ?? key ?? null;
        const internalItem = {
            ...defaultItem,
            key,
            value,
            sortable: defaultItem.sortable ?? (defaultItem.key != null || !!defaultItem.sort),
            children: defaultItem.children ? convertToInternalHeaders(defaultItem.children) : undefined
        };
        internalHeaders.push(internalItem);
    }
    return internalHeaders;
}
function createHeaders(props, options) {
    const headers = (0, _vue.ref)([]);
    const columns = (0, _vue.ref)([]);
    const sortFunctions = (0, _vue.ref)({});
    const sortRawFunctions = (0, _vue.ref)({});
    const filterFunctions = (0, _vue.ref)({});
    (0, _vue.watchEffect)(()=>{
        const _headers = props.headers || Object.keys(props.items[0] ?? {}).map((key)=>({
                key,
                title: (0, _vue.capitalize)(key)
            }));
        const items = _headers.slice();
        const keys = extractKeys(items);
        if (options?.groupBy?.value.length && !keys.has("data-table-group")) items.unshift({
            key: "data-table-group",
            title: "Group"
        });
        if (options?.showSelect?.value && !keys.has("data-table-select")) items.unshift({
            key: "data-table-select"
        });
        if (options?.showExpand?.value && !keys.has("data-table-expand")) items.push({
            key: "data-table-expand"
        });
        const internalHeaders = convertToInternalHeaders(items);
        parseFixedColumns(internalHeaders);
        const maxDepth = Math.max(...internalHeaders.map((item)=>getDepth(item))) + 1;
        const parsed = parse(internalHeaders, maxDepth);
        headers.value = parsed.headers;
        columns.value = parsed.columns;
        const flatHeaders = parsed.headers.flat(1);
        for (const header of flatHeaders){
            if (!header.key) continue;
            if (header.sortable) {
                if (header.sort) sortFunctions.value[header.key] = header.sort;
                if (header.sortRaw) sortRawFunctions.value[header.key] = header.sortRaw;
            }
            if (header.filter) filterFunctions.value[header.key] = header.filter;
        }
    });
    const data = {
        headers,
        columns,
        sortFunctions,
        sortRawFunctions,
        filterFunctions
    };
    (0, _vue.provide)(VDataTableHeadersSymbol, data);
    return data;
}
function useHeaders() {
    const data = (0, _vue.inject)(VDataTableHeadersSymbol);
    if (!data) throw new Error("Missing headers!");
    return data;
}

},{"vue":"gCTam","../../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"i83nK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVDataTableRowsProps", ()=>makeVDataTableRowsProps);
parcelHelpers.export(exports, "VDataTableRows", ()=>VDataTableRows);
var _vue = require("vue");
// Components
var _vdataTableGroupHeaderRowMjs = require("./VDataTableGroupHeaderRow.mjs");
var _vdataTableRowMjs = require("./VDataTableRow.mjs"); // Composables
var _expandMjs = require("./composables/expand.mjs");
var _groupMjs = require("./composables/group.mjs");
var _headersMjs = require("./composables/headers.mjs");
var _selectMjs = require("./composables/select.mjs");
var _displayMjs = require("../../composables/display.mjs");
var _localeMjs = require("../../composables/locale.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const makeVDataTableRowsProps = (0, _indexMjs.propsFactory)({
    loading: [
        Boolean,
        String
    ],
    loadingText: {
        type: String,
        default: "$vuetify.dataIterator.loadingText"
    },
    hideNoData: Boolean,
    items: {
        type: Array,
        default: ()=>[]
    },
    noDataText: {
        type: String,
        default: "$vuetify.noDataText"
    },
    rowProps: [
        Object,
        Function
    ],
    cellProps: [
        Object,
        Function
    ],
    ...(0, _displayMjs.makeDisplayProps)()
}, "VDataTableRows");
const VDataTableRows = (0, _indexMjs.genericComponent)()({
    name: "VDataTableRows",
    inheritAttrs: false,
    props: makeVDataTableRowsProps(),
    setup (props, _ref) {
        let { attrs, slots } = _ref;
        const { columns } = (0, _headersMjs.useHeaders)();
        const { expandOnClick, toggleExpand, isExpanded } = (0, _expandMjs.useExpanded)();
        const { isSelected, toggleSelect } = (0, _selectMjs.useSelection)();
        const { toggleGroup, isGroupOpen } = (0, _groupMjs.useGroupBy)();
        const { t } = (0, _localeMjs.useLocale)();
        const { mobile } = (0, _displayMjs.useDisplay)(props);
        (0, _indexMjs.useRender)(()=>{
            if (props.loading && (!props.items.length || slots.loading)) return (0, _vue.createVNode)("tr", {
                "class": "v-data-table-rows-loading",
                "key": "loading"
            }, [
                (0, _vue.createVNode)("td", {
                    "colspan": columns.value.length
                }, [
                    slots.loading?.() ?? t(props.loadingText)
                ])
            ]);
            if (!props.loading && !props.items.length && !props.hideNoData) return (0, _vue.createVNode)("tr", {
                "class": "v-data-table-rows-no-data",
                "key": "no-data"
            }, [
                (0, _vue.createVNode)("td", {
                    "colspan": columns.value.length
                }, [
                    slots["no-data"]?.() ?? t(props.noDataText)
                ])
            ]);
            return (0, _vue.createVNode)((0, _vue.Fragment), null, [
                props.items.map((item, index)=>{
                    if (item.type === "group") {
                        const slotProps = {
                            index,
                            item,
                            columns: columns.value,
                            isExpanded,
                            toggleExpand,
                            isSelected,
                            toggleSelect,
                            toggleGroup,
                            isGroupOpen
                        };
                        return slots["group-header"] ? slots["group-header"](slotProps) : (0, _vue.createVNode)((0, _vdataTableGroupHeaderRowMjs.VDataTableGroupHeaderRow), (0, _vue.mergeProps)({
                            "key": `group-header_${item.id}`,
                            "item": item
                        }, (0, _indexMjs.getPrefixedEventHandlers)(attrs, ":group-header", ()=>slotProps)), slots);
                    }
                    const slotProps = {
                        index,
                        item: item.raw,
                        internalItem: item,
                        columns: columns.value,
                        isExpanded,
                        toggleExpand,
                        isSelected,
                        toggleSelect
                    };
                    const itemSlotProps = {
                        ...slotProps,
                        props: (0, _vue.mergeProps)({
                            key: `item_${item.key ?? item.index}`,
                            onClick: expandOnClick.value ? ()=>{
                                toggleExpand(item);
                            } : undefined,
                            index,
                            item,
                            cellProps: props.cellProps,
                            mobile: mobile.value
                        }, (0, _indexMjs.getPrefixedEventHandlers)(attrs, ":row", ()=>slotProps), typeof props.rowProps === "function" ? props.rowProps({
                            item: slotProps.item,
                            index: slotProps.index,
                            internalItem: slotProps.internalItem
                        }) : props.rowProps)
                    };
                    return (0, _vue.createVNode)((0, _vue.Fragment), {
                        "key": itemSlotProps.props.key
                    }, [
                        slots.item ? slots.item(itemSlotProps) : (0, _vue.createVNode)((0, _vdataTableRowMjs.VDataTableRow), itemSlotProps.props, slots),
                        isExpanded(item) && slots["expanded-row"]?.(slotProps)
                    ]);
                })
            ]);
        });
        return {};
    }
});

},{"vue":"gCTam","./VDataTableGroupHeaderRow.mjs":"alkiH","./VDataTableRow.mjs":"i0QEN","./composables/expand.mjs":"cfWXg","./composables/group.mjs":"4bxDC","./composables/headers.mjs":"5YD9C","./composables/select.mjs":"2IxTD","../../composables/display.mjs":"bcRjl","../../composables/locale.mjs":"9rJP0","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"alkiH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVDataTableGroupHeaderRowProps", ()=>makeVDataTableGroupHeaderRowProps);
parcelHelpers.export(exports, "VDataTableGroupHeaderRow", ()=>VDataTableGroupHeaderRow);
var _vue = require("vue");
// Components
var _vdataTableColumnMjs = require("./VDataTableColumn.mjs");
var _indexMjs = require("../VBtn/index.mjs");
var _indexMjs1 = require("../VCheckbox/index.mjs"); // Composables
var _groupMjs = require("./composables/group.mjs");
var _headersMjs = require("./composables/headers.mjs");
var _selectMjs = require("./composables/select.mjs"); // Utilities
var _indexMjs2 = require("../../util/index.mjs"); // Types
const makeVDataTableGroupHeaderRowProps = (0, _indexMjs2.propsFactory)({
    item: {
        type: Object,
        required: true
    }
}, "VDataTableGroupHeaderRow");
const VDataTableGroupHeaderRow = (0, _indexMjs2.genericComponent)()({
    name: "VDataTableGroupHeaderRow",
    props: makeVDataTableGroupHeaderRowProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const { isGroupOpen, toggleGroup, extractRows } = (0, _groupMjs.useGroupBy)();
        const { isSelected, isSomeSelected, select } = (0, _selectMjs.useSelection)();
        const { columns } = (0, _headersMjs.useHeaders)();
        const rows = (0, _vue.computed)(()=>{
            return extractRows([
                props.item
            ]);
        });
        return ()=>(0, _vue.createVNode)("tr", {
                "class": "v-data-table-group-header-row",
                "style": {
                    "--v-data-table-group-header-row-depth": props.item.depth
                }
            }, [
                columns.value.map((column)=>{
                    if (column.key === "data-table-group") {
                        const icon = isGroupOpen(props.item) ? "$expand" : "$next";
                        const onClick = ()=>toggleGroup(props.item);
                        return slots["data-table-group"]?.({
                            item: props.item,
                            count: rows.value.length,
                            props: {
                                icon,
                                onClick
                            }
                        }) ?? (0, _vue.createVNode)((0, _vdataTableColumnMjs.VDataTableColumn), {
                            "class": "v-data-table-group-header-row__column"
                        }, {
                            default: ()=>[
                                    (0, _vue.createVNode)((0, _indexMjs.VBtn), {
                                        "size": "small",
                                        "variant": "text",
                                        "icon": icon,
                                        "onClick": onClick
                                    }, null),
                                    (0, _vue.createVNode)("span", null, [
                                        props.item.value
                                    ]),
                                    (0, _vue.createVNode)("span", null, [
                                        (0, _vue.createTextVNode)("("),
                                        rows.value.length,
                                        (0, _vue.createTextVNode)(")")
                                    ])
                                ]
                        });
                    }
                    if (column.key === "data-table-select") {
                        const modelValue = isSelected(rows.value);
                        const indeterminate = isSomeSelected(rows.value) && !modelValue;
                        const selectGroup = (v)=>select(rows.value, v);
                        return slots["data-table-select"]?.({
                            props: {
                                modelValue,
                                indeterminate,
                                "onUpdate:modelValue": selectGroup
                            }
                        }) ?? (0, _vue.createVNode)("td", null, [
                            (0, _vue.createVNode)((0, _indexMjs1.VCheckboxBtn), {
                                "modelValue": modelValue,
                                "indeterminate": indeterminate,
                                "onUpdate:modelValue": selectGroup
                            }, null)
                        ]);
                    }
                    return (0, _vue.createVNode)("td", null, null);
                })
            ]);
    }
});

},{"vue":"gCTam","./VDataTableColumn.mjs":"iBz98","../VBtn/index.mjs":"g9s2K","../VCheckbox/index.mjs":"c1Gdu","./composables/group.mjs":"4bxDC","./composables/headers.mjs":"5YD9C","./composables/select.mjs":"2IxTD","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"i0QEN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVDataTableRowProps", ()=>makeVDataTableRowProps);
parcelHelpers.export(exports, "VDataTableRow", ()=>VDataTableRow);
var _vue = require("vue");
// Components
var _vdataTableColumnMjs = require("./VDataTableColumn.mjs");
var _indexMjs = require("../VBtn/index.mjs");
var _indexMjs1 = require("../VCheckbox/index.mjs"); // Composables
var _expandMjs = require("./composables/expand.mjs");
var _headersMjs = require("./composables/headers.mjs");
var _selectMjs = require("./composables/select.mjs");
var _sortMjs = require("./composables/sort.mjs");
var _displayMjs = require("../../composables/display.mjs"); // Utilities
var _indexMjs2 = require("../../util/index.mjs"); // Types
const makeVDataTableRowProps = (0, _indexMjs2.propsFactory)({
    index: Number,
    item: Object,
    cellProps: [
        Object,
        Function
    ],
    onClick: (0, _indexMjs2.EventProp)(),
    onContextmenu: (0, _indexMjs2.EventProp)(),
    onDblclick: (0, _indexMjs2.EventProp)(),
    ...(0, _displayMjs.makeDisplayProps)()
}, "VDataTableRow");
const VDataTableRow = (0, _indexMjs2.genericComponent)()({
    name: "VDataTableRow",
    props: makeVDataTableRowProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const { displayClasses, mobile } = (0, _displayMjs.useDisplay)(props, "v-data-table__tr");
        const { isSelected, toggleSelect, someSelected, allSelected, selectAll } = (0, _selectMjs.useSelection)();
        const { isExpanded, toggleExpand } = (0, _expandMjs.useExpanded)();
        const { toggleSort, sortBy, isSorted } = (0, _sortMjs.useSort)();
        const { columns } = (0, _headersMjs.useHeaders)();
        (0, _indexMjs2.useRender)(()=>(0, _vue.createVNode)("tr", {
                "class": [
                    "v-data-table__tr",
                    {
                        "v-data-table__tr--clickable": !!(props.onClick || props.onContextmenu || props.onDblclick)
                    },
                    displayClasses.value
                ],
                "onClick": props.onClick,
                "onContextmenu": props.onContextmenu,
                "onDblclick": props.onDblclick
            }, [
                props.item && columns.value.map((column, i)=>{
                    const item = props.item;
                    const slotName = `item.${column.key}`;
                    const headerSlotName = `header.${column.key}`;
                    const slotProps = {
                        index: props.index,
                        item: item.raw,
                        internalItem: item,
                        value: (0, _indexMjs2.getObjectValueByPath)(item.columns, column.key),
                        column,
                        isSelected,
                        toggleSelect,
                        isExpanded,
                        toggleExpand
                    };
                    const columnSlotProps = {
                        column,
                        selectAll,
                        isSorted,
                        toggleSort,
                        sortBy: sortBy.value,
                        someSelected: someSelected.value,
                        allSelected: allSelected.value,
                        getSortIcon: ()=>""
                    };
                    const cellProps = typeof props.cellProps === "function" ? props.cellProps({
                        index: slotProps.index,
                        item: slotProps.item,
                        internalItem: slotProps.internalItem,
                        value: slotProps.value,
                        column
                    }) : props.cellProps;
                    const columnCellProps = typeof column.cellProps === "function" ? column.cellProps({
                        index: slotProps.index,
                        item: slotProps.item,
                        internalItem: slotProps.internalItem,
                        value: slotProps.value
                    }) : column.cellProps;
                    return (0, _vue.createVNode)((0, _vdataTableColumnMjs.VDataTableColumn), (0, _vue.mergeProps)({
                        "align": column.align,
                        "class": {
                            "v-data-table__td--expanded-row": column.key === "data-table-expand",
                            "v-data-table__td--select-row": column.key === "data-table-select"
                        },
                        "fixed": column.fixed,
                        "fixedOffset": column.fixedOffset,
                        "lastFixed": column.lastFixed,
                        "maxWidth": !mobile.value ? column.maxWidth : undefined,
                        "noPadding": column.key === "data-table-select" || column.key === "data-table-expand",
                        "nowrap": column.nowrap,
                        "width": !mobile.value ? column.width : undefined
                    }, cellProps, columnCellProps), {
                        default: ()=>{
                            if (slots[slotName] && !mobile.value) return slots[slotName]?.(slotProps);
                            if (column.key === "data-table-select") return slots["item.data-table-select"]?.(slotProps) ?? (0, _vue.createVNode)((0, _indexMjs1.VCheckboxBtn), {
                                "disabled": !item.selectable,
                                "modelValue": isSelected([
                                    item
                                ]),
                                "onClick": (0, _vue.withModifiers)(()=>toggleSelect(item), [
                                    "stop"
                                ])
                            }, null);
                            if (column.key === "data-table-expand") return slots["item.data-table-expand"]?.(slotProps) ?? (0, _vue.createVNode)((0, _indexMjs.VBtn), {
                                "icon": isExpanded(item) ? "$collapse" : "$expand",
                                "size": "small",
                                "variant": "text",
                                "onClick": (0, _vue.withModifiers)(()=>toggleExpand(item), [
                                    "stop"
                                ])
                            }, null);
                            const displayValue = (0, _vue.toDisplayString)(slotProps.value);
                            return !mobile.value ? displayValue : (0, _vue.createVNode)((0, _vue.Fragment), null, [
                                (0, _vue.createVNode)("div", {
                                    "class": "v-data-table__td-title"
                                }, [
                                    slots[headerSlotName]?.(columnSlotProps) ?? column.title
                                ]),
                                (0, _vue.createVNode)("div", {
                                    "class": "v-data-table__td-value"
                                }, [
                                    slots[slotName]?.(slotProps) ?? displayValue
                                ])
                            ]);
                        }
                    });
                })
            ]));
    }
});

},{"vue":"gCTam","./VDataTableColumn.mjs":"iBz98","../VBtn/index.mjs":"g9s2K","../VCheckbox/index.mjs":"c1Gdu","./composables/expand.mjs":"cfWXg","./composables/headers.mjs":"5YD9C","./composables/select.mjs":"2IxTD","./composables/sort.mjs":"82x7K","../../composables/display.mjs":"bcRjl","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"8K1ln":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVTableProps", ()=>makeVTableProps);
parcelHelpers.export(exports, "VTable", ()=>VTable);
var _vue = require("vue");
// Styles
var _vtableCss = require("./VTable.css");
// Composables
var _componentMjs = require("../../composables/component.mjs");
var _densityMjs = require("../../composables/density.mjs");
var _tagMjs = require("../../composables/tag.mjs");
var _themeMjs = require("../../composables/theme.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const makeVTableProps = (0, _indexMjs.propsFactory)({
    fixedHeader: Boolean,
    fixedFooter: Boolean,
    height: [
        Number,
        String
    ],
    hover: Boolean,
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _densityMjs.makeDensityProps)(),
    ...(0, _tagMjs.makeTagProps)(),
    ...(0, _themeMjs.makeThemeProps)()
}, "VTable");
const VTable = (0, _indexMjs.genericComponent)()({
    name: "VTable",
    props: makeVTableProps(),
    setup (props, _ref) {
        let { slots, emit } = _ref;
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const { densityClasses } = (0, _densityMjs.useDensity)(props);
        (0, _indexMjs.useRender)(()=>(0, _vue.createVNode)(props.tag, {
                "class": [
                    "v-table",
                    {
                        "v-table--fixed-height": !!props.height,
                        "v-table--fixed-header": props.fixedHeader,
                        "v-table--fixed-footer": props.fixedFooter,
                        "v-table--has-top": !!slots.top,
                        "v-table--has-bottom": !!slots.bottom,
                        "v-table--hover": props.hover
                    },
                    themeClasses.value,
                    densityClasses.value,
                    props.class
                ],
                "style": props.style
            }, {
                default: ()=>[
                        slots.top?.(),
                        slots.default ? (0, _vue.createVNode)("div", {
                            "class": "v-table__wrapper",
                            "style": {
                                height: (0, _indexMjs.convertToUnit)(props.height)
                            }
                        }, [
                            (0, _vue.createVNode)("table", null, [
                                slots.default()
                            ])
                        ]) : slots.wrapper?.(),
                        slots.bottom?.()
                    ]
            }));
        return {};
    }
});

},{"vue":"gCTam","./VTable.css":"3BWu3","../../composables/component.mjs":"4YAxs","../../composables/density.mjs":"kOsEB","../../composables/tag.mjs":"3LqcC","../../composables/theme.mjs":"c9HGg","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"3BWu3":[function() {},{}],"1YZGS":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeDataTableItemsProps", ()=>makeDataTableItemsProps);
parcelHelpers.export(exports, "transformItem", ()=>transformItem);
parcelHelpers.export(exports, "transformItems", ()=>transformItems);
parcelHelpers.export(exports, "useDataTableItems", ()=>useDataTableItems);
var _vue = require("vue");
var _indexMjs = require("../../../util/index.mjs"); // Types
const makeDataTableItemsProps = (0, _indexMjs.propsFactory)({
    items: {
        type: Array,
        default: ()=>[]
    },
    itemValue: {
        type: [
            String,
            Array,
            Function
        ],
        default: "id"
    },
    itemSelectable: {
        type: [
            String,
            Array,
            Function
        ],
        default: null
    },
    rowProps: [
        Object,
        Function
    ],
    cellProps: [
        Object,
        Function
    ],
    returnObject: Boolean
}, "DataTable-items");
function transformItem(props, item, index, columns) {
    const value = props.returnObject ? item : (0, _indexMjs.getPropertyFromItem)(item, props.itemValue);
    const selectable = (0, _indexMjs.getPropertyFromItem)(item, props.itemSelectable, true);
    const itemColumns = columns.reduce((obj, column)=>{
        if (column.key != null) obj[column.key] = (0, _indexMjs.getPropertyFromItem)(item, column.value);
        return obj;
    }, {});
    return {
        type: "item",
        key: props.returnObject ? (0, _indexMjs.getPropertyFromItem)(item, props.itemValue) : value,
        index,
        value,
        selectable,
        columns: itemColumns,
        raw: item
    };
}
function transformItems(props, items, columns) {
    return items.map((item, index)=>transformItem(props, item, index, columns));
}
function useDataTableItems(props, columns) {
    const items = (0, _vue.computed)(()=>transformItems(props, props.items, columns.value));
    return {
        items
    };
}

},{"vue":"gCTam","../../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"8udMH":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVDataTableVirtualProps", ()=>makeVDataTableVirtualProps);
parcelHelpers.export(exports, "VDataTableVirtual", ()=>VDataTableVirtual);
var _vue = require("vue");
// Components
var _vdataTableMjs = require("./VDataTable.mjs");
var _vdataTableHeadersMjs = require("./VDataTableHeaders.mjs");
var _vdataTableRowMjs = require("./VDataTableRow.mjs");
var _vdataTableRowsMjs = require("./VDataTableRows.mjs");
var _indexMjs = require("../VTable/index.mjs");
var _vvirtualScrollItemMjs = require("../VVirtualScroll/VVirtualScrollItem.mjs"); // Composables
var _expandMjs = require("./composables/expand.mjs");
var _groupMjs = require("./composables/group.mjs");
var _headersMjs = require("./composables/headers.mjs");
var _itemsMjs = require("./composables/items.mjs");
var _optionsMjs = require("./composables/options.mjs");
var _selectMjs = require("./composables/select.mjs");
var _sortMjs = require("./composables/sort.mjs");
var _defaultsMjs = require("../../composables/defaults.mjs");
var _filterMjs = require("../../composables/filter.mjs");
var _virtualMjs = require("../../composables/virtual.mjs"); // Utilities
var _indexMjs1 = require("../../util/index.mjs"); // Types
const makeVDataTableVirtualProps = (0, _indexMjs1.propsFactory)({
    ...(0, _vdataTableMjs.makeDataTableProps)(),
    ...(0, _groupMjs.makeDataTableGroupProps)(),
    ...(0, _virtualMjs.makeVirtualProps)(),
    ...(0, _filterMjs.makeFilterProps)()
}, "VDataTableVirtual");
const VDataTableVirtual = (0, _indexMjs1.genericComponent)()({
    name: "VDataTableVirtual",
    props: makeVDataTableVirtualProps(),
    emits: {
        "update:modelValue": (value)=>true,
        "update:sortBy": (value)=>true,
        "update:options": (value)=>true,
        "update:groupBy": (value)=>true,
        "update:expanded": (value)=>true
    },
    setup (props, _ref) {
        let { attrs, slots } = _ref;
        const { groupBy } = (0, _groupMjs.createGroupBy)(props);
        const { sortBy, multiSort, mustSort } = (0, _sortMjs.createSort)(props);
        const { disableSort } = (0, _vue.toRefs)(props);
        const { columns, headers, filterFunctions, sortFunctions, sortRawFunctions } = (0, _headersMjs.createHeaders)(props, {
            groupBy,
            showSelect: (0, _vue.toRef)(props, "showSelect"),
            showExpand: (0, _vue.toRef)(props, "showExpand")
        });
        const { items } = (0, _itemsMjs.useDataTableItems)(props, columns);
        const search = (0, _vue.toRef)(props, "search");
        const { filteredItems } = (0, _filterMjs.useFilter)(props, items, search, {
            transform: (item)=>item.columns,
            customKeyFilter: filterFunctions
        });
        const { toggleSort } = (0, _sortMjs.provideSort)({
            sortBy,
            multiSort,
            mustSort
        });
        const { sortByWithGroups, opened, extractRows, isGroupOpen, toggleGroup } = (0, _groupMjs.provideGroupBy)({
            groupBy,
            sortBy,
            disableSort
        });
        const { sortedItems } = (0, _sortMjs.useSortedItems)(props, filteredItems, sortByWithGroups, {
            transform: (item)=>({
                    ...item.raw,
                    ...item.columns
                }),
            sortFunctions,
            sortRawFunctions
        });
        const { flatItems } = (0, _groupMjs.useGroupedItems)(sortedItems, groupBy, opened);
        const allItems = (0, _vue.computed)(()=>extractRows(flatItems.value));
        const { isSelected, select, selectAll, toggleSelect, someSelected, allSelected } = (0, _selectMjs.provideSelection)(props, {
            allItems,
            currentPage: allItems
        });
        const { isExpanded, toggleExpand } = (0, _expandMjs.provideExpanded)(props);
        const { containerRef, markerRef, paddingTop, paddingBottom, computedItems, handleItemResize, handleScroll, handleScrollend } = (0, _virtualMjs.useVirtual)(props, flatItems);
        const displayItems = (0, _vue.computed)(()=>computedItems.value.map((item)=>item.raw));
        (0, _optionsMjs.useOptions)({
            sortBy,
            page: (0, _vue.shallowRef)(1),
            itemsPerPage: (0, _vue.shallowRef)(-1),
            groupBy,
            search
        });
        (0, _defaultsMjs.provideDefaults)({
            VDataTableRows: {
                hideNoData: (0, _vue.toRef)(props, "hideNoData"),
                noDataText: (0, _vue.toRef)(props, "noDataText"),
                loading: (0, _vue.toRef)(props, "loading"),
                loadingText: (0, _vue.toRef)(props, "loadingText")
            }
        });
        const slotProps = (0, _vue.computed)(()=>({
                sortBy: sortBy.value,
                toggleSort,
                someSelected: someSelected.value,
                allSelected: allSelected.value,
                isSelected,
                select,
                selectAll,
                toggleSelect,
                isExpanded,
                toggleExpand,
                isGroupOpen,
                toggleGroup,
                items: allItems.value.map((item)=>item.raw),
                internalItems: allItems.value,
                groupedItems: flatItems.value,
                columns: columns.value,
                headers: headers.value
            }));
        (0, _indexMjs1.useRender)(()=>{
            const dataTableHeadersProps = (0, _vdataTableHeadersMjs.VDataTableHeaders).filterProps(props);
            const dataTableRowsProps = (0, _vdataTableRowsMjs.VDataTableRows).filterProps(props);
            const tableProps = (0, _indexMjs.VTable).filterProps(props);
            return (0, _vue.createVNode)((0, _indexMjs.VTable), (0, _vue.mergeProps)({
                "class": [
                    "v-data-table",
                    {
                        "v-data-table--loading": props.loading
                    },
                    props.class
                ],
                "style": props.style
            }, tableProps), {
                top: ()=>slots.top?.(slotProps.value),
                wrapper: ()=>(0, _vue.createVNode)("div", {
                        "ref": containerRef,
                        "onScrollPassive": handleScroll,
                        "onScrollend": handleScrollend,
                        "class": "v-table__wrapper",
                        "style": {
                            height: (0, _indexMjs1.convertToUnit)(props.height)
                        }
                    }, [
                        (0, _vue.createVNode)("table", null, [
                            slots.colgroup?.(slotProps.value),
                            !props.hideDefaultHeader && (0, _vue.createVNode)("thead", {
                                "key": "thead"
                            }, [
                                (0, _vue.createVNode)((0, _vdataTableHeadersMjs.VDataTableHeaders), (0, _vue.mergeProps)(dataTableHeadersProps, {
                                    "sticky": props.fixedHeader
                                }), slots)
                            ]),
                            !props.hideDefaultBody && (0, _vue.createVNode)("tbody", null, [
                                (0, _vue.createVNode)("tr", {
                                    "ref": markerRef,
                                    "style": {
                                        height: (0, _indexMjs1.convertToUnit)(paddingTop.value),
                                        border: 0
                                    }
                                }, [
                                    (0, _vue.createVNode)("td", {
                                        "colspan": columns.value.length,
                                        "style": {
                                            height: 0,
                                            border: 0
                                        }
                                    }, null)
                                ]),
                                slots["body.prepend"]?.(slotProps.value),
                                (0, _vue.createVNode)((0, _vdataTableRowsMjs.VDataTableRows), (0, _vue.mergeProps)(attrs, dataTableRowsProps, {
                                    "items": displayItems.value
                                }), {
                                    ...slots,
                                    item: (itemSlotProps)=>(0, _vue.createVNode)((0, _vvirtualScrollItemMjs.VVirtualScrollItem), {
                                            "key": itemSlotProps.internalItem.index,
                                            "renderless": true,
                                            "onUpdate:height": (height)=>handleItemResize(itemSlotProps.internalItem.index, height)
                                        }, {
                                            default: (_ref2)=>{
                                                let { itemRef } = _ref2;
                                                return slots.item?.({
                                                    ...itemSlotProps,
                                                    itemRef
                                                }) ?? (0, _vue.createVNode)((0, _vdataTableRowMjs.VDataTableRow), (0, _vue.mergeProps)(itemSlotProps.props, {
                                                    "ref": itemRef,
                                                    "key": itemSlotProps.internalItem.index,
                                                    "index": itemSlotProps.internalItem.index
                                                }), slots);
                                            }
                                        })
                                }),
                                slots["body.append"]?.(slotProps.value),
                                (0, _vue.createVNode)("tr", {
                                    "style": {
                                        height: (0, _indexMjs1.convertToUnit)(paddingBottom.value),
                                        border: 0
                                    }
                                }, [
                                    (0, _vue.createVNode)("td", {
                                        "colspan": columns.value.length,
                                        "style": {
                                            height: 0,
                                            border: 0
                                        }
                                    }, null)
                                ])
                            ])
                        ])
                    ]),
                bottom: ()=>slots.bottom?.(slotProps.value)
            });
        });
    }
});

},{"vue":"gCTam","./VDataTable.mjs":"kKHGP","./VDataTableHeaders.mjs":"iO3Mg","./VDataTableRow.mjs":"i0QEN","./VDataTableRows.mjs":"i83nK","../VTable/index.mjs":"brBlJ","../VVirtualScroll/VVirtualScrollItem.mjs":"8iMAl","./composables/expand.mjs":"cfWXg","./composables/group.mjs":"4bxDC","./composables/headers.mjs":"5YD9C","./composables/items.mjs":"1YZGS","./composables/options.mjs":"9Xhsu","./composables/select.mjs":"2IxTD","./composables/sort.mjs":"82x7K","../../composables/defaults.mjs":"29Im0","../../composables/filter.mjs":"eW6zz","../../composables/virtual.mjs":"AxLCQ","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"brBlJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VTable", ()=>(0, _vtableMjs.VTable));
var _vtableMjs = require("./VTable.mjs");

},{"./VTable.mjs":"8K1ln","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"9dRIM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVDataTableServerProps", ()=>makeVDataTableServerProps);
parcelHelpers.export(exports, "VDataTableServer", ()=>VDataTableServer);
var _vue = require("vue");
// Components
var _vdataTableMjs = require("./VDataTable.mjs");
var _vdataTableFooterMjs = require("./VDataTableFooter.mjs");
var _vdataTableHeadersMjs = require("./VDataTableHeaders.mjs");
var _vdataTableRowsMjs = require("./VDataTableRows.mjs");
var _indexMjs = require("../VDivider/index.mjs");
var _indexMjs1 = require("../VTable/index.mjs"); // Composables
var _expandMjs = require("./composables/expand.mjs");
var _groupMjs = require("./composables/group.mjs");
var _headersMjs = require("./composables/headers.mjs");
var _itemsMjs = require("./composables/items.mjs");
var _optionsMjs = require("./composables/options.mjs");
var _paginateMjs = require("./composables/paginate.mjs");
var _selectMjs = require("./composables/select.mjs");
var _sortMjs = require("./composables/sort.mjs");
var _defaultsMjs = require("../../composables/defaults.mjs"); // Utilities
var _indexMjs2 = require("../../util/index.mjs"); // Types
const makeVDataTableServerProps = (0, _indexMjs2.propsFactory)({
    itemsLength: {
        type: [
            Number,
            String
        ],
        required: true
    },
    ...(0, _paginateMjs.makeDataTablePaginateProps)(),
    ...(0, _vdataTableMjs.makeDataTableProps)(),
    ...(0, _vdataTableFooterMjs.makeVDataTableFooterProps)()
}, "VDataTableServer");
const VDataTableServer = (0, _indexMjs2.genericComponent)()({
    name: "VDataTableServer",
    props: makeVDataTableServerProps(),
    emits: {
        "update:modelValue": (value)=>true,
        "update:page": (page)=>true,
        "update:itemsPerPage": (page)=>true,
        "update:sortBy": (sortBy)=>true,
        "update:options": (options)=>true,
        "update:expanded": (options)=>true,
        "update:groupBy": (value)=>true
    },
    setup (props, _ref) {
        let { attrs, slots } = _ref;
        const { groupBy } = (0, _groupMjs.createGroupBy)(props);
        const { sortBy, multiSort, mustSort } = (0, _sortMjs.createSort)(props);
        const { page, itemsPerPage } = (0, _paginateMjs.createPagination)(props);
        const { disableSort } = (0, _vue.toRefs)(props);
        const itemsLength = (0, _vue.computed)(()=>parseInt(props.itemsLength, 10));
        const { columns, headers } = (0, _headersMjs.createHeaders)(props, {
            groupBy,
            showSelect: (0, _vue.toRef)(props, "showSelect"),
            showExpand: (0, _vue.toRef)(props, "showExpand")
        });
        const { items } = (0, _itemsMjs.useDataTableItems)(props, columns);
        const { toggleSort } = (0, _sortMjs.provideSort)({
            sortBy,
            multiSort,
            mustSort,
            page
        });
        const { opened, isGroupOpen, toggleGroup, extractRows } = (0, _groupMjs.provideGroupBy)({
            groupBy,
            sortBy,
            disableSort
        });
        const { pageCount, setItemsPerPage } = (0, _paginateMjs.providePagination)({
            page,
            itemsPerPage,
            itemsLength
        });
        const { flatItems } = (0, _groupMjs.useGroupedItems)(items, groupBy, opened);
        const { isSelected, select, selectAll, toggleSelect, someSelected, allSelected } = (0, _selectMjs.provideSelection)(props, {
            allItems: items,
            currentPage: items
        });
        const { isExpanded, toggleExpand } = (0, _expandMjs.provideExpanded)(props);
        const itemsWithoutGroups = (0, _vue.computed)(()=>extractRows(items.value));
        (0, _optionsMjs.useOptions)({
            page,
            itemsPerPage,
            sortBy,
            groupBy,
            search: (0, _vue.toRef)(props, "search")
        });
        (0, _vue.provide)("v-data-table", {
            toggleSort,
            sortBy
        });
        (0, _defaultsMjs.provideDefaults)({
            VDataTableRows: {
                hideNoData: (0, _vue.toRef)(props, "hideNoData"),
                noDataText: (0, _vue.toRef)(props, "noDataText"),
                loading: (0, _vue.toRef)(props, "loading"),
                loadingText: (0, _vue.toRef)(props, "loadingText")
            }
        });
        const slotProps = (0, _vue.computed)(()=>({
                page: page.value,
                itemsPerPage: itemsPerPage.value,
                sortBy: sortBy.value,
                pageCount: pageCount.value,
                toggleSort,
                setItemsPerPage,
                someSelected: someSelected.value,
                allSelected: allSelected.value,
                isSelected,
                select,
                selectAll,
                toggleSelect,
                isExpanded,
                toggleExpand,
                isGroupOpen,
                toggleGroup,
                items: itemsWithoutGroups.value.map((item)=>item.raw),
                internalItems: itemsWithoutGroups.value,
                groupedItems: flatItems.value,
                columns: columns.value,
                headers: headers.value
            }));
        (0, _indexMjs2.useRender)(()=>{
            const dataTableFooterProps = (0, _vdataTableFooterMjs.VDataTableFooter).filterProps(props);
            const dataTableHeadersProps = (0, _vdataTableHeadersMjs.VDataTableHeaders).filterProps(props);
            const dataTableRowsProps = (0, _vdataTableRowsMjs.VDataTableRows).filterProps(props);
            const tableProps = (0, _indexMjs1.VTable).filterProps(props);
            return (0, _vue.createVNode)((0, _indexMjs1.VTable), (0, _vue.mergeProps)({
                "class": [
                    "v-data-table",
                    {
                        "v-data-table--loading": props.loading
                    },
                    props.class
                ],
                "style": props.style
            }, tableProps), {
                top: ()=>slots.top?.(slotProps.value),
                default: ()=>slots.default ? slots.default(slotProps.value) : (0, _vue.createVNode)((0, _vue.Fragment), null, [
                        slots.colgroup?.(slotProps.value),
                        !props.hideDefaultHeader && (0, _vue.createVNode)("thead", {
                            "key": "thead",
                            "class": "v-data-table__thead",
                            "role": "rowgroup"
                        }, [
                            (0, _vue.createVNode)((0, _vdataTableHeadersMjs.VDataTableHeaders), (0, _vue.mergeProps)(dataTableHeadersProps, {
                                "sticky": props.fixedHeader
                            }), slots)
                        ]),
                        slots.thead?.(slotProps.value),
                        !props.hideDefaultBody && (0, _vue.createVNode)("tbody", {
                            "class": "v-data-table__tbody",
                            "role": "rowgroup"
                        }, [
                            slots["body.prepend"]?.(slotProps.value),
                            slots.body ? slots.body(slotProps.value) : (0, _vue.createVNode)((0, _vdataTableRowsMjs.VDataTableRows), (0, _vue.mergeProps)(attrs, dataTableRowsProps, {
                                "items": flatItems.value
                            }), slots),
                            slots["body.append"]?.(slotProps.value)
                        ]),
                        slots.tbody?.(slotProps.value),
                        slots.tfoot?.(slotProps.value)
                    ]),
                bottom: ()=>slots.bottom ? slots.bottom(slotProps.value) : !props.hideDefaultFooter && (0, _vue.createVNode)((0, _vue.Fragment), null, [
                        (0, _vue.createVNode)((0, _indexMjs.VDivider), null, null),
                        (0, _vue.createVNode)((0, _vdataTableFooterMjs.VDataTableFooter), dataTableFooterProps, {
                            prepend: slots["footer.prepend"]
                        })
                    ])
            });
        });
    }
});

},{"vue":"gCTam","./VDataTable.mjs":"kKHGP","./VDataTableFooter.mjs":"lNgce","./VDataTableHeaders.mjs":"iO3Mg","./VDataTableRows.mjs":"i83nK","../VDivider/index.mjs":"bj3uM","../VTable/index.mjs":"brBlJ","./composables/expand.mjs":"cfWXg","./composables/group.mjs":"4bxDC","./composables/headers.mjs":"5YD9C","./composables/items.mjs":"1YZGS","./composables/options.mjs":"9Xhsu","./composables/paginate.mjs":"5g37V","./composables/select.mjs":"2IxTD","./composables/sort.mjs":"82x7K","../../composables/defaults.mjs":"29Im0","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"28gJF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VDatePicker", ()=>(0, _vdatePickerMjs.VDatePicker));
parcelHelpers.export(exports, "VDatePickerControls", ()=>(0, _vdatePickerControlsMjs.VDatePickerControls));
parcelHelpers.export(exports, "VDatePickerHeader", ()=>(0, _vdatePickerHeaderMjs.VDatePickerHeader));
parcelHelpers.export(exports, "VDatePickerMonth", ()=>(0, _vdatePickerMonthMjs.VDatePickerMonth));
parcelHelpers.export(exports, "VDatePickerMonths", ()=>(0, _vdatePickerMonthsMjs.VDatePickerMonths));
parcelHelpers.export(exports, "VDatePickerYears", ()=>(0, _vdatePickerYearsMjs.VDatePickerYears));
var _vdatePickerMjs = require("./VDatePicker.mjs");
var _vdatePickerControlsMjs = require("./VDatePickerControls.mjs");
var _vdatePickerHeaderMjs = require("./VDatePickerHeader.mjs");
var _vdatePickerMonthMjs = require("./VDatePickerMonth.mjs");
var _vdatePickerMonthsMjs = require("./VDatePickerMonths.mjs");
var _vdatePickerYearsMjs = require("./VDatePickerYears.mjs");

},{"./VDatePicker.mjs":"h0Z5U","./VDatePickerControls.mjs":"kZyCq","./VDatePickerHeader.mjs":"9zovo","./VDatePickerMonth.mjs":"dJNW2","./VDatePickerMonths.mjs":"2SXOs","./VDatePickerYears.mjs":"fvRpJ","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"h0Z5U":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVDatePickerProps", ()=>makeVDatePickerProps);
parcelHelpers.export(exports, "VDatePicker", ()=>VDatePicker);
var _vue = require("vue");
// Styles
var _vdatePickerCss = require("./VDatePicker.css");
// Components
var _vdatePickerControlsMjs = require("./VDatePickerControls.mjs");
var _vdatePickerHeaderMjs = require("./VDatePickerHeader.mjs");
var _vdatePickerMonthMjs = require("./VDatePickerMonth.mjs");
var _vdatePickerMonthsMjs = require("./VDatePickerMonths.mjs");
var _vdatePickerYearsMjs = require("./VDatePickerYears.mjs");
var _indexMjs = require("../transitions/index.mjs");
var _indexMjs1 = require("../VDefaultsProvider/index.mjs");
var _vpickerMjs = require("../../labs/VPicker/VPicker.mjs"); // Composables
var _indexMjs2 = require("../../composables/date/index.mjs");
var _localeMjs = require("../../composables/locale.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs"); // Utilities
var _indexMjs3 = require("../../util/index.mjs"); // Types
const makeVDatePickerProps = (0, _indexMjs3.propsFactory)({
    // TODO: implement in v3.5
    // calendarIcon: {
    //   type: String,
    //   default: '$calendar',
    // },
    // keyboardIcon: {
    //   type: String,
    //   default: '$edit',
    // },
    // inputMode: {
    //   type: String as PropType<'calendar' | 'keyboard'>,
    //   default: 'calendar',
    // },
    // inputText: {
    //   type: String,
    //   default: '$vuetify.datePicker.input.placeholder',
    // },
    // inputPlaceholder: {
    //   type: String,
    //   default: 'dd/mm/yyyy',
    // },
    header: {
        type: String,
        default: "$vuetify.datePicker.header"
    },
    ...(0, _vdatePickerControlsMjs.makeVDatePickerControlsProps)(),
    ...(0, _vdatePickerMonthMjs.makeVDatePickerMonthProps)({
        weeksInMonth: "static"
    }),
    ...(0, _indexMjs3.omit)((0, _vdatePickerMonthsMjs.makeVDatePickerMonthsProps)(), [
        "modelValue"
    ]),
    ...(0, _indexMjs3.omit)((0, _vdatePickerYearsMjs.makeVDatePickerYearsProps)(), [
        "modelValue"
    ]),
    ...(0, _vpickerMjs.makeVPickerProps)({
        title: "$vuetify.datePicker.title"
    }),
    modelValue: null
}, "VDatePicker");
const VDatePicker = (0, _indexMjs3.genericComponent)()({
    name: "VDatePicker",
    props: makeVDatePickerProps(),
    emits: {
        "update:modelValue": (date)=>true,
        "update:month": (date)=>true,
        "update:year": (date)=>true,
        // 'update:inputMode': (date: any) => true,
        "update:viewMode": (date)=>true
    },
    setup (props, _ref) {
        let { emit, slots } = _ref;
        const adapter = (0, _indexMjs2.useDate)();
        const { t } = (0, _localeMjs.useLocale)();
        const model = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue", undefined, (v)=>(0, _indexMjs3.wrapInArray)(v), (v)=>props.multiple ? v : v[0]);
        const viewMode = (0, _proxiedModelMjs.useProxiedModel)(props, "viewMode");
        // const inputMode = useProxiedModel(props, 'inputMode')
        const internal = (0, _vue.computed)(()=>{
            const value = adapter.date(model.value?.[0]);
            return value && adapter.isValid(value) ? value : adapter.date();
        });
        const month = (0, _vue.ref)(Number(props.month ?? adapter.getMonth(adapter.startOfMonth(internal.value))));
        const year = (0, _vue.ref)(Number(props.year ?? adapter.getYear(adapter.startOfYear(adapter.setMonth(internal.value, month.value)))));
        const isReversing = (0, _vue.shallowRef)(false);
        const header = (0, _vue.computed)(()=>{
            if (props.multiple && model.value.length > 1) return t("$vuetify.datePicker.itemsSelected", model.value.length);
            return model.value[0] && adapter.isValid(model.value[0]) ? adapter.format(adapter.date(model.value[0]), "normalDateWithWeekday") : t(props.header);
        });
        const text = (0, _vue.computed)(()=>{
            let date = adapter.date();
            date = adapter.setDate(date, 1);
            date = adapter.setMonth(date, month.value);
            date = adapter.setYear(date, year.value);
            return adapter.format(date, "monthAndYear");
        });
        // const headerIcon = computed(() => props.inputMode === 'calendar' ? props.keyboardIcon : props.calendarIcon)
        const headerTransition = (0, _vue.computed)(()=>`date-picker-header${isReversing.value ? "-reverse" : ""}-transition`);
        const minDate = (0, _vue.computed)(()=>{
            const date = adapter.date(props.min);
            return props.min && adapter.isValid(date) ? date : null;
        });
        const maxDate = (0, _vue.computed)(()=>{
            const date = adapter.date(props.max);
            return props.max && adapter.isValid(date) ? date : null;
        });
        const disabled = (0, _vue.computed)(()=>{
            if (props.disabled) return true;
            const targets = [];
            if (viewMode.value !== "month") targets.push(...[
                "prev",
                "next"
            ]);
            else {
                let _date = adapter.date();
                _date = adapter.setYear(_date, year.value);
                _date = adapter.setMonth(_date, month.value);
                if (minDate.value) {
                    const date = adapter.addDays(adapter.startOfMonth(_date), -1);
                    adapter.isAfter(minDate.value, date) && targets.push("prev");
                }
                if (maxDate.value) {
                    const date = adapter.addDays(adapter.endOfMonth(_date), 1);
                    adapter.isAfter(date, maxDate.value) && targets.push("next");
                }
            }
            return targets;
        });
        // function onClickAppend () {
        //   inputMode.value = inputMode.value === 'calendar' ? 'keyboard' : 'calendar'
        // }
        function onClickNext() {
            if (month.value < 11) month.value++;
            else {
                year.value++;
                month.value = 0;
                onUpdateYear(year.value);
            }
            onUpdateMonth(month.value);
        }
        function onClickPrev() {
            if (month.value > 0) month.value--;
            else {
                year.value--;
                month.value = 11;
                onUpdateYear(year.value);
            }
            onUpdateMonth(month.value);
        }
        function onClickDate() {
            viewMode.value = "month";
        }
        function onClickMonth() {
            viewMode.value = viewMode.value === "months" ? "month" : "months";
        }
        function onClickYear() {
            viewMode.value = viewMode.value === "year" ? "month" : "year";
        }
        function onUpdateMonth(value) {
            if (viewMode.value === "months") onClickMonth();
            emit("update:month", value);
        }
        function onUpdateYear(value) {
            if (viewMode.value === "year") onClickYear();
            emit("update:year", value);
        }
        (0, _vue.watch)(model, (val, oldVal)=>{
            const arrBefore = (0, _indexMjs3.wrapInArray)(oldVal);
            const arrAfter = (0, _indexMjs3.wrapInArray)(val);
            if (!arrAfter.length) return;
            const before = adapter.date(arrBefore[arrBefore.length - 1]);
            const after = adapter.date(arrAfter[arrAfter.length - 1]);
            const newMonth = adapter.getMonth(after);
            const newYear = adapter.getYear(after);
            if (newMonth !== month.value) {
                month.value = newMonth;
                onUpdateMonth(month.value);
            }
            if (newYear !== year.value) {
                year.value = newYear;
                onUpdateYear(year.value);
            }
            isReversing.value = adapter.isBefore(before, after);
        });
        (0, _indexMjs3.useRender)(()=>{
            const pickerProps = (0, _vpickerMjs.VPicker).filterProps(props);
            const datePickerControlsProps = (0, _vdatePickerControlsMjs.VDatePickerControls).filterProps(props);
            const datePickerHeaderProps = (0, _vdatePickerHeaderMjs.VDatePickerHeader).filterProps(props);
            const datePickerMonthProps = (0, _vdatePickerMonthMjs.VDatePickerMonth).filterProps(props);
            const datePickerMonthsProps = (0, _indexMjs3.omit)((0, _vdatePickerMonthsMjs.VDatePickerMonths).filterProps(props), [
                "modelValue"
            ]);
            const datePickerYearsProps = (0, _indexMjs3.omit)((0, _vdatePickerYearsMjs.VDatePickerYears).filterProps(props), [
                "modelValue"
            ]);
            const headerProps = {
                header: header.value,
                transition: headerTransition.value
            };
            return (0, _vue.createVNode)((0, _vpickerMjs.VPicker), (0, _vue.mergeProps)(pickerProps, {
                "class": [
                    "v-date-picker",
                    `v-date-picker--${viewMode.value}`,
                    {
                        "v-date-picker--show-week": props.showWeek
                    },
                    props.class
                ],
                "style": props.style
            }), {
                title: ()=>slots.title?.() ?? (0, _vue.createVNode)("div", {
                        "class": "v-date-picker__title"
                    }, [
                        t(props.title)
                    ]),
                header: ()=>slots.header ? (0, _vue.createVNode)((0, _indexMjs1.VDefaultsProvider), {
                        "defaults": {
                            VDatePickerHeader: {
                                ...headerProps
                            }
                        }
                    }, {
                        default: ()=>[
                                slots.header?.(headerProps)
                            ]
                    }) : (0, _vue.createVNode)((0, _vdatePickerHeaderMjs.VDatePickerHeader), (0, _vue.mergeProps)({
                        "key": "header"
                    }, datePickerHeaderProps, headerProps, {
                        "onClick": viewMode.value !== "month" ? onClickDate : undefined
                    }), {
                        ...slots,
                        default: undefined
                    }),
                default: ()=>(0, _vue.createVNode)((0, _vue.Fragment), null, [
                        (0, _vue.createVNode)((0, _vdatePickerControlsMjs.VDatePickerControls), (0, _vue.mergeProps)(datePickerControlsProps, {
                            "disabled": disabled.value,
                            "text": text.value,
                            "onClick:next": onClickNext,
                            "onClick:prev": onClickPrev,
                            "onClick:month": onClickMonth,
                            "onClick:year": onClickYear
                        }), null),
                        (0, _vue.createVNode)((0, _indexMjs.VFadeTransition), {
                            "hideOnLeave": true
                        }, {
                            default: ()=>[
                                    viewMode.value === "months" ? (0, _vue.createVNode)((0, _vdatePickerMonthsMjs.VDatePickerMonths), (0, _vue.mergeProps)({
                                        "key": "date-picker-months"
                                    }, datePickerMonthsProps, {
                                        "modelValue": month.value,
                                        "onUpdate:modelValue": [
                                            ($event)=>month.value = $event,
                                            onUpdateMonth
                                        ],
                                        "min": minDate.value,
                                        "max": maxDate.value,
                                        "year": year.value
                                    }), null) : viewMode.value === "year" ? (0, _vue.createVNode)((0, _vdatePickerYearsMjs.VDatePickerYears), (0, _vue.mergeProps)({
                                        "key": "date-picker-years"
                                    }, datePickerYearsProps, {
                                        "modelValue": year.value,
                                        "onUpdate:modelValue": [
                                            ($event)=>year.value = $event,
                                            onUpdateYear
                                        ],
                                        "min": minDate.value,
                                        "max": maxDate.value
                                    }), null) : (0, _vue.createVNode)((0, _vdatePickerMonthMjs.VDatePickerMonth), (0, _vue.mergeProps)({
                                        "key": "date-picker-month"
                                    }, datePickerMonthProps, {
                                        "modelValue": model.value,
                                        "onUpdate:modelValue": ($event)=>model.value = $event,
                                        "month": month.value,
                                        "onUpdate:month": [
                                            ($event)=>month.value = $event,
                                            onUpdateMonth
                                        ],
                                        "year": year.value,
                                        "onUpdate:year": [
                                            ($event)=>year.value = $event,
                                            onUpdateYear
                                        ],
                                        "min": minDate.value,
                                        "max": maxDate.value
                                    }), null)
                                ]
                        })
                    ]),
                actions: slots.actions
            });
        });
        return {};
    }
});

},{"vue":"gCTam","./VDatePicker.css":"6T2he","./VDatePickerControls.mjs":"kZyCq","./VDatePickerHeader.mjs":"9zovo","./VDatePickerMonth.mjs":"dJNW2","./VDatePickerMonths.mjs":"2SXOs","./VDatePickerYears.mjs":"fvRpJ","../transitions/index.mjs":"3ybHr","../VDefaultsProvider/index.mjs":"eFFvH","../../labs/VPicker/VPicker.mjs":"joFqu","../../composables/date/index.mjs":"2d4g6","../../composables/locale.mjs":"9rJP0","../../composables/proxiedModel.mjs":"huwLk","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"6T2he":[function() {},{}],"kZyCq":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVDatePickerControlsProps", ()=>makeVDatePickerControlsProps);
parcelHelpers.export(exports, "VDatePickerControls", ()=>VDatePickerControls);
var _vue = require("vue");
// Styles
var _vdatePickerControlsCss = require("./VDatePickerControls.css");
// Components
var _indexMjs = require("../VBtn/index.mjs");
var _indexMjs1 = require("../VGrid/index.mjs"); // Composables
var _iconsMjs = require("../../composables/icons.mjs"); // Utilities
var _indexMjs2 = require("../../util/index.mjs"); // Types
const makeVDatePickerControlsProps = (0, _indexMjs2.propsFactory)({
    active: {
        type: [
            String,
            Array
        ],
        default: undefined
    },
    disabled: {
        type: [
            Boolean,
            String,
            Array
        ],
        default: false
    },
    nextIcon: {
        type: (0, _iconsMjs.IconValue),
        default: "$next"
    },
    prevIcon: {
        type: (0, _iconsMjs.IconValue),
        default: "$prev"
    },
    modeIcon: {
        type: (0, _iconsMjs.IconValue),
        default: "$subgroup"
    },
    text: String,
    viewMode: {
        type: String,
        default: "month"
    }
}, "VDatePickerControls");
const VDatePickerControls = (0, _indexMjs2.genericComponent)()({
    name: "VDatePickerControls",
    props: makeVDatePickerControlsProps(),
    emits: {
        "click:year": ()=>true,
        "click:month": ()=>true,
        "click:prev": ()=>true,
        "click:next": ()=>true,
        "click:text": ()=>true
    },
    setup (props, _ref) {
        let { emit } = _ref;
        const disableMonth = (0, _vue.computed)(()=>{
            return Array.isArray(props.disabled) ? props.disabled.includes("text") : !!props.disabled;
        });
        const disableYear = (0, _vue.computed)(()=>{
            return Array.isArray(props.disabled) ? props.disabled.includes("mode") : !!props.disabled;
        });
        const disablePrev = (0, _vue.computed)(()=>{
            return Array.isArray(props.disabled) ? props.disabled.includes("prev") : !!props.disabled;
        });
        const disableNext = (0, _vue.computed)(()=>{
            return Array.isArray(props.disabled) ? props.disabled.includes("next") : !!props.disabled;
        });
        function onClickPrev() {
            emit("click:prev");
        }
        function onClickNext() {
            emit("click:next");
        }
        function onClickYear() {
            emit("click:year");
        }
        function onClickMonth() {
            emit("click:month");
        }
        (0, _indexMjs2.useRender)(()=>{
            // TODO: add slot support and scope defaults
            return (0, _vue.createVNode)("div", {
                "class": [
                    "v-date-picker-controls"
                ]
            }, [
                (0, _vue.createVNode)((0, _indexMjs.VBtn), {
                    "class": "v-date-picker-controls__month-btn",
                    "disabled": disableMonth.value,
                    "text": props.text,
                    "variant": "text",
                    "rounded": true,
                    "onClick": onClickMonth
                }, null),
                (0, _vue.createVNode)((0, _indexMjs.VBtn), {
                    "key": "mode-btn",
                    "class": "v-date-picker-controls__mode-btn",
                    "disabled": disableYear.value,
                    "density": "comfortable",
                    "icon": props.modeIcon,
                    "variant": "text",
                    "onClick": onClickYear
                }, null),
                (0, _vue.createVNode)((0, _indexMjs1.VSpacer), {
                    "key": "mode-spacer"
                }, null),
                (0, _vue.createVNode)("div", {
                    "key": "month-buttons",
                    "class": "v-date-picker-controls__month"
                }, [
                    (0, _vue.createVNode)((0, _indexMjs.VBtn), {
                        "disabled": disablePrev.value,
                        "icon": props.prevIcon,
                        "variant": "text",
                        "onClick": onClickPrev
                    }, null),
                    (0, _vue.createVNode)((0, _indexMjs.VBtn), {
                        "disabled": disableNext.value,
                        "icon": props.nextIcon,
                        "variant": "text",
                        "onClick": onClickNext
                    }, null)
                ])
            ]);
        });
        return {};
    }
});

},{"vue":"gCTam","./VDatePickerControls.css":"7TPPQ","../VBtn/index.mjs":"g9s2K","../VGrid/index.mjs":"aqHSB","../../composables/icons.mjs":"g4kLv","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"7TPPQ":[function() {},{}],"aqHSB":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VContainer", ()=>(0, _vcontainerMjs.VContainer));
parcelHelpers.export(exports, "VCol", ()=>(0, _vcolMjs.VCol));
parcelHelpers.export(exports, "VRow", ()=>(0, _vrowMjs.VRow));
parcelHelpers.export(exports, "VSpacer", ()=>(0, _vspacerMjs.VSpacer));
var _vcontainerMjs = require("./VContainer.mjs");
var _vcolMjs = require("./VCol.mjs");
var _vrowMjs = require("./VRow.mjs");
var _vspacerMjs = require("./VSpacer.mjs");

},{"./VContainer.mjs":"45QA9","./VCol.mjs":"8cMC5","./VRow.mjs":"9DfmA","./VSpacer.mjs":"8FoOt","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"45QA9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVContainerProps", ()=>makeVContainerProps);
parcelHelpers.export(exports, "VContainer", ()=>VContainer);
var _vue = require("vue");
// Styles
var _vgridCss = require("./VGrid.css");
// Composables
var _componentMjs = require("../../composables/component.mjs");
var _dimensionsMjs = require("../../composables/dimensions.mjs");
var _localeMjs = require("../../composables/locale.mjs");
var _tagMjs = require("../../composables/tag.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const makeVContainerProps = (0, _indexMjs.propsFactory)({
    fluid: {
        type: Boolean,
        default: false
    },
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _dimensionsMjs.makeDimensionProps)(),
    ...(0, _tagMjs.makeTagProps)()
}, "VContainer");
const VContainer = (0, _indexMjs.genericComponent)()({
    name: "VContainer",
    props: makeVContainerProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const { rtlClasses } = (0, _localeMjs.useRtl)();
        const { dimensionStyles } = (0, _dimensionsMjs.useDimension)(props);
        (0, _indexMjs.useRender)(()=>(0, _vue.createVNode)(props.tag, {
                "class": [
                    "v-container",
                    {
                        "v-container--fluid": props.fluid
                    },
                    rtlClasses.value,
                    props.class
                ],
                "style": [
                    dimensionStyles.value,
                    props.style
                ]
            }, slots));
        return {};
    }
});

},{"vue":"gCTam","./VGrid.css":"eRXN2","../../composables/component.mjs":"4YAxs","../../composables/dimensions.mjs":"daVmy","../../composables/locale.mjs":"9rJP0","../../composables/tag.mjs":"3LqcC","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"eRXN2":[function() {},{}],"8cMC5":[function(require,module,exports) {
// Styles
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVColProps", ()=>makeVColProps);
parcelHelpers.export(exports, "VCol", ()=>VCol);
var _vgridCss = require("./VGrid.css");
// Composables
var _componentMjs = require("../../composables/component.mjs");
var _displayMjs = require("../../composables/display.mjs");
var _tagMjs = require("../../composables/tag.mjs"); // Utilities
var _vue = require("vue");
var _indexMjs = require("../../util/index.mjs"); // Types
const breakpointProps = (()=>{
    return (0, _displayMjs.breakpoints).reduce((props, val)=>{
        props[val] = {
            type: [
                Boolean,
                String,
                Number
            ],
            default: false
        };
        return props;
    }, {});
})();
const offsetProps = (()=>{
    return (0, _displayMjs.breakpoints).reduce((props, val)=>{
        const offsetKey = "offset" + (0, _vue.capitalize)(val);
        props[offsetKey] = {
            type: [
                String,
                Number
            ],
            default: null
        };
        return props;
    }, {});
})();
const orderProps = (()=>{
    return (0, _displayMjs.breakpoints).reduce((props, val)=>{
        const orderKey = "order" + (0, _vue.capitalize)(val);
        props[orderKey] = {
            type: [
                String,
                Number
            ],
            default: null
        };
        return props;
    }, {});
})();
const propMap = {
    col: Object.keys(breakpointProps),
    offset: Object.keys(offsetProps),
    order: Object.keys(orderProps)
};
function breakpointClass(type, prop, val) {
    let className = type;
    if (val == null || val === false) return undefined;
    if (prop) {
        const breakpoint = prop.replace(type, "");
        className += `-${breakpoint}`;
    }
    if (type === "col") className = "v-" + className;
    // Handling the boolean style prop when accepting [Boolean, String, Number]
    // means Vue will not convert <v-col sm></v-col> to sm: true for us.
    // Since the default is false, an empty string indicates the prop's presence.
    if (type === "col" && (val === "" || val === true)) // .v-col-md
    return className.toLowerCase();
    // .order-md-6
    className += `-${val}`;
    return className.toLowerCase();
}
const ALIGN_SELF_VALUES = [
    "auto",
    "start",
    "end",
    "center",
    "baseline",
    "stretch"
];
const makeVColProps = (0, _indexMjs.propsFactory)({
    cols: {
        type: [
            Boolean,
            String,
            Number
        ],
        default: false
    },
    ...breakpointProps,
    offset: {
        type: [
            String,
            Number
        ],
        default: null
    },
    ...offsetProps,
    order: {
        type: [
            String,
            Number
        ],
        default: null
    },
    ...orderProps,
    alignSelf: {
        type: String,
        default: null,
        validator: (str)=>ALIGN_SELF_VALUES.includes(str)
    },
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _tagMjs.makeTagProps)()
}, "VCol");
const VCol = (0, _indexMjs.genericComponent)()({
    name: "VCol",
    props: makeVColProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const classes = (0, _vue.computed)(()=>{
            const classList = [];
            // Loop through `col`, `offset`, `order` breakpoint props
            let type;
            for(type in propMap)propMap[type].forEach((prop)=>{
                const value = props[prop];
                const className = breakpointClass(type, prop, value);
                if (className) classList.push(className);
            });
            const hasColClasses = classList.some((className)=>className.startsWith("v-col-"));
            classList.push({
                // Default to .v-col if no other col-{bp}-* classes generated nor `cols` specified.
                "v-col": !hasColClasses || !props.cols,
                [`v-col-${props.cols}`]: props.cols,
                [`offset-${props.offset}`]: props.offset,
                [`order-${props.order}`]: props.order,
                [`align-self-${props.alignSelf}`]: props.alignSelf
            });
            return classList;
        });
        return ()=>(0, _vue.h)(props.tag, {
                class: [
                    classes.value,
                    props.class
                ],
                style: props.style
            }, slots.default?.());
    }
});

},{"./VGrid.css":"eRXN2","../../composables/component.mjs":"4YAxs","../../composables/display.mjs":"bcRjl","../../composables/tag.mjs":"3LqcC","vue":"gCTam","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"eRXN2":[function() {},{}],"9DfmA":[function(require,module,exports) {
// Styles
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVRowProps", ()=>makeVRowProps);
parcelHelpers.export(exports, "VRow", ()=>VRow);
var _vgridCss = require("./VGrid.css");
// Composables
var _componentMjs = require("../../composables/component.mjs");
var _displayMjs = require("../../composables/display.mjs");
var _tagMjs = require("../../composables/tag.mjs"); // Utilities
var _vue = require("vue");
var _indexMjs = require("../../util/index.mjs"); // Types
const ALIGNMENT = [
    "start",
    "end",
    "center"
];
const SPACE = [
    "space-between",
    "space-around",
    "space-evenly"
];
function makeRowProps(prefix, def) {
    return (0, _displayMjs.breakpoints).reduce((props, val)=>{
        const prefixKey = prefix + (0, _vue.capitalize)(val);
        props[prefixKey] = def();
        return props;
    }, {});
}
const ALIGN_VALUES = [
    ...ALIGNMENT,
    "baseline",
    "stretch"
];
const alignValidator = (str)=>ALIGN_VALUES.includes(str);
const alignProps = makeRowProps("align", ()=>({
        type: String,
        default: null,
        validator: alignValidator
    }));
const JUSTIFY_VALUES = [
    ...ALIGNMENT,
    ...SPACE
];
const justifyValidator = (str)=>JUSTIFY_VALUES.includes(str);
const justifyProps = makeRowProps("justify", ()=>({
        type: String,
        default: null,
        validator: justifyValidator
    }));
const ALIGN_CONTENT_VALUES = [
    ...ALIGNMENT,
    ...SPACE,
    "stretch"
];
const alignContentValidator = (str)=>ALIGN_CONTENT_VALUES.includes(str);
const alignContentProps = makeRowProps("alignContent", ()=>({
        type: String,
        default: null,
        validator: alignContentValidator
    }));
const propMap = {
    align: Object.keys(alignProps),
    justify: Object.keys(justifyProps),
    alignContent: Object.keys(alignContentProps)
};
const classMap = {
    align: "align",
    justify: "justify",
    alignContent: "align-content"
};
function breakpointClass(type, prop, val) {
    let className = classMap[type];
    if (val == null) return undefined;
    if (prop) {
        // alignSm -> Sm
        const breakpoint = prop.replace(type, "");
        className += `-${breakpoint}`;
    }
    // .align-items-sm-center
    className += `-${val}`;
    return className.toLowerCase();
}
const makeVRowProps = (0, _indexMjs.propsFactory)({
    dense: Boolean,
    noGutters: Boolean,
    align: {
        type: String,
        default: null,
        validator: alignValidator
    },
    ...alignProps,
    justify: {
        type: String,
        default: null,
        validator: justifyValidator
    },
    ...justifyProps,
    alignContent: {
        type: String,
        default: null,
        validator: alignContentValidator
    },
    ...alignContentProps,
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _tagMjs.makeTagProps)()
}, "VRow");
const VRow = (0, _indexMjs.genericComponent)()({
    name: "VRow",
    props: makeVRowProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const classes = (0, _vue.computed)(()=>{
            const classList = [];
            // Loop through `align`, `justify`, `alignContent` breakpoint props
            let type;
            for(type in propMap)propMap[type].forEach((prop)=>{
                const value = props[prop];
                const className = breakpointClass(type, prop, value);
                if (className) classList.push(className);
            });
            classList.push({
                "v-row--no-gutters": props.noGutters,
                "v-row--dense": props.dense,
                [`align-${props.align}`]: props.align,
                [`justify-${props.justify}`]: props.justify,
                [`align-content-${props.alignContent}`]: props.alignContent
            });
            return classList;
        });
        return ()=>(0, _vue.h)(props.tag, {
                class: [
                    "v-row",
                    classes.value,
                    props.class
                ],
                style: props.style
            }, slots.default?.());
    }
});

},{"./VGrid.css":"eRXN2","../../composables/component.mjs":"4YAxs","../../composables/display.mjs":"bcRjl","../../composables/tag.mjs":"3LqcC","vue":"gCTam","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"eRXN2":[function() {},{}],"8FoOt":[function(require,module,exports) {
// Styles
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VSpacer", ()=>VSpacer);
var _vgridCss = require("./VGrid.css");
// Utilities
var _indexMjs = require("../../util/index.mjs");
const VSpacer = (0, _indexMjs.createSimpleFunctional)("v-spacer", "div", "VSpacer");

},{"./VGrid.css":"eRXN2","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"eRXN2":[function() {},{}],"9zovo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVDatePickerHeaderProps", ()=>makeVDatePickerHeaderProps);
parcelHelpers.export(exports, "VDatePickerHeader", ()=>VDatePickerHeader);
var _vue = require("vue");
// Styles
var _vdatePickerHeaderCss = require("./VDatePickerHeader.css");
// Components
var _indexMjs = require("../VBtn/index.mjs");
var _indexMjs1 = require("../VDefaultsProvider/index.mjs"); // Composables
var _colorMjs = require("../../composables/color.mjs");
var _transitionMjs = require("../../composables/transition.mjs"); // Utilities
var _indexMjs2 = require("../../util/index.mjs"); // Types
const makeVDatePickerHeaderProps = (0, _indexMjs2.propsFactory)({
    appendIcon: String,
    color: String,
    header: String,
    transition: String,
    onClick: (0, _indexMjs2.EventProp)()
}, "VDatePickerHeader");
const VDatePickerHeader = (0, _indexMjs2.genericComponent)()({
    name: "VDatePickerHeader",
    props: makeVDatePickerHeaderProps(),
    emits: {
        click: ()=>true,
        "click:append": ()=>true
    },
    setup (props, _ref) {
        let { emit, slots } = _ref;
        const { backgroundColorClasses, backgroundColorStyles } = (0, _colorMjs.useBackgroundColor)(props, "color");
        function onClick() {
            emit("click");
        }
        function onClickAppend() {
            emit("click:append");
        }
        (0, _indexMjs2.useRender)(()=>{
            const hasContent = !!(slots.default || props.header);
            const hasAppend = !!(slots.append || props.appendIcon);
            return (0, _vue.createVNode)("div", {
                "class": [
                    "v-date-picker-header",
                    {
                        "v-date-picker-header--clickable": !!props.onClick
                    },
                    backgroundColorClasses.value
                ],
                "style": backgroundColorStyles.value,
                "onClick": onClick
            }, [
                slots.prepend && (0, _vue.createVNode)("div", {
                    "key": "prepend",
                    "class": "v-date-picker-header__prepend"
                }, [
                    slots.prepend()
                ]),
                hasContent && (0, _vue.createVNode)((0, _transitionMjs.MaybeTransition), {
                    "key": "content",
                    "name": props.transition
                }, {
                    default: ()=>[
                            (0, _vue.createVNode)("div", {
                                "key": props.header,
                                "class": "v-date-picker-header__content"
                            }, [
                                slots.default?.() ?? props.header
                            ])
                        ]
                }),
                hasAppend && (0, _vue.createVNode)("div", {
                    "class": "v-date-picker-header__append"
                }, [
                    !slots.append ? (0, _vue.createVNode)((0, _indexMjs.VBtn), {
                        "key": "append-btn",
                        "icon": props.appendIcon,
                        "variant": "text",
                        "onClick": onClickAppend
                    }, null) : (0, _vue.createVNode)((0, _indexMjs1.VDefaultsProvider), {
                        "key": "append-defaults",
                        "disabled": !props.appendIcon,
                        "defaults": {
                            VBtn: {
                                icon: props.appendIcon,
                                variant: "text"
                            }
                        }
                    }, {
                        default: ()=>[
                                slots.append?.()
                            ]
                    })
                ])
            ]);
        });
        return {};
    }
});

},{"vue":"gCTam","./VDatePickerHeader.css":"2ORAF","../VBtn/index.mjs":"g9s2K","../VDefaultsProvider/index.mjs":"eFFvH","../../composables/color.mjs":"6TeQR","../../composables/transition.mjs":"dJyg1","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"2ORAF":[function() {},{}],"dJNW2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVDatePickerMonthProps", ()=>makeVDatePickerMonthProps);
parcelHelpers.export(exports, "VDatePickerMonth", ()=>VDatePickerMonth);
var _vue = require("vue");
// Styles
var _vdatePickerMonthCss = require("./VDatePickerMonth.css");
// Components
var _indexMjs = require("../VBtn/index.mjs");
var _indexMjs1 = require("../VDefaultsProvider/index.mjs"); // Composables
var _calendarMjs = require("../../composables/calendar.mjs");
var _dateMjs = require("../../composables/date/date.mjs");
var _transitionMjs = require("../../composables/transition.mjs"); // Utilities
var _indexMjs2 = require("../../util/index.mjs"); // Types
const makeVDatePickerMonthProps = (0, _indexMjs2.propsFactory)({
    color: String,
    hideWeekdays: Boolean,
    multiple: [
        Boolean,
        Number,
        String
    ],
    showWeek: Boolean,
    transition: {
        type: String,
        default: "picker-transition"
    },
    reverseTransition: {
        type: String,
        default: "picker-reverse-transition"
    },
    ...(0, _calendarMjs.makeCalendarProps)()
}, "VDatePickerMonth");
const VDatePickerMonth = (0, _indexMjs2.genericComponent)()({
    name: "VDatePickerMonth",
    props: makeVDatePickerMonthProps(),
    emits: {
        "update:modelValue": (date)=>true,
        "update:month": (date)=>true,
        "update:year": (date)=>true
    },
    setup (props, _ref) {
        let { emit, slots } = _ref;
        const daysRef = (0, _vue.ref)();
        const { daysInMonth, model, weekNumbers } = (0, _calendarMjs.useCalendar)(props);
        const adapter = (0, _dateMjs.useDate)();
        const rangeStart = (0, _vue.shallowRef)();
        const rangeStop = (0, _vue.shallowRef)();
        const isReverse = (0, _vue.shallowRef)(false);
        const transition = (0, _vue.computed)(()=>{
            return !isReverse.value ? props.transition : props.reverseTransition;
        });
        if (props.multiple === "range" && model.value.length > 0) {
            rangeStart.value = model.value[0];
            if (model.value.length > 1) rangeStop.value = model.value[model.value.length - 1];
        }
        const atMax = (0, _vue.computed)(()=>{
            const max = [
                "number",
                "string"
            ].includes(typeof props.multiple) ? Number(props.multiple) : Infinity;
            return model.value.length >= max;
        });
        (0, _vue.watch)(daysInMonth, (val, oldVal)=>{
            if (!oldVal) return;
            isReverse.value = adapter.isBefore(val[0].date, oldVal[0].date);
        });
        function onRangeClick(value) {
            const _value = adapter.startOfDay(value);
            if (model.value.length === 0) rangeStart.value = undefined;
            else if (model.value.length === 1) {
                rangeStart.value = model.value[0];
                rangeStop.value = undefined;
            }
            if (!rangeStart.value) {
                rangeStart.value = _value;
                model.value = [
                    rangeStart.value
                ];
            } else if (!rangeStop.value) {
                if (adapter.isSameDay(_value, rangeStart.value)) {
                    rangeStart.value = undefined;
                    model.value = [];
                    return;
                } else if (adapter.isBefore(_value, rangeStart.value)) {
                    rangeStop.value = adapter.endOfDay(rangeStart.value);
                    rangeStart.value = _value;
                } else rangeStop.value = adapter.endOfDay(_value);
                const diff = adapter.getDiff(rangeStop.value, rangeStart.value, "days");
                const datesInRange = [
                    rangeStart.value
                ];
                for(let i = 1; i < diff; i++){
                    const nextDate = adapter.addDays(rangeStart.value, i);
                    datesInRange.push(nextDate);
                }
                datesInRange.push(rangeStop.value);
                model.value = datesInRange;
            } else {
                rangeStart.value = value;
                rangeStop.value = undefined;
                model.value = [
                    rangeStart.value
                ];
            }
        }
        function onMultipleClick(value) {
            const index = model.value.findIndex((selection)=>adapter.isSameDay(selection, value));
            if (index === -1) model.value = [
                ...model.value,
                value
            ];
            else {
                const value = [
                    ...model.value
                ];
                value.splice(index, 1);
                model.value = value;
            }
        }
        function onClick(value) {
            if (props.multiple === "range") onRangeClick(value);
            else if (props.multiple) onMultipleClick(value);
            else model.value = [
                value
            ];
        }
        return ()=>(0, _vue.createVNode)("div", {
                "class": "v-date-picker-month"
            }, [
                props.showWeek && (0, _vue.createVNode)("div", {
                    "key": "weeks",
                    "class": "v-date-picker-month__weeks"
                }, [
                    !props.hideWeekdays && (0, _vue.createVNode)("div", {
                        "key": "hide-week-days",
                        "class": "v-date-picker-month__day"
                    }, [
                        (0, _vue.createTextVNode)("\xa0")
                    ]),
                    weekNumbers.value.map((week)=>(0, _vue.createVNode)("div", {
                            "class": [
                                "v-date-picker-month__day",
                                "v-date-picker-month__day--adjacent"
                            ]
                        }, [
                            week
                        ]))
                ]),
                (0, _vue.createVNode)((0, _transitionMjs.MaybeTransition), {
                    "name": transition.value
                }, {
                    default: ()=>[
                            (0, _vue.createVNode)("div", {
                                "ref": daysRef,
                                "key": daysInMonth.value[0].date?.toString(),
                                "class": "v-date-picker-month__days"
                            }, [
                                !props.hideWeekdays && adapter.getWeekdays(props.firstDayOfWeek).map((weekDay)=>(0, _vue.createVNode)("div", {
                                        "class": [
                                            "v-date-picker-month__day",
                                            "v-date-picker-month__weekday"
                                        ]
                                    }, [
                                        weekDay
                                    ])),
                                daysInMonth.value.map((item, i)=>{
                                    const slotProps = {
                                        props: {
                                            onClick: ()=>onClick(item.date)
                                        },
                                        item,
                                        i
                                    };
                                    if (atMax.value && !item.isSelected) item.isDisabled = true;
                                    return (0, _vue.createVNode)("div", {
                                        "class": [
                                            "v-date-picker-month__day",
                                            {
                                                "v-date-picker-month__day--adjacent": item.isAdjacent,
                                                "v-date-picker-month__day--hide-adjacent": item.isHidden,
                                                "v-date-picker-month__day--selected": item.isSelected,
                                                "v-date-picker-month__day--week-end": item.isWeekEnd,
                                                "v-date-picker-month__day--week-start": item.isWeekStart
                                            }
                                        ],
                                        "data-v-date": !item.isDisabled ? item.isoDate : undefined
                                    }, [
                                        (props.showAdjacentMonths || !item.isAdjacent) && (0, _vue.createVNode)((0, _indexMjs1.VDefaultsProvider), {
                                            "defaults": {
                                                VBtn: {
                                                    class: "v-date-picker-month__day-btn",
                                                    color: (item.isSelected || item.isToday) && !item.isDisabled ? props.color : undefined,
                                                    disabled: item.isDisabled,
                                                    icon: true,
                                                    ripple: false,
                                                    text: item.localized,
                                                    variant: item.isDisabled ? item.isToday ? "outlined" : "text" : item.isToday && !item.isSelected ? "outlined" : "flat",
                                                    onClick: ()=>onClick(item.date)
                                                }
                                            }
                                        }, {
                                            default: ()=>[
                                                    slots.day?.(slotProps) ?? (0, _vue.createVNode)((0, _indexMjs.VBtn), slotProps.props, null)
                                                ]
                                        })
                                    ]);
                                })
                            ])
                        ]
                })
            ]);
    }
});

},{"vue":"gCTam","./VDatePickerMonth.css":"e2Um6","../VBtn/index.mjs":"g9s2K","../VDefaultsProvider/index.mjs":"eFFvH","../../composables/calendar.mjs":"4Dyuq","../../composables/date/date.mjs":"diSpK","../../composables/transition.mjs":"dJyg1","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"e2Um6":[function() {},{}],"4Dyuq":[function(require,module,exports) {
// Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeCalendarProps", ()=>makeCalendarProps);
parcelHelpers.export(exports, "useCalendar", ()=>useCalendar);
var _dateMjs = require("./date/date.mjs");
var _proxiedModelMjs = require("./proxiedModel.mjs"); // Utilities
var _vue = require("vue");
var _indexMjs = require("../util/index.mjs"); // Types
const makeCalendarProps = (0, _indexMjs.propsFactory)({
    allowedDates: [
        Array,
        Function
    ],
    disabled: Boolean,
    displayValue: null,
    modelValue: Array,
    month: [
        Number,
        String
    ],
    max: null,
    min: null,
    showAdjacentMonths: Boolean,
    year: [
        Number,
        String
    ],
    weekdays: {
        type: Array,
        default: ()=>[
                0,
                1,
                2,
                3,
                4,
                5,
                6
            ]
    },
    weeksInMonth: {
        type: String,
        default: "dynamic"
    },
    firstDayOfWeek: [
        Number,
        String
    ]
}, "calendar");
function useCalendar(props) {
    const adapter = (0, _dateMjs.useDate)();
    const model = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue", [], (v)=>(0, _indexMjs.wrapInArray)(v));
    const displayValue = (0, _vue.computed)(()=>{
        if (props.displayValue) return adapter.date(props.displayValue);
        if (model.value.length > 0) return adapter.date(model.value[0]);
        if (props.min) return adapter.date(props.min);
        if (Array.isArray(props.allowedDates)) return adapter.date(props.allowedDates[0]);
        return adapter.date();
    });
    const year = (0, _proxiedModelMjs.useProxiedModel)(props, "year", undefined, (v)=>{
        const value = v != null ? Number(v) : adapter.getYear(displayValue.value);
        return adapter.startOfYear(adapter.setYear(adapter.date(), value));
    }, (v)=>adapter.getYear(v));
    const month = (0, _proxiedModelMjs.useProxiedModel)(props, "month", undefined, (v)=>{
        const value = v != null ? Number(v) : adapter.getMonth(displayValue.value);
        const date = adapter.setYear(adapter.startOfMonth(adapter.date()), adapter.getYear(year.value));
        return adapter.setMonth(date, value);
    }, (v)=>adapter.getMonth(v));
    const weekDays = (0, _vue.computed)(()=>{
        const firstDayOfWeek = Number(props.firstDayOfWeek ?? 0);
        return props.weekdays.map((day)=>(day + firstDayOfWeek) % 7);
    });
    const weeksInMonth = (0, _vue.computed)(()=>{
        const weeks = adapter.getWeekArray(month.value, props.firstDayOfWeek);
        const days = weeks.flat();
        // Make sure there's always 6 weeks in month (6 * 7 days)
        // if weeksInMonth is 'static'
        const daysInMonth = 42;
        if (props.weeksInMonth === "static" && days.length < daysInMonth) {
            const lastDay = days[days.length - 1];
            let week = [];
            for(let day = 1; day <= daysInMonth - days.length; day++){
                week.push(adapter.addDays(lastDay, day));
                if (day % 7 === 0) {
                    weeks.push(week);
                    week = [];
                }
            }
        }
        return weeks;
    });
    function genDays(days, today) {
        return days.filter((date)=>{
            return weekDays.value.includes(adapter.toJsDate(date).getDay());
        }).map((date, index)=>{
            const isoDate = adapter.toISO(date);
            const isAdjacent = !adapter.isSameMonth(date, month.value);
            const isStart = adapter.isSameDay(date, adapter.startOfMonth(month.value));
            const isEnd = adapter.isSameDay(date, adapter.endOfMonth(month.value));
            const isSame = adapter.isSameDay(date, month.value);
            return {
                date,
                isoDate,
                formatted: adapter.format(date, "keyboardDate"),
                year: adapter.getYear(date),
                month: adapter.getMonth(date),
                isDisabled: isDisabled(date),
                isWeekStart: index % 7 === 0,
                isWeekEnd: index % 7 === 6,
                isToday: adapter.isSameDay(date, today),
                isAdjacent,
                isHidden: isAdjacent && !props.showAdjacentMonths,
                isStart,
                isSelected: model.value.some((value)=>adapter.isSameDay(date, value)),
                isEnd,
                isSame,
                localized: adapter.format(date, "dayOfMonth")
            };
        });
    }
    const daysInWeek = (0, _vue.computed)(()=>{
        const lastDay = adapter.startOfWeek(displayValue.value, props.firstDayOfWeek);
        const week = [];
        for(let day = 0; day <= 6; day++)week.push(adapter.addDays(lastDay, day));
        const today = adapter.date();
        return genDays(week, today);
    });
    const daysInMonth = (0, _vue.computed)(()=>{
        const days = weeksInMonth.value.flat();
        const today = adapter.date();
        return genDays(days, today);
    });
    const weekNumbers = (0, _vue.computed)(()=>{
        return weeksInMonth.value.map((week)=>{
            return week.length ? (0, _dateMjs.getWeek)(adapter, week[0]) : null;
        });
    });
    function isDisabled(value) {
        if (props.disabled) return true;
        const date = adapter.date(value);
        if (props.min && adapter.isAfter(adapter.date(props.min), date)) return true;
        if (props.max && adapter.isAfter(date, adapter.date(props.max))) return true;
        if (Array.isArray(props.allowedDates) && props.allowedDates.length > 0) return !props.allowedDates.some((d)=>adapter.isSameDay(adapter.date(d), date));
        if (typeof props.allowedDates === "function") return !props.allowedDates(date);
        return false;
    }
    return {
        displayValue,
        daysInMonth,
        daysInWeek,
        genDays,
        model,
        weeksInMonth,
        weekDays,
        weekNumbers
    };
}

},{"./date/date.mjs":"diSpK","./proxiedModel.mjs":"huwLk","vue":"gCTam","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"2SXOs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVDatePickerMonthsProps", ()=>makeVDatePickerMonthsProps);
parcelHelpers.export(exports, "VDatePickerMonths", ()=>VDatePickerMonths);
var _vue = require("vue");
// Styles
var _vdatePickerMonthsCss = require("./VDatePickerMonths.css");
// Components
var _indexMjs = require("../VBtn/index.mjs"); // Composables
var _indexMjs1 = require("../../composables/date/index.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs"); // Utilities
var _indexMjs2 = require("../../util/index.mjs"); // Types
const makeVDatePickerMonthsProps = (0, _indexMjs2.propsFactory)({
    color: String,
    height: [
        String,
        Number
    ],
    min: null,
    max: null,
    modelValue: Number,
    year: Number
}, "VDatePickerMonths");
const VDatePickerMonths = (0, _indexMjs2.genericComponent)()({
    name: "VDatePickerMonths",
    props: makeVDatePickerMonthsProps(),
    emits: {
        "update:modelValue": (date)=>true
    },
    setup (props, _ref) {
        let { emit, slots } = _ref;
        const adapter = (0, _indexMjs1.useDate)();
        const model = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
        const months = (0, _vue.computed)(()=>{
            let date = adapter.startOfYear(adapter.date());
            if (props.year) date = adapter.setYear(date, props.year);
            return (0, _indexMjs2.createRange)(12).map((i)=>{
                const text = adapter.format(date, "monthShort");
                const isDisabled = !!(props.min && adapter.isAfter(adapter.startOfMonth(adapter.date(props.min)), date) || props.max && adapter.isAfter(date, adapter.startOfMonth(adapter.date(props.max))));
                date = adapter.getNextMonth(date);
                return {
                    isDisabled,
                    text,
                    value: i
                };
            });
        });
        (0, _vue.watchEffect)(()=>{
            model.value = model.value ?? adapter.getMonth(adapter.date());
        });
        (0, _indexMjs2.useRender)(()=>(0, _vue.createVNode)("div", {
                "class": "v-date-picker-months",
                "style": {
                    height: (0, _indexMjs2.convertToUnit)(props.height)
                }
            }, [
                (0, _vue.createVNode)("div", {
                    "class": "v-date-picker-months__content"
                }, [
                    months.value.map((month, i)=>{
                        const btnProps = {
                            active: model.value === i,
                            color: model.value === i ? props.color : undefined,
                            disabled: month.isDisabled,
                            rounded: true,
                            text: month.text,
                            variant: model.value === month.value ? "flat" : "text",
                            onClick: ()=>onClick(i)
                        };
                        function onClick(i) {
                            if (model.value === i) {
                                emit("update:modelValue", model.value);
                                return;
                            }
                            model.value = i;
                        }
                        return slots.month?.({
                            month,
                            i,
                            props: btnProps
                        }) ?? (0, _vue.createVNode)((0, _indexMjs.VBtn), (0, _vue.mergeProps)({
                            "key": "month"
                        }, btnProps), null);
                    })
                ])
            ]));
        return {};
    }
});

},{"vue":"gCTam","./VDatePickerMonths.css":"cbnXx","../VBtn/index.mjs":"g9s2K","../../composables/date/index.mjs":"2d4g6","../../composables/proxiedModel.mjs":"huwLk","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"cbnXx":[function() {},{}],"fvRpJ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVDatePickerYearsProps", ()=>makeVDatePickerYearsProps);
parcelHelpers.export(exports, "VDatePickerYears", ()=>VDatePickerYears);
var _vue = require("vue");
// Styles
var _vdatePickerYearsCss = require("./VDatePickerYears.css");
// Components
var _indexMjs = require("../VBtn/index.mjs"); // Composables
var _indexMjs1 = require("../../composables/date/index.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs"); // Utilities
var _indexMjs2 = require("../../util/index.mjs"); // Types
const makeVDatePickerYearsProps = (0, _indexMjs2.propsFactory)({
    color: String,
    height: [
        String,
        Number
    ],
    min: null,
    max: null,
    modelValue: Number
}, "VDatePickerYears");
const VDatePickerYears = (0, _indexMjs2.genericComponent)()({
    name: "VDatePickerYears",
    props: makeVDatePickerYearsProps(),
    emits: {
        "update:modelValue": (year)=>true
    },
    setup (props, _ref) {
        let { emit, slots } = _ref;
        const adapter = (0, _indexMjs1.useDate)();
        const model = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
        const years = (0, _vue.computed)(()=>{
            const year = adapter.getYear(adapter.date());
            let min = year - 100;
            let max = year + 52;
            if (props.min) min = adapter.getYear(adapter.date(props.min));
            if (props.max) max = adapter.getYear(adapter.date(props.max));
            let date = adapter.startOfYear(adapter.date());
            date = adapter.setYear(date, min);
            return (0, _indexMjs2.createRange)(max - min + 1, min).map((i)=>{
                const text = adapter.format(date, "year");
                date = adapter.setYear(date, adapter.getYear(date) + 1);
                return {
                    text,
                    value: i
                };
            });
        });
        (0, _vue.watchEffect)(()=>{
            model.value = model.value ?? adapter.getYear(adapter.date());
        });
        const yearRef = (0, _indexMjs2.templateRef)();
        (0, _vue.onMounted)(async ()=>{
            await (0, _vue.nextTick)();
            yearRef.el?.scrollIntoView({
                block: "center"
            });
        });
        (0, _indexMjs2.useRender)(()=>(0, _vue.createVNode)("div", {
                "class": "v-date-picker-years",
                "style": {
                    height: (0, _indexMjs2.convertToUnit)(props.height)
                }
            }, [
                (0, _vue.createVNode)("div", {
                    "class": "v-date-picker-years__content"
                }, [
                    years.value.map((year, i)=>{
                        const btnProps = {
                            ref: model.value === year.value ? yearRef : undefined,
                            active: model.value === year.value,
                            color: model.value === year.value ? props.color : undefined,
                            rounded: true,
                            text: year.text,
                            variant: model.value === year.value ? "flat" : "text",
                            onClick: ()=>{
                                if (model.value === year.value) {
                                    emit("update:modelValue", model.value);
                                    return;
                                }
                                model.value = year.value;
                            }
                        };
                        return slots.year?.({
                            year,
                            i,
                            props: btnProps
                        }) ?? (0, _vue.createVNode)((0, _indexMjs.VBtn), (0, _vue.mergeProps)({
                            "key": "month"
                        }, btnProps), null);
                    })
                ])
            ]));
        return {};
    }
});

},{"vue":"gCTam","./VDatePickerYears.css":"42z1e","../VBtn/index.mjs":"g9s2K","../../composables/date/index.mjs":"2d4g6","../../composables/proxiedModel.mjs":"huwLk","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"42z1e":[function() {},{}],"joFqu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVPickerProps", ()=>makeVPickerProps);
parcelHelpers.export(exports, "VPicker", ()=>VPicker);
var _vue = require("vue");
// Styles
var _vpickerCss = require("./VPicker.css");
// Components
var _vpickerTitleMjs = require("./VPickerTitle.mjs");
var _vdefaultsProviderMjs = require("../../components/VDefaultsProvider/VDefaultsProvider.mjs");
var _vsheetMjs = require("../../components/VSheet/VSheet.mjs"); // Composables
var _colorMjs = require("../../composables/color.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const makeVPickerProps = (0, _indexMjs.propsFactory)({
    bgColor: String,
    landscape: Boolean,
    title: String,
    hideHeader: Boolean,
    ...(0, _vsheetMjs.makeVSheetProps)()
}, "VPicker");
const VPicker = (0, _indexMjs.genericComponent)()({
    name: "VPicker",
    props: makeVPickerProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const { backgroundColorClasses, backgroundColorStyles } = (0, _colorMjs.useBackgroundColor)((0, _vue.toRef)(props, "color"));
        (0, _indexMjs.useRender)(()=>{
            const sheetProps = (0, _vsheetMjs.VSheet).filterProps(props);
            const hasTitle = !!(props.title || slots.title);
            return (0, _vue.createVNode)((0, _vsheetMjs.VSheet), (0, _vue.mergeProps)(sheetProps, {
                "color": props.bgColor,
                "class": [
                    "v-picker",
                    {
                        "v-picker--landscape": props.landscape,
                        "v-picker--with-actions": !!slots.actions
                    },
                    props.class
                ],
                "style": props.style
            }), {
                default: ()=>[
                        !props.hideHeader && (0, _vue.createVNode)("div", {
                            "key": "header",
                            "class": [
                                backgroundColorClasses.value
                            ],
                            "style": [
                                backgroundColorStyles.value
                            ]
                        }, [
                            hasTitle && (0, _vue.createVNode)((0, _vpickerTitleMjs.VPickerTitle), {
                                "key": "picker-title"
                            }, {
                                default: ()=>[
                                        slots.title?.() ?? props.title
                                    ]
                            }),
                            slots.header && (0, _vue.createVNode)("div", {
                                "class": "v-picker__header"
                            }, [
                                slots.header()
                            ])
                        ]),
                        (0, _vue.createVNode)("div", {
                            "class": "v-picker__body"
                        }, [
                            slots.default?.()
                        ]),
                        slots.actions && (0, _vue.createVNode)((0, _vdefaultsProviderMjs.VDefaultsProvider), {
                            "defaults": {
                                VBtn: {
                                    slim: true,
                                    variant: "text"
                                }
                            }
                        }, {
                            default: ()=>[
                                    (0, _vue.createVNode)("div", {
                                        "class": "v-picker__actions"
                                    }, [
                                        slots.actions()
                                    ])
                                ]
                        })
                    ]
            });
        });
        return {};
    }
});

},{"vue":"gCTam","./VPicker.css":"kpnOn","./VPickerTitle.mjs":"lhpsI","../../components/VDefaultsProvider/VDefaultsProvider.mjs":"3hOjd","../../components/VSheet/VSheet.mjs":"3SEh6","../../composables/color.mjs":"6TeQR","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"kpnOn":[function() {},{}],"lhpsI":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VPickerTitle", ()=>VPickerTitle);
var _indexMjs = require("../../util/index.mjs");
const VPickerTitle = (0, _indexMjs.createSimpleFunctional)("v-picker-title");

},{"../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"7m4co":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VDialog", ()=>(0, _vdialogMjs.VDialog));
var _vdialogMjs = require("./VDialog.mjs");

},{"./VDialog.mjs":"9vSdN","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"d9fyg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VEmptyState", ()=>(0, _vemptyStateMjs.VEmptyState));
var _vemptyStateMjs = require("./VEmptyState.mjs");

},{"./VEmptyState.mjs":"8BS7h","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"8BS7h":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVEmptyStateProps", ()=>makeVEmptyStateProps);
parcelHelpers.export(exports, "VEmptyState", ()=>VEmptyState);
var _vue = require("vue");
// Styles
var _vemptyStateCss = require("./VEmptyState.css");
// Components
var _indexMjs = require("../VBtn/index.mjs");
var _indexMjs1 = require("../VDefaultsProvider/index.mjs");
var _indexMjs2 = require("../VIcon/index.mjs");
var _indexMjs3 = require("../VImg/index.mjs"); // Composables
var _colorMjs = require("../../composables/color.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _dimensionsMjs = require("../../composables/dimensions.mjs");
var _displayMjs = require("../../composables/display.mjs");
var _iconsMjs = require("../../composables/icons.mjs");
var _sizeMjs = require("../../composables/size.mjs");
var _themeMjs = require("../../composables/theme.mjs"); // Utilities
var _indexMjs4 = require("../../util/index.mjs"); // Types
const makeVEmptyStateProps = (0, _indexMjs4.propsFactory)({
    actionText: String,
    bgColor: String,
    color: String,
    icon: (0, _iconsMjs.IconValue),
    image: String,
    justify: {
        type: String,
        default: "center"
    },
    headline: String,
    title: String,
    text: String,
    textWidth: {
        type: [
            Number,
            String
        ],
        default: 500
    },
    href: String,
    to: String,
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _dimensionsMjs.makeDimensionProps)(),
    ...(0, _sizeMjs.makeSizeProps)({
        size: undefined
    }),
    ...(0, _themeMjs.makeThemeProps)()
}, "VEmptyState");
const VEmptyState = (0, _indexMjs4.genericComponent)()({
    name: "VEmptyState",
    props: makeVEmptyStateProps(),
    emits: {
        "click:action": (e)=>true
    },
    setup (props, _ref) {
        let { emit, slots } = _ref;
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const { backgroundColorClasses, backgroundColorStyles } = (0, _colorMjs.useBackgroundColor)((0, _vue.toRef)(props, "bgColor"));
        const { dimensionStyles } = (0, _dimensionsMjs.useDimension)(props);
        const { displayClasses } = (0, _displayMjs.useDisplay)();
        function onClickAction(e) {
            emit("click:action", e);
        }
        (0, _indexMjs4.useRender)(()=>{
            const hasActions = !!(slots.actions || props.actionText);
            const hasHeadline = !!(slots.headline || props.headline);
            const hasTitle = !!(slots.title || props.title);
            const hasText = !!(slots.text || props.text);
            const hasMedia = !!(slots.media || props.image || props.icon);
            const size = props.size || (props.image ? 200 : 96);
            return (0, _vue.createVNode)("div", {
                "class": [
                    "v-empty-state",
                    {
                        [`v-empty-state--${props.justify}`]: true
                    },
                    themeClasses.value,
                    backgroundColorClasses.value,
                    displayClasses.value,
                    props.class
                ],
                "style": [
                    backgroundColorStyles.value,
                    dimensionStyles.value,
                    props.style
                ]
            }, [
                hasMedia && (0, _vue.createVNode)("div", {
                    "key": "media",
                    "class": "v-empty-state__media"
                }, [
                    !slots.media ? (0, _vue.createVNode)((0, _vue.Fragment), null, [
                        props.image ? (0, _vue.createVNode)((0, _indexMjs3.VImg), {
                            "key": "image",
                            "src": props.image,
                            "height": size
                        }, null) : props.icon ? (0, _vue.createVNode)((0, _indexMjs2.VIcon), {
                            "key": "icon",
                            "color": props.color,
                            "size": size,
                            "icon": props.icon
                        }, null) : undefined
                    ]) : (0, _vue.createVNode)((0, _indexMjs1.VDefaultsProvider), {
                        "key": "media-defaults",
                        "defaults": {
                            VImg: {
                                src: props.image,
                                height: size
                            },
                            VIcon: {
                                size,
                                icon: props.icon
                            }
                        }
                    }, {
                        default: ()=>[
                                slots.media()
                            ]
                    })
                ]),
                hasHeadline && (0, _vue.createVNode)("div", {
                    "key": "headline",
                    "class": "v-empty-state__headline"
                }, [
                    slots.headline?.() ?? props.headline
                ]),
                hasTitle && (0, _vue.createVNode)("div", {
                    "key": "title",
                    "class": "v-empty-state__title"
                }, [
                    slots.title?.() ?? props.title
                ]),
                hasText && (0, _vue.createVNode)("div", {
                    "key": "text",
                    "class": "v-empty-state__text",
                    "style": {
                        maxWidth: (0, _indexMjs4.convertToUnit)(props.textWidth)
                    }
                }, [
                    slots.text?.() ?? props.text
                ]),
                slots.default && (0, _vue.createVNode)("div", {
                    "key": "content",
                    "class": "v-empty-state__content"
                }, [
                    slots.default()
                ]),
                hasActions && (0, _vue.createVNode)("div", {
                    "key": "actions",
                    "class": "v-empty-state__actions"
                }, [
                    (0, _vue.createVNode)((0, _indexMjs1.VDefaultsProvider), {
                        "defaults": {
                            VBtn: {
                                class: "v-empty-state__action-btn",
                                color: props.color ?? "surface-variant",
                                text: props.actionText
                            }
                        }
                    }, {
                        default: ()=>[
                                slots.actions?.({
                                    props: {
                                        onClick: onClickAction
                                    }
                                }) ?? (0, _vue.createVNode)((0, _indexMjs.VBtn), {
                                    "onClick": onClickAction
                                }, null)
                            ]
                    })
                ])
            ]);
        });
        return {};
    }
});

},{"vue":"gCTam","./VEmptyState.css":"gNDNY","../VBtn/index.mjs":"g9s2K","../VDefaultsProvider/index.mjs":"eFFvH","../VIcon/index.mjs":"5Yjjr","../VImg/index.mjs":"dbGJJ","../../composables/color.mjs":"6TeQR","../../composables/component.mjs":"4YAxs","../../composables/dimensions.mjs":"daVmy","../../composables/display.mjs":"bcRjl","../../composables/icons.mjs":"g4kLv","../../composables/size.mjs":"2PnSq","../../composables/theme.mjs":"c9HGg","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"gNDNY":[function() {},{}],"h2M8G":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VExpansionPanels", ()=>(0, _vexpansionPanelsMjs.VExpansionPanels));
parcelHelpers.export(exports, "VExpansionPanel", ()=>(0, _vexpansionPanelMjs.VExpansionPanel));
parcelHelpers.export(exports, "VExpansionPanelText", ()=>(0, _vexpansionPanelTextMjs.VExpansionPanelText));
parcelHelpers.export(exports, "VExpansionPanelTitle", ()=>(0, _vexpansionPanelTitleMjs.VExpansionPanelTitle));
var _vexpansionPanelsMjs = require("./VExpansionPanels.mjs");
var _vexpansionPanelMjs = require("./VExpansionPanel.mjs");
var _vexpansionPanelTextMjs = require("./VExpansionPanelText.mjs");
var _vexpansionPanelTitleMjs = require("./VExpansionPanelTitle.mjs");

},{"./VExpansionPanels.mjs":"1kAcd","./VExpansionPanel.mjs":"gElGT","./VExpansionPanelText.mjs":"byymU","./VExpansionPanelTitle.mjs":"9Mf0U","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"1kAcd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVExpansionPanelsProps", ()=>makeVExpansionPanelsProps);
parcelHelpers.export(exports, "VExpansionPanels", ()=>VExpansionPanels);
var _vue = require("vue");
// Styles
var _vexpansionPanelCss = require("./VExpansionPanel.css");
// Components
var _sharedMjs = require("./shared.mjs");
var _vexpansionPanelMjs = require("./VExpansionPanel.mjs"); // Composables
var _componentMjs = require("../../composables/component.mjs");
var _defaultsMjs = require("../../composables/defaults.mjs");
var _groupMjs = require("../../composables/group.mjs");
var _tagMjs = require("../../composables/tag.mjs");
var _themeMjs = require("../../composables/theme.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const allowedVariants = [
    "default",
    "accordion",
    "inset",
    "popout"
];
const makeVExpansionPanelsProps = (0, _indexMjs.propsFactory)({
    flat: Boolean,
    ...(0, _groupMjs.makeGroupProps)(),
    ...(0, _indexMjs.pick)((0, _vexpansionPanelMjs.makeVExpansionPanelProps)(), [
        "bgColor",
        "collapseIcon",
        "color",
        "eager",
        "elevation",
        "expandIcon",
        "focusable",
        "hideActions",
        "readonly",
        "ripple",
        "rounded",
        "tile",
        "static"
    ]),
    ...(0, _themeMjs.makeThemeProps)(),
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _tagMjs.makeTagProps)(),
    variant: {
        type: String,
        default: "default",
        validator: (v)=>allowedVariants.includes(v)
    }
}, "VExpansionPanels");
const VExpansionPanels = (0, _indexMjs.genericComponent)()({
    name: "VExpansionPanels",
    props: makeVExpansionPanelsProps(),
    emits: {
        "update:modelValue": (val)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const { next, prev } = (0, _groupMjs.useGroup)(props, (0, _sharedMjs.VExpansionPanelSymbol));
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const variantClass = (0, _vue.computed)(()=>props.variant && `v-expansion-panels--variant-${props.variant}`);
        (0, _defaultsMjs.provideDefaults)({
            VExpansionPanel: {
                bgColor: (0, _vue.toRef)(props, "bgColor"),
                collapseIcon: (0, _vue.toRef)(props, "collapseIcon"),
                color: (0, _vue.toRef)(props, "color"),
                eager: (0, _vue.toRef)(props, "eager"),
                elevation: (0, _vue.toRef)(props, "elevation"),
                expandIcon: (0, _vue.toRef)(props, "expandIcon"),
                focusable: (0, _vue.toRef)(props, "focusable"),
                hideActions: (0, _vue.toRef)(props, "hideActions"),
                readonly: (0, _vue.toRef)(props, "readonly"),
                ripple: (0, _vue.toRef)(props, "ripple"),
                rounded: (0, _vue.toRef)(props, "rounded"),
                static: (0, _vue.toRef)(props, "static")
            }
        });
        (0, _indexMjs.useRender)(()=>(0, _vue.createVNode)(props.tag, {
                "class": [
                    "v-expansion-panels",
                    {
                        "v-expansion-panels--flat": props.flat,
                        "v-expansion-panels--tile": props.tile
                    },
                    themeClasses.value,
                    variantClass.value,
                    props.class
                ],
                "style": props.style
            }, {
                default: ()=>[
                        slots.default?.({
                            prev,
                            next
                        })
                    ]
            }));
        return {
            next,
            prev
        };
    }
});

},{"vue":"gCTam","./VExpansionPanel.css":"An85Z","./shared.mjs":"8Mgp0","./VExpansionPanel.mjs":"gElGT","../../composables/component.mjs":"4YAxs","../../composables/defaults.mjs":"29Im0","../../composables/group.mjs":"hPbgr","../../composables/tag.mjs":"3LqcC","../../composables/theme.mjs":"c9HGg","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"An85Z":[function() {},{}],"8Mgp0":[function(require,module,exports) {
// Types
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VExpansionPanelSymbol", ()=>VExpansionPanelSymbol);
const VExpansionPanelSymbol = Symbol.for("vuetify:v-expansion-panel");

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"gElGT":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVExpansionPanelProps", ()=>makeVExpansionPanelProps);
parcelHelpers.export(exports, "VExpansionPanel", ()=>VExpansionPanel);
var _vue = require("vue");
// Components
var _sharedMjs = require("./shared.mjs");
var _vexpansionPanelTextMjs = require("./VExpansionPanelText.mjs");
var _vexpansionPanelTitleMjs = require("./VExpansionPanelTitle.mjs");
var _indexMjs = require("../VDefaultsProvider/index.mjs"); // Composables
var _colorMjs = require("../../composables/color.mjs");
var _elevationMjs = require("../../composables/elevation.mjs");
var _groupMjs = require("../../composables/group.mjs");
var _roundedMjs = require("../../composables/rounded.mjs");
var _tagMjs = require("../../composables/tag.mjs"); // Utilities
var _indexMjs1 = require("../../util/index.mjs");
const makeVExpansionPanelProps = (0, _indexMjs1.propsFactory)({
    title: String,
    text: String,
    bgColor: String,
    ...(0, _elevationMjs.makeElevationProps)(),
    ...(0, _groupMjs.makeGroupItemProps)(),
    ...(0, _roundedMjs.makeRoundedProps)(),
    ...(0, _tagMjs.makeTagProps)(),
    ...(0, _vexpansionPanelTitleMjs.makeVExpansionPanelTitleProps)(),
    ...(0, _vexpansionPanelTextMjs.makeVExpansionPanelTextProps)()
}, "VExpansionPanel");
const VExpansionPanel = (0, _indexMjs1.genericComponent)()({
    name: "VExpansionPanel",
    props: makeVExpansionPanelProps(),
    emits: {
        "group:selected": (val)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const groupItem = (0, _groupMjs.useGroupItem)(props, (0, _sharedMjs.VExpansionPanelSymbol));
        const { backgroundColorClasses, backgroundColorStyles } = (0, _colorMjs.useBackgroundColor)(props, "bgColor");
        const { elevationClasses } = (0, _elevationMjs.useElevation)(props);
        const { roundedClasses } = (0, _roundedMjs.useRounded)(props);
        const isDisabled = (0, _vue.computed)(()=>groupItem?.disabled.value || props.disabled);
        const selectedIndices = (0, _vue.computed)(()=>groupItem.group.items.value.reduce((arr, item, index)=>{
                if (groupItem.group.selected.value.includes(item.id)) arr.push(index);
                return arr;
            }, []));
        const isBeforeSelected = (0, _vue.computed)(()=>{
            const index = groupItem.group.items.value.findIndex((item)=>item.id === groupItem.id);
            return !groupItem.isSelected.value && selectedIndices.value.some((selectedIndex)=>selectedIndex - index === 1);
        });
        const isAfterSelected = (0, _vue.computed)(()=>{
            const index = groupItem.group.items.value.findIndex((item)=>item.id === groupItem.id);
            return !groupItem.isSelected.value && selectedIndices.value.some((selectedIndex)=>selectedIndex - index === -1);
        });
        (0, _vue.provide)((0, _sharedMjs.VExpansionPanelSymbol), groupItem);
        (0, _indexMjs1.useRender)(()=>{
            const hasText = !!(slots.text || props.text);
            const hasTitle = !!(slots.title || props.title);
            const expansionPanelTitleProps = (0, _vexpansionPanelTitleMjs.VExpansionPanelTitle).filterProps(props);
            const expansionPanelTextProps = (0, _vexpansionPanelTextMjs.VExpansionPanelText).filterProps(props);
            return (0, _vue.createVNode)(props.tag, {
                "class": [
                    "v-expansion-panel",
                    {
                        "v-expansion-panel--active": groupItem.isSelected.value,
                        "v-expansion-panel--before-active": isBeforeSelected.value,
                        "v-expansion-panel--after-active": isAfterSelected.value,
                        "v-expansion-panel--disabled": isDisabled.value
                    },
                    roundedClasses.value,
                    backgroundColorClasses.value,
                    props.class
                ],
                "style": [
                    backgroundColorStyles.value,
                    props.style
                ]
            }, {
                default: ()=>[
                        (0, _vue.createVNode)("div", {
                            "class": [
                                "v-expansion-panel__shadow",
                                ...elevationClasses.value
                            ]
                        }, null),
                        (0, _vue.createVNode)((0, _indexMjs.VDefaultsProvider), {
                            "defaults": {
                                VExpansionPanelTitle: {
                                    ...expansionPanelTitleProps
                                },
                                VExpansionPanelText: {
                                    ...expansionPanelTextProps
                                }
                            }
                        }, {
                            default: ()=>[
                                    hasTitle && (0, _vue.createVNode)((0, _vexpansionPanelTitleMjs.VExpansionPanelTitle), {
                                        "key": "title"
                                    }, {
                                        default: ()=>[
                                                slots.title ? slots.title() : props.title
                                            ]
                                    }),
                                    hasText && (0, _vue.createVNode)((0, _vexpansionPanelTextMjs.VExpansionPanelText), {
                                        "key": "text"
                                    }, {
                                        default: ()=>[
                                                slots.text ? slots.text() : props.text
                                            ]
                                    }),
                                    slots.default?.()
                                ]
                        })
                    ]
            });
        });
        return {
            groupItem
        };
    }
});

},{"vue":"gCTam","./shared.mjs":"8Mgp0","./VExpansionPanelText.mjs":"byymU","./VExpansionPanelTitle.mjs":"9Mf0U","../VDefaultsProvider/index.mjs":"eFFvH","../../composables/color.mjs":"6TeQR","../../composables/elevation.mjs":"aNIiI","../../composables/group.mjs":"hPbgr","../../composables/rounded.mjs":"1RfhA","../../composables/tag.mjs":"3LqcC","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"byymU":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVExpansionPanelTextProps", ()=>makeVExpansionPanelTextProps);
parcelHelpers.export(exports, "VExpansionPanelText", ()=>VExpansionPanelText);
var _vue = require("vue");
// Components
var _sharedMjs = require("./shared.mjs");
var _indexMjs = require("../transitions/index.mjs"); // Composables
var _componentMjs = require("../../composables/component.mjs");
var _lazyMjs = require("../../composables/lazy.mjs"); // Utilities
var _indexMjs1 = require("../../util/index.mjs");
const makeVExpansionPanelTextProps = (0, _indexMjs1.propsFactory)({
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _lazyMjs.makeLazyProps)()
}, "VExpansionPanelText");
const VExpansionPanelText = (0, _indexMjs1.genericComponent)()({
    name: "VExpansionPanelText",
    props: makeVExpansionPanelTextProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const expansionPanel = (0, _vue.inject)((0, _sharedMjs.VExpansionPanelSymbol));
        if (!expansionPanel) throw new Error("[Vuetify] v-expansion-panel-text needs to be placed inside v-expansion-panel");
        const { hasContent, onAfterLeave } = (0, _lazyMjs.useLazy)(props, expansionPanel.isSelected);
        (0, _indexMjs1.useRender)(()=>(0, _vue.createVNode)((0, _indexMjs.VExpandTransition), {
                "onAfterLeave": onAfterLeave
            }, {
                default: ()=>[
                        (0, _vue.withDirectives)((0, _vue.createVNode)("div", {
                            "class": [
                                "v-expansion-panel-text",
                                props.class
                            ],
                            "style": props.style
                        }, [
                            slots.default && hasContent.value && (0, _vue.createVNode)("div", {
                                "class": "v-expansion-panel-text__wrapper"
                            }, [
                                slots.default?.()
                            ])
                        ]), [
                            [
                                (0, _vue.vShow),
                                expansionPanel.isSelected.value
                            ]
                        ])
                    ]
            }));
        return {};
    }
});

},{"vue":"gCTam","./shared.mjs":"8Mgp0","../transitions/index.mjs":"3ybHr","../../composables/component.mjs":"4YAxs","../../composables/lazy.mjs":"lca0Z","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"9Mf0U":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVExpansionPanelTitleProps", ()=>makeVExpansionPanelTitleProps);
parcelHelpers.export(exports, "VExpansionPanelTitle", ()=>VExpansionPanelTitle);
var _vue = require("vue");
// Components
var _sharedMjs = require("./shared.mjs");
var _indexMjs = require("../VDefaultsProvider/index.mjs");
var _indexMjs1 = require("../VIcon/index.mjs"); // Composables
var _colorMjs = require("../../composables/color.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _dimensionsMjs = require("../../composables/dimensions.mjs");
var _iconsMjs = require("../../composables/icons.mjs"); // Directives
var _indexMjs2 = require("../../directives/ripple/index.mjs"); // Utilities
var _indexMjs3 = require("../../util/index.mjs"); // Types
const makeVExpansionPanelTitleProps = (0, _indexMjs3.propsFactory)({
    color: String,
    expandIcon: {
        type: (0, _iconsMjs.IconValue),
        default: "$expand"
    },
    collapseIcon: {
        type: (0, _iconsMjs.IconValue),
        default: "$collapse"
    },
    hideActions: Boolean,
    focusable: Boolean,
    static: Boolean,
    ripple: {
        type: [
            Boolean,
            Object
        ],
        default: false
    },
    readonly: Boolean,
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _dimensionsMjs.makeDimensionProps)()
}, "VExpansionPanelTitle");
const VExpansionPanelTitle = (0, _indexMjs3.genericComponent)()({
    name: "VExpansionPanelTitle",
    directives: {
        Ripple: (0, _indexMjs2.Ripple)
    },
    props: makeVExpansionPanelTitleProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const expansionPanel = (0, _vue.inject)((0, _sharedMjs.VExpansionPanelSymbol));
        if (!expansionPanel) throw new Error("[Vuetify] v-expansion-panel-title needs to be placed inside v-expansion-panel");
        const { backgroundColorClasses, backgroundColorStyles } = (0, _colorMjs.useBackgroundColor)(props, "color");
        const { dimensionStyles } = (0, _dimensionsMjs.useDimension)(props);
        const slotProps = (0, _vue.computed)(()=>({
                collapseIcon: props.collapseIcon,
                disabled: expansionPanel.disabled.value,
                expanded: expansionPanel.isSelected.value,
                expandIcon: props.expandIcon,
                readonly: props.readonly
            }));
        const icon = (0, _vue.computed)(()=>expansionPanel.isSelected.value ? props.collapseIcon : props.expandIcon);
        (0, _indexMjs3.useRender)(()=>(0, _vue.withDirectives)((0, _vue.createVNode)("button", {
                "class": [
                    "v-expansion-panel-title",
                    {
                        "v-expansion-panel-title--active": expansionPanel.isSelected.value,
                        "v-expansion-panel-title--focusable": props.focusable,
                        "v-expansion-panel-title--static": props.static
                    },
                    backgroundColorClasses.value,
                    props.class
                ],
                "style": [
                    backgroundColorStyles.value,
                    dimensionStyles.value,
                    props.style
                ],
                "type": "button",
                "tabindex": expansionPanel.disabled.value ? -1 : undefined,
                "disabled": expansionPanel.disabled.value,
                "aria-expanded": expansionPanel.isSelected.value,
                "onClick": !props.readonly ? expansionPanel.toggle : undefined
            }, [
                (0, _vue.createVNode)("span", {
                    "class": "v-expansion-panel-title__overlay"
                }, null),
                slots.default?.(slotProps.value),
                !props.hideActions && (0, _vue.createVNode)((0, _indexMjs.VDefaultsProvider), {
                    "defaults": {
                        VIcon: {
                            icon: icon.value
                        }
                    }
                }, {
                    default: ()=>[
                            (0, _vue.createVNode)("span", {
                                "class": "v-expansion-panel-title__icon"
                            }, [
                                slots.actions?.(slotProps.value) ?? (0, _vue.createVNode)((0, _indexMjs1.VIcon), null, null)
                            ])
                        ]
                })
            ]), [
                [
                    (0, _vue.resolveDirective)("ripple"),
                    props.ripple
                ]
            ]));
        return {};
    }
});

},{"vue":"gCTam","./shared.mjs":"8Mgp0","../VDefaultsProvider/index.mjs":"eFFvH","../VIcon/index.mjs":"5Yjjr","../../composables/color.mjs":"6TeQR","../../composables/component.mjs":"4YAxs","../../composables/dimensions.mjs":"daVmy","../../composables/icons.mjs":"g4kLv","../../directives/ripple/index.mjs":"41ncU","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"8qxjp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VFab", ()=>(0, _vfabMjs.VFab));
var _vfabMjs = require("./VFab.mjs");

},{"./VFab.mjs":"4nG3l","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"4nG3l":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVFabProps", ()=>makeVFabProps);
parcelHelpers.export(exports, "VFab", ()=>VFab);
var _vue = require("vue");
// Styles
var _vfabCss = require("./VFab.css");
// Components
var _vbtnMjs = require("../VBtn/VBtn.mjs"); // Composables
var _layoutMjs = require("../../composables/layout.mjs");
var _locationMjs = require("../../composables/location.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs");
var _resizeObserverMjs = require("../../composables/resizeObserver.mjs");
var _toggleScopeMjs = require("../../composables/toggleScope.mjs");
var _transitionMjs = require("../../composables/transition.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const makeVFabProps = (0, _indexMjs.propsFactory)({
    app: Boolean,
    appear: Boolean,
    extended: Boolean,
    layout: Boolean,
    offset: Boolean,
    modelValue: {
        type: Boolean,
        default: true
    },
    ...(0, _indexMjs.omit)((0, _vbtnMjs.makeVBtnProps)({
        active: true
    }), [
        "location"
    ]),
    ...(0, _layoutMjs.makeLayoutItemProps)(),
    ...(0, _locationMjs.makeLocationProps)(),
    ...(0, _transitionMjs.makeTransitionProps)({
        transition: "fab-transition"
    })
}, "VFab");
const VFab = (0, _indexMjs.genericComponent)()({
    name: "VFab",
    props: makeVFabProps(),
    emits: {
        "update:modelValue": (value)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const model = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
        const height = (0, _vue.shallowRef)(56);
        const layoutItemStyles = (0, _vue.ref)();
        const { resizeRef } = (0, _resizeObserverMjs.useResizeObserver)((entries)=>{
            if (!entries.length) return;
            height.value = entries[0].target.clientHeight;
        });
        const hasPosition = (0, _vue.computed)(()=>props.app || props.absolute);
        const position = (0, _vue.computed)(()=>{
            if (!hasPosition.value) return false;
            return props.location?.split(" ").shift() ?? "bottom";
        });
        const orientation = (0, _vue.computed)(()=>{
            if (!hasPosition.value) return false;
            return props.location?.split(" ")[1] ?? "end";
        });
        (0, _toggleScopeMjs.useToggleScope)(()=>props.app, ()=>{
            const layout = (0, _layoutMjs.useLayoutItem)({
                id: props.name,
                order: (0, _vue.computed)(()=>parseInt(props.order, 10)),
                position,
                layoutSize: (0, _vue.computed)(()=>props.layout ? height.value + 24 : 0),
                elementSize: (0, _vue.computed)(()=>height.value + 24),
                active: (0, _vue.computed)(()=>props.app && model.value),
                absolute: (0, _vue.toRef)(props, "absolute")
            });
            (0, _vue.watchEffect)(()=>{
                layoutItemStyles.value = layout.layoutItemStyles.value;
            });
        });
        const vFabRef = (0, _vue.ref)();
        (0, _indexMjs.useRender)(()=>{
            const btnProps = (0, _vbtnMjs.VBtn).filterProps(props);
            return (0, _vue.createVNode)("div", {
                "ref": vFabRef,
                "class": [
                    "v-fab",
                    {
                        "v-fab--absolute": props.absolute,
                        "v-fab--app": !!props.app,
                        "v-fab--extended": props.extended,
                        "v-fab--offset": props.offset,
                        [`v-fab--${position.value}`]: hasPosition.value,
                        [`v-fab--${orientation.value}`]: hasPosition.value
                    },
                    props.class
                ],
                "style": [
                    props.app ? {
                        ...layoutItemStyles.value
                    } : {
                        height: "inherit",
                        width: undefined
                    },
                    props.style
                ]
            }, [
                (0, _vue.createVNode)("div", {
                    "class": "v-fab__container"
                }, [
                    (0, _vue.createVNode)((0, _transitionMjs.MaybeTransition), {
                        "appear": props.appear,
                        "transition": props.transition
                    }, {
                        default: ()=>[
                                (0, _vue.withDirectives)((0, _vue.createVNode)((0, _vbtnMjs.VBtn), (0, _vue.mergeProps)({
                                    "ref": resizeRef
                                }, btnProps, {
                                    "active": undefined,
                                    "location": undefined
                                }), slots), [
                                    [
                                        (0, _vue.vShow),
                                        props.active
                                    ]
                                ])
                            ]
                    })
                ])
            ]);
        });
        return {};
    }
});

},{"vue":"gCTam","./VFab.css":"jnlvg","../VBtn/VBtn.mjs":"2fut1","../../composables/layout.mjs":"lfigA","../../composables/location.mjs":"cIK4d","../../composables/proxiedModel.mjs":"huwLk","../../composables/resizeObserver.mjs":"hIk8t","../../composables/toggleScope.mjs":"dsKlJ","../../composables/transition.mjs":"dJyg1","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"jnlvg":[function() {},{}],"8ajJF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VField", ()=>(0, _vfieldMjs.VField));
parcelHelpers.export(exports, "VFieldLabel", ()=>(0, _vfieldLabelMjs.VFieldLabel));
var _vfieldMjs = require("./VField.mjs");
var _vfieldLabelMjs = require("./VFieldLabel.mjs");

},{"./VField.mjs":"kYFSe","./VFieldLabel.mjs":"4wTrB","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"2ojXG":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VFileInput", ()=>(0, _vfileInputMjs.VFileInput));
var _vfileInputMjs = require("./VFileInput.mjs");

},{"./VFileInput.mjs":"5spJa","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"5spJa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVFileInputProps", ()=>makeVFileInputProps);
parcelHelpers.export(exports, "VFileInput", ()=>VFileInput);
var _vue = require("vue");
// Styles
var _vfileInputCss = require("./VFileInput.css");
// Components
var _indexMjs = require("../VChip/index.mjs");
var _indexMjs1 = require("../VCounter/index.mjs");
var _indexMjs2 = require("../VField/index.mjs");
var _vfieldMjs = require("../VField/VField.mjs");
var _vinputMjs = require("../VInput/VInput.mjs"); // Composables
var _focusMjs = require("../../composables/focus.mjs");
var _forwardRefsMjs = require("../../composables/forwardRefs.mjs");
var _localeMjs = require("../../composables/locale.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs"); // Utilities
var _indexMjs3 = require("../../util/index.mjs"); // Types
const makeVFileInputProps = (0, _indexMjs3.propsFactory)({
    chips: Boolean,
    counter: Boolean,
    counterSizeString: {
        type: String,
        default: "$vuetify.fileInput.counterSize"
    },
    counterString: {
        type: String,
        default: "$vuetify.fileInput.counter"
    },
    hideInput: Boolean,
    multiple: Boolean,
    showSize: {
        type: [
            Boolean,
            Number,
            String
        ],
        default: false,
        validator: (v)=>{
            return typeof v === "boolean" || [
                1000,
                1024
            ].includes(Number(v));
        }
    },
    ...(0, _vinputMjs.makeVInputProps)({
        prependIcon: "$file"
    }),
    modelValue: {
        type: [
            Array,
            Object
        ],
        default: (props)=>props.multiple ? [] : null,
        validator: (val)=>{
            return (0, _indexMjs3.wrapInArray)(val).every((v)=>v != null && typeof v === "object");
        }
    },
    ...(0, _vfieldMjs.makeVFieldProps)({
        clearable: true
    })
}, "VFileInput");
const VFileInput = (0, _indexMjs3.genericComponent)()({
    name: "VFileInput",
    inheritAttrs: false,
    props: makeVFileInputProps(),
    emits: {
        "click:control": (e)=>true,
        "mousedown:control": (e)=>true,
        "update:focused": (focused)=>true,
        "update:modelValue": (files)=>true
    },
    setup (props, _ref) {
        let { attrs, emit, slots } = _ref;
        const { t } = (0, _localeMjs.useLocale)();
        const model = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue", props.modelValue, (val)=>(0, _indexMjs3.wrapInArray)(val), (val)=>!props.multiple && Array.isArray(val) ? val[0] : val);
        const { isFocused, focus, blur } = (0, _focusMjs.useFocus)(props);
        const base = (0, _vue.computed)(()=>typeof props.showSize !== "boolean" ? props.showSize : undefined);
        const totalBytes = (0, _vue.computed)(()=>(model.value ?? []).reduce((bytes, _ref2)=>{
                let { size = 0 } = _ref2;
                return bytes + size;
            }, 0));
        const totalBytesReadable = (0, _vue.computed)(()=>(0, _indexMjs3.humanReadableFileSize)(totalBytes.value, base.value));
        const fileNames = (0, _vue.computed)(()=>(model.value ?? []).map((file)=>{
                const { name = "", size = 0 } = file;
                return !props.showSize ? name : `${name} (${(0, _indexMjs3.humanReadableFileSize)(size, base.value)})`;
            }));
        const counterValue = (0, _vue.computed)(()=>{
            const fileCount = model.value?.length ?? 0;
            if (props.showSize) return t(props.counterSizeString, fileCount, totalBytesReadable.value);
            else return t(props.counterString, fileCount);
        });
        const vInputRef = (0, _vue.ref)();
        const vFieldRef = (0, _vue.ref)();
        const inputRef = (0, _vue.ref)();
        const isActive = (0, _vue.computed)(()=>isFocused.value || props.active);
        const isPlainOrUnderlined = (0, _vue.computed)(()=>[
                "plain",
                "underlined"
            ].includes(props.variant));
        function onFocus() {
            if (inputRef.value !== document.activeElement) inputRef.value?.focus();
            if (!isFocused.value) focus();
        }
        function onClickPrepend(e) {
            inputRef.value?.click();
        }
        function onControlMousedown(e) {
            emit("mousedown:control", e);
        }
        function onControlClick(e) {
            inputRef.value?.click();
            emit("click:control", e);
        }
        function onClear(e) {
            e.stopPropagation();
            onFocus();
            (0, _vue.nextTick)(()=>{
                model.value = [];
                (0, _indexMjs3.callEvent)(props["onClick:clear"], e);
            });
        }
        (0, _vue.watch)(model, (newValue)=>{
            const hasModelReset = !Array.isArray(newValue) || !newValue.length;
            if (hasModelReset && inputRef.value) inputRef.value.value = "";
        });
        (0, _indexMjs3.useRender)(()=>{
            const hasCounter = !!(slots.counter || props.counter);
            const hasDetails = !!(hasCounter || slots.details);
            const [rootAttrs, inputAttrs] = (0, _indexMjs3.filterInputAttrs)(attrs);
            const { modelValue: _, ...inputProps } = (0, _vinputMjs.VInput).filterProps(props);
            const fieldProps = (0, _vfieldMjs.filterFieldProps)(props);
            return (0, _vue.createVNode)((0, _vinputMjs.VInput), (0, _vue.mergeProps)({
                "ref": vInputRef,
                "modelValue": model.value,
                "onUpdate:modelValue": ($event)=>model.value = $event,
                "class": [
                    "v-file-input",
                    {
                        "v-file-input--chips": !!props.chips,
                        "v-file-input--hide": props.hideInput,
                        "v-input--plain-underlined": isPlainOrUnderlined.value
                    },
                    props.class
                ],
                "style": props.style,
                "onClick:prepend": onClickPrepend
            }, rootAttrs, inputProps, {
                "centerAffix": !isPlainOrUnderlined.value,
                "focused": isFocused.value
            }), {
                ...slots,
                default: (_ref3)=>{
                    let { id, isDisabled, isDirty, isReadonly, isValid } = _ref3;
                    return (0, _vue.createVNode)((0, _indexMjs2.VField), (0, _vue.mergeProps)({
                        "ref": vFieldRef,
                        "prepend-icon": props.prependIcon,
                        "onMousedown": onControlMousedown,
                        "onClick": onControlClick,
                        "onClick:clear": onClear,
                        "onClick:prependInner": props["onClick:prependInner"],
                        "onClick:appendInner": props["onClick:appendInner"]
                    }, fieldProps, {
                        "id": id.value,
                        "active": isActive.value || isDirty.value,
                        "dirty": isDirty.value || props.dirty,
                        "disabled": isDisabled.value,
                        "focused": isFocused.value,
                        "error": isValid.value === false
                    }), {
                        ...slots,
                        default: (_ref4)=>{
                            let { props: { class: fieldClass, ...slotProps } } = _ref4;
                            return (0, _vue.createVNode)((0, _vue.Fragment), null, [
                                (0, _vue.createVNode)("input", (0, _vue.mergeProps)({
                                    "ref": inputRef,
                                    "type": "file",
                                    "readonly": isReadonly.value,
                                    "disabled": isDisabled.value,
                                    "multiple": props.multiple,
                                    "name": props.name,
                                    "onClick": (e)=>{
                                        e.stopPropagation();
                                        if (isReadonly.value) e.preventDefault();
                                        onFocus();
                                    },
                                    "onChange": (e)=>{
                                        if (!e.target) return;
                                        const target = e.target;
                                        model.value = [
                                            ...target.files ?? []
                                        ];
                                    },
                                    "onFocus": onFocus,
                                    "onBlur": blur
                                }, slotProps, inputAttrs), null),
                                (0, _vue.createVNode)("div", {
                                    "class": fieldClass
                                }, [
                                    !!model.value?.length && !props.hideInput && (slots.selection ? slots.selection({
                                        fileNames: fileNames.value,
                                        totalBytes: totalBytes.value,
                                        totalBytesReadable: totalBytesReadable.value
                                    }) : props.chips ? fileNames.value.map((text)=>(0, _vue.createVNode)((0, _indexMjs.VChip), {
                                            "key": text,
                                            "size": "small",
                                            "text": text
                                        }, null)) : fileNames.value.join(", "))
                                ])
                            ]);
                        }
                    });
                },
                details: hasDetails ? (slotProps)=>(0, _vue.createVNode)((0, _vue.Fragment), null, [
                        slots.details?.(slotProps),
                        hasCounter && (0, _vue.createVNode)((0, _vue.Fragment), null, [
                            (0, _vue.createVNode)("span", null, null),
                            (0, _vue.createVNode)((0, _indexMjs1.VCounter), {
                                "active": !!model.value?.length,
                                "value": counterValue.value,
                                "disabled": props.disabled
                            }, slots.counter)
                        ])
                    ]) : undefined
            });
        });
        return (0, _forwardRefsMjs.forwardRefs)({}, vInputRef, vFieldRef, inputRef);
    }
});

},{"vue":"gCTam","./VFileInput.css":"f9Pre","../VChip/index.mjs":"bLlpp","../VCounter/index.mjs":"lmomu","../VField/index.mjs":"8ajJF","../VField/VField.mjs":"kYFSe","../VInput/VInput.mjs":"fIDss","../../composables/focus.mjs":"ez9on","../../composables/forwardRefs.mjs":"2TNTP","../../composables/locale.mjs":"9rJP0","../../composables/proxiedModel.mjs":"huwLk","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"f9Pre":[function() {},{}],"9xAt2":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VFooter", ()=>(0, _vfooterMjs.VFooter));
var _vfooterMjs = require("./VFooter.mjs");

},{"./VFooter.mjs":"cmxPE","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"cmxPE":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVFooterProps", ()=>makeVFooterProps);
parcelHelpers.export(exports, "VFooter", ()=>VFooter);
var _vue = require("vue");
// Styles
var _vfooterCss = require("./VFooter.css");
// Composables
var _borderMjs = require("../../composables/border.mjs");
var _colorMjs = require("../../composables/color.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _elevationMjs = require("../../composables/elevation.mjs");
var _layoutMjs = require("../../composables/layout.mjs");
var _resizeObserverMjs = require("../../composables/resizeObserver.mjs");
var _roundedMjs = require("../../composables/rounded.mjs");
var _tagMjs = require("../../composables/tag.mjs");
var _themeMjs = require("../../composables/theme.mjs");
var _toggleScopeMjs = require("../../composables/toggleScope.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const makeVFooterProps = (0, _indexMjs.propsFactory)({
    app: Boolean,
    color: String,
    height: {
        type: [
            Number,
            String
        ],
        default: "auto"
    },
    ...(0, _borderMjs.makeBorderProps)(),
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _elevationMjs.makeElevationProps)(),
    ...(0, _layoutMjs.makeLayoutItemProps)(),
    ...(0, _roundedMjs.makeRoundedProps)(),
    ...(0, _tagMjs.makeTagProps)({
        tag: "footer"
    }),
    ...(0, _themeMjs.makeThemeProps)()
}, "VFooter");
const VFooter = (0, _indexMjs.genericComponent)()({
    name: "VFooter",
    props: makeVFooterProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const layoutItemStyles = (0, _vue.ref)();
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const { backgroundColorClasses, backgroundColorStyles } = (0, _colorMjs.useBackgroundColor)((0, _vue.toRef)(props, "color"));
        const { borderClasses } = (0, _borderMjs.useBorder)(props);
        const { elevationClasses } = (0, _elevationMjs.useElevation)(props);
        const { roundedClasses } = (0, _roundedMjs.useRounded)(props);
        const autoHeight = (0, _vue.shallowRef)(32);
        const { resizeRef } = (0, _resizeObserverMjs.useResizeObserver)((entries)=>{
            if (!entries.length) return;
            autoHeight.value = entries[0].target.clientHeight;
        });
        const height = (0, _vue.computed)(()=>props.height === "auto" ? autoHeight.value : parseInt(props.height, 10));
        (0, _toggleScopeMjs.useToggleScope)(()=>props.app, ()=>{
            const layout = (0, _layoutMjs.useLayoutItem)({
                id: props.name,
                order: (0, _vue.computed)(()=>parseInt(props.order, 10)),
                position: (0, _vue.computed)(()=>"bottom"),
                layoutSize: height,
                elementSize: (0, _vue.computed)(()=>props.height === "auto" ? undefined : height.value),
                active: (0, _vue.computed)(()=>props.app),
                absolute: (0, _vue.toRef)(props, "absolute")
            });
            (0, _vue.watchEffect)(()=>{
                layoutItemStyles.value = layout.layoutItemStyles.value;
            });
        });
        (0, _indexMjs.useRender)(()=>(0, _vue.createVNode)(props.tag, {
                "ref": resizeRef,
                "class": [
                    "v-footer",
                    themeClasses.value,
                    backgroundColorClasses.value,
                    borderClasses.value,
                    elevationClasses.value,
                    roundedClasses.value,
                    props.class
                ],
                "style": [
                    backgroundColorStyles.value,
                    props.app ? layoutItemStyles.value : {
                        height: (0, _indexMjs.convertToUnit)(props.height)
                    },
                    props.style
                ]
            }, slots));
        return {};
    }
});

},{"vue":"gCTam","./VFooter.css":"58u9F","../../composables/border.mjs":"iYaxw","../../composables/color.mjs":"6TeQR","../../composables/component.mjs":"4YAxs","../../composables/elevation.mjs":"aNIiI","../../composables/layout.mjs":"lfigA","../../composables/resizeObserver.mjs":"hIk8t","../../composables/rounded.mjs":"1RfhA","../../composables/tag.mjs":"3LqcC","../../composables/theme.mjs":"c9HGg","../../composables/toggleScope.mjs":"dsKlJ","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"58u9F":[function() {},{}],"3tl32":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VForm", ()=>(0, _vformMjs.VForm));
var _vformMjs = require("./VForm.mjs");

},{"./VForm.mjs":"7KiTP","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"7KiTP":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVFormProps", ()=>makeVFormProps);
parcelHelpers.export(exports, "VForm", ()=>VForm);
var _vue = require("vue");
// Composables
var _componentMjs = require("../../composables/component.mjs");
var _formMjs = require("../../composables/form.mjs");
var _forwardRefsMjs = require("../../composables/forwardRefs.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const makeVFormProps = (0, _indexMjs.propsFactory)({
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _formMjs.makeFormProps)()
}, "VForm");
const VForm = (0, _indexMjs.genericComponent)()({
    name: "VForm",
    props: makeVFormProps(),
    emits: {
        "update:modelValue": (val)=>true,
        submit: (e)=>true
    },
    setup (props, _ref) {
        let { slots, emit } = _ref;
        const form = (0, _formMjs.createForm)(props);
        const formRef = (0, _vue.ref)();
        function onReset(e) {
            e.preventDefault();
            form.reset();
        }
        function onSubmit(_e) {
            const e = _e;
            const ready = form.validate();
            e.then = ready.then.bind(ready);
            e.catch = ready.catch.bind(ready);
            e.finally = ready.finally.bind(ready);
            emit("submit", e);
            if (!e.defaultPrevented) ready.then((_ref2)=>{
                let { valid } = _ref2;
                if (valid) formRef.value?.submit();
            });
            e.preventDefault();
        }
        (0, _indexMjs.useRender)(()=>(0, _vue.createVNode)("form", {
                "ref": formRef,
                "class": [
                    "v-form",
                    props.class
                ],
                "style": props.style,
                "novalidate": true,
                "onReset": onReset,
                "onSubmit": onSubmit
            }, [
                slots.default?.(form)
            ]));
        return (0, _forwardRefsMjs.forwardRefs)(form, formRef);
    }
});

},{"vue":"gCTam","../../composables/component.mjs":"4YAxs","../../composables/form.mjs":"wQrA9","../../composables/forwardRefs.mjs":"2TNTP","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"dSkK0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VHover", ()=>(0, _vhoverMjs.VHover));
var _vhoverMjs = require("./VHover.mjs");

},{"./VHover.mjs":"9dVIU","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"9dVIU":[function(require,module,exports) {
// Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVHoverProps", ()=>makeVHoverProps);
parcelHelpers.export(exports, "VHover", ()=>VHover);
var _delayMjs = require("../../composables/delay.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const makeVHoverProps = (0, _indexMjs.propsFactory)({
    disabled: Boolean,
    modelValue: {
        type: Boolean,
        default: null
    },
    ...(0, _delayMjs.makeDelayProps)()
}, "VHover");
const VHover = (0, _indexMjs.genericComponent)()({
    name: "VHover",
    props: makeVHoverProps(),
    emits: {
        "update:modelValue": (value)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const isHovering = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
        const { runOpenDelay, runCloseDelay } = (0, _delayMjs.useDelay)(props, (value)=>!props.disabled && (isHovering.value = value));
        return ()=>slots.default?.({
                isHovering: isHovering.value,
                props: {
                    onMouseenter: runOpenDelay,
                    onMouseleave: runCloseDelay
                }
            });
    }
});

},{"../../composables/delay.mjs":"iMKjj","../../composables/proxiedModel.mjs":"huwLk","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"i9C5Y":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VInfiniteScroll", ()=>(0, _vinfiniteScrollMjs.VInfiniteScroll));
var _vinfiniteScrollMjs = require("./VInfiniteScroll.mjs");

},{"./VInfiniteScroll.mjs":"6VaSg","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"6VaSg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVInfiniteScrollProps", ()=>makeVInfiniteScrollProps);
parcelHelpers.export(exports, "VInfiniteScrollIntersect", ()=>VInfiniteScrollIntersect);
parcelHelpers.export(exports, "VInfiniteScroll", ()=>VInfiniteScroll);
var _vue = require("vue");
// Styles
var _vinfiniteScrollCss = require("./VInfiniteScroll.css");
// Components
var _indexMjs = require("../VBtn/index.mjs");
var _indexMjs1 = require("../VProgressCircular/index.mjs"); // Composables
var _dimensionsMjs = require("../../composables/dimensions.mjs");
var _intersectionObserverMjs = require("../../composables/intersectionObserver.mjs");
var _localeMjs = require("../../composables/locale.mjs");
var _tagMjs = require("../../composables/tag.mjs"); // Utilities
var _indexMjs2 = require("../../util/index.mjs"); // Types
const makeVInfiniteScrollProps = (0, _indexMjs2.propsFactory)({
    color: String,
    direction: {
        type: String,
        default: "vertical",
        validator: (v)=>[
                "vertical",
                "horizontal"
            ].includes(v)
    },
    side: {
        type: String,
        default: "end",
        validator: (v)=>[
                "start",
                "end",
                "both"
            ].includes(v)
    },
    mode: {
        type: String,
        default: "intersect",
        validator: (v)=>[
                "intersect",
                "manual"
            ].includes(v)
    },
    margin: [
        Number,
        String
    ],
    loadMoreText: {
        type: String,
        default: "$vuetify.infiniteScroll.loadMore"
    },
    emptyText: {
        type: String,
        default: "$vuetify.infiniteScroll.empty"
    },
    ...(0, _dimensionsMjs.makeDimensionProps)(),
    ...(0, _tagMjs.makeTagProps)()
}, "VInfiniteScroll");
const VInfiniteScrollIntersect = (0, _indexMjs2.defineComponent)({
    name: "VInfiniteScrollIntersect",
    props: {
        side: {
            type: String,
            required: true
        },
        rootRef: null,
        rootMargin: String
    },
    emits: {
        intersect: (side, isIntersecting)=>true
    },
    setup (props, _ref) {
        let { emit } = _ref;
        const { intersectionRef, isIntersecting } = (0, _intersectionObserverMjs.useIntersectionObserver)((entries)=>{}, props.rootMargin ? {
            rootMargin: props.rootMargin
        } : undefined);
        (0, _vue.watch)(isIntersecting, async (val)=>{
            emit("intersect", props.side, val);
        });
        (0, _indexMjs2.useRender)(()=>(0, _vue.createVNode)("div", {
                "class": "v-infinite-scroll-intersect",
                "ref": intersectionRef
            }, [
                (0, _vue.createTextVNode)("\xa0")
            ]));
        return {};
    }
});
const VInfiniteScroll = (0, _indexMjs2.genericComponent)()({
    name: "VInfiniteScroll",
    props: makeVInfiniteScrollProps(),
    emits: {
        load: (options)=>true
    },
    setup (props, _ref2) {
        let { slots, emit } = _ref2;
        const rootEl = (0, _vue.ref)();
        const startStatus = (0, _vue.shallowRef)("ok");
        const endStatus = (0, _vue.shallowRef)("ok");
        const margin = (0, _vue.computed)(()=>(0, _indexMjs2.convertToUnit)(props.margin));
        const isIntersecting = (0, _vue.shallowRef)(false);
        function setScrollAmount(amount) {
            if (!rootEl.value) return;
            const property = props.direction === "vertical" ? "scrollTop" : "scrollLeft";
            rootEl.value[property] = amount;
        }
        function getScrollAmount() {
            if (!rootEl.value) return 0;
            const property = props.direction === "vertical" ? "scrollTop" : "scrollLeft";
            return rootEl.value[property];
        }
        function getScrollSize() {
            if (!rootEl.value) return 0;
            const property = props.direction === "vertical" ? "scrollHeight" : "scrollWidth";
            return rootEl.value[property];
        }
        function getContainerSize() {
            if (!rootEl.value) return 0;
            const property = props.direction === "vertical" ? "clientHeight" : "clientWidth";
            return rootEl.value[property];
        }
        (0, _vue.onMounted)(()=>{
            if (!rootEl.value) return;
            if (props.side === "start") setScrollAmount(getScrollSize());
            else if (props.side === "both") setScrollAmount(getScrollSize() / 2 - getContainerSize() / 2);
        });
        function setStatus(side, status) {
            if (side === "start") startStatus.value = status;
            else if (side === "end") endStatus.value = status;
        }
        function getStatus(side) {
            return side === "start" ? startStatus.value : endStatus.value;
        }
        let previousScrollSize = 0;
        function handleIntersect(side, _isIntersecting) {
            isIntersecting.value = _isIntersecting;
            if (isIntersecting.value) intersecting(side);
        }
        function intersecting(side) {
            if (props.mode !== "manual" && !isIntersecting.value) return;
            const status = getStatus(side);
            if (!rootEl.value || [
                "empty",
                "loading"
            ].includes(status)) return;
            previousScrollSize = getScrollSize();
            setStatus(side, "loading");
            function done(status) {
                setStatus(side, status);
                (0, _vue.nextTick)(()=>{
                    if (status === "empty" || status === "error") return;
                    if (status === "ok" && side === "start") setScrollAmount(getScrollSize() - previousScrollSize + getScrollAmount());
                    if (props.mode !== "manual") (0, _vue.nextTick)(()=>{
                        window.requestAnimationFrame(()=>{
                            window.requestAnimationFrame(()=>{
                                window.requestAnimationFrame(()=>{
                                    intersecting(side);
                                });
                            });
                        });
                    });
                });
            }
            emit("load", {
                side,
                done
            });
        }
        const { t } = (0, _localeMjs.useLocale)();
        function renderSide(side, status) {
            if (props.side !== side && props.side !== "both") return;
            const onClick = ()=>intersecting(side);
            const slotProps = {
                side,
                props: {
                    onClick,
                    color: props.color
                }
            };
            if (status === "error") return slots.error?.(slotProps);
            if (status === "empty") return slots.empty?.(slotProps) ?? (0, _vue.createVNode)("div", null, [
                t(props.emptyText)
            ]);
            if (props.mode === "manual") {
                if (status === "loading") return slots.loading?.(slotProps) ?? (0, _vue.createVNode)((0, _indexMjs1.VProgressCircular), {
                    "indeterminate": true,
                    "color": props.color
                }, null);
                return slots["load-more"]?.(slotProps) ?? (0, _vue.createVNode)((0, _indexMjs.VBtn), {
                    "variant": "outlined",
                    "color": props.color,
                    "onClick": onClick
                }, {
                    default: ()=>[
                            t(props.loadMoreText)
                        ]
                });
            }
            return slots.loading?.(slotProps) ?? (0, _vue.createVNode)((0, _indexMjs1.VProgressCircular), {
                "indeterminate": true,
                "color": props.color
            }, null);
        }
        const { dimensionStyles } = (0, _dimensionsMjs.useDimension)(props);
        (0, _indexMjs2.useRender)(()=>{
            const Tag = props.tag;
            const hasStartIntersect = props.side === "start" || props.side === "both";
            const hasEndIntersect = props.side === "end" || props.side === "both";
            const intersectMode = props.mode === "intersect";
            return (0, _vue.createVNode)(Tag, {
                "ref": rootEl,
                "class": [
                    "v-infinite-scroll",
                    `v-infinite-scroll--${props.direction}`,
                    {
                        "v-infinite-scroll--start": hasStartIntersect,
                        "v-infinite-scroll--end": hasEndIntersect
                    }
                ],
                "style": dimensionStyles.value
            }, {
                default: ()=>[
                        (0, _vue.createVNode)("div", {
                            "class": "v-infinite-scroll__side"
                        }, [
                            renderSide("start", startStatus.value)
                        ]),
                        rootEl.value && hasStartIntersect && intersectMode && (0, _vue.createVNode)(VInfiniteScrollIntersect, {
                            "key": "start",
                            "side": "start",
                            "onIntersect": handleIntersect,
                            "rootRef": rootEl.value,
                            "rootMargin": margin.value
                        }, null),
                        slots.default?.(),
                        rootEl.value && hasEndIntersect && intersectMode && (0, _vue.createVNode)(VInfiniteScrollIntersect, {
                            "key": "end",
                            "side": "end",
                            "onIntersect": handleIntersect,
                            "rootRef": rootEl.value,
                            "rootMargin": margin.value
                        }, null),
                        (0, _vue.createVNode)("div", {
                            "class": "v-infinite-scroll__side"
                        }, [
                            renderSide("end", endStatus.value)
                        ])
                    ]
            });
        });
    }
});

},{"vue":"gCTam","./VInfiniteScroll.css":"7JbFA","../VBtn/index.mjs":"g9s2K","../VProgressCircular/index.mjs":"c7ng4","../../composables/dimensions.mjs":"daVmy","../../composables/intersectionObserver.mjs":"lg3v0","../../composables/locale.mjs":"9rJP0","../../composables/tag.mjs":"3LqcC","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"7JbFA":[function() {},{}],"aw4BN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VInput", ()=>(0, _vinputMjs.VInput));
var _vinputMjs = require("./VInput.mjs");

},{"./VInput.mjs":"fIDss","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"aH0Cj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VItemGroup", ()=>(0, _vitemGroupMjs.VItemGroup));
parcelHelpers.export(exports, "VItem", ()=>(0, _vitemMjs.VItem));
var _vitemGroupMjs = require("./VItemGroup.mjs");
var _vitemMjs = require("./VItem.mjs");

},{"./VItemGroup.mjs":"8Y8r6","./VItem.mjs":"cKlqa","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"8Y8r6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VItemGroupSymbol", ()=>VItemGroupSymbol);
parcelHelpers.export(exports, "makeVItemGroupProps", ()=>makeVItemGroupProps);
parcelHelpers.export(exports, "VItemGroup", ()=>VItemGroup);
var _vue = require("vue");
// Styles
var _vitemGroupCss = require("./VItemGroup.css");
// Composables
var _componentMjs = require("../../composables/component.mjs");
var _groupMjs = require("../../composables/group.mjs");
var _tagMjs = require("../../composables/tag.mjs");
var _themeMjs = require("../../composables/theme.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const VItemGroupSymbol = Symbol.for("vuetify:v-item-group");
const makeVItemGroupProps = (0, _indexMjs.propsFactory)({
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _groupMjs.makeGroupProps)({
        selectedClass: "v-item--selected"
    }),
    ...(0, _tagMjs.makeTagProps)(),
    ...(0, _themeMjs.makeThemeProps)()
}, "VItemGroup");
const VItemGroup = (0, _indexMjs.genericComponent)()({
    name: "VItemGroup",
    props: makeVItemGroupProps(),
    emits: {
        "update:modelValue": (value)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const { isSelected, select, next, prev, selected } = (0, _groupMjs.useGroup)(props, VItemGroupSymbol);
        return ()=>(0, _vue.createVNode)(props.tag, {
                "class": [
                    "v-item-group",
                    themeClasses.value,
                    props.class
                ],
                "style": props.style
            }, {
                default: ()=>[
                        slots.default?.({
                            isSelected,
                            select,
                            next,
                            prev,
                            selected: selected.value
                        })
                    ]
            });
    }
});

},{"vue":"gCTam","./VItemGroup.css":"hv5AR","../../composables/component.mjs":"4YAxs","../../composables/group.mjs":"hPbgr","../../composables/tag.mjs":"3LqcC","../../composables/theme.mjs":"c9HGg","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"hv5AR":[function() {},{}],"cKlqa":[function(require,module,exports) {
// Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VItem", ()=>VItem);
var _vitemGroupMjs = require("./VItemGroup.mjs");
var _groupMjs = require("../../composables/group.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const VItem = (0, _indexMjs.genericComponent)()({
    name: "VItem",
    props: (0, _groupMjs.makeGroupItemProps)(),
    emits: {
        "group:selected": (val)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const { isSelected, select, toggle, selectedClass, value, disabled } = (0, _groupMjs.useGroupItem)(props, (0, _vitemGroupMjs.VItemGroupSymbol));
        return ()=>slots.default?.({
                isSelected: isSelected.value,
                selectedClass: selectedClass.value,
                select,
                toggle,
                value: value.value,
                disabled: disabled.value
            });
    }
});

},{"./VItemGroup.mjs":"8Y8r6","../../composables/group.mjs":"hPbgr","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"59IIs":[function(require,module,exports) {
// Styles
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VKbd", ()=>VKbd);
var _vkbdCss = require("./VKbd.css");
// Utilities
var _indexMjs = require("../../util/index.mjs");
const VKbd = (0, _indexMjs.createSimpleFunctional)("v-kbd");

},{"./VKbd.css":"hjMpJ","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"hjMpJ":[function() {},{}],"ba2kC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VLayout", ()=>(0, _vlayoutMjs.VLayout));
parcelHelpers.export(exports, "VLayoutItem", ()=>(0, _vlayoutItemMjs.VLayoutItem));
var _vlayoutMjs = require("./VLayout.mjs");
var _vlayoutItemMjs = require("./VLayoutItem.mjs");

},{"./VLayout.mjs":"hJ8l4","./VLayoutItem.mjs":"70hej","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"hJ8l4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVLayoutProps", ()=>makeVLayoutProps);
parcelHelpers.export(exports, "VLayout", ()=>VLayout);
var _vue = require("vue");
// Styles
var _vlayoutCss = require("./VLayout.css");
// Composables
var _componentMjs = require("../../composables/component.mjs");
var _dimensionsMjs = require("../../composables/dimensions.mjs");
var _layoutMjs = require("../../composables/layout.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const makeVLayoutProps = (0, _indexMjs.propsFactory)({
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _dimensionsMjs.makeDimensionProps)(),
    ...(0, _layoutMjs.makeLayoutProps)()
}, "VLayout");
const VLayout = (0, _indexMjs.genericComponent)()({
    name: "VLayout",
    props: makeVLayoutProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const { layoutClasses, layoutStyles, getLayoutItem, items, layoutRef } = (0, _layoutMjs.createLayout)(props);
        const { dimensionStyles } = (0, _dimensionsMjs.useDimension)(props);
        (0, _indexMjs.useRender)(()=>(0, _vue.createVNode)("div", {
                "ref": layoutRef,
                "class": [
                    layoutClasses.value,
                    props.class
                ],
                "style": [
                    dimensionStyles.value,
                    layoutStyles.value,
                    props.style
                ]
            }, [
                slots.default?.()
            ]));
        return {
            getLayoutItem,
            items
        };
    }
});

},{"vue":"gCTam","./VLayout.css":"5268A","../../composables/component.mjs":"4YAxs","../../composables/dimensions.mjs":"daVmy","../../composables/layout.mjs":"lfigA","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"5268A":[function() {},{}],"70hej":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVLayoutItemProps", ()=>makeVLayoutItemProps);
parcelHelpers.export(exports, "VLayoutItem", ()=>VLayoutItem);
var _vue = require("vue");
// Styles
var _vlayoutItemCss = require("./VLayoutItem.css");
// Composables
var _componentMjs = require("../../composables/component.mjs");
var _layoutMjs = require("../../composables/layout.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const makeVLayoutItemProps = (0, _indexMjs.propsFactory)({
    position: {
        type: String,
        required: true
    },
    size: {
        type: [
            Number,
            String
        ],
        default: 300
    },
    modelValue: Boolean,
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _layoutMjs.makeLayoutItemProps)()
}, "VLayoutItem");
const VLayoutItem = (0, _indexMjs.genericComponent)()({
    name: "VLayoutItem",
    props: makeVLayoutItemProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const { layoutItemStyles } = (0, _layoutMjs.useLayoutItem)({
            id: props.name,
            order: (0, _vue.computed)(()=>parseInt(props.order, 10)),
            position: (0, _vue.toRef)(props, "position"),
            elementSize: (0, _vue.toRef)(props, "size"),
            layoutSize: (0, _vue.toRef)(props, "size"),
            active: (0, _vue.toRef)(props, "modelValue"),
            absolute: (0, _vue.toRef)(props, "absolute")
        });
        return ()=>(0, _vue.createVNode)("div", {
                "class": [
                    "v-layout-item",
                    props.class
                ],
                "style": [
                    layoutItemStyles.value,
                    props.style
                ]
            }, [
                slots.default?.()
            ]);
    }
});

},{"vue":"gCTam","./VLayoutItem.css":"d7JEE","../../composables/component.mjs":"4YAxs","../../composables/layout.mjs":"lfigA","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"d7JEE":[function() {},{}],"fMoei":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VLazy", ()=>(0, _vlazyMjs.VLazy));
var _vlazyMjs = require("./VLazy.mjs");

},{"./VLazy.mjs":"fsV8V","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"fsV8V":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVLazyProps", ()=>makeVLazyProps);
parcelHelpers.export(exports, "VLazy", ()=>VLazy);
var _vue = require("vue");
// Composables
var _componentMjs = require("../../composables/component.mjs");
var _dimensionsMjs = require("../../composables/dimensions.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs");
var _tagMjs = require("../../composables/tag.mjs");
var _transitionMjs = require("../../composables/transition.mjs"); // Directives
var _indexMjs = require("../../directives/intersect/index.mjs"); // Utilities
var _indexMjsDefault = parcelHelpers.interopDefault(_indexMjs);
var _indexMjs1 = require("../../util/index.mjs"); // Types
const makeVLazyProps = (0, _indexMjs1.propsFactory)({
    modelValue: Boolean,
    options: {
        type: Object,
        // For more information on types, navigate to:
        // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API
        default: ()=>({
                root: undefined,
                rootMargin: undefined,
                threshold: undefined
            })
    },
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _dimensionsMjs.makeDimensionProps)(),
    ...(0, _tagMjs.makeTagProps)(),
    ...(0, _transitionMjs.makeTransitionProps)({
        transition: "fade-transition"
    })
}, "VLazy");
const VLazy = (0, _indexMjs1.genericComponent)()({
    name: "VLazy",
    directives: {
        intersect: (0, _indexMjsDefault.default)
    },
    props: makeVLazyProps(),
    emits: {
        "update:modelValue": (value)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const { dimensionStyles } = (0, _dimensionsMjs.useDimension)(props);
        const isActive = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
        function onIntersect(isIntersecting) {
            if (isActive.value) return;
            isActive.value = isIntersecting;
        }
        (0, _indexMjs1.useRender)(()=>(0, _vue.withDirectives)((0, _vue.createVNode)(props.tag, {
                "class": [
                    "v-lazy",
                    props.class
                ],
                "style": [
                    dimensionStyles.value,
                    props.style
                ]
            }, {
                default: ()=>[
                        isActive.value && (0, _vue.createVNode)((0, _transitionMjs.MaybeTransition), {
                            "transition": props.transition,
                            "appear": true
                        }, {
                            default: ()=>[
                                    slots.default?.()
                                ]
                        })
                    ]
            }), [
                [
                    (0, _vue.resolveDirective)("intersect"),
                    {
                        handler: onIntersect,
                        options: props.options
                    },
                    null
                ]
            ]));
        return {};
    }
});

},{"vue":"gCTam","../../composables/component.mjs":"4YAxs","../../composables/dimensions.mjs":"daVmy","../../composables/proxiedModel.mjs":"huwLk","../../composables/tag.mjs":"3LqcC","../../composables/transition.mjs":"dJyg1","../../directives/intersect/index.mjs":"iNCN8","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"77ev1":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VLocaleProvider", ()=>(0, _vlocaleProviderMjs.VLocaleProvider));
var _vlocaleProviderMjs = require("./VLocaleProvider.mjs");

},{"./VLocaleProvider.mjs":"24CbO","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"24CbO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVLocaleProviderProps", ()=>makeVLocaleProviderProps);
parcelHelpers.export(exports, "VLocaleProvider", ()=>VLocaleProvider);
var _vue = require("vue");
// Styles
var _vlocaleProviderCss = require("./VLocaleProvider.css");
// Composables
var _componentMjs = require("../../composables/component.mjs");
var _localeMjs = require("../../composables/locale.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const makeVLocaleProviderProps = (0, _indexMjs.propsFactory)({
    locale: String,
    fallbackLocale: String,
    messages: Object,
    rtl: {
        type: Boolean,
        default: undefined
    },
    ...(0, _componentMjs.makeComponentProps)()
}, "VLocaleProvider");
const VLocaleProvider = (0, _indexMjs.genericComponent)()({
    name: "VLocaleProvider",
    props: makeVLocaleProviderProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const { rtlClasses } = (0, _localeMjs.provideLocale)(props);
        (0, _indexMjs.useRender)(()=>(0, _vue.createVNode)("div", {
                "class": [
                    "v-locale-provider",
                    rtlClasses.value,
                    props.class
                ],
                "style": props.style
            }, [
                slots.default?.()
            ]));
        return {};
    }
});

},{"vue":"gCTam","./VLocaleProvider.css":"650Hg","../../composables/component.mjs":"4YAxs","../../composables/locale.mjs":"9rJP0","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"650Hg":[function() {},{}],"dDhaK":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VMain", ()=>(0, _vmainMjs.VMain));
var _vmainMjs = require("./VMain.mjs");

},{"./VMain.mjs":"GB4Ih","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"GB4Ih":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVMainProps", ()=>makeVMainProps);
parcelHelpers.export(exports, "VMain", ()=>VMain);
var _vue = require("vue");
// Styles
var _vmainCss = require("./VMain.css");
// Composables
var _componentMjs = require("../../composables/component.mjs");
var _dimensionsMjs = require("../../composables/dimensions.mjs");
var _layoutMjs = require("../../composables/layout.mjs");
var _ssrBootMjs = require("../../composables/ssrBoot.mjs");
var _tagMjs = require("../../composables/tag.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const makeVMainProps = (0, _indexMjs.propsFactory)({
    scrollable: Boolean,
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _dimensionsMjs.makeDimensionProps)(),
    ...(0, _tagMjs.makeTagProps)({
        tag: "main"
    })
}, "VMain");
const VMain = (0, _indexMjs.genericComponent)()({
    name: "VMain",
    props: makeVMainProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const { dimensionStyles } = (0, _dimensionsMjs.useDimension)(props);
        const { mainStyles } = (0, _layoutMjs.useLayout)();
        const { ssrBootStyles } = (0, _ssrBootMjs.useSsrBoot)();
        (0, _indexMjs.useRender)(()=>(0, _vue.createVNode)(props.tag, {
                "class": [
                    "v-main",
                    {
                        "v-main--scrollable": props.scrollable
                    },
                    props.class
                ],
                "style": [
                    mainStyles.value,
                    ssrBootStyles.value,
                    dimensionStyles.value,
                    props.style
                ]
            }, {
                default: ()=>[
                        props.scrollable ? (0, _vue.createVNode)("div", {
                            "class": "v-main__scroller"
                        }, [
                            slots.default?.()
                        ]) : slots.default?.()
                    ]
            }));
        return {};
    }
});

},{"vue":"gCTam","./VMain.css":"fOluh","../../composables/component.mjs":"4YAxs","../../composables/dimensions.mjs":"daVmy","../../composables/layout.mjs":"lfigA","../../composables/ssrBoot.mjs":"bVwDz","../../composables/tag.mjs":"3LqcC","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"fOluh":[function() {},{}],"aFYwi":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VMessages", ()=>(0, _vmessagesMjs.VMessages));
var _vmessagesMjs = require("./VMessages.mjs");

},{"./VMessages.mjs":"kPkd5","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"5j2bV":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VNavigationDrawer", ()=>(0, _vnavigationDrawerMjs.VNavigationDrawer));
var _vnavigationDrawerMjs = require("./VNavigationDrawer.mjs");

},{"./VNavigationDrawer.mjs":"8w07z","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"8w07z":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVNavigationDrawerProps", ()=>makeVNavigationDrawerProps);
parcelHelpers.export(exports, "VNavigationDrawer", ()=>VNavigationDrawer);
var _vue = require("vue");
// Styles
var _vnavigationDrawerCss = require("./VNavigationDrawer.css");
// Components
var _indexMjs = require("../VDefaultsProvider/index.mjs");
var _indexMjs1 = require("../VImg/index.mjs"); // Composables
var _stickyMjs = require("./sticky.mjs");
var _touchMjs = require("./touch.mjs");
var _indexMjs2 = require("../../composables/index.mjs");
var _borderMjs = require("../../composables/border.mjs");
var _colorMjs = require("../../composables/color.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _defaultsMjs = require("../../composables/defaults.mjs");
var _delayMjs = require("../../composables/delay.mjs");
var _displayMjs = require("../../composables/display.mjs");
var _elevationMjs = require("../../composables/elevation.mjs");
var _layoutMjs = require("../../composables/layout.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs");
var _roundedMjs = require("../../composables/rounded.mjs");
var _routerMjs = require("../../composables/router.mjs");
var _scopeIdMjs = require("../../composables/scopeId.mjs");
var _ssrBootMjs = require("../../composables/ssrBoot.mjs");
var _tagMjs = require("../../composables/tag.mjs");
var _themeMjs = require("../../composables/theme.mjs");
var _toggleScopeMjs = require("../../composables/toggleScope.mjs"); // Utilities
var _indexMjs3 = require("../../util/index.mjs"); // Types
const locations = [
    "start",
    "end",
    "left",
    "right",
    "top",
    "bottom"
];
const makeVNavigationDrawerProps = (0, _indexMjs3.propsFactory)({
    color: String,
    disableResizeWatcher: Boolean,
    disableRouteWatcher: Boolean,
    expandOnHover: Boolean,
    floating: Boolean,
    modelValue: {
        type: Boolean,
        default: null
    },
    permanent: Boolean,
    rail: {
        type: Boolean,
        default: null
    },
    railWidth: {
        type: [
            Number,
            String
        ],
        default: 56
    },
    scrim: {
        type: [
            Boolean,
            String
        ],
        default: true
    },
    image: String,
    temporary: Boolean,
    persistent: Boolean,
    touchless: Boolean,
    width: {
        type: [
            Number,
            String
        ],
        default: 256
    },
    location: {
        type: String,
        default: "start",
        validator: (value)=>locations.includes(value)
    },
    sticky: Boolean,
    ...(0, _borderMjs.makeBorderProps)(),
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _delayMjs.makeDelayProps)(),
    ...(0, _displayMjs.makeDisplayProps)({
        mobile: null
    }),
    ...(0, _elevationMjs.makeElevationProps)(),
    ...(0, _layoutMjs.makeLayoutItemProps)(),
    ...(0, _roundedMjs.makeRoundedProps)(),
    ...(0, _tagMjs.makeTagProps)({
        tag: "nav"
    }),
    ...(0, _themeMjs.makeThemeProps)()
}, "VNavigationDrawer");
const VNavigationDrawer = (0, _indexMjs3.genericComponent)()({
    name: "VNavigationDrawer",
    props: makeVNavigationDrawerProps(),
    emits: {
        "update:modelValue": (val)=>true,
        "update:rail": (val)=>true
    },
    setup (props, _ref) {
        let { attrs, emit, slots } = _ref;
        const { isRtl } = (0, _indexMjs2.useRtl)();
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const { borderClasses } = (0, _borderMjs.useBorder)(props);
        const { backgroundColorClasses, backgroundColorStyles } = (0, _colorMjs.useBackgroundColor)((0, _vue.toRef)(props, "color"));
        const { elevationClasses } = (0, _elevationMjs.useElevation)(props);
        const { displayClasses, mobile } = (0, _displayMjs.useDisplay)(props);
        const { roundedClasses } = (0, _roundedMjs.useRounded)(props);
        const router = (0, _routerMjs.useRouter)();
        const isActive = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue", null, (v)=>!!v);
        const { ssrBootStyles } = (0, _ssrBootMjs.useSsrBoot)();
        const { scopeId } = (0, _scopeIdMjs.useScopeId)();
        const rootEl = (0, _vue.ref)();
        const isHovering = (0, _vue.shallowRef)(false);
        const { runOpenDelay, runCloseDelay } = (0, _delayMjs.useDelay)(props, (value)=>{
            isHovering.value = value;
        });
        const width = (0, _vue.computed)(()=>{
            return props.rail && props.expandOnHover && isHovering.value ? Number(props.width) : Number(props.rail ? props.railWidth : props.width);
        });
        const location = (0, _vue.computed)(()=>{
            return (0, _indexMjs3.toPhysical)(props.location, isRtl.value);
        });
        const isPersistent = (0, _vue.computed)(()=>props.persistent);
        const isTemporary = (0, _vue.computed)(()=>!props.permanent && (mobile.value || props.temporary));
        const isSticky = (0, _vue.computed)(()=>props.sticky && !isTemporary.value && location.value !== "bottom");
        (0, _toggleScopeMjs.useToggleScope)(()=>props.expandOnHover && props.rail != null, ()=>{
            (0, _vue.watch)(isHovering, (val)=>emit("update:rail", !val));
        });
        (0, _toggleScopeMjs.useToggleScope)(()=>!props.disableResizeWatcher, ()=>{
            (0, _vue.watch)(isTemporary, (val)=>!props.permanent && (0, _vue.nextTick)(()=>isActive.value = !val));
        });
        (0, _toggleScopeMjs.useToggleScope)(()=>!props.disableRouteWatcher && !!router, ()=>{
            (0, _vue.watch)(router.currentRoute, ()=>isTemporary.value && (isActive.value = false));
        });
        (0, _vue.watch)(()=>props.permanent, (val)=>{
            if (val) isActive.value = true;
        });
        if (props.modelValue == null && !isTemporary.value) isActive.value = props.permanent || !mobile.value;
        const { isDragging, dragProgress } = (0, _touchMjs.useTouch)({
            el: rootEl,
            isActive,
            isTemporary,
            width,
            touchless: (0, _vue.toRef)(props, "touchless"),
            position: location
        });
        const layoutSize = (0, _vue.computed)(()=>{
            const size = isTemporary.value ? 0 : props.rail && props.expandOnHover ? Number(props.railWidth) : width.value;
            return isDragging.value ? size * dragProgress.value : size;
        });
        const elementSize = (0, _vue.computed)(()=>[
                "top",
                "bottom"
            ].includes(props.location) ? 0 : width.value);
        const { layoutItemStyles, layoutItemScrimStyles } = (0, _layoutMjs.useLayoutItem)({
            id: props.name,
            order: (0, _vue.computed)(()=>parseInt(props.order, 10)),
            position: location,
            layoutSize,
            elementSize,
            active: (0, _vue.computed)(()=>isActive.value || isDragging.value),
            disableTransitions: (0, _vue.computed)(()=>isDragging.value),
            absolute: (0, _vue.computed)(()=>// eslint-disable-next-line @typescript-eslint/no-use-before-define
                props.absolute || isSticky.value && typeof isStuck.value !== "string")
        });
        const { isStuck, stickyStyles } = (0, _stickyMjs.useSticky)({
            rootEl,
            isSticky,
            layoutItemStyles
        });
        const scrimColor = (0, _colorMjs.useBackgroundColor)((0, _vue.computed)(()=>{
            return typeof props.scrim === "string" ? props.scrim : null;
        }));
        const scrimStyles = (0, _vue.computed)(()=>({
                ...isDragging.value ? {
                    opacity: dragProgress.value * 0.2,
                    transition: "none"
                } : undefined,
                ...layoutItemScrimStyles.value
            }));
        (0, _defaultsMjs.provideDefaults)({
            VList: {
                bgColor: "transparent"
            }
        });
        (0, _indexMjs3.useRender)(()=>{
            const hasImage = slots.image || props.image;
            return (0, _vue.createVNode)((0, _vue.Fragment), null, [
                (0, _vue.createVNode)(props.tag, (0, _vue.mergeProps)({
                    "ref": rootEl,
                    "onMouseenter": runOpenDelay,
                    "onMouseleave": runCloseDelay,
                    "class": [
                        "v-navigation-drawer",
                        `v-navigation-drawer--${location.value}`,
                        {
                            "v-navigation-drawer--expand-on-hover": props.expandOnHover,
                            "v-navigation-drawer--floating": props.floating,
                            "v-navigation-drawer--is-hovering": isHovering.value,
                            "v-navigation-drawer--rail": props.rail,
                            "v-navigation-drawer--temporary": isTemporary.value,
                            "v-navigation-drawer--persistent": isPersistent.value,
                            "v-navigation-drawer--active": isActive.value,
                            "v-navigation-drawer--sticky": isSticky.value
                        },
                        themeClasses.value,
                        backgroundColorClasses.value,
                        borderClasses.value,
                        displayClasses.value,
                        elevationClasses.value,
                        roundedClasses.value,
                        props.class
                    ],
                    "style": [
                        backgroundColorStyles.value,
                        layoutItemStyles.value,
                        ssrBootStyles.value,
                        stickyStyles.value,
                        props.style,
                        [
                            "top",
                            "bottom"
                        ].includes(location.value) ? {
                            height: "auto"
                        } : {}
                    ]
                }, scopeId, attrs), {
                    default: ()=>[
                            hasImage && (0, _vue.createVNode)("div", {
                                "key": "image",
                                "class": "v-navigation-drawer__img"
                            }, [
                                !slots.image ? (0, _vue.createVNode)((0, _indexMjs1.VImg), {
                                    "key": "image-img",
                                    "alt": "",
                                    "cover": true,
                                    "height": "inherit",
                                    "src": props.image
                                }, null) : (0, _vue.createVNode)((0, _indexMjs.VDefaultsProvider), {
                                    "key": "image-defaults",
                                    "disabled": !props.image,
                                    "defaults": {
                                        VImg: {
                                            alt: "",
                                            cover: true,
                                            height: "inherit",
                                            src: props.image
                                        }
                                    }
                                }, slots.image)
                            ]),
                            slots.prepend && (0, _vue.createVNode)("div", {
                                "class": "v-navigation-drawer__prepend"
                            }, [
                                slots.prepend?.()
                            ]),
                            (0, _vue.createVNode)("div", {
                                "class": "v-navigation-drawer__content"
                            }, [
                                slots.default?.()
                            ]),
                            slots.append && (0, _vue.createVNode)("div", {
                                "class": "v-navigation-drawer__append"
                            }, [
                                slots.append?.()
                            ])
                        ]
                }),
                (0, _vue.createVNode)((0, _vue.Transition), {
                    "name": "fade-transition"
                }, {
                    default: ()=>[
                            isTemporary.value && (isDragging.value || isActive.value) && !!props.scrim && (0, _vue.createVNode)("div", (0, _vue.mergeProps)({
                                "class": [
                                    "v-navigation-drawer__scrim",
                                    scrimColor.backgroundColorClasses.value
                                ],
                                "style": [
                                    scrimStyles.value,
                                    scrimColor.backgroundColorStyles.value
                                ],
                                "onClick": ()=>{
                                    if (isPersistent.value) return;
                                    isActive.value = false;
                                }
                            }, scopeId), null)
                        ]
                })
            ]);
        });
        return {
            isStuck
        };
    }
});

},{"vue":"gCTam","./VNavigationDrawer.css":"6wYUQ","../VDefaultsProvider/index.mjs":"eFFvH","../VImg/index.mjs":"dbGJJ","./sticky.mjs":"eH2WI","./touch.mjs":"5ASiA","../../composables/index.mjs":"fthaS","../../composables/border.mjs":"iYaxw","../../composables/color.mjs":"6TeQR","../../composables/component.mjs":"4YAxs","../../composables/defaults.mjs":"29Im0","../../composables/delay.mjs":"iMKjj","../../composables/display.mjs":"bcRjl","../../composables/elevation.mjs":"aNIiI","../../composables/layout.mjs":"lfigA","../../composables/proxiedModel.mjs":"huwLk","../../composables/rounded.mjs":"1RfhA","../../composables/router.mjs":"8IJEw","../../composables/scopeId.mjs":"1zMgM","../../composables/ssrBoot.mjs":"bVwDz","../../composables/tag.mjs":"3LqcC","../../composables/theme.mjs":"c9HGg","../../composables/toggleScope.mjs":"dsKlJ","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"6wYUQ":[function() {},{}],"eH2WI":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useSticky", ()=>useSticky);
var _vue = require("vue");
var _indexMjs = require("../../util/index.mjs"); // Types
function useSticky(_ref) {
    let { rootEl, isSticky, layoutItemStyles } = _ref;
    const isStuck = (0, _vue.shallowRef)(false);
    const stuckPosition = (0, _vue.shallowRef)(0);
    const stickyStyles = (0, _vue.computed)(()=>{
        const side = typeof isStuck.value === "boolean" ? "top" : isStuck.value;
        return [
            isSticky.value ? {
                top: "auto",
                bottom: "auto",
                height: undefined
            } : undefined,
            isStuck.value ? {
                [side]: (0, _indexMjs.convertToUnit)(stuckPosition.value)
            } : {
                top: layoutItemStyles.value.top
            }
        ];
    });
    (0, _vue.onMounted)(()=>{
        (0, _vue.watch)(isSticky, (val)=>{
            if (val) window.addEventListener("scroll", onScroll, {
                passive: true
            });
            else window.removeEventListener("scroll", onScroll);
        }, {
            immediate: true
        });
    });
    (0, _vue.onBeforeUnmount)(()=>{
        window.removeEventListener("scroll", onScroll);
    });
    let lastScrollTop = 0;
    function onScroll() {
        const direction = lastScrollTop > window.scrollY ? "up" : "down";
        const rect = rootEl.value.getBoundingClientRect();
        const layoutTop = parseFloat(layoutItemStyles.value.top ?? 0);
        const top = window.scrollY - Math.max(0, stuckPosition.value - layoutTop);
        const bottom = rect.height + Math.max(stuckPosition.value, layoutTop) - window.scrollY - window.innerHeight;
        const bodyScroll = parseFloat(getComputedStyle(rootEl.value).getPropertyValue("--v-body-scroll-y")) || 0;
        if (rect.height < window.innerHeight - layoutTop) {
            isStuck.value = "top";
            stuckPosition.value = layoutTop;
        } else if (direction === "up" && isStuck.value === "bottom" || direction === "down" && isStuck.value === "top") {
            stuckPosition.value = window.scrollY + rect.top - bodyScroll;
            isStuck.value = true;
        } else if (direction === "down" && bottom <= 0) {
            stuckPosition.value = 0;
            isStuck.value = "bottom";
        } else if (direction === "up" && top <= 0) {
            if (!bodyScroll) {
                stuckPosition.value = rect.top + top;
                isStuck.value = "top";
            } else if (isStuck.value !== "top") {
                stuckPosition.value = -top + bodyScroll + layoutTop;
                isStuck.value = "top";
            }
        }
        lastScrollTop = window.scrollY;
    }
    return {
        isStuck,
        stickyStyles
    };
}

},{"vue":"gCTam","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"5ASiA":[function(require,module,exports) {
// Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
// Types
parcelHelpers.export(exports, "useTouch", ()=>useTouch);
var _toggleScopeMjs = require("../../composables/toggleScope.mjs");
var _touchMjs = require("../../composables/touch.mjs"); // Utilities
var _vue = require("vue");
function useTouch(_ref) {
    let { el, isActive, isTemporary, width, touchless, position } = _ref;
    (0, _vue.onMounted)(()=>{
        window.addEventListener("touchstart", onTouchstart, {
            passive: true
        });
        window.addEventListener("touchmove", onTouchmove, {
            passive: false
        });
        window.addEventListener("touchend", onTouchend, {
            passive: true
        });
    });
    (0, _vue.onBeforeUnmount)(()=>{
        window.removeEventListener("touchstart", onTouchstart);
        window.removeEventListener("touchmove", onTouchmove);
        window.removeEventListener("touchend", onTouchend);
    });
    const isHorizontal = (0, _vue.computed)(()=>[
            "left",
            "right"
        ].includes(position.value));
    const { addMovement, endTouch, getVelocity } = (0, _touchMjs.useVelocity)();
    let maybeDragging = false;
    const isDragging = (0, _vue.shallowRef)(false);
    const dragProgress = (0, _vue.shallowRef)(0);
    const offset = (0, _vue.shallowRef)(0);
    let start;
    function getOffset(pos, active) {
        return (position.value === "left" ? pos : position.value === "right" ? document.documentElement.clientWidth - pos : position.value === "top" ? pos : position.value === "bottom" ? document.documentElement.clientHeight - pos : oops()) - (active ? width.value : 0);
    }
    function getProgress(pos) {
        let limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
        const progress = position.value === "left" ? (pos - offset.value) / width.value : position.value === "right" ? (document.documentElement.clientWidth - pos - offset.value) / width.value : position.value === "top" ? (pos - offset.value) / width.value : position.value === "bottom" ? (document.documentElement.clientHeight - pos - offset.value) / width.value : oops();
        return limit ? Math.max(0, Math.min(1, progress)) : progress;
    }
    function onTouchstart(e) {
        if (touchless.value) return;
        const touchX = e.changedTouches[0].clientX;
        const touchY = e.changedTouches[0].clientY;
        const touchZone = 25;
        const inTouchZone = position.value === "left" ? touchX < touchZone : position.value === "right" ? touchX > document.documentElement.clientWidth - touchZone : position.value === "top" ? touchY < touchZone : position.value === "bottom" ? touchY > document.documentElement.clientHeight - touchZone : oops();
        const inElement = isActive.value && (position.value === "left" ? touchX < width.value : position.value === "right" ? touchX > document.documentElement.clientWidth - width.value : position.value === "top" ? touchY < width.value : position.value === "bottom" ? touchY > document.documentElement.clientHeight - width.value : oops());
        if (inTouchZone || inElement || isActive.value && isTemporary.value) {
            start = [
                touchX,
                touchY
            ];
            offset.value = getOffset(isHorizontal.value ? touchX : touchY, isActive.value);
            dragProgress.value = getProgress(isHorizontal.value ? touchX : touchY);
            maybeDragging = offset.value > -20 && offset.value < 80;
            endTouch(e);
            addMovement(e);
        }
    }
    function onTouchmove(e) {
        const touchX = e.changedTouches[0].clientX;
        const touchY = e.changedTouches[0].clientY;
        if (maybeDragging) {
            if (!e.cancelable) {
                maybeDragging = false;
                return;
            }
            const dx = Math.abs(touchX - start[0]);
            const dy = Math.abs(touchY - start[1]);
            const thresholdMet = isHorizontal.value ? dx > dy && dx > 3 : dy > dx && dy > 3;
            if (thresholdMet) {
                isDragging.value = true;
                maybeDragging = false;
            } else if ((isHorizontal.value ? dy : dx) > 3) maybeDragging = false;
        }
        if (!isDragging.value) return;
        e.preventDefault();
        addMovement(e);
        const progress = getProgress(isHorizontal.value ? touchX : touchY, false);
        dragProgress.value = Math.max(0, Math.min(1, progress));
        if (progress > 1) offset.value = getOffset(isHorizontal.value ? touchX : touchY, true);
        else if (progress < 0) offset.value = getOffset(isHorizontal.value ? touchX : touchY, false);
    }
    function onTouchend(e) {
        maybeDragging = false;
        if (!isDragging.value) return;
        addMovement(e);
        isDragging.value = false;
        const velocity = getVelocity(e.changedTouches[0].identifier);
        const vx = Math.abs(velocity.x);
        const vy = Math.abs(velocity.y);
        const thresholdMet = isHorizontal.value ? vx > vy && vx > 400 : vy > vx && vy > 3;
        if (thresholdMet) isActive.value = velocity.direction === (({
            left: "right",
            right: "left",
            top: "down",
            bottom: "up"
        })[position.value] || oops());
        else isActive.value = dragProgress.value > 0.5;
    }
    const dragStyles = (0, _vue.computed)(()=>{
        return isDragging.value ? {
            transform: position.value === "left" ? `translateX(calc(-100% + ${dragProgress.value * width.value}px))` : position.value === "right" ? `translateX(calc(100% - ${dragProgress.value * width.value}px))` : position.value === "top" ? `translateY(calc(-100% + ${dragProgress.value * width.value}px))` : position.value === "bottom" ? `translateY(calc(100% - ${dragProgress.value * width.value}px))` : oops(),
            transition: "none"
        } : undefined;
    });
    (0, _toggleScopeMjs.useToggleScope)(isDragging, ()=>{
        const transform = el.value?.style.transform ?? null;
        const transition = el.value?.style.transition ?? null;
        (0, _vue.watchEffect)(()=>{
            el.value?.style.setProperty("transform", dragStyles.value?.transform || "none");
            el.value?.style.setProperty("transition", dragStyles.value?.transition || null);
        });
        (0, _vue.onScopeDispose)(()=>{
            el.value?.style.setProperty("transform", transform);
            el.value?.style.setProperty("transition", transition);
        });
    });
    return {
        isDragging,
        dragProgress,
        dragStyles
    };
}
function oops() {
    throw new Error();
}

},{"../../composables/toggleScope.mjs":"dsKlJ","../../composables/touch.mjs":"bL9SG","vue":"gCTam","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"bL9SG":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
/**
 * Returns pointer velocity in px/s
 */ parcelHelpers.export(exports, "calculateImpulseVelocity", ()=>calculateImpulseVelocity);
parcelHelpers.export(exports, "useVelocity", ()=>useVelocity);
var _indexMjs = require("../util/index.mjs");
const HORIZON = 100; // ms
const HISTORY = 20; // number of samples to keep
/** @see https://android.googlesource.com/platform/frameworks/native/+/master/libs/input/VelocityTracker.cpp */ function kineticEnergyToVelocity(work) {
    const sqrt2 = 1.41421356237;
    return (work < 0 ? -1 : 1.0) * Math.sqrt(Math.abs(work)) * sqrt2;
}
function calculateImpulseVelocity(samples) {
    // The input should be in reversed time order (most recent sample at index i=0)
    if (samples.length < 2) // if 0 or 1 points, velocity is zero
    return 0;
    // if (samples[1].t > samples[0].t) {
    //   // Algorithm will still work, but not perfectly
    //   consoleWarn('Samples provided to calculateImpulseVelocity in the wrong order')
    // }
    if (samples.length === 2) {
        // if 2 points, basic linear calculation
        if (samples[1].t === samples[0].t) // consoleWarn(`Events have identical time stamps t=${samples[0].t}, setting velocity = 0`)
        return 0;
        return (samples[1].d - samples[0].d) / (samples[1].t - samples[0].t);
    }
    // Guaranteed to have at least 3 points here
    // start with the oldest sample and go forward in time
    let work = 0;
    for(let i = samples.length - 1; i > 0; i--){
        if (samples[i].t === samples[i - 1].t) continue;
        const vprev = kineticEnergyToVelocity(work); // v[i-1]
        const vcurr = (samples[i].d - samples[i - 1].d) / (samples[i].t - samples[i - 1].t); // v[i]
        work += (vcurr - vprev) * Math.abs(vcurr);
        if (i === samples.length - 1) work *= 0.5;
    }
    return kineticEnergyToVelocity(work) * 1000;
}
function useVelocity() {
    const touches = {};
    function addMovement(e) {
        Array.from(e.changedTouches).forEach((touch)=>{
            const samples = touches[touch.identifier] ?? (touches[touch.identifier] = new (0, _indexMjs.CircularBuffer)(HISTORY));
            samples.push([
                e.timeStamp,
                touch
            ]);
        });
    }
    function endTouch(e) {
        Array.from(e.changedTouches).forEach((touch)=>{
            delete touches[touch.identifier];
        });
    }
    function getVelocity(id) {
        const samples = touches[id]?.values().reverse();
        if (!samples) throw new Error(`No samples for touch id ${id}`);
        const newest = samples[0];
        const x = [];
        const y = [];
        for (const val of samples){
            if (newest[0] - val[0] > HORIZON) break;
            x.push({
                t: val[0],
                d: val[1].clientX
            });
            y.push({
                t: val[0],
                d: val[1].clientY
            });
        }
        return {
            x: calculateImpulseVelocity(x),
            y: calculateImpulseVelocity(y),
            get direction () {
                const { x, y } = this;
                const [absX, absY] = [
                    Math.abs(x),
                    Math.abs(y)
                ];
                return absX > absY && x >= 0 ? "right" : absX > absY && x <= 0 ? "left" : absY > absX && y >= 0 ? "down" : absY > absX && y <= 0 ? "up" : oops();
            }
        };
    }
    return {
        addMovement,
        endTouch,
        getVelocity
    };
}
function oops() {
    throw new Error();
}

},{"../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"6fS1D":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VNoSsr", ()=>(0, _vnoSsrMjs.VNoSsr));
var _vnoSsrMjs = require("./VNoSsr.mjs");

},{"./VNoSsr.mjs":"gzoZa","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"gzoZa":[function(require,module,exports) {
// Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VNoSsr", ()=>VNoSsr);
var _hydrationMjs = require("../../composables/hydration.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const VNoSsr = (0, _indexMjs.defineComponent)({
    name: "VNoSsr",
    setup (_, _ref) {
        let { slots } = _ref;
        const show = (0, _hydrationMjs.useHydration)();
        return ()=>show.value && slots.default?.();
    }
});

},{"../../composables/hydration.mjs":"ksxeK","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"dvBBN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VOtpInput", ()=>(0, _votpInputMjs.VOtpInput));
var _votpInputMjs = require("./VOtpInput.mjs");

},{"./VOtpInput.mjs":"2FKDA","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"2FKDA":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVOtpInputProps", ()=>makeVOtpInputProps);
parcelHelpers.export(exports, "VOtpInput", ()=>VOtpInput);
var _vue = require("vue");
// Styles
var _votpInputCss = require("./VOtpInput.css");
// Components
var _vfieldMjs = require("../VField/VField.mjs");
var _voverlayMjs = require("../VOverlay/VOverlay.mjs");
var _vprogressCircularMjs = require("../VProgressCircular/VProgressCircular.mjs"); // Composables
var _defaultsMjs = require("../../composables/defaults.mjs");
var _dimensionsMjs = require("../../composables/dimensions.mjs");
var _focusMjs = require("../../composables/focus.mjs");
var _localeMjs = require("../../composables/locale.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const makeVOtpInputProps = (0, _indexMjs.propsFactory)({
    autofocus: Boolean,
    divider: String,
    focusAll: Boolean,
    label: {
        type: String,
        default: "$vuetify.input.otp"
    },
    length: {
        type: [
            Number,
            String
        ],
        default: 6
    },
    modelValue: {
        type: [
            Number,
            String
        ],
        default: undefined
    },
    placeholder: String,
    type: {
        type: String,
        default: "number"
    },
    ...(0, _dimensionsMjs.makeDimensionProps)(),
    ...(0, _focusMjs.makeFocusProps)(),
    ...(0, _indexMjs.only)((0, _vfieldMjs.makeVFieldProps)({
        variant: "outlined"
    }), [
        "baseColor",
        "bgColor",
        "class",
        "color",
        "disabled",
        "error",
        "loading",
        "rounded",
        "style",
        "theme",
        "variant"
    ])
}, "VOtpInput");
const VOtpInput = (0, _indexMjs.genericComponent)()({
    name: "VOtpInput",
    props: makeVOtpInputProps(),
    emits: {
        finish: (val)=>true,
        "update:focused": (val)=>true,
        "update:modelValue": (val)=>true
    },
    setup (props, _ref) {
        let { attrs, emit, slots } = _ref;
        const { dimensionStyles } = (0, _dimensionsMjs.useDimension)(props);
        const { isFocused, focus, blur } = (0, _focusMjs.useFocus)(props);
        const model = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue", "", (val)=>val == null ? [] : String(val).split(""), (val)=>val.join(""));
        const { t } = (0, _localeMjs.useLocale)();
        const length = (0, _vue.computed)(()=>Number(props.length));
        const fields = (0, _vue.computed)(()=>Array(length.value).fill(0));
        const focusIndex = (0, _vue.ref)(-1);
        const contentRef = (0, _vue.ref)();
        const inputRef = (0, _vue.ref)([]);
        const current = (0, _vue.computed)(()=>inputRef.value[focusIndex.value]);
        function onInput() {
            // The maxlength attribute doesn't work for the number type input, so the text type is used.
            // The following logic simulates the behavior of a number input.
            if (isValidNumber(current.value.value)) {
                current.value.value = "";
                return;
            }
            const array = model.value.slice();
            const value = current.value.value;
            array[focusIndex.value] = value;
            let target = null;
            if (focusIndex.value > model.value.length) target = model.value.length + 1;
            else if (focusIndex.value + 1 !== length.value) target = "next";
            model.value = array;
            if (target) (0, _indexMjs.focusChild)(contentRef.value, target);
        }
        function onKeydown(e) {
            const array = model.value.slice();
            const index = focusIndex.value;
            let target = null;
            if (![
                "ArrowLeft",
                "ArrowRight",
                "Backspace",
                "Delete"
            ].includes(e.key)) return;
            e.preventDefault();
            if (e.key === "ArrowLeft") target = "prev";
            else if (e.key === "ArrowRight") target = "next";
            else if ([
                "Backspace",
                "Delete"
            ].includes(e.key)) {
                array[focusIndex.value] = "";
                model.value = array;
                if (focusIndex.value > 0 && e.key === "Backspace") target = "prev";
                else requestAnimationFrame(()=>{
                    inputRef.value[index]?.select();
                });
            }
            requestAnimationFrame(()=>{
                if (target != null) (0, _indexMjs.focusChild)(contentRef.value, target);
            });
        }
        function onPaste(index, e) {
            e.preventDefault();
            e.stopPropagation();
            const clipboardText = e?.clipboardData?.getData("Text").slice(0, length.value) ?? "";
            if (isValidNumber(clipboardText)) return;
            model.value = clipboardText.split("");
            inputRef.value?.[index].blur();
        }
        function reset() {
            model.value = [];
        }
        function onFocus(e, index) {
            focus();
            focusIndex.value = index;
        }
        function onBlur() {
            blur();
            focusIndex.value = -1;
        }
        function isValidNumber(value) {
            return props.type === "number" && /[^0-9]/g.test(value);
        }
        (0, _defaultsMjs.provideDefaults)({
            VField: {
                color: (0, _vue.computed)(()=>props.color),
                bgColor: (0, _vue.computed)(()=>props.color),
                baseColor: (0, _vue.computed)(()=>props.baseColor),
                disabled: (0, _vue.computed)(()=>props.disabled),
                error: (0, _vue.computed)(()=>props.error),
                variant: (0, _vue.computed)(()=>props.variant)
            }
        }, {
            scoped: true
        });
        (0, _vue.watch)(model, (val)=>{
            if (val.length === length.value) emit("finish", val.join(""));
        }, {
            deep: true
        });
        (0, _vue.watch)(focusIndex, (val)=>{
            if (val < 0) return;
            (0, _vue.nextTick)(()=>{
                inputRef.value[val]?.select();
            });
        });
        (0, _indexMjs.useRender)(()=>{
            const [rootAttrs, inputAttrs] = (0, _indexMjs.filterInputAttrs)(attrs);
            return (0, _vue.createVNode)("div", (0, _vue.mergeProps)({
                "class": [
                    "v-otp-input",
                    {
                        "v-otp-input--divided": !!props.divider
                    },
                    props.class
                ],
                "style": [
                    props.style
                ]
            }, rootAttrs), [
                (0, _vue.createVNode)("div", {
                    "ref": contentRef,
                    "class": "v-otp-input__content",
                    "style": [
                        dimensionStyles.value
                    ]
                }, [
                    fields.value.map((_, i)=>(0, _vue.createVNode)((0, _vue.Fragment), null, [
                            props.divider && i !== 0 && (0, _vue.createVNode)("span", {
                                "class": "v-otp-input__divider"
                            }, [
                                props.divider
                            ]),
                            (0, _vue.createVNode)((0, _vfieldMjs.VField), {
                                "focused": isFocused.value && props.focusAll || focusIndex.value === i,
                                "key": i
                            }, {
                                ...slots,
                                loader: undefined,
                                default: ()=>{
                                    return (0, _vue.createVNode)("input", {
                                        "ref": (val)=>inputRef.value[i] = val,
                                        "aria-label": t(props.label, i + 1),
                                        "autofocus": i === 0 && props.autofocus,
                                        "autocomplete": "one-time-code",
                                        "class": [
                                            "v-otp-input__field"
                                        ],
                                        "disabled": props.disabled,
                                        "inputmode": props.type === "number" ? "numeric" : "text",
                                        "min": props.type === "number" ? 0 : undefined,
                                        "maxlength": "1",
                                        "placeholder": props.placeholder,
                                        "type": props.type === "number" ? "text" : props.type,
                                        "value": model.value[i],
                                        "onInput": onInput,
                                        "onFocus": (e)=>onFocus(e, i),
                                        "onBlur": onBlur,
                                        "onKeydown": onKeydown,
                                        "onPaste": (event)=>onPaste(i, event)
                                    }, null);
                                }
                            })
                        ])),
                    (0, _vue.createVNode)("input", (0, _vue.mergeProps)({
                        "class": "v-otp-input-input",
                        "type": "hidden"
                    }, inputAttrs, {
                        "value": model.value.join("")
                    }), null),
                    (0, _vue.createVNode)((0, _voverlayMjs.VOverlay), {
                        "contained": true,
                        "content-class": "v-otp-input__loader",
                        "model-value": !!props.loading,
                        "persistent": true
                    }, {
                        default: ()=>[
                                slots.loader?.() ?? (0, _vue.createVNode)((0, _vprogressCircularMjs.VProgressCircular), {
                                    "color": typeof props.loading === "boolean" ? undefined : props.loading,
                                    "indeterminate": true,
                                    "size": "24",
                                    "width": "2"
                                }, null)
                            ]
                    }),
                    slots.default?.()
                ])
            ]);
        });
        return {
            blur: ()=>{
                inputRef.value?.some((input)=>input.blur());
            },
            focus: ()=>{
                inputRef.value?.[0].focus();
            },
            reset,
            isFocused
        };
    }
});

},{"vue":"gCTam","./VOtpInput.css":"dhUCP","../VField/VField.mjs":"kYFSe","../VOverlay/VOverlay.mjs":"2XVbS","../VProgressCircular/VProgressCircular.mjs":"8zXNo","../../composables/defaults.mjs":"29Im0","../../composables/dimensions.mjs":"daVmy","../../composables/focus.mjs":"ez9on","../../composables/locale.mjs":"9rJP0","../../composables/proxiedModel.mjs":"huwLk","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"dhUCP":[function() {},{}],"8x45m":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VParallax", ()=>(0, _vparallaxMjs.VParallax));
var _vparallaxMjs = require("./VParallax.mjs");

},{"./VParallax.mjs":"dbXyd","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"dbXyd":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVParallaxProps", ()=>makeVParallaxProps);
parcelHelpers.export(exports, "VParallax", ()=>VParallax);
var _vue = require("vue");
// Styles
var _vparallaxCss = require("./VParallax.css");
// Components
var _indexMjs = require("../VImg/index.mjs"); // Composables
var _indexMjs1 = require("../../composables/index.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _intersectionObserverMjs = require("../../composables/intersectionObserver.mjs");
var _resizeObserverMjs = require("../../composables/resizeObserver.mjs"); // Utilities
var _indexMjs2 = require("../../util/index.mjs"); // Types
function floor(val) {
    return Math.floor(Math.abs(val)) * Math.sign(val);
}
const makeVParallaxProps = (0, _indexMjs2.propsFactory)({
    scale: {
        type: [
            Number,
            String
        ],
        default: 0.5
    },
    ...(0, _componentMjs.makeComponentProps)()
}, "VParallax");
const VParallax = (0, _indexMjs2.genericComponent)()({
    name: "VParallax",
    props: makeVParallaxProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const { intersectionRef, isIntersecting } = (0, _intersectionObserverMjs.useIntersectionObserver)();
        const { resizeRef, contentRect } = (0, _resizeObserverMjs.useResizeObserver)();
        const { height: displayHeight } = (0, _indexMjs1.useDisplay)();
        const root = (0, _vue.ref)();
        (0, _vue.watchEffect)(()=>{
            intersectionRef.value = resizeRef.value = root.value?.$el;
        });
        let scrollParent;
        (0, _vue.watch)(isIntersecting, (val)=>{
            if (val) {
                scrollParent = (0, _indexMjs2.getScrollParent)(intersectionRef.value);
                scrollParent = scrollParent === document.scrollingElement ? document : scrollParent;
                scrollParent.addEventListener("scroll", onScroll, {
                    passive: true
                });
                onScroll();
            } else scrollParent.removeEventListener("scroll", onScroll);
        });
        (0, _vue.onBeforeUnmount)(()=>{
            scrollParent?.removeEventListener("scroll", onScroll);
        });
        (0, _vue.watch)(displayHeight, onScroll);
        (0, _vue.watch)(()=>contentRect.value?.height, onScroll);
        const scale = (0, _vue.computed)(()=>{
            return 1 - (0, _indexMjs2.clamp)(+props.scale);
        });
        let frame = -1;
        function onScroll() {
            if (!isIntersecting.value) return;
            cancelAnimationFrame(frame);
            frame = requestAnimationFrame(()=>{
                const el = (root.value?.$el).querySelector(".v-img__img");
                if (!el) return;
                const scrollHeight = scrollParent instanceof Document ? document.documentElement.clientHeight : scrollParent.clientHeight;
                const scrollPos = scrollParent instanceof Document ? window.scrollY : scrollParent.scrollTop;
                const top = intersectionRef.value.getBoundingClientRect().top + scrollPos;
                const height = contentRect.value.height;
                const center = top + (height - scrollHeight) / 2;
                const translate = floor((scrollPos - center) * scale.value);
                const sizeScale = Math.max(1, (scale.value * (scrollHeight - height) + height) / height);
                el.style.setProperty("transform", `translateY(${translate}px) scale(${sizeScale})`);
            });
        }
        (0, _indexMjs2.useRender)(()=>(0, _vue.createVNode)((0, _indexMjs.VImg), {
                "class": [
                    "v-parallax",
                    {
                        "v-parallax--active": isIntersecting.value
                    },
                    props.class
                ],
                "style": props.style,
                "ref": root,
                "cover": true,
                "onLoadstart": onScroll,
                "onLoad": onScroll
            }, slots));
        return {};
    }
});

},{"vue":"gCTam","./VParallax.css":"edliO","../VImg/index.mjs":"dbGJJ","../../composables/index.mjs":"fthaS","../../composables/component.mjs":"4YAxs","../../composables/intersectionObserver.mjs":"lg3v0","../../composables/resizeObserver.mjs":"hIk8t","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"edliO":[function() {},{}],"beVAQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VRadio", ()=>(0, _vradioMjs.VRadio));
var _vradioMjs = require("./VRadio.mjs");

},{"./VRadio.mjs":"kjVhQ","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"kjVhQ":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVRadioProps", ()=>makeVRadioProps);
parcelHelpers.export(exports, "VRadio", ()=>VRadio);
var _vue = require("vue");
// Components
var _vselectionControlMjs = require("../VSelectionControl/VSelectionControl.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const makeVRadioProps = (0, _indexMjs.propsFactory)({
    ...(0, _vselectionControlMjs.makeVSelectionControlProps)({
        falseIcon: "$radioOff",
        trueIcon: "$radioOn"
    })
}, "VRadio");
const VRadio = (0, _indexMjs.genericComponent)()({
    name: "VRadio",
    props: makeVRadioProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        (0, _indexMjs.useRender)(()=>{
            const controlProps = (0, _vselectionControlMjs.VSelectionControl).filterProps(props);
            return (0, _vue.createVNode)((0, _vselectionControlMjs.VSelectionControl), (0, _vue.mergeProps)(controlProps, {
                "class": [
                    "v-radio",
                    props.class
                ],
                "style": props.style,
                "type": "radio"
            }), slots);
        });
        return {};
    }
});

},{"vue":"gCTam","../VSelectionControl/VSelectionControl.mjs":"2m8Co","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"lg1EM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VRadioGroup", ()=>(0, _vradioGroupMjs.VRadioGroup));
var _vradioGroupMjs = require("./VRadioGroup.mjs");

},{"./VRadioGroup.mjs":"3uTOD","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"3uTOD":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVRadioGroupProps", ()=>makeVRadioGroupProps);
parcelHelpers.export(exports, "VRadioGroup", ()=>VRadioGroup);
var _vue = require("vue");
// Styles
var _vradioGroupCss = require("./VRadioGroup.css");
// Components
var _vinputMjs = require("../VInput/VInput.mjs");
var _indexMjs = require("../VLabel/index.mjs");
var _indexMjs1 = require("../VSelectionControl/index.mjs");
var _vselectionControlGroupMjs = require("../VSelectionControlGroup/VSelectionControlGroup.mjs"); // Composables
var _iconsMjs = require("../../composables/icons.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs"); // Utilities
var _indexMjs2 = require("../../util/index.mjs"); // Types
const makeVRadioGroupProps = (0, _indexMjs2.propsFactory)({
    height: {
        type: [
            Number,
            String
        ],
        default: "auto"
    },
    ...(0, _vinputMjs.makeVInputProps)(),
    ...(0, _indexMjs2.omit)((0, _vselectionControlGroupMjs.makeSelectionControlGroupProps)(), [
        "multiple"
    ]),
    trueIcon: {
        type: (0, _iconsMjs.IconValue),
        default: "$radioOn"
    },
    falseIcon: {
        type: (0, _iconsMjs.IconValue),
        default: "$radioOff"
    },
    type: {
        type: String,
        default: "radio"
    }
}, "VRadioGroup");
const VRadioGroup = (0, _indexMjs2.genericComponent)()({
    name: "VRadioGroup",
    inheritAttrs: false,
    props: makeVRadioGroupProps(),
    emits: {
        "update:modelValue": (value)=>true
    },
    setup (props, _ref) {
        let { attrs, slots } = _ref;
        const uid = (0, _indexMjs2.getUid)();
        const id = (0, _vue.computed)(()=>props.id || `radio-group-${uid}`);
        const model = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
        (0, _indexMjs2.useRender)(()=>{
            const [rootAttrs, controlAttrs] = (0, _indexMjs2.filterInputAttrs)(attrs);
            const inputProps = (0, _vinputMjs.VInput).filterProps(props);
            const controlProps = (0, _indexMjs1.VSelectionControl).filterProps(props);
            const label = slots.label ? slots.label({
                label: props.label,
                props: {
                    for: id.value
                }
            }) : props.label;
            return (0, _vue.createVNode)((0, _vinputMjs.VInput), (0, _vue.mergeProps)({
                "class": [
                    "v-radio-group",
                    props.class
                ],
                "style": props.style
            }, rootAttrs, inputProps, {
                "modelValue": model.value,
                "onUpdate:modelValue": ($event)=>model.value = $event,
                "id": id.value
            }), {
                ...slots,
                default: (_ref2)=>{
                    let { id, messagesId, isDisabled, isReadonly } = _ref2;
                    return (0, _vue.createVNode)((0, _vue.Fragment), null, [
                        label && (0, _vue.createVNode)((0, _indexMjs.VLabel), {
                            "id": id.value
                        }, {
                            default: ()=>[
                                    label
                                ]
                        }),
                        (0, _vue.createVNode)((0, _vselectionControlGroupMjs.VSelectionControlGroup), (0, _vue.mergeProps)(controlProps, {
                            "id": id.value,
                            "aria-describedby": messagesId.value,
                            "defaultsTarget": "VRadio",
                            "trueIcon": props.trueIcon,
                            "falseIcon": props.falseIcon,
                            "type": props.type,
                            "disabled": isDisabled.value,
                            "readonly": isReadonly.value,
                            "aria-labelledby": label ? id.value : undefined,
                            "multiple": false
                        }, controlAttrs, {
                            "modelValue": model.value,
                            "onUpdate:modelValue": ($event)=>model.value = $event
                        }), slots)
                    ]);
                }
            });
        });
        return {};
    }
});

},{"vue":"gCTam","./VRadioGroup.css":"j20zp","../VInput/VInput.mjs":"fIDss","../VLabel/index.mjs":"2xWF9","../VSelectionControl/index.mjs":"40anv","../VSelectionControlGroup/VSelectionControlGroup.mjs":"2TyxC","../../composables/icons.mjs":"g4kLv","../../composables/proxiedModel.mjs":"huwLk","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"j20zp":[function() {},{}],"40anv":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VSelectionControl", ()=>(0, _vselectionControlMjs.VSelectionControl));
var _vselectionControlMjs = require("./VSelectionControl.mjs");

},{"./VSelectionControl.mjs":"2m8Co","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"bL1p6":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VRangeSlider", ()=>(0, _vrangeSliderMjs.VRangeSlider));
var _vrangeSliderMjs = require("./VRangeSlider.mjs");

},{"./VRangeSlider.mjs":"68Ndp","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"68Ndp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVRangeSliderProps", ()=>makeVRangeSliderProps);
parcelHelpers.export(exports, "VRangeSlider", ()=>VRangeSlider);
var _vue = require("vue");
// Styles
var _vsliderCss = require("../VSlider/VSlider.css");
// Components
var _vinputMjs = require("../VInput/VInput.mjs");
var _indexMjs = require("../VLabel/index.mjs");
var _sliderMjs = require("../VSlider/slider.mjs");
var _vsliderThumbMjs = require("../VSlider/VSliderThumb.mjs");
var _vsliderTrackMjs = require("../VSlider/VSliderTrack.mjs"); // Composables
var _focusMjs = require("../../composables/focus.mjs");
var _localeMjs = require("../../composables/locale.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs"); // Utilities
var _indexMjs1 = require("../../util/index.mjs"); // Types
const makeVRangeSliderProps = (0, _indexMjs1.propsFactory)({
    ...(0, _focusMjs.makeFocusProps)(),
    ...(0, _vinputMjs.makeVInputProps)(),
    ...(0, _sliderMjs.makeSliderProps)(),
    strict: Boolean,
    modelValue: {
        type: Array,
        default: ()=>[
                0,
                0
            ]
    }
}, "VRangeSlider");
const VRangeSlider = (0, _indexMjs1.genericComponent)()({
    name: "VRangeSlider",
    props: makeVRangeSliderProps(),
    emits: {
        "update:focused": (value)=>true,
        "update:modelValue": (value)=>true,
        end: (value)=>true,
        start: (value)=>true
    },
    setup (props, _ref) {
        let { slots, emit } = _ref;
        const startThumbRef = (0, _vue.ref)();
        const stopThumbRef = (0, _vue.ref)();
        const inputRef = (0, _vue.ref)();
        const { rtlClasses } = (0, _localeMjs.useRtl)();
        function getActiveThumb(e) {
            if (!startThumbRef.value || !stopThumbRef.value) return;
            const startOffset = (0, _sliderMjs.getOffset)(e, startThumbRef.value.$el, props.direction);
            const stopOffset = (0, _sliderMjs.getOffset)(e, stopThumbRef.value.$el, props.direction);
            const a = Math.abs(startOffset);
            const b = Math.abs(stopOffset);
            return a < b || a === b && startOffset < 0 ? startThumbRef.value.$el : stopThumbRef.value.$el;
        }
        const steps = (0, _sliderMjs.useSteps)(props);
        const model = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue", undefined, (arr)=>{
            if (!arr?.length) return [
                0,
                0
            ];
            return arr.map((value)=>steps.roundValue(value));
        });
        const { activeThumbRef, hasLabels, max, min, mousePressed, onSliderMousedown, onSliderTouchstart, position, trackContainerRef, readonly } = (0, _sliderMjs.useSlider)({
            props,
            steps,
            onSliderStart: ()=>{
                emit("start", model.value);
            },
            onSliderEnd: (_ref2)=>{
                let { value } = _ref2;
                const newValue = activeThumbRef.value === startThumbRef.value?.$el ? [
                    value,
                    model.value[1]
                ] : [
                    model.value[0],
                    value
                ];
                if (!props.strict && newValue[0] < newValue[1]) model.value = newValue;
                emit("end", model.value);
            },
            onSliderMove: (_ref3)=>{
                let { value } = _ref3;
                const [start, stop] = model.value;
                if (!props.strict && start === stop && start !== min.value) {
                    activeThumbRef.value = value > start ? stopThumbRef.value?.$el : startThumbRef.value?.$el;
                    activeThumbRef.value?.focus();
                }
                if (activeThumbRef.value === startThumbRef.value?.$el) model.value = [
                    Math.min(value, stop),
                    stop
                ];
                else model.value = [
                    start,
                    Math.max(start, value)
                ];
            },
            getActiveThumb
        });
        const { isFocused, focus, blur } = (0, _focusMjs.useFocus)(props);
        const trackStart = (0, _vue.computed)(()=>position(model.value[0]));
        const trackStop = (0, _vue.computed)(()=>position(model.value[1]));
        (0, _indexMjs1.useRender)(()=>{
            const inputProps = (0, _vinputMjs.VInput).filterProps(props);
            const hasPrepend = !!(props.label || slots.label || slots.prepend);
            return (0, _vue.createVNode)((0, _vinputMjs.VInput), (0, _vue.mergeProps)({
                "class": [
                    "v-slider",
                    "v-range-slider",
                    {
                        "v-slider--has-labels": !!slots["tick-label"] || hasLabels.value,
                        "v-slider--focused": isFocused.value,
                        "v-slider--pressed": mousePressed.value,
                        "v-slider--disabled": props.disabled
                    },
                    rtlClasses.value,
                    props.class
                ],
                "style": props.style,
                "ref": inputRef
            }, inputProps, {
                "focused": isFocused.value
            }), {
                ...slots,
                prepend: hasPrepend ? (slotProps)=>(0, _vue.createVNode)((0, _vue.Fragment), null, [
                        slots.label?.(slotProps) ?? (props.label ? (0, _vue.createVNode)((0, _indexMjs.VLabel), {
                            "class": "v-slider__label",
                            "text": props.label
                        }, null) : undefined),
                        slots.prepend?.(slotProps)
                    ]) : undefined,
                default: (_ref4)=>{
                    let { id, messagesId } = _ref4;
                    return (0, _vue.createVNode)("div", {
                        "class": "v-slider__container",
                        "onMousedown": !readonly.value ? onSliderMousedown : undefined,
                        "onTouchstartPassive": !readonly.value ? onSliderTouchstart : undefined
                    }, [
                        (0, _vue.createVNode)("input", {
                            "id": `${id.value}_start`,
                            "name": props.name || id.value,
                            "disabled": !!props.disabled,
                            "readonly": !!props.readonly,
                            "tabindex": "-1",
                            "value": model.value[0]
                        }, null),
                        (0, _vue.createVNode)("input", {
                            "id": `${id.value}_stop`,
                            "name": props.name || id.value,
                            "disabled": !!props.disabled,
                            "readonly": !!props.readonly,
                            "tabindex": "-1",
                            "value": model.value[1]
                        }, null),
                        (0, _vue.createVNode)((0, _vsliderTrackMjs.VSliderTrack), {
                            "ref": trackContainerRef,
                            "start": trackStart.value,
                            "stop": trackStop.value
                        }, {
                            "tick-label": slots["tick-label"]
                        }),
                        (0, _vue.createVNode)((0, _vsliderThumbMjs.VSliderThumb), {
                            "ref": startThumbRef,
                            "aria-describedby": messagesId.value,
                            "focused": isFocused && activeThumbRef.value === startThumbRef.value?.$el,
                            "modelValue": model.value[0],
                            "onUpdate:modelValue": (v)=>model.value = [
                                    v,
                                    model.value[1]
                                ],
                            "onFocus": (e)=>{
                                focus();
                                activeThumbRef.value = startThumbRef.value?.$el;
                                // Make sure second thumb is focused if
                                // the thumbs are on top of each other
                                // and they are both at minimum value
                                // but only if focused from outside.
                                if (model.value[0] === model.value[1] && model.value[1] === min.value && e.relatedTarget !== stopThumbRef.value?.$el) {
                                    startThumbRef.value?.$el.blur();
                                    stopThumbRef.value?.$el.focus();
                                }
                            },
                            "onBlur": ()=>{
                                blur();
                                activeThumbRef.value = undefined;
                            },
                            "min": min.value,
                            "max": model.value[1],
                            "position": trackStart.value,
                            "ripple": props.ripple
                        }, {
                            "thumb-label": slots["thumb-label"]
                        }),
                        (0, _vue.createVNode)((0, _vsliderThumbMjs.VSliderThumb), {
                            "ref": stopThumbRef,
                            "aria-describedby": messagesId.value,
                            "focused": isFocused && activeThumbRef.value === stopThumbRef.value?.$el,
                            "modelValue": model.value[1],
                            "onUpdate:modelValue": (v)=>model.value = [
                                    model.value[0],
                                    v
                                ],
                            "onFocus": (e)=>{
                                focus();
                                activeThumbRef.value = stopThumbRef.value?.$el;
                                // Make sure first thumb is focused if
                                // the thumbs are on top of each other
                                // and they are both at maximum value
                                // but only if focused from outside.
                                if (model.value[0] === model.value[1] && model.value[0] === max.value && e.relatedTarget !== startThumbRef.value?.$el) {
                                    stopThumbRef.value?.$el.blur();
                                    startThumbRef.value?.$el.focus();
                                }
                            },
                            "onBlur": ()=>{
                                blur();
                                activeThumbRef.value = undefined;
                            },
                            "min": model.value[0],
                            "max": max.value,
                            "position": trackStop.value,
                            "ripple": props.ripple
                        }, {
                            "thumb-label": slots["thumb-label"]
                        })
                    ]);
                }
            });
        });
        return {};
    }
});

},{"vue":"gCTam","../VSlider/VSlider.css":"dspsL","../VInput/VInput.mjs":"fIDss","../VLabel/index.mjs":"2xWF9","../VSlider/slider.mjs":"5xkNu","../VSlider/VSliderThumb.mjs":"5jv9S","../VSlider/VSliderTrack.mjs":"jNOO0","../../composables/focus.mjs":"ez9on","../../composables/locale.mjs":"9rJP0","../../composables/proxiedModel.mjs":"huwLk","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"dspsL":[function() {},{}],"fKzVg":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VRating", ()=>(0, _vratingMjs.VRating));
var _vratingMjs = require("./VRating.mjs");

},{"./VRating.mjs":"czAJ4","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"czAJ4":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVRatingProps", ()=>makeVRatingProps);
parcelHelpers.export(exports, "VRating", ()=>VRating);
var _vue = require("vue");
// Styles
var _vratingCss = require("./VRating.css");
// Components
var _indexMjs = require("../VBtn/index.mjs"); // Composables
var _componentMjs = require("../../composables/component.mjs");
var _densityMjs = require("../../composables/density.mjs");
var _iconsMjs = require("../../composables/icons.mjs");
var _localeMjs = require("../../composables/locale.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs");
var _sizeMjs = require("../../composables/size.mjs");
var _tagMjs = require("../../composables/tag.mjs");
var _themeMjs = require("../../composables/theme.mjs"); // Utilities
var _indexMjs1 = require("../../util/index.mjs"); // Types
const makeVRatingProps = (0, _indexMjs1.propsFactory)({
    name: String,
    itemAriaLabel: {
        type: String,
        default: "$vuetify.rating.ariaLabel.item"
    },
    activeColor: String,
    color: String,
    clearable: Boolean,
    disabled: Boolean,
    emptyIcon: {
        type: (0, _iconsMjs.IconValue),
        default: "$ratingEmpty"
    },
    fullIcon: {
        type: (0, _iconsMjs.IconValue),
        default: "$ratingFull"
    },
    halfIncrements: Boolean,
    hover: Boolean,
    length: {
        type: [
            Number,
            String
        ],
        default: 5
    },
    readonly: Boolean,
    modelValue: {
        type: [
            Number,
            String
        ],
        default: 0
    },
    itemLabels: Array,
    itemLabelPosition: {
        type: String,
        default: "top",
        validator: (v)=>[
                "top",
                "bottom"
            ].includes(v)
    },
    ripple: Boolean,
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _densityMjs.makeDensityProps)(),
    ...(0, _sizeMjs.makeSizeProps)(),
    ...(0, _tagMjs.makeTagProps)(),
    ...(0, _themeMjs.makeThemeProps)()
}, "VRating");
const VRating = (0, _indexMjs1.genericComponent)()({
    name: "VRating",
    props: makeVRatingProps(),
    emits: {
        "update:modelValue": (value)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const { t } = (0, _localeMjs.useLocale)();
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const rating = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
        const normalizedValue = (0, _vue.computed)(()=>(0, _indexMjs1.clamp)(parseFloat(rating.value), 0, +props.length));
        const range = (0, _vue.computed)(()=>(0, _indexMjs1.createRange)(Number(props.length), 1));
        const increments = (0, _vue.computed)(()=>range.value.flatMap((v)=>props.halfIncrements ? [
                    v - 0.5,
                    v
                ] : [
                    v
                ]));
        const hoverIndex = (0, _vue.shallowRef)(-1);
        const itemState = (0, _vue.computed)(()=>increments.value.map((value)=>{
                const isHovering = props.hover && hoverIndex.value > -1;
                const isFilled = normalizedValue.value >= value;
                const isHovered = hoverIndex.value >= value;
                const isFullIcon = isHovering ? isHovered : isFilled;
                const icon = isFullIcon ? props.fullIcon : props.emptyIcon;
                const activeColor = props.activeColor ?? props.color;
                const color = isFilled || isHovered ? activeColor : props.color;
                return {
                    isFilled,
                    isHovered,
                    icon,
                    color
                };
            }));
        const eventState = (0, _vue.computed)(()=>[
                0,
                ...increments.value
            ].map((value)=>{
                function onMouseenter() {
                    hoverIndex.value = value;
                }
                function onMouseleave() {
                    hoverIndex.value = -1;
                }
                function onClick() {
                    if (props.disabled || props.readonly) return;
                    rating.value = normalizedValue.value === value && props.clearable ? 0 : value;
                }
                return {
                    onMouseenter: props.hover ? onMouseenter : undefined,
                    onMouseleave: props.hover ? onMouseleave : undefined,
                    onClick
                };
            }));
        const name = (0, _vue.computed)(()=>props.name ?? `v-rating-${(0, _indexMjs1.getUid)()}`);
        function VRatingItem(_ref2) {
            let { value, index, showStar = true } = _ref2;
            const { onMouseenter, onMouseleave, onClick } = eventState.value[index + 1];
            const id = `${name.value}-${String(value).replace(".", "-")}`;
            const btnProps = {
                color: itemState.value[index]?.color,
                density: props.density,
                disabled: props.disabled,
                icon: itemState.value[index]?.icon,
                ripple: props.ripple,
                size: props.size,
                variant: "plain"
            };
            return (0, _vue.createVNode)((0, _vue.Fragment), null, [
                (0, _vue.createVNode)("label", {
                    "for": id,
                    "class": {
                        "v-rating__item--half": props.halfIncrements && value % 1 > 0,
                        "v-rating__item--full": props.halfIncrements && value % 1 === 0
                    },
                    "onMouseenter": onMouseenter,
                    "onMouseleave": onMouseleave,
                    "onClick": onClick
                }, [
                    (0, _vue.createVNode)("span", {
                        "class": "v-rating__hidden"
                    }, [
                        t(props.itemAriaLabel, value, props.length)
                    ]),
                    !showStar ? undefined : slots.item ? slots.item({
                        ...itemState.value[index],
                        props: btnProps,
                        value,
                        index,
                        rating: normalizedValue.value
                    }) : (0, _vue.createVNode)((0, _indexMjs.VBtn), (0, _vue.mergeProps)({
                        "aria-label": t(props.itemAriaLabel, value, props.length)
                    }, btnProps), null)
                ]),
                (0, _vue.createVNode)("input", {
                    "class": "v-rating__hidden",
                    "name": name.value,
                    "id": id,
                    "type": "radio",
                    "value": value,
                    "checked": normalizedValue.value === value,
                    "tabindex": -1,
                    "readonly": props.readonly,
                    "disabled": props.disabled
                }, null)
            ]);
        }
        function createLabel(labelProps) {
            if (slots["item-label"]) return slots["item-label"](labelProps);
            if (labelProps.label) return (0, _vue.createVNode)("span", null, [
                labelProps.label
            ]);
            return (0, _vue.createVNode)("span", null, [
                (0, _vue.createTextVNode)("\xa0")
            ]);
        }
        (0, _indexMjs1.useRender)(()=>{
            const hasLabels = !!props.itemLabels?.length || slots["item-label"];
            return (0, _vue.createVNode)(props.tag, {
                "class": [
                    "v-rating",
                    {
                        "v-rating--hover": props.hover,
                        "v-rating--readonly": props.readonly
                    },
                    themeClasses.value,
                    props.class
                ],
                "style": props.style
            }, {
                default: ()=>[
                        (0, _vue.createVNode)(VRatingItem, {
                            "value": 0,
                            "index": -1,
                            "showStar": false
                        }, null),
                        range.value.map((value, i)=>(0, _vue.createVNode)("div", {
                                "class": "v-rating__wrapper"
                            }, [
                                hasLabels && props.itemLabelPosition === "top" ? createLabel({
                                    value,
                                    index: i,
                                    label: props.itemLabels?.[i]
                                }) : undefined,
                                (0, _vue.createVNode)("div", {
                                    "class": "v-rating__item"
                                }, [
                                    props.halfIncrements ? (0, _vue.createVNode)((0, _vue.Fragment), null, [
                                        (0, _vue.createVNode)(VRatingItem, {
                                            "value": value - 0.5,
                                            "index": i * 2
                                        }, null),
                                        (0, _vue.createVNode)(VRatingItem, {
                                            "value": value,
                                            "index": i * 2 + 1
                                        }, null)
                                    ]) : (0, _vue.createVNode)(VRatingItem, {
                                        "value": value,
                                        "index": i
                                    }, null)
                                ]),
                                hasLabels && props.itemLabelPosition === "bottom" ? createLabel({
                                    value,
                                    index: i,
                                    label: props.itemLabels?.[i]
                                }) : undefined
                            ]))
                    ]
            });
        });
        return {};
    }
});

},{"vue":"gCTam","./VRating.css":"8AvjK","../VBtn/index.mjs":"g9s2K","../../composables/component.mjs":"4YAxs","../../composables/density.mjs":"kOsEB","../../composables/icons.mjs":"g4kLv","../../composables/locale.mjs":"9rJP0","../../composables/proxiedModel.mjs":"huwLk","../../composables/size.mjs":"2PnSq","../../composables/tag.mjs":"3LqcC","../../composables/theme.mjs":"c9HGg","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"8AvjK":[function() {},{}],"hJYZs":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VResponsive", ()=>(0, _vresponsiveMjs.VResponsive));
var _vresponsiveMjs = require("./VResponsive.mjs");

},{"./VResponsive.mjs":"hkzXE","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"40B1s":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VSelectionControlGroup", ()=>(0, _vselectionControlGroupMjs.VSelectionControlGroup));
var _vselectionControlGroupMjs = require("./VSelectionControlGroup.mjs");

},{"./VSelectionControlGroup.mjs":"2TyxC","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"3vcV9":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VSheet", ()=>(0, _vsheetMjs.VSheet));
var _vsheetMjs = require("./VSheet.mjs");

},{"./VSheet.mjs":"3SEh6","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"e726I":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VSkeletonLoader", ()=>(0, _vskeletonLoaderMjs.VSkeletonLoader));
var _vskeletonLoaderMjs = require("./VSkeletonLoader.mjs");

},{"./VSkeletonLoader.mjs":"bFWge","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"bFWge":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "rootTypes", ()=>rootTypes);
parcelHelpers.export(exports, "makeVSkeletonLoaderProps", ()=>makeVSkeletonLoaderProps);
parcelHelpers.export(exports, "VSkeletonLoader", ()=>VSkeletonLoader);
var _vue = require("vue");
// Styles
var _vskeletonLoaderCss = require("./VSkeletonLoader.css");
// Composables
var _colorMjs = require("../../composables/color.mjs");
var _dimensionsMjs = require("../../composables/dimensions.mjs");
var _elevationMjs = require("../../composables/elevation.mjs");
var _localeMjs = require("../../composables/locale.mjs");
var _themeMjs = require("../../composables/theme.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const rootTypes = {
    actions: "button@2",
    article: "heading, paragraph",
    avatar: "avatar",
    button: "button",
    card: "image, heading",
    "card-avatar": "image, list-item-avatar",
    chip: "chip",
    "date-picker": "list-item, heading, divider, date-picker-options, date-picker-days, actions",
    "date-picker-options": "text, avatar@2",
    "date-picker-days": "avatar@28",
    divider: "divider",
    heading: "heading",
    image: "image",
    "list-item": "text",
    "list-item-avatar": "avatar, text",
    "list-item-two-line": "sentences",
    "list-item-avatar-two-line": "avatar, sentences",
    "list-item-three-line": "paragraph",
    "list-item-avatar-three-line": "avatar, paragraph",
    ossein: "ossein",
    paragraph: "text@3",
    sentences: "text@2",
    subtitle: "text",
    table: "table-heading, table-thead, table-tbody, table-tfoot",
    "table-heading": "chip, text",
    "table-thead": "heading@6",
    "table-tbody": "table-row-divider@6",
    "table-row-divider": "table-row, divider",
    "table-row": "text@6",
    "table-tfoot": "text@2, avatar@2",
    text: "text"
};
function genBone(type) {
    let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    return (0, _vue.createVNode)("div", {
        "class": [
            "v-skeleton-loader__bone",
            `v-skeleton-loader__${type}`
        ]
    }, [
        children
    ]);
}
function genBones(bone) {
    // e.g. 'text@3'
    const [type, length] = bone.split("@");
    // Generate a length array based upon
    // value after @ in the bone string
    return Array.from({
        length
    }).map(()=>genStructure(type));
}
function genStructure(type) {
    let children = [];
    if (!type) return children;
    // TODO: figure out a better way to type this
    const bone = rootTypes[type];
    // End of recursion, do nothing
    /* eslint-disable-next-line no-empty, brace-style */ if (type === bone) ;
    else if (type.includes(",")) return mapBones(type);
    else if (type.includes("@")) return genBones(type);
    else if (bone.includes(",")) children = mapBones(bone);
    else if (bone.includes("@")) children = genBones(bone);
    else if (bone) children.push(genStructure(bone));
    return [
        genBone(type, children)
    ];
}
function mapBones(bones) {
    // Remove spaces and return array of structures
    return bones.replace(/\s/g, "").split(",").map(genStructure);
}
const makeVSkeletonLoaderProps = (0, _indexMjs.propsFactory)({
    boilerplate: Boolean,
    color: String,
    loading: Boolean,
    loadingText: {
        type: String,
        default: "$vuetify.loading"
    },
    type: {
        type: [
            String,
            Array
        ],
        default: "ossein"
    },
    ...(0, _dimensionsMjs.makeDimensionProps)(),
    ...(0, _elevationMjs.makeElevationProps)(),
    ...(0, _themeMjs.makeThemeProps)()
}, "VSkeletonLoader");
const VSkeletonLoader = (0, _indexMjs.genericComponent)()({
    name: "VSkeletonLoader",
    props: makeVSkeletonLoaderProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const { backgroundColorClasses, backgroundColorStyles } = (0, _colorMjs.useBackgroundColor)((0, _vue.toRef)(props, "color"));
        const { dimensionStyles } = (0, _dimensionsMjs.useDimension)(props);
        const { elevationClasses } = (0, _elevationMjs.useElevation)(props);
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const { t } = (0, _localeMjs.useLocale)();
        const items = (0, _vue.computed)(()=>genStructure((0, _indexMjs.wrapInArray)(props.type).join(",")));
        (0, _indexMjs.useRender)(()=>{
            const isLoading = !slots.default || props.loading;
            const loadingProps = props.boilerplate || !isLoading ? {} : {
                ariaLive: "polite",
                ariaLabel: t(props.loadingText),
                role: "alert"
            };
            return (0, _vue.createVNode)("div", (0, _vue.mergeProps)({
                "class": [
                    "v-skeleton-loader",
                    {
                        "v-skeleton-loader--boilerplate": props.boilerplate
                    },
                    themeClasses.value,
                    backgroundColorClasses.value,
                    elevationClasses.value
                ],
                "style": [
                    backgroundColorStyles.value,
                    isLoading ? dimensionStyles.value : {}
                ]
            }, loadingProps), [
                isLoading ? items.value : slots.default?.()
            ]);
        });
        return {};
    }
});

},{"vue":"gCTam","./VSkeletonLoader.css":"cG0US","../../composables/color.mjs":"6TeQR","../../composables/dimensions.mjs":"daVmy","../../composables/elevation.mjs":"aNIiI","../../composables/locale.mjs":"9rJP0","../../composables/theme.mjs":"c9HGg","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"cG0US":[function() {},{}],"3p9Be":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VSlideGroup", ()=>(0, _vslideGroupMjs.VSlideGroup));
parcelHelpers.export(exports, "VSlideGroupItem", ()=>(0, _vslideGroupItemMjs.VSlideGroupItem));
var _vslideGroupMjs = require("./VSlideGroup.mjs");
var _vslideGroupItemMjs = require("./VSlideGroupItem.mjs");

},{"./VSlideGroup.mjs":"8ssxz","./VSlideGroupItem.mjs":"fpgFs","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"fpgFs":[function(require,module,exports) {
// Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VSlideGroupItem", ()=>VSlideGroupItem);
var _groupMjs = require("../../composables/group.mjs"); // Utilities
var _vslideGroupMjs = require("./VSlideGroup.mjs");
var _indexMjs = require("../../util/index.mjs"); // Types
const VSlideGroupItem = (0, _indexMjs.genericComponent)()({
    name: "VSlideGroupItem",
    props: (0, _groupMjs.makeGroupItemProps)(),
    emits: {
        "group:selected": (val)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const slideGroupItem = (0, _groupMjs.useGroupItem)(props, (0, _vslideGroupMjs.VSlideGroupSymbol));
        return ()=>slots.default?.({
                isSelected: slideGroupItem.isSelected.value,
                select: slideGroupItem.select,
                toggle: slideGroupItem.toggle,
                selectedClass: slideGroupItem.selectedClass.value
            });
    }
});

},{"../../composables/group.mjs":"hPbgr","./VSlideGroup.mjs":"8ssxz","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"aNTA7":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VSnackbar", ()=>(0, _vsnackbarMjs.VSnackbar));
var _vsnackbarMjs = require("./VSnackbar.mjs");

},{"./VSnackbar.mjs":"5EAPN","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"5EAPN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVSnackbarProps", ()=>makeVSnackbarProps);
parcelHelpers.export(exports, "VSnackbar", ()=>VSnackbar);
var _vue = require("vue");
// Styles
var _vsnackbarCss = require("./VSnackbar.css");
// Components
var _indexMjs = require("../VDefaultsProvider/index.mjs");
var _indexMjs1 = require("../VOverlay/index.mjs");
var _voverlayMjs = require("../VOverlay/VOverlay.mjs");
var _indexMjs2 = require("../VProgressLinear/index.mjs"); // Composables
var _indexMjs3 = require("../../composables/index.mjs");
var _forwardRefsMjs = require("../../composables/forwardRefs.mjs");
var _layoutMjs = require("../../composables/layout.mjs");
var _locationMjs = require("../../composables/location.mjs");
var _positionMjs = require("../../composables/position.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs");
var _roundedMjs = require("../../composables/rounded.mjs");
var _scopeIdMjs = require("../../composables/scopeId.mjs");
var _themeMjs = require("../../composables/theme.mjs");
var _toggleScopeMjs = require("../../composables/toggleScope.mjs");
var _variantMjs = require("../../composables/variant.mjs"); // Utilities
var _indexMjs4 = require("../../util/index.mjs"); // Types
function useCountdown(milliseconds) {
    const time = (0, _vue.shallowRef)(milliseconds());
    let timer = -1;
    function clear() {
        clearInterval(timer);
    }
    function reset() {
        clear();
        (0, _vue.nextTick)(()=>time.value = milliseconds());
    }
    function start(el) {
        const style = el ? getComputedStyle(el) : {
            transitionDuration: 0.2
        };
        const interval = parseFloat(style.transitionDuration) * 1000 || 200;
        clear();
        if (time.value <= 0) return;
        const startTime = performance.now();
        timer = window.setInterval(()=>{
            const elapsed = performance.now() - startTime + interval;
            time.value = Math.max(milliseconds() - elapsed, 0);
            if (time.value <= 0) clear();
        }, interval);
    }
    (0, _vue.onScopeDispose)(clear);
    return {
        clear,
        time,
        start,
        reset
    };
}
const makeVSnackbarProps = (0, _indexMjs4.propsFactory)({
    multiLine: Boolean,
    text: String,
    timer: [
        Boolean,
        String
    ],
    timeout: {
        type: [
            Number,
            String
        ],
        default: 5000
    },
    vertical: Boolean,
    ...(0, _locationMjs.makeLocationProps)({
        location: "bottom"
    }),
    ...(0, _positionMjs.makePositionProps)(),
    ...(0, _roundedMjs.makeRoundedProps)(),
    ...(0, _variantMjs.makeVariantProps)(),
    ...(0, _themeMjs.makeThemeProps)(),
    ...(0, _indexMjs4.omit)((0, _voverlayMjs.makeVOverlayProps)({
        transition: "v-snackbar-transition"
    }), [
        "persistent",
        "noClickAnimation",
        "scrim",
        "scrollStrategy"
    ])
}, "VSnackbar");
const VSnackbar = (0, _indexMjs4.genericComponent)()({
    name: "VSnackbar",
    props: makeVSnackbarProps(),
    emits: {
        "update:modelValue": (v)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const isActive = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
        const { positionClasses } = (0, _positionMjs.usePosition)(props);
        const { scopeId } = (0, _scopeIdMjs.useScopeId)();
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const { colorClasses, colorStyles, variantClasses } = (0, _variantMjs.useVariant)(props);
        const { roundedClasses } = (0, _roundedMjs.useRounded)(props);
        const countdown = useCountdown(()=>Number(props.timeout));
        const overlay = (0, _vue.ref)();
        const timerRef = (0, _vue.ref)();
        const isHovering = (0, _vue.shallowRef)(false);
        const startY = (0, _vue.shallowRef)(0);
        const mainStyles = (0, _vue.ref)();
        const hasLayout = (0, _vue.inject)((0, _layoutMjs.VuetifyLayoutKey), undefined);
        (0, _toggleScopeMjs.useToggleScope)(()=>!!hasLayout, ()=>{
            const layout = (0, _indexMjs3.useLayout)();
            (0, _vue.watchEffect)(()=>{
                mainStyles.value = layout.mainStyles.value;
            });
        });
        (0, _vue.watch)(isActive, startTimeout);
        (0, _vue.watch)(()=>props.timeout, startTimeout);
        (0, _vue.onMounted)(()=>{
            if (isActive.value) startTimeout();
        });
        let activeTimeout = -1;
        function startTimeout() {
            countdown.reset();
            window.clearTimeout(activeTimeout);
            const timeout = Number(props.timeout);
            if (!isActive.value || timeout === -1) return;
            const element = (0, _indexMjs4.refElement)(timerRef.value);
            countdown.start(element);
            activeTimeout = window.setTimeout(()=>{
                isActive.value = false;
            }, timeout);
        }
        function clearTimeout() {
            countdown.reset();
            window.clearTimeout(activeTimeout);
        }
        function onPointerenter() {
            isHovering.value = true;
            clearTimeout();
        }
        function onPointerleave() {
            isHovering.value = false;
            startTimeout();
        }
        function onTouchstart(event) {
            startY.value = event.touches[0].clientY;
        }
        function onTouchend(event) {
            if (Math.abs(startY.value - event.changedTouches[0].clientY) > 50) isActive.value = false;
        }
        function onAfterLeave() {
            if (isHovering.value) onPointerleave();
        }
        const locationClasses = (0, _vue.computed)(()=>{
            return props.location.split(" ").reduce((acc, loc)=>{
                acc[`v-snackbar--${loc}`] = true;
                return acc;
            }, {});
        });
        (0, _indexMjs4.useRender)(()=>{
            const overlayProps = (0, _indexMjs1.VOverlay).filterProps(props);
            const hasContent = !!(slots.default || slots.text || props.text);
            return (0, _vue.createVNode)((0, _indexMjs1.VOverlay), (0, _vue.mergeProps)({
                "ref": overlay,
                "class": [
                    "v-snackbar",
                    {
                        "v-snackbar--active": isActive.value,
                        "v-snackbar--multi-line": props.multiLine && !props.vertical,
                        "v-snackbar--timer": !!props.timer,
                        "v-snackbar--vertical": props.vertical
                    },
                    locationClasses.value,
                    positionClasses.value,
                    props.class
                ],
                "style": [
                    mainStyles.value,
                    props.style
                ]
            }, overlayProps, {
                "modelValue": isActive.value,
                "onUpdate:modelValue": ($event)=>isActive.value = $event,
                "contentProps": (0, _vue.mergeProps)({
                    class: [
                        "v-snackbar__wrapper",
                        themeClasses.value,
                        colorClasses.value,
                        roundedClasses.value,
                        variantClasses.value
                    ],
                    style: [
                        colorStyles.value
                    ],
                    onPointerenter,
                    onPointerleave
                }, overlayProps.contentProps),
                "persistent": true,
                "noClickAnimation": true,
                "scrim": false,
                "scrollStrategy": "none",
                "_disableGlobalStack": true,
                "onTouchstartPassive": onTouchstart,
                "onTouchend": onTouchend,
                "onAfterLeave": onAfterLeave
            }, scopeId), {
                default: ()=>[
                        (0, _variantMjs.genOverlays)(false, "v-snackbar"),
                        props.timer && !isHovering.value && (0, _vue.createVNode)("div", {
                            "key": "timer",
                            "class": "v-snackbar__timer"
                        }, [
                            (0, _vue.createVNode)((0, _indexMjs2.VProgressLinear), {
                                "ref": timerRef,
                                "color": typeof props.timer === "string" ? props.timer : "info",
                                "max": props.timeout,
                                "model-value": countdown.time.value
                            }, null)
                        ]),
                        hasContent && (0, _vue.createVNode)("div", {
                            "key": "content",
                            "class": "v-snackbar__content",
                            "role": "status",
                            "aria-live": "polite"
                        }, [
                            slots.text?.() ?? props.text,
                            slots.default?.()
                        ]),
                        slots.actions && (0, _vue.createVNode)((0, _indexMjs.VDefaultsProvider), {
                            "defaults": {
                                VBtn: {
                                    variant: "text",
                                    ripple: false,
                                    slim: true
                                }
                            }
                        }, {
                            default: ()=>[
                                    (0, _vue.createVNode)("div", {
                                        "class": "v-snackbar__actions"
                                    }, [
                                        slots.actions({
                                            isActive
                                        })
                                    ])
                                ]
                        })
                    ],
                activator: slots.activator
            });
        });
        return (0, _forwardRefsMjs.forwardRefs)({}, overlay);
    }
});

},{"vue":"gCTam","./VSnackbar.css":"s1o0m","../VDefaultsProvider/index.mjs":"eFFvH","../VOverlay/index.mjs":"seRqS","../VOverlay/VOverlay.mjs":"2XVbS","../VProgressLinear/index.mjs":"5Ak1A","../../composables/index.mjs":"fthaS","../../composables/forwardRefs.mjs":"2TNTP","../../composables/layout.mjs":"lfigA","../../composables/location.mjs":"cIK4d","../../composables/position.mjs":"8GbJq","../../composables/proxiedModel.mjs":"huwLk","../../composables/rounded.mjs":"1RfhA","../../composables/scopeId.mjs":"1zMgM","../../composables/theme.mjs":"c9HGg","../../composables/toggleScope.mjs":"dsKlJ","../../composables/variant.mjs":"ivQo4","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"s1o0m":[function() {},{}],"hiAwM":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VSparkline", ()=>(0, _vsparklineMjs.VSparkline));
var _vsparklineMjs = require("./VSparkline.mjs");

},{"./VSparkline.mjs":"3iOPF","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"3iOPF":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVSparklineProps", ()=>makeVSparklineProps);
parcelHelpers.export(exports, "VSparkline", ()=>VSparkline);
var _vue = require("vue");
// Components
var _vbarlineMjs = require("./VBarline.mjs");
var _vtrendlineMjs = require("./VTrendline.mjs"); // Composables
var _colorMjs = require("../../composables/color.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const makeVSparklineProps = (0, _indexMjs.propsFactory)({
    type: {
        type: String,
        default: "trend"
    },
    ...(0, _vbarlineMjs.makeVBarlineProps)(),
    ...(0, _vtrendlineMjs.makeVTrendlineProps)()
}, "VSparkline");
const VSparkline = (0, _indexMjs.genericComponent)()({
    name: "VSparkline",
    props: makeVSparklineProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const { textColorClasses, textColorStyles } = (0, _colorMjs.useTextColor)((0, _vue.toRef)(props, "color"));
        const hasLabels = (0, _vue.computed)(()=>{
            return Boolean(props.showLabels || props.labels.length > 0 || !!slots?.label);
        });
        const totalHeight = (0, _vue.computed)(()=>{
            let height = parseInt(props.height, 10);
            if (hasLabels.value) height += parseInt(props.labelSize, 10) * 1.5;
            return height;
        });
        (0, _indexMjs.useRender)(()=>{
            const Tag = props.type === "trend" ? (0, _vtrendlineMjs.VTrendline) : (0, _vbarlineMjs.VBarline);
            const lineProps = props.type === "trend" ? (0, _vtrendlineMjs.VTrendline).filterProps(props) : (0, _vbarlineMjs.VBarline).filterProps(props);
            return (0, _vue.createVNode)(Tag, (0, _vue.mergeProps)({
                "key": props.type,
                "class": textColorClasses.value,
                "style": textColorStyles.value,
                "viewBox": `0 0 ${props.width} ${parseInt(totalHeight.value, 10)}`
            }, lineProps), slots);
        });
    }
});

},{"vue":"gCTam","./VBarline.mjs":"k3sy5","./VTrendline.mjs":"jyVHS","../../composables/color.mjs":"6TeQR","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"k3sy5":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVBarlineProps", ()=>makeVBarlineProps);
parcelHelpers.export(exports, "VBarline", ()=>VBarline);
var _vue = require("vue");
var _lineMjs = require("./util/line.mjs");
var _indexMjs = require("../../util/index.mjs"); // Types
const makeVBarlineProps = (0, _indexMjs.propsFactory)({
    autoLineWidth: Boolean,
    ...(0, _lineMjs.makeLineProps)()
}, "VBarline");
const VBarline = (0, _indexMjs.genericComponent)()({
    name: "VBarline",
    props: makeVBarlineProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const uid = (0, _indexMjs.getUid)();
        const id = (0, _vue.computed)(()=>props.id || `barline-${uid}`);
        const autoDrawDuration = (0, _vue.computed)(()=>Number(props.autoDrawDuration) || 500);
        const hasLabels = (0, _vue.computed)(()=>{
            return Boolean(props.showLabels || props.labels.length > 0 || !!slots?.label);
        });
        const lineWidth = (0, _vue.computed)(()=>parseFloat(props.lineWidth) || 4);
        const totalWidth = (0, _vue.computed)(()=>Math.max(props.modelValue.length * lineWidth.value, Number(props.width)));
        const boundary = (0, _vue.computed)(()=>{
            return {
                minX: 0,
                maxX: totalWidth.value,
                minY: 0,
                maxY: parseInt(props.height, 10)
            };
        });
        const items = (0, _vue.computed)(()=>props.modelValue.map((item)=>(0, _indexMjs.getPropertyFromItem)(item, props.itemValue, item)));
        function genBars(values, boundary) {
            const { minX, maxX, minY, maxY } = boundary;
            const totalValues = values.length;
            let maxValue = props.max != null ? Number(props.max) : Math.max(...values);
            let minValue = props.min != null ? Number(props.min) : Math.min(...values);
            if (minValue > 0 && props.min == null) minValue = 0;
            if (maxValue < 0 && props.max == null) maxValue = 0;
            const gridX = maxX / totalValues;
            const gridY = (maxY - minY) / (maxValue - minValue || 1);
            const horizonY = maxY - Math.abs(minValue * gridY);
            return values.map((value, index)=>{
                const height = Math.abs(gridY * value);
                return {
                    x: minX + index * gridX,
                    y: horizonY - height + +(value < 0) * height,
                    height,
                    value
                };
            });
        }
        const parsedLabels = (0, _vue.computed)(()=>{
            const labels = [];
            const points = genBars(items.value, boundary.value);
            const len = points.length;
            for(let i = 0; labels.length < len; i++){
                const item = points[i];
                let value = props.labels[i];
                if (!value) value = typeof item === "object" ? item.value : item;
                labels.push({
                    x: item.x,
                    value: String(value)
                });
            }
            return labels;
        });
        const bars = (0, _vue.computed)(()=>genBars(items.value, boundary.value));
        const offsetX = (0, _vue.computed)(()=>(Math.abs(bars.value[0].x - bars.value[1].x) - lineWidth.value) / 2);
        (0, _indexMjs.useRender)(()=>{
            const gradientData = !props.gradient.slice().length ? [
                ""
            ] : props.gradient.slice().reverse();
            return (0, _vue.createVNode)("svg", {
                "display": "block"
            }, [
                (0, _vue.createVNode)("defs", null, [
                    (0, _vue.createVNode)("linearGradient", {
                        "id": id.value,
                        "gradientUnits": "userSpaceOnUse",
                        "x1": props.gradientDirection === "left" ? "100%" : "0",
                        "y1": props.gradientDirection === "top" ? "100%" : "0",
                        "x2": props.gradientDirection === "right" ? "100%" : "0",
                        "y2": props.gradientDirection === "bottom" ? "100%" : "0"
                    }, [
                        gradientData.map((color, index)=>(0, _vue.createVNode)("stop", {
                                "offset": index / Math.max(gradientData.length - 1, 1),
                                "stop-color": color || "currentColor"
                            }, null))
                    ])
                ]),
                (0, _vue.createVNode)("clipPath", {
                    "id": `${id.value}-clip`
                }, [
                    bars.value.map((item)=>(0, _vue.createVNode)("rect", {
                            "x": item.x + offsetX.value,
                            "y": item.y,
                            "width": lineWidth.value,
                            "height": item.height,
                            "rx": typeof props.smooth === "number" ? props.smooth : props.smooth ? 2 : 0,
                            "ry": typeof props.smooth === "number" ? props.smooth : props.smooth ? 2 : 0
                        }, [
                            props.autoDraw && (0, _vue.createVNode)((0, _vue.Fragment), null, [
                                (0, _vue.createVNode)("animate", {
                                    "attributeName": "y",
                                    "from": item.y + item.height,
                                    "to": item.y,
                                    "dur": `${autoDrawDuration.value}ms`,
                                    "fill": "freeze"
                                }, null),
                                (0, _vue.createVNode)("animate", {
                                    "attributeName": "height",
                                    "from": "0",
                                    "to": item.height,
                                    "dur": `${autoDrawDuration.value}ms`,
                                    "fill": "freeze"
                                }, null)
                            ])
                        ]))
                ]),
                hasLabels.value && (0, _vue.createVNode)("g", {
                    "key": "labels",
                    "style": {
                        textAnchor: "middle",
                        dominantBaseline: "mathematical",
                        fill: "currentColor"
                    }
                }, [
                    parsedLabels.value.map((item, i)=>(0, _vue.createVNode)("text", {
                            "x": item.x + offsetX.value + lineWidth.value / 2,
                            "y": parseInt(props.height, 10) - 2 + (parseInt(props.labelSize, 10) || 5.25),
                            "font-size": Number(props.labelSize) || 7
                        }, [
                            slots.label?.({
                                index: i,
                                value: item.value
                            }) ?? item.value
                        ]))
                ]),
                (0, _vue.createVNode)("g", {
                    "clip-path": `url(#${id.value}-clip)`,
                    "fill": `url(#${id.value})`
                }, [
                    (0, _vue.createVNode)("rect", {
                        "x": 0,
                        "y": 0,
                        "width": Math.max(props.modelValue.length * lineWidth.value, Number(props.width)),
                        "height": props.height
                    }, null)
                ])
            ]);
        });
    }
});

},{"vue":"gCTam","./util/line.mjs":"8J7RR","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"8J7RR":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeLineProps", ()=>makeLineProps);
var _indexMjs = require("../../../util/index.mjs"); // Types
const makeLineProps = (0, _indexMjs.propsFactory)({
    autoDraw: Boolean,
    autoDrawDuration: [
        Number,
        String
    ],
    autoDrawEasing: {
        type: String,
        default: "ease"
    },
    color: String,
    gradient: {
        type: Array,
        default: ()=>[]
    },
    gradientDirection: {
        type: String,
        validator: (val)=>[
                "top",
                "bottom",
                "left",
                "right"
            ].includes(val),
        default: "top"
    },
    height: {
        type: [
            String,
            Number
        ],
        default: 75
    },
    labels: {
        type: Array,
        default: ()=>[]
    },
    labelSize: {
        type: [
            Number,
            String
        ],
        default: 7
    },
    lineWidth: {
        type: [
            String,
            Number
        ],
        default: 4
    },
    id: String,
    itemValue: {
        type: String,
        default: "value"
    },
    modelValue: {
        type: Array,
        default: ()=>[]
    },
    min: [
        String,
        Number
    ],
    max: [
        String,
        Number
    ],
    padding: {
        type: [
            String,
            Number
        ],
        default: 8
    },
    showLabels: Boolean,
    smooth: Boolean,
    width: {
        type: [
            Number,
            String
        ],
        default: 300
    }
}, "Line");

},{"../../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"jyVHS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVTrendlineProps", ()=>makeVTrendlineProps);
parcelHelpers.export(exports, "VTrendline", ()=>VTrendline);
var _vue = require("vue");
var _lineMjs = require("./util/line.mjs");
var _pathMjs = require("./util/path.mjs");
var _indexMjs = require("../../util/index.mjs"); // Types
const makeVTrendlineProps = (0, _indexMjs.propsFactory)({
    fill: Boolean,
    ...(0, _lineMjs.makeLineProps)()
}, "VTrendline");
const VTrendline = (0, _indexMjs.genericComponent)()({
    name: "VTrendline",
    props: makeVTrendlineProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const uid = (0, _indexMjs.getUid)();
        const id = (0, _vue.computed)(()=>props.id || `trendline-${uid}`);
        const autoDrawDuration = (0, _vue.computed)(()=>Number(props.autoDrawDuration) || (props.fill ? 500 : 2000));
        const lastLength = (0, _vue.ref)(0);
        const path = (0, _vue.ref)(null);
        function genPoints(values, boundary) {
            const { minX, maxX, minY, maxY } = boundary;
            const totalValues = values.length;
            const maxValue = props.max != null ? Number(props.max) : Math.max(...values);
            const minValue = props.min != null ? Number(props.min) : Math.min(...values);
            const gridX = (maxX - minX) / (totalValues - 1);
            const gridY = (maxY - minY) / (maxValue - minValue || 1);
            return values.map((value, index)=>{
                return {
                    x: minX + index * gridX,
                    y: maxY - (value - minValue) * gridY,
                    value
                };
            });
        }
        const hasLabels = (0, _vue.computed)(()=>{
            return Boolean(props.showLabels || props.labels.length > 0 || !!slots?.label);
        });
        const lineWidth = (0, _vue.computed)(()=>{
            return parseFloat(props.lineWidth) || 4;
        });
        const totalWidth = (0, _vue.computed)(()=>Number(props.width));
        const boundary = (0, _vue.computed)(()=>{
            const padding = Number(props.padding);
            return {
                minX: padding,
                maxX: totalWidth.value - padding,
                minY: padding,
                maxY: parseInt(props.height, 10) - padding
            };
        });
        const items = (0, _vue.computed)(()=>props.modelValue.map((item)=>(0, _indexMjs.getPropertyFromItem)(item, props.itemValue, item)));
        const parsedLabels = (0, _vue.computed)(()=>{
            const labels = [];
            const points = genPoints(items.value, boundary.value);
            const len = points.length;
            for(let i = 0; labels.length < len; i++){
                const item = points[i];
                let value = props.labels[i];
                if (!value) value = typeof item === "object" ? item.value : item;
                labels.push({
                    x: item.x,
                    value: String(value)
                });
            }
            return labels;
        });
        (0, _vue.watch)(()=>props.modelValue, async ()=>{
            await (0, _vue.nextTick)();
            if (!props.autoDraw || !path.value) return;
            const pathRef = path.value;
            const length = pathRef.getTotalLength();
            if (!props.fill) {
                // Initial setup to "hide" the line by using the stroke dash array
                pathRef.style.strokeDasharray = `${length}`;
                pathRef.style.strokeDashoffset = `${length}`;
                // Force reflow to ensure the transition starts from this state
                pathRef.getBoundingClientRect();
                // Animate the stroke dash offset to "draw" the line
                pathRef.style.transition = `stroke-dashoffset ${autoDrawDuration.value}ms ${props.autoDrawEasing}`;
                pathRef.style.strokeDashoffset = "0";
            } else {
                // Your existing logic for filled paths remains the same
                pathRef.style.transformOrigin = "bottom center";
                pathRef.style.transition = "none";
                pathRef.style.transform = `scaleY(0)`;
                pathRef.getBoundingClientRect();
                pathRef.style.transition = `transform ${autoDrawDuration.value}ms ${props.autoDrawEasing}`;
                pathRef.style.transform = `scaleY(1)`;
            }
            lastLength.value = length;
        }, {
            immediate: true
        });
        function genPath(fill) {
            return (0, _pathMjs.genPath)(genPoints(items.value, boundary.value), props.smooth ? 8 : Number(props.smooth), fill, parseInt(props.height, 10));
        }
        (0, _indexMjs.useRender)(()=>{
            const gradientData = !props.gradient.slice().length ? [
                ""
            ] : props.gradient.slice().reverse();
            return (0, _vue.createVNode)("svg", {
                "display": "block",
                "stroke-width": parseFloat(props.lineWidth) ?? 4
            }, [
                (0, _vue.createVNode)("defs", null, [
                    (0, _vue.createVNode)("linearGradient", {
                        "id": id.value,
                        "gradientUnits": "userSpaceOnUse",
                        "x1": props.gradientDirection === "left" ? "100%" : "0",
                        "y1": props.gradientDirection === "top" ? "100%" : "0",
                        "x2": props.gradientDirection === "right" ? "100%" : "0",
                        "y2": props.gradientDirection === "bottom" ? "100%" : "0"
                    }, [
                        gradientData.map((color, index)=>(0, _vue.createVNode)("stop", {
                                "offset": index / Math.max(gradientData.length - 1, 1),
                                "stop-color": color || "currentColor"
                            }, null))
                    ])
                ]),
                hasLabels.value && (0, _vue.createVNode)("g", {
                    "key": "labels",
                    "style": {
                        textAnchor: "middle",
                        dominantBaseline: "mathematical",
                        fill: "currentColor"
                    }
                }, [
                    parsedLabels.value.map((item, i)=>(0, _vue.createVNode)("text", {
                            "x": item.x + lineWidth.value / 2 + lineWidth.value / 2,
                            "y": parseInt(props.height, 10) - 4 + (parseInt(props.labelSize, 10) || 5.25),
                            "font-size": Number(props.labelSize) || 7
                        }, [
                            slots.label?.({
                                index: i,
                                value: item.value
                            }) ?? item.value
                        ]))
                ]),
                (0, _vue.createVNode)("path", {
                    "ref": path,
                    "d": genPath(props.fill),
                    "fill": props.fill ? `url(#${id.value})` : "none",
                    "stroke": props.fill ? "none" : `url(#${id.value})`
                }, null),
                props.fill && (0, _vue.createVNode)("path", {
                    "d": genPath(false),
                    "fill": "none",
                    "stroke": props.color ?? props.gradient?.[0]
                }, null)
            ]);
        });
    }
});

},{"vue":"gCTam","./util/line.mjs":"8J7RR","./util/path.mjs":"768nQ","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"768nQ":[function(require,module,exports) {
// @ts-nocheck
/* eslint-disable */ // import { checkCollinear, getDistance, moveTo } from './math'
/**
 * From https://github.com/unsplash/react-trend/blob/master/src/helpers/DOM.helpers.js#L18
 */ var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "genPath", ()=>genPath);
/**
 * https://en.wikipedia.org/wiki/Collinearity
 * x=(x1+x2)/2
 * y=(y1+y2)/2
 */ parcelHelpers.export(exports, "checkCollinear", ()=>checkCollinear);
parcelHelpers.export(exports, "getDistance", ()=>getDistance);
parcelHelpers.export(exports, "moveTo", ()=>moveTo);
function genPath(points, radius) {
    let fill = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    let height = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 75;
    if (points.length === 0) return "";
    const start = points.shift();
    const end = points[points.length - 1];
    return (fill ? `M${start.x} ${height - start.x + 2} L${start.x} ${start.y}` : `M${start.x} ${start.y}`) + points.map((point, index)=>{
        const next = points[index + 1];
        const prev = points[index - 1] || start;
        const isCollinear = next && checkCollinear(next, point, prev);
        if (!next || isCollinear) return `L${point.x} ${point.y}`;
        const threshold = Math.min(getDistance(prev, point), getDistance(next, point));
        const isTooCloseForRadius = threshold / 2 < radius;
        const radiusForPoint = isTooCloseForRadius ? threshold / 2 : radius;
        const before = moveTo(prev, point, radiusForPoint);
        const after = moveTo(next, point, radiusForPoint);
        return `L${before.x} ${before.y}S${point.x} ${point.y} ${after.x} ${after.y}`;
    }).join("") + (fill ? `L${end.x} ${height - start.x + 2} Z` : "");
}
function int(value) {
    return parseInt(value, 10);
}
function checkCollinear(p0, p1, p2) {
    return int(p0.x + p2.x) === int(2 * p1.x) && int(p0.y + p2.y) === int(2 * p1.y);
}
function getDistance(p1, p2) {
    return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));
}
function moveTo(to, from, radius) {
    const vector = {
        x: to.x - from.x,
        y: to.y - from.y
    };
    const length = Math.sqrt(vector.x * vector.x + vector.y * vector.y);
    const unitVector = {
        x: vector.x / length,
        y: vector.y / length
    };
    return {
        x: from.x + unitVector.x * radius,
        y: from.y + unitVector.y * radius
    };
}

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"8lB5b":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VSpeedDial", ()=>(0, _vspeedDialMjs.VSpeedDial));
var _vspeedDialMjs = require("./VSpeedDial.mjs");

},{"./VSpeedDial.mjs":"izQ6h","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"izQ6h":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVSpeedDialProps", ()=>makeVSpeedDialProps);
parcelHelpers.export(exports, "VSpeedDial", ()=>VSpeedDial);
var _vue = require("vue");
// Styles
var _vspeedDialCss = require("./VSpeedDial.css");
// Components
var _indexMjs = require("../VDefaultsProvider/index.mjs");
var _vmenuMjs = require("../VMenu/VMenu.mjs"); // Composables
var _componentMjs = require("../../composables/component.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs");
var _transitionMjs = require("../../composables/transition.mjs"); // Utilities
var _indexMjs1 = require("../../util/index.mjs"); // Types
const makeVSpeedDialProps = (0, _indexMjs1.propsFactory)({
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _vmenuMjs.makeVMenuProps)({
        offset: 8,
        minWidth: 0,
        openDelay: 0,
        closeDelay: 100,
        location: "top center",
        transition: "scale-transition"
    })
}, "VSpeedDial");
const VSpeedDial = (0, _indexMjs1.genericComponent)()({
    name: "VSpeedDial",
    props: makeVSpeedDialProps(),
    emits: {
        "update:modelValue": (value)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const model = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
        const menuRef = (0, _vue.ref)();
        const location = (0, _vue.computed)(()=>{
            const [y, x = "center"] = props.location?.split(" ") ?? [];
            return `${y} ${x}`;
        });
        const locationClasses = (0, _vue.computed)(()=>({
                [`v-speed-dial__content--${location.value.replace(" ", "-")}`]: true
            }));
        (0, _indexMjs1.useRender)(()=>{
            const menuProps = (0, _vmenuMjs.VMenu).filterProps(props);
            return (0, _vue.createVNode)((0, _vmenuMjs.VMenu), (0, _vue.mergeProps)(menuProps, {
                "modelValue": model.value,
                "onUpdate:modelValue": ($event)=>model.value = $event,
                "class": props.class,
                "style": props.style,
                "contentClass": [
                    "v-speed-dial__content",
                    locationClasses.value,
                    props.contentClass
                ],
                "location": location.value,
                "ref": menuRef,
                "transition": "fade-transition"
            }), {
                ...slots,
                default: (slotProps)=>(0, _vue.createVNode)((0, _indexMjs.VDefaultsProvider), {
                        "defaults": {
                            VBtn: {
                                size: "small"
                            }
                        }
                    }, {
                        default: ()=>[
                                (0, _vue.createVNode)((0, _transitionMjs.MaybeTransition), {
                                    "appear": true,
                                    "group": true,
                                    "transition": props.transition
                                }, {
                                    default: ()=>[
                                            slots.default?.(slotProps)
                                        ]
                                })
                            ]
                    })
            });
        });
        return {};
    }
});

},{"vue":"gCTam","./VSpeedDial.css":"4wBRm","../VDefaultsProvider/index.mjs":"eFFvH","../VMenu/VMenu.mjs":"Ekbea","../../composables/component.mjs":"4YAxs","../../composables/proxiedModel.mjs":"huwLk","../../composables/transition.mjs":"dJyg1","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"4wBRm":[function() {},{}],"btRmO":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VStepper", ()=>(0, _vstepperMjs.VStepper));
parcelHelpers.export(exports, "VStepperActions", ()=>(0, _vstepperActionsMjs.VStepperActions));
parcelHelpers.export(exports, "VStepperHeader", ()=>(0, _vstepperHeaderMjs.VStepperHeader));
parcelHelpers.export(exports, "VStepperItem", ()=>(0, _vstepperItemMjs.VStepperItem));
parcelHelpers.export(exports, "VStepperWindow", ()=>(0, _vstepperWindowMjs.VStepperWindow));
parcelHelpers.export(exports, "VStepperWindowItem", ()=>(0, _vstepperWindowItemMjs.VStepperWindowItem));
var _vstepperMjs = require("./VStepper.mjs");
var _vstepperActionsMjs = require("./VStepperActions.mjs");
var _vstepperHeaderMjs = require("./VStepperHeader.mjs");
var _vstepperItemMjs = require("./VStepperItem.mjs");
var _vstepperWindowMjs = require("./VStepperWindow.mjs");
var _vstepperWindowItemMjs = require("./VStepperWindowItem.mjs");

},{"./VStepper.mjs":"1Utpx","./VStepperActions.mjs":"kHR8Q","./VStepperHeader.mjs":"cYcVe","./VStepperItem.mjs":"9geEw","./VStepperWindow.mjs":"5XM0f","./VStepperWindowItem.mjs":"5YSCt","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"1Utpx":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeStepperProps", ()=>makeStepperProps);
parcelHelpers.export(exports, "makeVStepperProps", ()=>makeVStepperProps);
parcelHelpers.export(exports, "VStepper", ()=>VStepper);
var _vue = require("vue");
// Styles
var _vstepperCss = require("./VStepper.css");
// Components
var _sharedMjs = require("./shared.mjs");
var _vstepperActionsMjs = require("./VStepperActions.mjs");
var _vstepperHeaderMjs = require("./VStepperHeader.mjs");
var _vstepperItemMjs = require("./VStepperItem.mjs");
var _vstepperWindowMjs = require("./VStepperWindow.mjs");
var _vstepperWindowItemMjs = require("./VStepperWindowItem.mjs");
var _indexMjs = require("../VDivider/index.mjs");
var _vsheetMjs = require("../VSheet/VSheet.mjs"); // Composables
var _defaultsMjs = require("../../composables/defaults.mjs");
var _displayMjs = require("../../composables/display.mjs");
var _groupMjs = require("../../composables/group.mjs"); // Utilities
var _indexMjs1 = require("../../util/index.mjs"); // Types
const makeStepperProps = (0, _indexMjs1.propsFactory)({
    altLabels: Boolean,
    bgColor: String,
    completeIcon: String,
    editIcon: String,
    editable: Boolean,
    errorIcon: String,
    hideActions: Boolean,
    items: {
        type: Array,
        default: ()=>[]
    },
    itemTitle: {
        type: String,
        default: "title"
    },
    itemValue: {
        type: String,
        default: "value"
    },
    nonLinear: Boolean,
    flat: Boolean,
    ...(0, _displayMjs.makeDisplayProps)()
}, "Stepper");
const makeVStepperProps = (0, _indexMjs1.propsFactory)({
    ...makeStepperProps(),
    ...(0, _groupMjs.makeGroupProps)({
        mandatory: "force",
        selectedClass: "v-stepper-item--selected"
    }),
    ...(0, _vsheetMjs.makeVSheetProps)(),
    ...(0, _indexMjs1.only)((0, _vstepperActionsMjs.makeVStepperActionsProps)(), [
        "prevText",
        "nextText"
    ])
}, "VStepper");
const VStepper = (0, _indexMjs1.genericComponent)()({
    name: "VStepper",
    props: makeVStepperProps(),
    emits: {
        "update:modelValue": (v)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const { items: _items, next, prev, selected } = (0, _groupMjs.useGroup)(props, (0, _sharedMjs.VStepperSymbol));
        const { displayClasses, mobile } = (0, _displayMjs.useDisplay)(props);
        const { completeIcon, editIcon, errorIcon, color, editable, prevText, nextText } = (0, _vue.toRefs)(props);
        const items = (0, _vue.computed)(()=>props.items.map((item, index)=>{
                const title = (0, _indexMjs1.getPropertyFromItem)(item, props.itemTitle, item);
                const value = (0, _indexMjs1.getPropertyFromItem)(item, props.itemValue, index + 1);
                return {
                    title,
                    value,
                    raw: item
                };
            }));
        const activeIndex = (0, _vue.computed)(()=>{
            return _items.value.findIndex((item)=>selected.value.includes(item.id));
        });
        const disabled = (0, _vue.computed)(()=>{
            if (props.disabled) return props.disabled;
            if (activeIndex.value === 0) return "prev";
            if (activeIndex.value === _items.value.length - 1) return "next";
            return false;
        });
        (0, _defaultsMjs.provideDefaults)({
            VStepperItem: {
                editable,
                errorIcon,
                completeIcon,
                editIcon,
                prevText,
                nextText
            },
            VStepperActions: {
                color,
                disabled,
                prevText,
                nextText
            }
        });
        (0, _indexMjs1.useRender)(()=>{
            const sheetProps = (0, _vsheetMjs.VSheet).filterProps(props);
            const hasHeader = !!(slots.header || props.items.length);
            const hasWindow = props.items.length > 0;
            const hasActions = !props.hideActions && !!(hasWindow || slots.actions);
            return (0, _vue.createVNode)((0, _vsheetMjs.VSheet), (0, _vue.mergeProps)(sheetProps, {
                "color": props.bgColor,
                "class": [
                    "v-stepper",
                    {
                        "v-stepper--alt-labels": props.altLabels,
                        "v-stepper--flat": props.flat,
                        "v-stepper--non-linear": props.nonLinear,
                        "v-stepper--mobile": mobile.value
                    },
                    displayClasses.value,
                    props.class
                ],
                "style": props.style
            }), {
                default: ()=>[
                        hasHeader && (0, _vue.createVNode)((0, _vstepperHeaderMjs.VStepperHeader), {
                            "key": "stepper-header"
                        }, {
                            default: ()=>[
                                    items.value.map((_ref2, index)=>{
                                        let { raw, ...item } = _ref2;
                                        return (0, _vue.createVNode)((0, _vue.Fragment), null, [
                                            !!index && (0, _vue.createVNode)((0, _indexMjs.VDivider), null, null),
                                            (0, _vue.createVNode)((0, _vstepperItemMjs.VStepperItem), item, {
                                                default: slots[`header-item.${item.value}`] ?? slots.header,
                                                icon: slots.icon,
                                                title: slots.title,
                                                subtitle: slots.subtitle
                                            })
                                        ]);
                                    })
                                ]
                        }),
                        hasWindow && (0, _vue.createVNode)((0, _vstepperWindowMjs.VStepperWindow), {
                            "key": "stepper-window"
                        }, {
                            default: ()=>[
                                    items.value.map((item)=>(0, _vue.createVNode)((0, _vstepperWindowItemMjs.VStepperWindowItem), {
                                            "value": item.value
                                        }, {
                                            default: ()=>slots[`item.${item.value}`]?.(item) ?? slots.item?.(item)
                                        }))
                                ]
                        }),
                        slots.default?.({
                            prev,
                            next
                        }),
                        hasActions && (slots.actions?.({
                            next,
                            prev
                        }) ?? (0, _vue.createVNode)((0, _vstepperActionsMjs.VStepperActions), {
                            "key": "stepper-actions",
                            "onClick:prev": prev,
                            "onClick:next": next
                        }, slots))
                    ]
            });
        });
        return {
            prev,
            next
        };
    }
});

},{"vue":"gCTam","./VStepper.css":"kpCQX","./shared.mjs":"kCjK8","./VStepperActions.mjs":"kHR8Q","./VStepperHeader.mjs":"cYcVe","./VStepperItem.mjs":"9geEw","./VStepperWindow.mjs":"5XM0f","./VStepperWindowItem.mjs":"5YSCt","../VDivider/index.mjs":"bj3uM","../VSheet/VSheet.mjs":"3SEh6","../../composables/defaults.mjs":"29Im0","../../composables/display.mjs":"bcRjl","../../composables/group.mjs":"hPbgr","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"kpCQX":[function() {},{}],"kCjK8":[function(require,module,exports) {
// Types
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VStepperSymbol", ()=>VStepperSymbol);
const VStepperSymbol = Symbol.for("vuetify:v-stepper");

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"kHR8Q":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVStepperActionsProps", ()=>makeVStepperActionsProps);
parcelHelpers.export(exports, "VStepperActions", ()=>VStepperActions);
var _vue = require("vue");
// Components
var _vbtnMjs = require("../VBtn/VBtn.mjs");
var _vdefaultsProviderMjs = require("../VDefaultsProvider/VDefaultsProvider.mjs"); // Composables
var _localeMjs = require("../../composables/locale.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const makeVStepperActionsProps = (0, _indexMjs.propsFactory)({
    color: String,
    disabled: {
        type: [
            Boolean,
            String
        ],
        default: false
    },
    prevText: {
        type: String,
        default: "$vuetify.stepper.prev"
    },
    nextText: {
        type: String,
        default: "$vuetify.stepper.next"
    }
}, "VStepperActions");
const VStepperActions = (0, _indexMjs.genericComponent)()({
    name: "VStepperActions",
    props: makeVStepperActionsProps(),
    emits: {
        "click:prev": ()=>true,
        "click:next": ()=>true
    },
    setup (props, _ref) {
        let { emit, slots } = _ref;
        const { t } = (0, _localeMjs.useLocale)();
        function onClickPrev() {
            emit("click:prev");
        }
        function onClickNext() {
            emit("click:next");
        }
        (0, _indexMjs.useRender)(()=>{
            const prevSlotProps = {
                onClick: onClickPrev
            };
            const nextSlotProps = {
                onClick: onClickNext
            };
            return (0, _vue.createVNode)("div", {
                "class": "v-stepper-actions"
            }, [
                (0, _vue.createVNode)((0, _vdefaultsProviderMjs.VDefaultsProvider), {
                    "defaults": {
                        VBtn: {
                            disabled: [
                                "prev",
                                true
                            ].includes(props.disabled),
                            text: t(props.prevText),
                            variant: "text"
                        }
                    }
                }, {
                    default: ()=>[
                            slots.prev?.({
                                props: prevSlotProps
                            }) ?? (0, _vue.createVNode)((0, _vbtnMjs.VBtn), prevSlotProps, null)
                        ]
                }),
                (0, _vue.createVNode)((0, _vdefaultsProviderMjs.VDefaultsProvider), {
                    "defaults": {
                        VBtn: {
                            color: props.color,
                            disabled: [
                                "next",
                                true
                            ].includes(props.disabled),
                            text: t(props.nextText),
                            variant: "tonal"
                        }
                    }
                }, {
                    default: ()=>[
                            slots.next?.({
                                props: nextSlotProps
                            }) ?? (0, _vue.createVNode)((0, _vbtnMjs.VBtn), nextSlotProps, null)
                        ]
                })
            ]);
        });
        return {};
    }
});

},{"vue":"gCTam","../VBtn/VBtn.mjs":"2fut1","../VDefaultsProvider/VDefaultsProvider.mjs":"3hOjd","../../composables/locale.mjs":"9rJP0","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"cYcVe":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VStepperHeader", ()=>VStepperHeader);
var _indexMjs = require("../../util/index.mjs");
const VStepperHeader = (0, _indexMjs.createSimpleFunctional)("v-stepper-header");

},{"../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"9geEw":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeStepperItemProps", ()=>makeStepperItemProps);
parcelHelpers.export(exports, "makeVStepperItemProps", ()=>makeVStepperItemProps);
parcelHelpers.export(exports, "VStepperItem", ()=>VStepperItem);
var _vue = require("vue");
// Styles
var _vstepperItemCss = require("./VStepperItem.css");
// Components
var _vavatarMjs = require("../VAvatar/VAvatar.mjs");
var _viconMjs = require("../VIcon/VIcon.mjs"); // Composables
var _groupMjs = require("../../composables/group.mjs");
var _variantMjs = require("../../composables/variant.mjs"); // Directives
var _indexMjs = require("../../directives/ripple/index.mjs"); // Utilities
var _sharedMjs = require("./shared.mjs");
var _indexMjs1 = require("../../util/index.mjs"); // Types
const makeStepperItemProps = (0, _indexMjs1.propsFactory)({
    color: String,
    title: String,
    subtitle: String,
    complete: Boolean,
    completeIcon: {
        type: String,
        default: "$complete"
    },
    editable: Boolean,
    editIcon: {
        type: String,
        default: "$edit"
    },
    error: Boolean,
    errorIcon: {
        type: String,
        default: "$error"
    },
    icon: String,
    ripple: {
        type: [
            Boolean,
            Object
        ],
        default: true
    },
    rules: {
        type: Array,
        default: ()=>[]
    }
}, "StepperItem");
const makeVStepperItemProps = (0, _indexMjs1.propsFactory)({
    ...makeStepperItemProps(),
    ...(0, _groupMjs.makeGroupItemProps)()
}, "VStepperItem");
const VStepperItem = (0, _indexMjs1.genericComponent)()({
    name: "VStepperItem",
    directives: {
        Ripple: (0, _indexMjs.Ripple)
    },
    props: makeVStepperItemProps(),
    emits: {
        "group:selected": (val)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const group = (0, _groupMjs.useGroupItem)(props, (0, _sharedMjs.VStepperSymbol), true);
        const step = (0, _vue.computed)(()=>group?.value.value ?? props.value);
        const isValid = (0, _vue.computed)(()=>props.rules.every((handler)=>handler() === true));
        const isClickable = (0, _vue.computed)(()=>!props.disabled && props.editable);
        const canEdit = (0, _vue.computed)(()=>!props.disabled && props.editable);
        const hasError = (0, _vue.computed)(()=>props.error || !isValid.value);
        const hasCompleted = (0, _vue.computed)(()=>props.complete || props.rules.length > 0 && isValid.value);
        const icon = (0, _vue.computed)(()=>{
            if (hasError.value) return props.errorIcon;
            if (hasCompleted.value) return props.completeIcon;
            if (group.isSelected.value && props.editable) return props.editIcon;
            return props.icon;
        });
        const slotProps = (0, _vue.computed)(()=>({
                canEdit: canEdit.value,
                hasError: hasError.value,
                hasCompleted: hasCompleted.value,
                title: props.title,
                subtitle: props.subtitle,
                step: step.value,
                value: props.value
            }));
        (0, _indexMjs1.useRender)(()=>{
            const hasColor = (!group || group.isSelected.value || hasCompleted.value || canEdit.value) && !hasError.value && !props.disabled;
            const hasTitle = !!(props.title != null || slots.title);
            const hasSubtitle = !!(props.subtitle != null || slots.subtitle);
            function onClick() {
                group?.toggle();
            }
            return (0, _vue.withDirectives)((0, _vue.createVNode)("button", {
                "class": [
                    "v-stepper-item",
                    {
                        "v-stepper-item--complete": hasCompleted.value,
                        "v-stepper-item--disabled": props.disabled,
                        "v-stepper-item--error": hasError.value
                    },
                    group?.selectedClass.value
                ],
                "disabled": !props.editable,
                "onClick": onClick
            }, [
                isClickable.value && (0, _variantMjs.genOverlays)(true, "v-stepper-item"),
                (0, _vue.createVNode)((0, _vavatarMjs.VAvatar), {
                    "key": "stepper-avatar",
                    "class": "v-stepper-item__avatar",
                    "color": hasColor ? props.color : undefined,
                    "size": 24
                }, {
                    default: ()=>[
                            slots.icon?.(slotProps.value) ?? (icon.value ? (0, _vue.createVNode)((0, _viconMjs.VIcon), {
                                "icon": icon.value
                            }, null) : step.value)
                        ]
                }),
                (0, _vue.createVNode)("div", {
                    "class": "v-stepper-item__content"
                }, [
                    hasTitle && (0, _vue.createVNode)("div", {
                        "key": "title",
                        "class": "v-stepper-item__title"
                    }, [
                        slots.title?.(slotProps.value) ?? props.title
                    ]),
                    hasSubtitle && (0, _vue.createVNode)("div", {
                        "key": "subtitle",
                        "class": "v-stepper-item__subtitle"
                    }, [
                        slots.subtitle?.(slotProps.value) ?? props.subtitle
                    ]),
                    slots.default?.(slotProps.value)
                ])
            ]), [
                [
                    (0, _vue.resolveDirective)("ripple"),
                    props.ripple && props.editable,
                    null
                ]
            ]);
        });
        return {};
    }
});

},{"vue":"gCTam","./VStepperItem.css":"80ojo","../VAvatar/VAvatar.mjs":"slNd4","../VIcon/VIcon.mjs":"2DTOv","../../composables/group.mjs":"hPbgr","../../composables/variant.mjs":"ivQo4","../../directives/ripple/index.mjs":"41ncU","./shared.mjs":"kCjK8","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"80ojo":[function() {},{}],"5XM0f":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVStepperWindowProps", ()=>makeVStepperWindowProps);
parcelHelpers.export(exports, "VStepperWindow", ()=>VStepperWindow);
var _vue = require("vue");
// Components
var _sharedMjs = require("./shared.mjs");
var _vwindowMjs = require("../VWindow/VWindow.mjs"); // Composables
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const makeVStepperWindowProps = (0, _indexMjs.propsFactory)({
    ...(0, _indexMjs.omit)((0, _vwindowMjs.makeVWindowProps)(), [
        "continuous",
        "nextIcon",
        "prevIcon",
        "showArrows",
        "touch",
        "mandatory"
    ])
}, "VStepperWindow");
const VStepperWindow = (0, _indexMjs.genericComponent)()({
    name: "VStepperWindow",
    props: makeVStepperWindowProps(),
    emits: {
        "update:modelValue": (v)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const group = (0, _vue.inject)((0, _sharedMjs.VStepperSymbol), null);
        const _model = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
        const model = (0, _vue.computed)({
            get () {
                // Always return modelValue if defined
                // or if not within a VStepper group
                if (_model.value != null || !group) return _model.value;
                // If inside of a VStepper, find the currently selected
                // item by id. Item value may be assigned by its index
                return group.items.value.find((item)=>group.selected.value.includes(item.id))?.value;
            },
            set (val) {
                _model.value = val;
            }
        });
        (0, _indexMjs.useRender)(()=>{
            const windowProps = (0, _vwindowMjs.VWindow).filterProps(props);
            return (0, _vue.createVNode)((0, _vwindowMjs.VWindow), (0, _vue.mergeProps)({
                "_as": "VStepperWindow"
            }, windowProps, {
                "modelValue": model.value,
                "onUpdate:modelValue": ($event)=>model.value = $event,
                "class": [
                    "v-stepper-window",
                    props.class
                ],
                "style": props.style,
                "mandatory": false,
                "touch": false
            }), slots);
        });
        return {};
    }
});

},{"vue":"gCTam","./shared.mjs":"kCjK8","../VWindow/VWindow.mjs":"csAvt","../../composables/proxiedModel.mjs":"huwLk","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"5YSCt":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVStepperWindowItemProps", ()=>makeVStepperWindowItemProps);
parcelHelpers.export(exports, "VStepperWindowItem", ()=>VStepperWindowItem);
var _vue = require("vue");
// Components
var _vwindowItemMjs = require("../VWindow/VWindowItem.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const makeVStepperWindowItemProps = (0, _indexMjs.propsFactory)({
    ...(0, _vwindowItemMjs.makeVWindowItemProps)()
}, "VStepperWindowItem");
const VStepperWindowItem = (0, _indexMjs.genericComponent)()({
    name: "VStepperWindowItem",
    props: makeVStepperWindowItemProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        (0, _indexMjs.useRender)(()=>{
            const windowItemProps = (0, _vwindowItemMjs.VWindowItem).filterProps(props);
            return (0, _vue.createVNode)((0, _vwindowItemMjs.VWindowItem), (0, _vue.mergeProps)({
                "_as": "VStepperWindowItem"
            }, windowItemProps, {
                "class": [
                    "v-stepper-window-item",
                    props.class
                ],
                "style": props.style
            }), slots);
        });
        return {};
    }
});

},{"vue":"gCTam","../VWindow/VWindowItem.mjs":"jemUG","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"kxB6j":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VSwitch", ()=>(0, _vswitchMjs.VSwitch));
var _vswitchMjs = require("./VSwitch.mjs");

},{"./VSwitch.mjs":"4XtrN","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"4XtrN":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVSwitchProps", ()=>makeVSwitchProps);
parcelHelpers.export(exports, "VSwitch", ()=>VSwitch);
var _vue = require("vue");
// Styles
var _vswitchCss = require("./VSwitch.css");
// Components
var _indexMjs = require("../transitions/index.mjs");
var _vdefaultsProviderMjs = require("../VDefaultsProvider/VDefaultsProvider.mjs");
var _indexMjs1 = require("../VIcon/index.mjs");
var _vinputMjs = require("../VInput/VInput.mjs");
var _indexMjs2 = require("../VProgressCircular/index.mjs");
var _vselectionControlMjs = require("../VSelectionControl/VSelectionControl.mjs"); // Composables
var _focusMjs = require("../../composables/focus.mjs");
var _loaderMjs = require("../../composables/loader.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs"); // Utilities
var _indexMjs3 = require("../../util/index.mjs"); // Types
const makeVSwitchProps = (0, _indexMjs3.propsFactory)({
    indeterminate: Boolean,
    inset: Boolean,
    flat: Boolean,
    loading: {
        type: [
            Boolean,
            String
        ],
        default: false
    },
    ...(0, _vinputMjs.makeVInputProps)(),
    ...(0, _vselectionControlMjs.makeVSelectionControlProps)()
}, "VSwitch");
const VSwitch = (0, _indexMjs3.genericComponent)()({
    name: "VSwitch",
    inheritAttrs: false,
    props: makeVSwitchProps(),
    emits: {
        "update:focused": (focused)=>true,
        "update:modelValue": (value)=>true,
        "update:indeterminate": (value)=>true
    },
    setup (props, _ref) {
        let { attrs, slots } = _ref;
        const indeterminate = (0, _proxiedModelMjs.useProxiedModel)(props, "indeterminate");
        const model = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
        const { loaderClasses } = (0, _loaderMjs.useLoader)(props);
        const { isFocused, focus, blur } = (0, _focusMjs.useFocus)(props);
        const control = (0, _vue.ref)();
        const isForcedColorsModeActive = (0, _indexMjs3.IN_BROWSER) && window.matchMedia("(forced-colors: active)").matches;
        const loaderColor = (0, _vue.computed)(()=>{
            return typeof props.loading === "string" && props.loading !== "" ? props.loading : props.color;
        });
        const uid = (0, _indexMjs3.getUid)();
        const id = (0, _vue.computed)(()=>props.id || `switch-${uid}`);
        function onChange() {
            if (indeterminate.value) indeterminate.value = false;
        }
        function onTrackClick(e) {
            e.stopPropagation();
            e.preventDefault();
            control.value?.input?.click();
        }
        (0, _indexMjs3.useRender)(()=>{
            const [rootAttrs, controlAttrs] = (0, _indexMjs3.filterInputAttrs)(attrs);
            const inputProps = (0, _vinputMjs.VInput).filterProps(props);
            const controlProps = (0, _vselectionControlMjs.VSelectionControl).filterProps(props);
            return (0, _vue.createVNode)((0, _vinputMjs.VInput), (0, _vue.mergeProps)({
                "class": [
                    "v-switch",
                    {
                        "v-switch--flat": props.flat
                    },
                    {
                        "v-switch--inset": props.inset
                    },
                    {
                        "v-switch--indeterminate": indeterminate.value
                    },
                    loaderClasses.value,
                    props.class
                ]
            }, rootAttrs, inputProps, {
                "modelValue": model.value,
                "onUpdate:modelValue": ($event)=>model.value = $event,
                "id": id.value,
                "focused": isFocused.value,
                "style": props.style
            }), {
                ...slots,
                default: (_ref2)=>{
                    let { id, messagesId, isDisabled, isReadonly, isValid } = _ref2;
                    const slotProps = {
                        model,
                        isValid
                    };
                    return (0, _vue.createVNode)((0, _vselectionControlMjs.VSelectionControl), (0, _vue.mergeProps)({
                        "ref": control
                    }, controlProps, {
                        "modelValue": model.value,
                        "onUpdate:modelValue": [
                            ($event)=>model.value = $event,
                            onChange
                        ],
                        "id": id.value,
                        "aria-describedby": messagesId.value,
                        "type": "checkbox",
                        "aria-checked": indeterminate.value ? "mixed" : undefined,
                        "disabled": isDisabled.value,
                        "readonly": isReadonly.value,
                        "onFocus": focus,
                        "onBlur": blur
                    }, controlAttrs), {
                        ...slots,
                        default: (_ref3)=>{
                            let { backgroundColorClasses, backgroundColorStyles } = _ref3;
                            return (0, _vue.createVNode)("div", {
                                "class": [
                                    "v-switch__track",
                                    !isForcedColorsModeActive ? backgroundColorClasses.value : undefined
                                ],
                                "style": backgroundColorStyles.value,
                                "onClick": onTrackClick
                            }, [
                                slots["track-true"] && (0, _vue.createVNode)("div", {
                                    "key": "prepend",
                                    "class": "v-switch__track-true"
                                }, [
                                    slots["track-true"](slotProps)
                                ]),
                                slots["track-false"] && (0, _vue.createVNode)("div", {
                                    "key": "append",
                                    "class": "v-switch__track-false"
                                }, [
                                    slots["track-false"](slotProps)
                                ])
                            ]);
                        },
                        input: (_ref4)=>{
                            let { inputNode, icon, backgroundColorClasses, backgroundColorStyles } = _ref4;
                            return (0, _vue.createVNode)((0, _vue.Fragment), null, [
                                inputNode,
                                (0, _vue.createVNode)("div", {
                                    "class": [
                                        "v-switch__thumb",
                                        {
                                            "v-switch__thumb--filled": icon || props.loading
                                        },
                                        props.inset || isForcedColorsModeActive ? undefined : backgroundColorClasses.value
                                    ],
                                    "style": props.inset ? undefined : backgroundColorStyles.value
                                }, [
                                    slots.thumb ? (0, _vue.createVNode)((0, _vdefaultsProviderMjs.VDefaultsProvider), {
                                        "defaults": {
                                            VIcon: {
                                                icon,
                                                size: "x-small"
                                            }
                                        }
                                    }, {
                                        default: ()=>[
                                                slots.thumb({
                                                    ...slotProps,
                                                    icon
                                                })
                                            ]
                                    }) : (0, _vue.createVNode)((0, _indexMjs.VScaleTransition), null, {
                                        default: ()=>[
                                                !props.loading ? icon && (0, _vue.createVNode)((0, _indexMjs1.VIcon), {
                                                    "key": String(icon),
                                                    "icon": icon,
                                                    "size": "x-small"
                                                }, null) : (0, _vue.createVNode)((0, _loaderMjs.LoaderSlot), {
                                                    "name": "v-switch",
                                                    "active": true,
                                                    "color": isValid.value === false ? undefined : loaderColor.value
                                                }, {
                                                    default: (slotProps)=>slots.loader ? slots.loader(slotProps) : (0, _vue.createVNode)((0, _indexMjs2.VProgressCircular), {
                                                            "active": slotProps.isActive,
                                                            "color": slotProps.color,
                                                            "indeterminate": true,
                                                            "size": "16",
                                                            "width": "2"
                                                        }, null)
                                                })
                                            ]
                                    })
                                ])
                            ]);
                        }
                    });
                }
            });
        });
        return {};
    }
});

},{"vue":"gCTam","./VSwitch.css":"i3vL4","../transitions/index.mjs":"3ybHr","../VDefaultsProvider/VDefaultsProvider.mjs":"3hOjd","../VIcon/index.mjs":"5Yjjr","../VInput/VInput.mjs":"fIDss","../VProgressCircular/index.mjs":"c7ng4","../VSelectionControl/VSelectionControl.mjs":"2m8Co","../../composables/focus.mjs":"ez9on","../../composables/loader.mjs":"6m53O","../../composables/proxiedModel.mjs":"huwLk","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"i3vL4":[function() {},{}],"4ZqWo":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VSystemBar", ()=>(0, _vsystemBarMjs.VSystemBar));
var _vsystemBarMjs = require("./VSystemBar.mjs");

},{"./VSystemBar.mjs":"l8Psp","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"l8Psp":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVSystemBarProps", ()=>makeVSystemBarProps);
parcelHelpers.export(exports, "VSystemBar", ()=>VSystemBar);
var _vue = require("vue");
// Styles
var _vsystemBarCss = require("./VSystemBar.css");
// Composables
var _colorMjs = require("../../composables/color.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _elevationMjs = require("../../composables/elevation.mjs");
var _layoutMjs = require("../../composables/layout.mjs");
var _roundedMjs = require("../../composables/rounded.mjs");
var _ssrBootMjs = require("../../composables/ssrBoot.mjs");
var _tagMjs = require("../../composables/tag.mjs");
var _themeMjs = require("../../composables/theme.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const makeVSystemBarProps = (0, _indexMjs.propsFactory)({
    color: String,
    height: [
        Number,
        String
    ],
    window: Boolean,
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _elevationMjs.makeElevationProps)(),
    ...(0, _layoutMjs.makeLayoutItemProps)(),
    ...(0, _roundedMjs.makeRoundedProps)(),
    ...(0, _tagMjs.makeTagProps)(),
    ...(0, _themeMjs.makeThemeProps)()
}, "VSystemBar");
const VSystemBar = (0, _indexMjs.genericComponent)()({
    name: "VSystemBar",
    props: makeVSystemBarProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const { backgroundColorClasses, backgroundColorStyles } = (0, _colorMjs.useBackgroundColor)((0, _vue.toRef)(props, "color"));
        const { elevationClasses } = (0, _elevationMjs.useElevation)(props);
        const { roundedClasses } = (0, _roundedMjs.useRounded)(props);
        const { ssrBootStyles } = (0, _ssrBootMjs.useSsrBoot)();
        const height = (0, _vue.computed)(()=>props.height ?? (props.window ? 32 : 24));
        const { layoutItemStyles } = (0, _layoutMjs.useLayoutItem)({
            id: props.name,
            order: (0, _vue.computed)(()=>parseInt(props.order, 10)),
            position: (0, _vue.shallowRef)("top"),
            layoutSize: height,
            elementSize: height,
            active: (0, _vue.computed)(()=>true),
            absolute: (0, _vue.toRef)(props, "absolute")
        });
        (0, _indexMjs.useRender)(()=>(0, _vue.createVNode)(props.tag, {
                "class": [
                    "v-system-bar",
                    {
                        "v-system-bar--window": props.window
                    },
                    themeClasses.value,
                    backgroundColorClasses.value,
                    elevationClasses.value,
                    roundedClasses.value,
                    props.class
                ],
                "style": [
                    backgroundColorStyles.value,
                    layoutItemStyles.value,
                    ssrBootStyles.value,
                    props.style
                ]
            }, slots));
        return {};
    }
});

},{"vue":"gCTam","./VSystemBar.css":"c7SSG","../../composables/color.mjs":"6TeQR","../../composables/component.mjs":"4YAxs","../../composables/elevation.mjs":"aNIiI","../../composables/layout.mjs":"lfigA","../../composables/rounded.mjs":"1RfhA","../../composables/ssrBoot.mjs":"bVwDz","../../composables/tag.mjs":"3LqcC","../../composables/theme.mjs":"c9HGg","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"c7SSG":[function() {},{}],"F4B5l":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VTab", ()=>(0, _vtabMjs.VTab));
parcelHelpers.export(exports, "VTabs", ()=>(0, _vtabsMjs.VTabs));
parcelHelpers.export(exports, "VTabsWindow", ()=>(0, _vtabsWindowMjs.VTabsWindow));
parcelHelpers.export(exports, "VTabsWindowItem", ()=>(0, _vtabsWindowItemMjs.VTabsWindowItem));
var _vtabMjs = require("./VTab.mjs");
var _vtabsMjs = require("./VTabs.mjs");
var _vtabsWindowMjs = require("./VTabsWindow.mjs");
var _vtabsWindowItemMjs = require("./VTabsWindowItem.mjs");

},{"./VTab.mjs":"7Smwz","./VTabs.mjs":"1kzBu","./VTabsWindow.mjs":"gWl2B","./VTabsWindowItem.mjs":"2AM2w","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"7Smwz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVTabProps", ()=>makeVTabProps);
parcelHelpers.export(exports, "VTab", ()=>VTab);
var _vue = require("vue");
// Styles
var _vtabCss = require("./VTab.css");
// Components
var _vbtnMjs = require("../VBtn/VBtn.mjs"); // Composables
var _colorMjs = require("../../composables/color.mjs");
var _forwardRefsMjs = require("../../composables/forwardRefs.mjs"); // Utilities
var _sharedMjs = require("./shared.mjs");
var _indexMjs = require("../../util/index.mjs"); // Types
const makeVTabProps = (0, _indexMjs.propsFactory)({
    fixed: Boolean,
    sliderColor: String,
    hideSlider: Boolean,
    direction: {
        type: String,
        default: "horizontal"
    },
    ...(0, _indexMjs.omit)((0, _vbtnMjs.makeVBtnProps)({
        selectedClass: "v-tab--selected",
        variant: "text"
    }), [
        "active",
        "block",
        "flat",
        "location",
        "position",
        "symbol"
    ])
}, "VTab");
const VTab = (0, _indexMjs.genericComponent)()({
    name: "VTab",
    props: makeVTabProps(),
    setup (props, _ref) {
        let { slots, attrs } = _ref;
        const { textColorClasses: sliderColorClasses, textColorStyles: sliderColorStyles } = (0, _colorMjs.useTextColor)(props, "sliderColor");
        const rootEl = (0, _vue.ref)();
        const sliderEl = (0, _vue.ref)();
        const isHorizontal = (0, _vue.computed)(()=>props.direction === "horizontal");
        const isSelected = (0, _vue.computed)(()=>rootEl.value?.group?.isSelected.value ?? false);
        function updateSlider(_ref2) {
            let { value } = _ref2;
            if (value) {
                const prevEl = rootEl.value?.$el.parentElement?.querySelector(".v-tab--selected .v-tab__slider");
                const nextEl = sliderEl.value;
                if (!prevEl || !nextEl) return;
                const color = getComputedStyle(prevEl).color;
                const prevBox = prevEl.getBoundingClientRect();
                const nextBox = nextEl.getBoundingClientRect();
                const xy = isHorizontal.value ? "x" : "y";
                const XY = isHorizontal.value ? "X" : "Y";
                const rightBottom = isHorizontal.value ? "right" : "bottom";
                const widthHeight = isHorizontal.value ? "width" : "height";
                const prevPos = prevBox[xy];
                const nextPos = nextBox[xy];
                const delta = prevPos > nextPos ? prevBox[rightBottom] - nextBox[rightBottom] : prevBox[xy] - nextBox[xy];
                const origin = Math.sign(delta) > 0 ? isHorizontal.value ? "right" : "bottom" : Math.sign(delta) < 0 ? isHorizontal.value ? "left" : "top" : "center";
                const size = Math.abs(delta) + (Math.sign(delta) < 0 ? prevBox[widthHeight] : nextBox[widthHeight]);
                const scale = size / Math.max(prevBox[widthHeight], nextBox[widthHeight]) || 0;
                const initialScale = prevBox[widthHeight] / nextBox[widthHeight] || 0;
                const sigma = 1.5;
                (0, _indexMjs.animate)(nextEl, {
                    backgroundColor: [
                        color,
                        "currentcolor"
                    ],
                    transform: [
                        `translate${XY}(${delta}px) scale${XY}(${initialScale})`,
                        `translate${XY}(${delta / sigma}px) scale${XY}(${(scale - 1) / sigma + 1})`,
                        "none"
                    ],
                    transformOrigin: Array(3).fill(origin)
                }, {
                    duration: 225,
                    easing: (0, _indexMjs.standardEasing)
                });
            }
        }
        (0, _indexMjs.useRender)(()=>{
            const btnProps = (0, _vbtnMjs.VBtn).filterProps(props);
            return (0, _vue.createVNode)((0, _vbtnMjs.VBtn), (0, _vue.mergeProps)({
                "symbol": (0, _sharedMjs.VTabsSymbol),
                "ref": rootEl,
                "class": [
                    "v-tab",
                    props.class
                ],
                "style": props.style,
                "tabindex": isSelected.value ? 0 : -1,
                "role": "tab",
                "aria-selected": String(isSelected.value),
                "active": false
            }, btnProps, attrs, {
                "block": props.fixed,
                "maxWidth": props.fixed ? 300 : undefined,
                "onGroup:selected": updateSlider
            }), {
                ...slots,
                default: ()=>(0, _vue.createVNode)((0, _vue.Fragment), null, [
                        slots.default?.() ?? props.text,
                        !props.hideSlider && (0, _vue.createVNode)("div", {
                            "ref": sliderEl,
                            "class": [
                                "v-tab__slider",
                                sliderColorClasses.value
                            ],
                            "style": sliderColorStyles.value
                        }, null)
                    ])
            });
        });
        return (0, _forwardRefsMjs.forwardRefs)({}, rootEl);
    }
});

},{"vue":"gCTam","./VTab.css":"3aIOu","../VBtn/VBtn.mjs":"2fut1","../../composables/color.mjs":"6TeQR","../../composables/forwardRefs.mjs":"2TNTP","./shared.mjs":"k01aA","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"3aIOu":[function() {},{}],"k01aA":[function(require,module,exports) {
// Types
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VTabsSymbol", ()=>VTabsSymbol);
const VTabsSymbol = Symbol.for("vuetify:v-tabs");

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"1kzBu":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVTabsProps", ()=>makeVTabsProps);
parcelHelpers.export(exports, "VTabs", ()=>VTabs);
var _vue = require("vue");
// Styles
var _vtabsCss = require("./VTabs.css");
// Components
var _vtabMjs = require("./VTab.mjs");
var _vtabsWindowMjs = require("./VTabsWindow.mjs");
var _vtabsWindowItemMjs = require("./VTabsWindowItem.mjs");
var _vslideGroupMjs = require("../VSlideGroup/VSlideGroup.mjs"); // Composables
var _colorMjs = require("../../composables/color.mjs");
var _defaultsMjs = require("../../composables/defaults.mjs");
var _densityMjs = require("../../composables/density.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs");
var _scopeIdMjs = require("../../composables/scopeId.mjs");
var _tagMjs = require("../../composables/tag.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
var _sharedMjs = require("./shared.mjs");
function parseItems(items) {
    if (!items) return [];
    return items.map((item)=>{
        if (!(0, _indexMjs.isObject)(item)) return {
            text: item,
            value: item
        };
        return item;
    });
}
const makeVTabsProps = (0, _indexMjs.propsFactory)({
    alignTabs: {
        type: String,
        default: "start"
    },
    color: String,
    fixedTabs: Boolean,
    items: {
        type: Array,
        default: ()=>[]
    },
    stacked: Boolean,
    bgColor: String,
    grow: Boolean,
    height: {
        type: [
            Number,
            String
        ],
        default: undefined
    },
    hideSlider: Boolean,
    sliderColor: String,
    ...(0, _vslideGroupMjs.makeVSlideGroupProps)({
        mandatory: "force",
        selectedClass: "v-tab-item--selected"
    }),
    ...(0, _densityMjs.makeDensityProps)(),
    ...(0, _tagMjs.makeTagProps)()
}, "VTabs");
const VTabs = (0, _indexMjs.genericComponent)()({
    name: "VTabs",
    props: makeVTabsProps(),
    emits: {
        "update:modelValue": (v)=>true
    },
    setup (props, _ref) {
        let { attrs, slots } = _ref;
        const model = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
        const items = (0, _vue.computed)(()=>parseItems(props.items));
        const { densityClasses } = (0, _densityMjs.useDensity)(props);
        const { backgroundColorClasses, backgroundColorStyles } = (0, _colorMjs.useBackgroundColor)((0, _vue.toRef)(props, "bgColor"));
        const { scopeId } = (0, _scopeIdMjs.useScopeId)();
        (0, _defaultsMjs.provideDefaults)({
            VTab: {
                color: (0, _vue.toRef)(props, "color"),
                direction: (0, _vue.toRef)(props, "direction"),
                stacked: (0, _vue.toRef)(props, "stacked"),
                fixed: (0, _vue.toRef)(props, "fixedTabs"),
                sliderColor: (0, _vue.toRef)(props, "sliderColor"),
                hideSlider: (0, _vue.toRef)(props, "hideSlider")
            }
        });
        (0, _indexMjs.useRender)(()=>{
            const slideGroupProps = (0, _vslideGroupMjs.VSlideGroup).filterProps(props);
            const hasWindow = !!(slots.window || props.items.length > 0);
            return (0, _vue.createVNode)((0, _vue.Fragment), null, [
                (0, _vue.createVNode)((0, _vslideGroupMjs.VSlideGroup), (0, _vue.mergeProps)(slideGroupProps, {
                    "modelValue": model.value,
                    "onUpdate:modelValue": ($event)=>model.value = $event,
                    "class": [
                        "v-tabs",
                        `v-tabs--${props.direction}`,
                        `v-tabs--align-tabs-${props.alignTabs}`,
                        {
                            "v-tabs--fixed-tabs": props.fixedTabs,
                            "v-tabs--grow": props.grow,
                            "v-tabs--stacked": props.stacked
                        },
                        densityClasses.value,
                        backgroundColorClasses.value,
                        props.class
                    ],
                    "style": [
                        {
                            "--v-tabs-height": (0, _indexMjs.convertToUnit)(props.height)
                        },
                        backgroundColorStyles.value,
                        props.style
                    ],
                    "role": "tablist",
                    "symbol": (0, _sharedMjs.VTabsSymbol)
                }, scopeId, attrs), {
                    default: ()=>[
                            slots.default?.() ?? items.value.map((item)=>slots.tab?.({
                                    item
                                }) ?? (0, _vue.createVNode)((0, _vtabMjs.VTab), (0, _vue.mergeProps)(item, {
                                    "key": item.text,
                                    "value": item.value
                                }), {
                                    default: slots[`tab.${item.value}`] ? ()=>slots[`tab.${item.value}`]?.({
                                            item
                                        }) : undefined
                                }))
                        ]
                }),
                hasWindow && (0, _vue.createVNode)((0, _vtabsWindowMjs.VTabsWindow), (0, _vue.mergeProps)({
                    "modelValue": model.value,
                    "onUpdate:modelValue": ($event)=>model.value = $event,
                    "key": "tabs-window"
                }, scopeId), {
                    default: ()=>[
                            items.value.map((item)=>slots.item?.({
                                    item
                                }) ?? (0, _vue.createVNode)((0, _vtabsWindowItemMjs.VTabsWindowItem), {
                                    "value": item.value
                                }, {
                                    default: ()=>slots[`item.${item.value}`]?.({
                                            item
                                        })
                                })),
                            slots.window?.()
                        ]
                })
            ]);
        });
        return {};
    }
});

},{"vue":"gCTam","./VTabs.css":"4iAtk","./VTab.mjs":"7Smwz","./VTabsWindow.mjs":"gWl2B","./VTabsWindowItem.mjs":"2AM2w","../VSlideGroup/VSlideGroup.mjs":"8ssxz","../../composables/color.mjs":"6TeQR","../../composables/defaults.mjs":"29Im0","../../composables/density.mjs":"kOsEB","../../composables/proxiedModel.mjs":"huwLk","../../composables/scopeId.mjs":"1zMgM","../../composables/tag.mjs":"3LqcC","../../util/index.mjs":"ivUh8","./shared.mjs":"k01aA","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"4iAtk":[function() {},{}],"gWl2B":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVTabsWindowProps", ()=>makeVTabsWindowProps);
parcelHelpers.export(exports, "VTabsWindow", ()=>VTabsWindow);
var _vue = require("vue");
// Components
var _vwindowMjs = require("../VWindow/VWindow.mjs"); // Composables
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
var _sharedMjs = require("./shared.mjs");
const makeVTabsWindowProps = (0, _indexMjs.propsFactory)({
    ...(0, _indexMjs.omit)((0, _vwindowMjs.makeVWindowProps)(), [
        "continuous",
        "nextIcon",
        "prevIcon",
        "showArrows",
        "touch",
        "mandatory"
    ])
}, "VTabsWindow");
const VTabsWindow = (0, _indexMjs.genericComponent)()({
    name: "VTabsWindow",
    props: makeVTabsWindowProps(),
    emits: {
        "update:modelValue": (v)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const group = (0, _vue.inject)((0, _sharedMjs.VTabsSymbol), null);
        const _model = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
        const model = (0, _vue.computed)({
            get () {
                // Always return modelValue if defined
                // or if not within a VTabs group
                if (_model.value != null || !group) return _model.value;
                // If inside of a VTabs, find the currently selected
                // item by id. Item value may be assigned by its index
                return group.items.value.find((item)=>group.selected.value.includes(item.id))?.value;
            },
            set (val) {
                _model.value = val;
            }
        });
        (0, _indexMjs.useRender)(()=>{
            const windowProps = (0, _vwindowMjs.VWindow).filterProps(props);
            return (0, _vue.createVNode)((0, _vwindowMjs.VWindow), (0, _vue.mergeProps)({
                "_as": "VTabsWindow"
            }, windowProps, {
                "modelValue": model.value,
                "onUpdate:modelValue": ($event)=>model.value = $event,
                "class": [
                    "v-tabs-window",
                    props.class
                ],
                "style": props.style,
                "mandatory": false,
                "touch": false
            }), slots);
        });
        return {};
    }
});

},{"vue":"gCTam","../VWindow/VWindow.mjs":"csAvt","../../composables/proxiedModel.mjs":"huwLk","../../util/index.mjs":"ivUh8","./shared.mjs":"k01aA","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"2AM2w":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVTabsWindowItemProps", ()=>makeVTabsWindowItemProps);
parcelHelpers.export(exports, "VTabsWindowItem", ()=>VTabsWindowItem);
var _vue = require("vue");
// Components
var _vwindowItemMjs = require("../VWindow/VWindowItem.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const makeVTabsWindowItemProps = (0, _indexMjs.propsFactory)({
    ...(0, _vwindowItemMjs.makeVWindowItemProps)()
}, "VTabsWindowItem");
const VTabsWindowItem = (0, _indexMjs.genericComponent)()({
    name: "VTabsWindowItem",
    props: makeVTabsWindowItemProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        (0, _indexMjs.useRender)(()=>{
            const windowItemProps = (0, _vwindowItemMjs.VWindowItem).filterProps(props);
            return (0, _vue.createVNode)((0, _vwindowItemMjs.VWindowItem), (0, _vue.mergeProps)({
                "_as": "VTabsWindowItem"
            }, windowItemProps, {
                "class": [
                    "v-tabs-window-item",
                    props.class
                ],
                "style": props.style
            }), slots);
        });
        return {};
    }
});

},{"vue":"gCTam","../VWindow/VWindowItem.mjs":"jemUG","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"2t6j0":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VTextarea", ()=>(0, _vtextareaMjs.VTextarea));
var _vtextareaMjs = require("./VTextarea.mjs");

},{"./VTextarea.mjs":"cuVX3","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"cuVX3":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVTextareaProps", ()=>makeVTextareaProps);
parcelHelpers.export(exports, "VTextarea", ()=>VTextarea);
var _vue = require("vue");
// Styles
var _vtextareaCss = require("./VTextarea.css");
var _vtextFieldCss = require("../VTextField/VTextField.css");
// Components
var _vcounterMjs = require("../VCounter/VCounter.mjs");
var _indexMjs = require("../VField/index.mjs");
var _vfieldMjs = require("../VField/VField.mjs");
var _vinputMjs = require("../VInput/VInput.mjs"); // Composables
var _focusMjs = require("../../composables/focus.mjs");
var _forwardRefsMjs = require("../../composables/forwardRefs.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs"); // Directives
var _indexMjs1 = require("../../directives/intersect/index.mjs"); // Utilities
var _indexMjsDefault = parcelHelpers.interopDefault(_indexMjs1);
var _indexMjs2 = require("../../util/index.mjs"); // Types
const makeVTextareaProps = (0, _indexMjs2.propsFactory)({
    autoGrow: Boolean,
    autofocus: Boolean,
    counter: [
        Boolean,
        Number,
        String
    ],
    counterValue: Function,
    prefix: String,
    placeholder: String,
    persistentPlaceholder: Boolean,
    persistentCounter: Boolean,
    noResize: Boolean,
    rows: {
        type: [
            Number,
            String
        ],
        default: 5,
        validator: (v)=>!isNaN(parseFloat(v))
    },
    maxRows: {
        type: [
            Number,
            String
        ],
        validator: (v)=>!isNaN(parseFloat(v))
    },
    suffix: String,
    modelModifiers: Object,
    ...(0, _vinputMjs.makeVInputProps)(),
    ...(0, _vfieldMjs.makeVFieldProps)()
}, "VTextarea");
const VTextarea = (0, _indexMjs2.genericComponent)()({
    name: "VTextarea",
    directives: {
        Intersect: (0, _indexMjsDefault.default)
    },
    inheritAttrs: false,
    props: makeVTextareaProps(),
    emits: {
        "click:control": (e)=>true,
        "mousedown:control": (e)=>true,
        "update:focused": (focused)=>true,
        "update:modelValue": (val)=>true
    },
    setup (props, _ref) {
        let { attrs, emit, slots } = _ref;
        const model = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
        const { isFocused, focus, blur } = (0, _focusMjs.useFocus)(props);
        const counterValue = (0, _vue.computed)(()=>{
            return typeof props.counterValue === "function" ? props.counterValue(model.value) : (model.value || "").toString().length;
        });
        const max = (0, _vue.computed)(()=>{
            if (attrs.maxlength) return attrs.maxlength;
            if (!props.counter || typeof props.counter !== "number" && typeof props.counter !== "string") return undefined;
            return props.counter;
        });
        function onIntersect(isIntersecting, entries) {
            if (!props.autofocus || !isIntersecting) return;
            entries[0].target?.focus?.();
        }
        const vInputRef = (0, _vue.ref)();
        const vFieldRef = (0, _vue.ref)();
        const controlHeight = (0, _vue.shallowRef)("");
        const textareaRef = (0, _vue.ref)();
        const isActive = (0, _vue.computed)(()=>props.persistentPlaceholder || isFocused.value || props.active);
        function onFocus() {
            if (textareaRef.value !== document.activeElement) textareaRef.value?.focus();
            if (!isFocused.value) focus();
        }
        function onControlClick(e) {
            onFocus();
            emit("click:control", e);
        }
        function onControlMousedown(e) {
            emit("mousedown:control", e);
        }
        function onClear(e) {
            e.stopPropagation();
            onFocus();
            (0, _vue.nextTick)(()=>{
                model.value = "";
                (0, _indexMjs2.callEvent)(props["onClick:clear"], e);
            });
        }
        function onInput(e) {
            const el = e.target;
            model.value = el.value;
            if (props.modelModifiers?.trim) {
                const caretPosition = [
                    el.selectionStart,
                    el.selectionEnd
                ];
                (0, _vue.nextTick)(()=>{
                    el.selectionStart = caretPosition[0];
                    el.selectionEnd = caretPosition[1];
                });
            }
        }
        const sizerRef = (0, _vue.ref)();
        const rows = (0, _vue.ref)(+props.rows);
        const isPlainOrUnderlined = (0, _vue.computed)(()=>[
                "plain",
                "underlined"
            ].includes(props.variant));
        (0, _vue.watchEffect)(()=>{
            if (!props.autoGrow) rows.value = +props.rows;
        });
        function calculateInputHeight() {
            if (!props.autoGrow) return;
            (0, _vue.nextTick)(()=>{
                if (!sizerRef.value || !vFieldRef.value) return;
                const style = getComputedStyle(sizerRef.value);
                const fieldStyle = getComputedStyle(vFieldRef.value.$el);
                const padding = parseFloat(style.getPropertyValue("--v-field-padding-top")) + parseFloat(style.getPropertyValue("--v-input-padding-top")) + parseFloat(style.getPropertyValue("--v-field-padding-bottom"));
                const height = sizerRef.value.scrollHeight;
                const lineHeight = parseFloat(style.lineHeight);
                const minHeight = Math.max(parseFloat(props.rows) * lineHeight + padding, parseFloat(fieldStyle.getPropertyValue("--v-input-control-height")));
                const maxHeight = parseFloat(props.maxRows) * lineHeight + padding || Infinity;
                const newHeight = (0, _indexMjs2.clamp)(height ?? 0, minHeight, maxHeight);
                rows.value = Math.floor((newHeight - padding) / lineHeight);
                controlHeight.value = (0, _indexMjs2.convertToUnit)(newHeight);
            });
        }
        (0, _vue.onMounted)(calculateInputHeight);
        (0, _vue.watch)(model, calculateInputHeight);
        (0, _vue.watch)(()=>props.rows, calculateInputHeight);
        (0, _vue.watch)(()=>props.maxRows, calculateInputHeight);
        (0, _vue.watch)(()=>props.density, calculateInputHeight);
        let observer;
        (0, _vue.watch)(sizerRef, (val)=>{
            if (val) {
                observer = new ResizeObserver(calculateInputHeight);
                observer.observe(sizerRef.value);
            } else observer?.disconnect();
        });
        (0, _vue.onBeforeUnmount)(()=>{
            observer?.disconnect();
        });
        (0, _indexMjs2.useRender)(()=>{
            const hasCounter = !!(slots.counter || props.counter || props.counterValue);
            const hasDetails = !!(hasCounter || slots.details);
            const [rootAttrs, inputAttrs] = (0, _indexMjs2.filterInputAttrs)(attrs);
            const { modelValue: _, ...inputProps } = (0, _vinputMjs.VInput).filterProps(props);
            const fieldProps = (0, _vfieldMjs.filterFieldProps)(props);
            return (0, _vue.createVNode)((0, _vinputMjs.VInput), (0, _vue.mergeProps)({
                "ref": vInputRef,
                "modelValue": model.value,
                "onUpdate:modelValue": ($event)=>model.value = $event,
                "class": [
                    "v-textarea v-text-field",
                    {
                        "v-textarea--prefixed": props.prefix,
                        "v-textarea--suffixed": props.suffix,
                        "v-text-field--prefixed": props.prefix,
                        "v-text-field--suffixed": props.suffix,
                        "v-textarea--auto-grow": props.autoGrow,
                        "v-textarea--no-resize": props.noResize || props.autoGrow,
                        "v-input--plain-underlined": isPlainOrUnderlined.value
                    },
                    props.class
                ],
                "style": props.style
            }, rootAttrs, inputProps, {
                "centerAffix": rows.value === 1 && !isPlainOrUnderlined.value,
                "focused": isFocused.value
            }), {
                ...slots,
                default: (_ref2)=>{
                    let { id, isDisabled, isDirty, isReadonly, isValid } = _ref2;
                    return (0, _vue.createVNode)((0, _indexMjs.VField), (0, _vue.mergeProps)({
                        "ref": vFieldRef,
                        "style": {
                            "--v-textarea-control-height": controlHeight.value
                        },
                        "onClick": onControlClick,
                        "onMousedown": onControlMousedown,
                        "onClick:clear": onClear,
                        "onClick:prependInner": props["onClick:prependInner"],
                        "onClick:appendInner": props["onClick:appendInner"]
                    }, fieldProps, {
                        "id": id.value,
                        "active": isActive.value || isDirty.value,
                        "centerAffix": rows.value === 1 && !isPlainOrUnderlined.value,
                        "dirty": isDirty.value || props.dirty,
                        "disabled": isDisabled.value,
                        "focused": isFocused.value,
                        "error": isValid.value === false
                    }), {
                        ...slots,
                        default: (_ref3)=>{
                            let { props: { class: fieldClass, ...slotProps } } = _ref3;
                            return (0, _vue.createVNode)((0, _vue.Fragment), null, [
                                props.prefix && (0, _vue.createVNode)("span", {
                                    "class": "v-text-field__prefix"
                                }, [
                                    props.prefix
                                ]),
                                (0, _vue.withDirectives)((0, _vue.createVNode)("textarea", (0, _vue.mergeProps)({
                                    "ref": textareaRef,
                                    "class": fieldClass,
                                    "value": model.value,
                                    "onInput": onInput,
                                    "autofocus": props.autofocus,
                                    "readonly": isReadonly.value,
                                    "disabled": isDisabled.value,
                                    "placeholder": props.placeholder,
                                    "rows": props.rows,
                                    "name": props.name,
                                    "onFocus": onFocus,
                                    "onBlur": blur
                                }, slotProps, inputAttrs), null), [
                                    [
                                        (0, _vue.resolveDirective)("intersect"),
                                        {
                                            handler: onIntersect
                                        },
                                        null,
                                        {
                                            once: true
                                        }
                                    ]
                                ]),
                                props.autoGrow && (0, _vue.withDirectives)((0, _vue.createVNode)("textarea", {
                                    "class": [
                                        fieldClass,
                                        "v-textarea__sizer"
                                    ],
                                    "id": `${slotProps.id}-sizer`,
                                    "onUpdate:modelValue": ($event)=>model.value = $event,
                                    "ref": sizerRef,
                                    "readonly": true,
                                    "aria-hidden": "true"
                                }, null), [
                                    [
                                        (0, _vue.vModelText),
                                        model.value
                                    ]
                                ]),
                                props.suffix && (0, _vue.createVNode)("span", {
                                    "class": "v-text-field__suffix"
                                }, [
                                    props.suffix
                                ])
                            ]);
                        }
                    });
                },
                details: hasDetails ? (slotProps)=>(0, _vue.createVNode)((0, _vue.Fragment), null, [
                        slots.details?.(slotProps),
                        hasCounter && (0, _vue.createVNode)((0, _vue.Fragment), null, [
                            (0, _vue.createVNode)("span", null, null),
                            (0, _vue.createVNode)((0, _vcounterMjs.VCounter), {
                                "active": props.persistentCounter || isFocused.value,
                                "value": counterValue.value,
                                "max": max.value,
                                "disabled": props.disabled
                            }, slots.counter)
                        ])
                    ]) : undefined
            });
        });
        return (0, _forwardRefsMjs.forwardRefs)({}, vInputRef, vFieldRef, textareaRef);
    }
});

},{"vue":"gCTam","./VTextarea.css":"1sOqU","../VTextField/VTextField.css":"crDGq","../VCounter/VCounter.mjs":"b8Y9k","../VField/index.mjs":"8ajJF","../VField/VField.mjs":"kYFSe","../VInput/VInput.mjs":"fIDss","../../composables/focus.mjs":"ez9on","../../composables/forwardRefs.mjs":"2TNTP","../../composables/proxiedModel.mjs":"huwLk","../../directives/intersect/index.mjs":"iNCN8","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"1sOqU":[function() {},{}],"crDGq":[function() {},{}],"9r9uW":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VThemeProvider", ()=>(0, _vthemeProviderMjs.VThemeProvider));
var _vthemeProviderMjs = require("./VThemeProvider.mjs");

},{"./VThemeProvider.mjs":"ksbaa","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"ksbaa":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVThemeProviderProps", ()=>makeVThemeProviderProps);
parcelHelpers.export(exports, "VThemeProvider", ()=>VThemeProvider);
var _vue = require("vue");
// Styles
var _vthemeProviderCss = require("./VThemeProvider.css");
// Composables
var _componentMjs = require("../../composables/component.mjs");
var _tagMjs = require("../../composables/tag.mjs");
var _themeMjs = require("../../composables/theme.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const makeVThemeProviderProps = (0, _indexMjs.propsFactory)({
    withBackground: Boolean,
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _themeMjs.makeThemeProps)(),
    ...(0, _tagMjs.makeTagProps)()
}, "VThemeProvider");
const VThemeProvider = (0, _indexMjs.genericComponent)()({
    name: "VThemeProvider",
    props: makeVThemeProviderProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        return ()=>{
            if (!props.withBackground) return slots.default?.();
            return (0, _vue.createVNode)(props.tag, {
                "class": [
                    "v-theme-provider",
                    themeClasses.value,
                    props.class
                ],
                "style": props.style
            }, {
                default: ()=>[
                        slots.default?.()
                    ]
            });
        };
    }
});

},{"vue":"gCTam","./VThemeProvider.css":"fVcds","../../composables/component.mjs":"4YAxs","../../composables/tag.mjs":"3LqcC","../../composables/theme.mjs":"c9HGg","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"fVcds":[function() {},{}],"imYcS":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VTimeline", ()=>(0, _vtimelineMjs.VTimeline));
parcelHelpers.export(exports, "VTimelineItem", ()=>(0, _vtimelineItemMjs.VTimelineItem));
var _vtimelineMjs = require("./VTimeline.mjs");
var _vtimelineItemMjs = require("./VTimelineItem.mjs");

},{"./VTimeline.mjs":"cYN2u","./VTimelineItem.mjs":"cjNrY","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"cYN2u":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVTimelineProps", ()=>makeVTimelineProps);
parcelHelpers.export(exports, "VTimeline", ()=>VTimeline);
var _vue = require("vue");
// Styles
var _vtimelineCss = require("./VTimeline.css");
// Composables
var _componentMjs = require("../../composables/component.mjs");
var _defaultsMjs = require("../../composables/defaults.mjs");
var _densityMjs = require("../../composables/density.mjs");
var _localeMjs = require("../../composables/locale.mjs");
var _tagMjs = require("../../composables/tag.mjs");
var _themeMjs = require("../../composables/theme.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
var _vtimelineItemMjs = require("./VTimelineItem.mjs");
const makeVTimelineProps = (0, _indexMjs.propsFactory)({
    align: {
        type: String,
        default: "center",
        validator: (v)=>[
                "center",
                "start"
            ].includes(v)
    },
    direction: {
        type: String,
        default: "vertical",
        validator: (v)=>[
                "vertical",
                "horizontal"
            ].includes(v)
    },
    justify: {
        type: String,
        default: "auto",
        validator: (v)=>[
                "auto",
                "center"
            ].includes(v)
    },
    side: {
        type: String,
        validator: (v)=>v == null || [
                "start",
                "end"
            ].includes(v)
    },
    lineThickness: {
        type: [
            String,
            Number
        ],
        default: 2
    },
    lineColor: String,
    truncateLine: {
        type: String,
        validator: (v)=>[
                "start",
                "end",
                "both"
            ].includes(v)
    },
    ...(0, _indexMjs.only)((0, _vtimelineItemMjs.makeVTimelineItemProps)({
        lineInset: 0
    }), [
        "dotColor",
        "fillDot",
        "hideOpposite",
        "iconColor",
        "lineInset",
        "size"
    ]),
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _densityMjs.makeDensityProps)(),
    ...(0, _tagMjs.makeTagProps)(),
    ...(0, _themeMjs.makeThemeProps)()
}, "VTimeline");
const VTimeline = (0, _indexMjs.genericComponent)()({
    name: "VTimeline",
    props: makeVTimelineProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const { themeClasses } = (0, _themeMjs.provideTheme)(props);
        const { densityClasses } = (0, _densityMjs.useDensity)(props);
        const { rtlClasses } = (0, _localeMjs.useRtl)();
        (0, _defaultsMjs.provideDefaults)({
            VTimelineDivider: {
                lineColor: (0, _vue.toRef)(props, "lineColor")
            },
            VTimelineItem: {
                density: (0, _vue.toRef)(props, "density"),
                dotColor: (0, _vue.toRef)(props, "dotColor"),
                fillDot: (0, _vue.toRef)(props, "fillDot"),
                hideOpposite: (0, _vue.toRef)(props, "hideOpposite"),
                iconColor: (0, _vue.toRef)(props, "iconColor"),
                lineColor: (0, _vue.toRef)(props, "lineColor"),
                lineInset: (0, _vue.toRef)(props, "lineInset"),
                size: (0, _vue.toRef)(props, "size")
            }
        });
        const sideClasses = (0, _vue.computed)(()=>{
            const side = props.side ? props.side : props.density !== "default" ? "end" : null;
            return side && `v-timeline--side-${side}`;
        });
        const truncateClasses = (0, _vue.computed)(()=>{
            const classes = [
                "v-timeline--truncate-line-start",
                "v-timeline--truncate-line-end"
            ];
            switch(props.truncateLine){
                case "both":
                    return classes;
                case "start":
                    return classes[0];
                case "end":
                    return classes[1];
                default:
                    return null;
            }
        });
        (0, _indexMjs.useRender)(()=>(0, _vue.createVNode)(props.tag, {
                "class": [
                    "v-timeline",
                    `v-timeline--${props.direction}`,
                    `v-timeline--align-${props.align}`,
                    `v-timeline--justify-${props.justify}`,
                    truncateClasses.value,
                    {
                        "v-timeline--inset-line": !!props.lineInset
                    },
                    themeClasses.value,
                    densityClasses.value,
                    sideClasses.value,
                    rtlClasses.value,
                    props.class
                ],
                "style": [
                    {
                        "--v-timeline-line-thickness": (0, _indexMjs.convertToUnit)(props.lineThickness)
                    },
                    props.style
                ]
            }, slots));
        return {};
    }
});

},{"vue":"gCTam","./VTimeline.css":"8jehP","../../composables/component.mjs":"4YAxs","../../composables/defaults.mjs":"29Im0","../../composables/density.mjs":"kOsEB","../../composables/locale.mjs":"9rJP0","../../composables/tag.mjs":"3LqcC","../../composables/theme.mjs":"c9HGg","../../util/index.mjs":"ivUh8","./VTimelineItem.mjs":"cjNrY","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"8jehP":[function() {},{}],"cjNrY":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVTimelineItemProps", ()=>makeVTimelineItemProps);
parcelHelpers.export(exports, "VTimelineItem", ()=>VTimelineItem);
var _vue = require("vue");
// Components
var _vtimelineDividerMjs = require("./VTimelineDivider.mjs"); // Composables
var _componentMjs = require("../../composables/component.mjs");
var _dimensionsMjs = require("../../composables/dimensions.mjs");
var _elevationMjs = require("../../composables/elevation.mjs");
var _iconsMjs = require("../../composables/icons.mjs");
var _roundedMjs = require("../../composables/rounded.mjs");
var _sizeMjs = require("../../composables/size.mjs");
var _tagMjs = require("../../composables/tag.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const makeVTimelineItemProps = (0, _indexMjs.propsFactory)({
    density: String,
    dotColor: String,
    fillDot: Boolean,
    hideDot: Boolean,
    hideOpposite: {
        type: Boolean,
        default: undefined
    },
    icon: (0, _iconsMjs.IconValue),
    iconColor: String,
    lineInset: [
        Number,
        String
    ],
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _dimensionsMjs.makeDimensionProps)(),
    ...(0, _elevationMjs.makeElevationProps)(),
    ...(0, _roundedMjs.makeRoundedProps)(),
    ...(0, _sizeMjs.makeSizeProps)(),
    ...(0, _tagMjs.makeTagProps)()
}, "VTimelineItem");
const VTimelineItem = (0, _indexMjs.genericComponent)()({
    name: "VTimelineItem",
    props: makeVTimelineItemProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const { dimensionStyles } = (0, _dimensionsMjs.useDimension)(props);
        const dotSize = (0, _vue.shallowRef)(0);
        const dotRef = (0, _vue.ref)();
        (0, _vue.watch)(dotRef, (newValue)=>{
            if (!newValue) return;
            dotSize.value = newValue.$el.querySelector(".v-timeline-divider__dot")?.getBoundingClientRect().width ?? 0;
        }, {
            flush: "post"
        });
        (0, _indexMjs.useRender)(()=>(0, _vue.createVNode)("div", {
                "class": [
                    "v-timeline-item",
                    {
                        "v-timeline-item--fill-dot": props.fillDot
                    },
                    props.class
                ],
                "style": [
                    {
                        "--v-timeline-dot-size": (0, _indexMjs.convertToUnit)(dotSize.value),
                        "--v-timeline-line-inset": props.lineInset ? `calc(var(--v-timeline-dot-size) / 2 + ${(0, _indexMjs.convertToUnit)(props.lineInset)})` : (0, _indexMjs.convertToUnit)(0)
                    },
                    props.style
                ]
            }, [
                (0, _vue.createVNode)("div", {
                    "class": "v-timeline-item__body",
                    "style": dimensionStyles.value
                }, [
                    slots.default?.()
                ]),
                (0, _vue.createVNode)((0, _vtimelineDividerMjs.VTimelineDivider), {
                    "ref": dotRef,
                    "hideDot": props.hideDot,
                    "icon": props.icon,
                    "iconColor": props.iconColor,
                    "size": props.size,
                    "elevation": props.elevation,
                    "dotColor": props.dotColor,
                    "fillDot": props.fillDot,
                    "rounded": props.rounded
                }, {
                    default: slots.icon
                }),
                props.density !== "compact" && (0, _vue.createVNode)("div", {
                    "class": "v-timeline-item__opposite"
                }, [
                    !props.hideOpposite && slots.opposite?.()
                ])
            ]));
        return {};
    }
});

},{"vue":"gCTam","./VTimelineDivider.mjs":"lyAja","../../composables/component.mjs":"4YAxs","../../composables/dimensions.mjs":"daVmy","../../composables/elevation.mjs":"aNIiI","../../composables/icons.mjs":"g4kLv","../../composables/rounded.mjs":"1RfhA","../../composables/size.mjs":"2PnSq","../../composables/tag.mjs":"3LqcC","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"lyAja":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVTimelineDividerProps", ()=>makeVTimelineDividerProps);
parcelHelpers.export(exports, "VTimelineDivider", ()=>VTimelineDivider);
var _vue = require("vue");
// Components
var _indexMjs = require("../VDefaultsProvider/index.mjs");
var _indexMjs1 = require("../VIcon/index.mjs"); // Composables
var _colorMjs = require("../../composables/color.mjs");
var _componentMjs = require("../../composables/component.mjs");
var _elevationMjs = require("../../composables/elevation.mjs");
var _iconsMjs = require("../../composables/icons.mjs");
var _roundedMjs = require("../../composables/rounded.mjs");
var _sizeMjs = require("../../composables/size.mjs"); // Utilities
var _indexMjs2 = require("../../util/index.mjs");
const makeVTimelineDividerProps = (0, _indexMjs2.propsFactory)({
    dotColor: String,
    fillDot: Boolean,
    hideDot: Boolean,
    icon: (0, _iconsMjs.IconValue),
    iconColor: String,
    lineColor: String,
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _roundedMjs.makeRoundedProps)(),
    ...(0, _sizeMjs.makeSizeProps)(),
    ...(0, _elevationMjs.makeElevationProps)()
}, "VTimelineDivider");
const VTimelineDivider = (0, _indexMjs2.genericComponent)()({
    name: "VTimelineDivider",
    props: makeVTimelineDividerProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        const { sizeClasses, sizeStyles } = (0, _sizeMjs.useSize)(props, "v-timeline-divider__dot");
        const { backgroundColorStyles, backgroundColorClasses } = (0, _colorMjs.useBackgroundColor)((0, _vue.toRef)(props, "dotColor"));
        const { roundedClasses } = (0, _roundedMjs.useRounded)(props, "v-timeline-divider__dot");
        const { elevationClasses } = (0, _elevationMjs.useElevation)(props);
        const { backgroundColorClasses: lineColorClasses, backgroundColorStyles: lineColorStyles } = (0, _colorMjs.useBackgroundColor)((0, _vue.toRef)(props, "lineColor"));
        (0, _indexMjs2.useRender)(()=>(0, _vue.createVNode)("div", {
                "class": [
                    "v-timeline-divider",
                    {
                        "v-timeline-divider--fill-dot": props.fillDot
                    },
                    props.class
                ],
                "style": props.style
            }, [
                (0, _vue.createVNode)("div", {
                    "class": [
                        "v-timeline-divider__before",
                        lineColorClasses.value
                    ],
                    "style": lineColorStyles.value
                }, null),
                !props.hideDot && (0, _vue.createVNode)("div", {
                    "key": "dot",
                    "class": [
                        "v-timeline-divider__dot",
                        elevationClasses.value,
                        roundedClasses.value,
                        sizeClasses.value
                    ],
                    "style": sizeStyles.value
                }, [
                    (0, _vue.createVNode)("div", {
                        "class": [
                            "v-timeline-divider__inner-dot",
                            backgroundColorClasses.value,
                            roundedClasses.value
                        ],
                        "style": backgroundColorStyles.value
                    }, [
                        !slots.default ? (0, _vue.createVNode)((0, _indexMjs1.VIcon), {
                            "key": "icon",
                            "color": props.iconColor,
                            "icon": props.icon,
                            "size": props.size
                        }, null) : (0, _vue.createVNode)((0, _indexMjs.VDefaultsProvider), {
                            "key": "icon-defaults",
                            "disabled": !props.icon,
                            "defaults": {
                                VIcon: {
                                    color: props.iconColor,
                                    icon: props.icon,
                                    size: props.size
                                }
                            }
                        }, slots.default)
                    ])
                ]),
                (0, _vue.createVNode)("div", {
                    "class": [
                        "v-timeline-divider__after",
                        lineColorClasses.value
                    ],
                    "style": lineColorStyles.value
                }, null)
            ]));
        return {};
    }
});

},{"vue":"gCTam","../VDefaultsProvider/index.mjs":"eFFvH","../VIcon/index.mjs":"5Yjjr","../../composables/color.mjs":"6TeQR","../../composables/component.mjs":"4YAxs","../../composables/elevation.mjs":"aNIiI","../../composables/icons.mjs":"g4kLv","../../composables/rounded.mjs":"1RfhA","../../composables/size.mjs":"2PnSq","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"6euIz":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VToolbar", ()=>(0, _vtoolbarMjs.VToolbar));
parcelHelpers.export(exports, "VToolbarTitle", ()=>(0, _vtoolbarTitleMjs.VToolbarTitle));
parcelHelpers.export(exports, "VToolbarItems", ()=>(0, _vtoolbarItemsMjs.VToolbarItems));
var _vtoolbarMjs = require("./VToolbar.mjs");
var _vtoolbarTitleMjs = require("./VToolbarTitle.mjs");
var _vtoolbarItemsMjs = require("./VToolbarItems.mjs");

},{"./VToolbar.mjs":"aKd0w","./VToolbarTitle.mjs":"iwmPn","./VToolbarItems.mjs":"2e8cC","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"2e8cC":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVToolbarItemsProps", ()=>makeVToolbarItemsProps);
parcelHelpers.export(exports, "VToolbarItems", ()=>VToolbarItems);
var _vue = require("vue");
// Composables
var _componentMjs = require("../../composables/component.mjs");
var _defaultsMjs = require("../../composables/defaults.mjs");
var _variantMjs = require("../../composables/variant.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs");
const makeVToolbarItemsProps = (0, _indexMjs.propsFactory)({
    ...(0, _componentMjs.makeComponentProps)(),
    ...(0, _variantMjs.makeVariantProps)({
        variant: "text"
    })
}, "VToolbarItems");
const VToolbarItems = (0, _indexMjs.genericComponent)()({
    name: "VToolbarItems",
    props: makeVToolbarItemsProps(),
    setup (props, _ref) {
        let { slots } = _ref;
        (0, _defaultsMjs.provideDefaults)({
            VBtn: {
                color: (0, _vue.toRef)(props, "color"),
                height: "inherit",
                variant: (0, _vue.toRef)(props, "variant")
            }
        });
        (0, _indexMjs.useRender)(()=>(0, _vue.createVNode)("div", {
                "class": [
                    "v-toolbar-items",
                    props.class
                ],
                "style": props.style
            }, [
                slots.default?.()
            ]));
        return {};
    }
});

},{"vue":"gCTam","../../composables/component.mjs":"4YAxs","../../composables/defaults.mjs":"29Im0","../../composables/variant.mjs":"ivQo4","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"i6brl":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VTooltip", ()=>(0, _vtooltipMjs.VTooltip));
var _vtooltipMjs = require("./VTooltip.mjs");

},{"./VTooltip.mjs":"8aehj","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"8aehj":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "makeVTooltipProps", ()=>makeVTooltipProps);
parcelHelpers.export(exports, "VTooltip", ()=>VTooltip);
var _vue = require("vue");
// Styles
var _vtooltipCss = require("./VTooltip.css");
// Components
var _indexMjs = require("../VOverlay/index.mjs");
var _voverlayMjs = require("../VOverlay/VOverlay.mjs"); // Composables
var _forwardRefsMjs = require("../../composables/forwardRefs.mjs");
var _proxiedModelMjs = require("../../composables/proxiedModel.mjs");
var _scopeIdMjs = require("../../composables/scopeId.mjs"); // Utilities
var _indexMjs1 = require("../../util/index.mjs"); // Types
const makeVTooltipProps = (0, _indexMjs1.propsFactory)({
    id: String,
    text: String,
    ...(0, _indexMjs1.omit)((0, _voverlayMjs.makeVOverlayProps)({
        closeOnBack: false,
        location: "end",
        locationStrategy: "connected",
        eager: true,
        minWidth: 0,
        offset: 10,
        openOnClick: false,
        openOnHover: true,
        origin: "auto",
        scrim: false,
        scrollStrategy: "reposition",
        transition: false
    }), [
        "absolute",
        "persistent"
    ])
}, "VTooltip");
const VTooltip = (0, _indexMjs1.genericComponent)()({
    name: "VTooltip",
    props: makeVTooltipProps(),
    emits: {
        "update:modelValue": (value)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const isActive = (0, _proxiedModelMjs.useProxiedModel)(props, "modelValue");
        const { scopeId } = (0, _scopeIdMjs.useScopeId)();
        const uid = (0, _indexMjs1.getUid)();
        const id = (0, _vue.computed)(()=>props.id || `v-tooltip-${uid}`);
        const overlay = (0, _vue.ref)();
        const location = (0, _vue.computed)(()=>{
            return props.location.split(" ").length > 1 ? props.location : props.location + " center";
        });
        const origin = (0, _vue.computed)(()=>{
            return props.origin === "auto" || props.origin === "overlap" || props.origin.split(" ").length > 1 || props.location.split(" ").length > 1 ? props.origin : props.origin + " center";
        });
        const transition = (0, _vue.computed)(()=>{
            if (props.transition) return props.transition;
            return isActive.value ? "scale-transition" : "fade-transition";
        });
        const activatorProps = (0, _vue.computed)(()=>(0, _vue.mergeProps)({
                "aria-describedby": id.value
            }, props.activatorProps));
        (0, _indexMjs1.useRender)(()=>{
            const overlayProps = (0, _indexMjs.VOverlay).filterProps(props);
            return (0, _vue.createVNode)((0, _indexMjs.VOverlay), (0, _vue.mergeProps)({
                "ref": overlay,
                "class": [
                    "v-tooltip",
                    props.class
                ],
                "style": props.style,
                "id": id.value
            }, overlayProps, {
                "modelValue": isActive.value,
                "onUpdate:modelValue": ($event)=>isActive.value = $event,
                "transition": transition.value,
                "absolute": true,
                "location": location.value,
                "origin": origin.value,
                "persistent": true,
                "role": "tooltip",
                "activatorProps": activatorProps.value,
                "_disableGlobalStack": true
            }, scopeId), {
                activator: slots.activator,
                default: function() {
                    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];
                    return slots.default?.(...args) ?? props.text;
                }
            });
        });
        return (0, _forwardRefsMjs.forwardRefs)({}, overlay);
    }
});

},{"vue":"gCTam","./VTooltip.css":"4mfwI","../VOverlay/index.mjs":"seRqS","../VOverlay/VOverlay.mjs":"2XVbS","../../composables/forwardRefs.mjs":"2TNTP","../../composables/proxiedModel.mjs":"huwLk","../../composables/scopeId.mjs":"1zMgM","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"4mfwI":[function() {},{}],"ly36V":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VValidation", ()=>(0, _vvalidationMjs.VValidation));
var _vvalidationMjs = require("./VValidation.mjs");

},{"./VValidation.mjs":"2i3xs","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"2i3xs":[function(require,module,exports) {
// Composables
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VValidation", ()=>VValidation);
var _validationMjs = require("../../composables/validation.mjs"); // Utilities
var _indexMjs = require("../../util/index.mjs"); // Types
const VValidation = (0, _indexMjs.genericComponent)()({
    name: "VValidation",
    props: (0, _validationMjs.makeValidationProps)(),
    emits: {
        "update:modelValue": (value)=>true
    },
    setup (props, _ref) {
        let { slots } = _ref;
        const validation = (0, _validationMjs.useValidation)(props, "validation");
        return ()=>slots.default?.(validation);
    }
});

},{"../../composables/validation.mjs":"7qSOE","../../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"b6TAh":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "VWindow", ()=>(0, _vwindowMjs.VWindow));
parcelHelpers.export(exports, "VWindowItem", ()=>(0, _vwindowItemMjs.VWindowItem));
var _vwindowMjs = require("./VWindow.mjs");
var _vwindowItemMjs = require("./VWindowItem.mjs");

},{"./VWindow.mjs":"csAvt","./VWindowItem.mjs":"jemUG","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"lDmqr":[function(require,module,exports) {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ClickOutside", ()=>(0, _indexMjs.ClickOutside)) // export { Color } from './color'
;
parcelHelpers.export(exports, "Intersect", ()=>(0, _indexMjs1.Intersect));
parcelHelpers.export(exports, "Mutate", ()=>(0, _indexMjs2.Mutate));
parcelHelpers.export(exports, "Resize", ()=>(0, _indexMjs3.Resize));
parcelHelpers.export(exports, "Ripple", ()=>(0, _indexMjs4.Ripple));
parcelHelpers.export(exports, "Scroll", ()=>(0, _indexMjs5.Scroll));
parcelHelpers.export(exports, "Touch", ()=>(0, _indexMjs6.Touch));
parcelHelpers.export(exports, "Tooltip", ()=>(0, _indexMjs7.Tooltip));
var _indexMjs = require("./click-outside/index.mjs");
var _indexMjs1 = require("./intersect/index.mjs");
var _indexMjs2 = require("./mutate/index.mjs");
var _indexMjs3 = require("./resize/index.mjs");
var _indexMjs4 = require("./ripple/index.mjs");
var _indexMjs5 = require("./scroll/index.mjs");
var _indexMjs6 = require("./touch/index.mjs");
var _indexMjs7 = require("./tooltip/index.mjs");

},{"./click-outside/index.mjs":"cVgr0","./intersect/index.mjs":"iNCN8","./mutate/index.mjs":"kh1ZL","./resize/index.mjs":"kiB5j","./ripple/index.mjs":"41ncU","./scroll/index.mjs":"aadkD","./touch/index.mjs":"rxCNC","./tooltip/index.mjs":"17Nn0","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"kh1ZL":[function(require,module,exports) {
// Types
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Mutate", ()=>Mutate);
function mounted(el, binding) {
    const modifiers = binding.modifiers || {};
    const value = binding.value;
    const { once, immediate, ...modifierKeys } = modifiers;
    const defaultValue = !Object.keys(modifierKeys).length;
    const { handler, options } = typeof value === "object" ? value : {
        handler: value,
        options: {
            attributes: modifierKeys?.attr ?? defaultValue,
            characterData: modifierKeys?.char ?? defaultValue,
            childList: modifierKeys?.child ?? defaultValue,
            subtree: modifierKeys?.sub ?? defaultValue
        }
    };
    const observer = new MutationObserver(function() {
        let mutations = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        let observer = arguments.length > 1 ? arguments[1] : undefined;
        handler?.(mutations, observer);
        if (once) unmounted(el, binding);
    });
    if (immediate) handler?.([], observer);
    el._mutate = Object(el._mutate);
    el._mutate[binding.instance.$.uid] = {
        observer
    };
    observer.observe(el, options);
}
function unmounted(el, binding) {
    if (!el._mutate?.[binding.instance.$.uid]) return;
    el._mutate[binding.instance.$.uid].observer.disconnect();
    delete el._mutate[binding.instance.$.uid];
}
const Mutate = {
    mounted,
    unmounted
};
exports.default = Mutate;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"kiB5j":[function(require,module,exports) {
// Types
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Resize", ()=>Resize);
function mounted(el, binding) {
    const handler = binding.value;
    const options = {
        passive: !binding.modifiers?.active
    };
    window.addEventListener("resize", handler, options);
    el._onResize = Object(el._onResize);
    el._onResize[binding.instance.$.uid] = {
        handler,
        options
    };
    if (!binding.modifiers?.quiet) handler();
}
function unmounted(el, binding) {
    if (!el._onResize?.[binding.instance.$.uid]) return;
    const { handler, options } = el._onResize[binding.instance.$.uid];
    window.removeEventListener("resize", handler, options);
    delete el._onResize[binding.instance.$.uid];
}
const Resize = {
    mounted,
    unmounted
};
exports.default = Resize;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"aadkD":[function(require,module,exports) {
// Types
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Scroll", ()=>Scroll);
function mounted(el, binding) {
    const { self = false } = binding.modifiers ?? {};
    const value = binding.value;
    const options = typeof value === "object" && value.options || {
        passive: true
    };
    const handler = typeof value === "function" || "handleEvent" in value ? value : value.handler;
    const target = self ? el : binding.arg ? document.querySelector(binding.arg) : window;
    if (!target) return;
    target.addEventListener("scroll", handler, options);
    el._onScroll = Object(el._onScroll);
    el._onScroll[binding.instance.$.uid] = {
        handler,
        options,
        // Don't reference self
        target: self ? undefined : target
    };
}
function unmounted(el, binding) {
    if (!el._onScroll?.[binding.instance.$.uid]) return;
    const { handler, options, target = el } = el._onScroll[binding.instance.$.uid];
    target.removeEventListener("scroll", handler, options);
    delete el._onScroll[binding.instance.$.uid];
}
function updated(el, binding) {
    if (binding.value === binding.oldValue) return;
    unmounted(el, binding);
    mounted(el, binding);
}
const Scroll = {
    mounted,
    unmounted,
    updated
};
exports.default = Scroll;

},{"@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"17Nn0":[function(require,module,exports) {
// Components
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "Tooltip", ()=>Tooltip);
var _indexMjs = require("../../components/VTooltip/index.mjs"); // Composables
var _directiveComponentMjs = require("../../composables/directiveComponent.mjs"); // Types
const Tooltip = (0, _directiveComponentMjs.useDirectiveComponent)((0, _indexMjs.VTooltip), (binding)=>{
    return {
        activator: "parent",
        location: binding.arg?.replace("-", " ") ?? "top",
        text: typeof binding.value === "boolean" ? undefined : binding.value
    };
});
exports.default = Tooltip;

},{"../../components/VTooltip/index.mjs":"i6brl","../../composables/directiveComponent.mjs":"7KFlM","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"7KFlM":[function(require,module,exports) {
// Utilities
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "useDirectiveComponent", ()=>useDirectiveComponent);
var _vue = require("vue");
var _indexMjs = require("../util/index.mjs"); // Types
function useDirectiveComponent(component, props) {
    const concreteComponent = typeof component === "string" ? (0, _vue.resolveComponent)(component) : component;
    const hook = mountComponent(concreteComponent, props);
    return {
        mounted: hook,
        updated: hook,
        unmounted (el) {
            (0, _vue.render)(null, el);
        }
    };
}
function mountComponent(component, props) {
    return function(el, binding, vnode) {
        const _props = typeof props === "function" ? props(binding) : props;
        const text = binding.value?.text ?? binding.value ?? _props?.text;
        const value = (0, _indexMjs.isObject)(binding.value) ? binding.value : {};
        // Get the children from the props or directive value, or the element's children
        const children = ()=>text ?? el.innerHTML;
        // If vnode.ctx is the same as the instance, then we're bound to a plain element
        // and need to find the nearest parent component instance to inherit provides from
        const provides = (vnode.ctx === binding.instance.$ ? findComponentParent(vnode, binding.instance.$)?.provides : vnode.ctx?.provides) ?? binding.instance.$.provides;
        const node = (0, _vue.h)(component, (0, _vue.mergeProps)(_props, value), children);
        node.appContext = Object.assign(Object.create(null), binding.instance.$.appContext, {
            provides
        });
        (0, _vue.render)(node, el);
    };
}
function findComponentParent(vnode, root) {
    // Walk the tree from root until we find the child vnode
    const stack = new Set();
    const walk = (children)=>{
        for (const child of children){
            if (!child) continue;
            if (child === vnode) return true;
            stack.add(child);
            let result;
            if (child.suspense) result = walk([
                child.ssContent
            ]);
            else if (Array.isArray(child.children)) result = walk(child.children);
            else if (child.component?.vnode) result = walk([
                child.component?.subTree
            ]);
            if (result) return result;
            stack.delete(child);
        }
        return false;
    };
    if (!walk([
        root.subTree
    ])) throw new Error("Could not find original vnode");
    // Return the first component parent
    const result = Array.from(stack).reverse();
    for (const child of result){
        if (child.component) return child.component;
    }
    return root;
}

},{"vue":"gCTam","../util/index.mjs":"ivUh8","@parcel/transformer-js/src/esmodule-helpers.js":"5oERU"}],"4aEO8":[function() {},{}],"6KE1a":[function() {},{}]},["1H7xV","4XJl0"], "4XJl0", "parcelRequire94c2")

//# sourceMappingURL=wpjs-control-panel.js.map
